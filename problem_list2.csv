PROBLEM_ID,PROBLEM_HASH,PROBLEM_TITLE,PROBLEM_LEVEL,PROBLEM_TAGS
1000,100000,A+B,1,"['implementation', 'arithmetic', 'mathematics']"
1001,100100,A-B,1,"['implementation', 'arithmetic', 'mathematics']"
1002,100200,터렛,8,"['geometry', 'mathematics']"
1003,100300,피보나치 함수,8,['dynamic programming']
1004,100400,어린 왕자,8,"['geometry', 'mathematics']"
1005,100500,ACM Craft,13,"['dynamic programming', 'graph theory', 'topological sorting']"
1006,100600,습격자 초라기,18,['dynamic programming']
1007,100700,벡터 매칭,14,"['bruteforcing', 'mathematics']"
1008,100800,A/B,1,"['implementation', 'arithmetic', 'mathematics']"
1009,100900,분산처리,4,"['implementation', 'mathematics']"
1010,101000,다리 놓기,6,"['combinatorics', 'dynamic programming', 'mathematics']"
1011,101100,Fly me to the Alpha Centauri,11,['mathematics']
1012,101200,유기농 배추,9,"['graph theory', 'graph traversal', 'breadth-first search', 'depth-first search']"
1013,101300,Contact,10,"['regular expression', 'string']"
1014,101400,컨닝,17,"['bitmask', 'dynamic programming', 'maximum flow', 'dynamic programming using bitfield']"
1015,101500,수열 정렬,7,['sorting']
1016,101600,제곱 ㄴㄴ 수,15,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1017,101700,소수 쌍,18,"['bipartite matching', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1018,101800,체스판 다시 칠하기,7,['bruteforcing']
1019,101900,책 페이지,15,['mathematics']
1020,102000,디지털 카운터,18,['dynamic programming']
1021,102100,회전하는 큐,8,"['data structures', 'deque']"
1022,102200,소용돌이 예쁘게 출력하기,12,"['implementation', 'mathematics']"
1023,102300,괄호 문자열,18,"['combinatorics', 'dynamic programming', 'mathematics']"
1024,102400,수열의 합,9,['mathematics']
1025,102500,제곱수 찾기,11,['bruteforcing']
1026,102600,보물,7,"['greedy', 'mathematics', 'sorting']"
1027,102700,고층 건물,11,"['bruteforcing', 'geometry', 'mathematics']"
1028,102800,다이아몬드 광산,16,['dynamic programming']
1029,102900,그림 교환,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1030,103000,프렉탈 평면,13,"['divide and conquer', 'implementation', 'recursion']"
1031,103100,스타 대결,21,['maximum flow']
1032,103200,명령 프롬프트,5,"['implementation', 'string']"
1033,103300,칵테일,14,"['euclidean algorithm', 'graph theory', 'graph traversal', 'mathematics', 'number theory']"
1034,103400,램프,12,"['ad-hoc', 'bruteforcing']"
1035,103500,조각 움직이기,14,"['breadth-first search', 'bitmask', 'bruteforcing', 'graph theory', 'graph traversal']"
1036,103600,36진수,15,"['arbitrary precision / big integers', 'greedy', 'implementation', 'mathematics', 'string']"
1037,103700,약수,5,"['mathematics', 'number theory']"
1038,103800,감소하는 수,11,"['backtracking', 'bruteforcing']"
1039,103900,교환,13,"['breadth-first search', 'graph theory', 'graph traversal']"
1040,104000,정수,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'greedy']"
1041,104100,주사위,11,"['greedy', 'mathematics']"
1042,104200,움,20,"['dynamic programming', 'parsing', 'string']"
1043,104300,거짓말,12,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
1044,104400,팀 선발,18,"['bitmask', 'meet in the middle']"
1045,104500,도로,15,"['graph theory', 'greedy', 'minimum spanning tree']"
1046,104600,그림자,24,"['geometry', 'implementation', 'line segment intersection check', 'sweeping']"
1047,104700,울타리,16,"['bruteforcing', 'greedy']"
1048,104800,유니콘,17,"['dynamic programming', 'prefix sum']"
1049,104900,기타줄,7,"['greedy', 'mathematics']"
1050,105000,물약,15,"['graph theory', 'parsing', 'string']"
1051,105100,숫자 정사각형,7,"['bruteforcing', 'implementation']"
1052,105200,물병,10,"['bitmask', 'greedy', 'implementation', 'mathematics']"
1053,105300,팰린드롬 공장,14,"['bruteforcing', 'dynamic programming']"
1054,105400,팰린드롬 문장,22,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'string']"
1055,105500,끝이없음,18,"['implementation', 'recursion', 'simulation']"
1056,105600,수,19,"['binary search', 'dynamic programming']"
1057,105700,토너먼트,8,"['bruteforcing', 'mathematics']"
1058,105800,친구,8,"['bruteforcing', 'floyd–warshall', 'graph theory', 'graph traversal']"
1059,105900,좋은 구간,7,"['bruteforcing', 'mathematics', 'sorting']"
1060,106000,좋은 수,15,"['data structures', 'mathematics', 'priority queue', 'sorting']"
1061,106100,삼각형,20,"['convex hull', 'geometry']"
1062,106200,가르침,12,"['backtracking', 'bitmask', 'bruteforcing']"
1063,106300,킹,8,"['implementation', 'simulation']"
1064,106400,평행사변형,7,"['geometry', 'mathematics', 'pythagoras theorem']"
1065,106500,한수,7,['bruteforcing']
1066,106600,에이한수,19,"['dynamic programming', 'greedy']"
1067,106700,이동,20,"['fast fourier transform', 'mathematics']"
1068,106800,트리,11,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
1069,106900,집으로,13,"['ad-hoc', 'case work', 'geometry']"
1070,107000,김지민의 침략,20,"['maximum flow', 'max-flow min-cut theorem']"
1071,107100,소트,16,['greedy']
1072,107200,게임,7,"['binary search', 'mathematics']"
1073,107300,도미노,18,"['eulerian path / circuit', 'graph theory', 'mathematics']"
1074,107400,Z,10,"['divide and conquer', 'recursion']"
1075,107500,나누기,4,"['bruteforcing', 'mathematics']"
1076,107600,저항,4,['implementation']
1077,107700,넓이,20,"['convex hull', 'geometry', 'line segment intersection check', 'point in convex polygon check', 'area of a polygon']"
1078,107800,뒤집음,20,"['bruteforcing', 'mathematics']"
1079,107900,마피아,14,['bruteforcing']
1080,108000,행렬,10,['greedy']
1081,108100,합,15,['mathematics']
1082,108200,방 번호,13,"['dynamic programming', 'greedy']"
1083,108300,소트,11,"['greedy', 'sorting']"
1084,108400,방 번호 2,19,"['greedy', 'implementation']"
1085,108500,직사각형에서 탈출,3,"['geometry', 'mathematics']"
1086,108600,박성원,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1087,108700,쥐 잡기,17,['ternary search']
1088,108800,케이크,18,['greedy']
1089,108900,스타트링크 타워,12,"['implementation', 'mathematics', 'probability theory']"
1090,109000,체커,17,['bruteforcing']
1091,109100,카드 섞기,12,"['implementation', 'simulation']"
1092,109200,배,11,"['greedy', 'sorting']"
1093,109300,스티커 수집,18,"['bruteforcing', 'meet in the middle']"
1094,109400,막대기,6,"['bitmask', 'mathematics']"
1095,109500,마법의 구슬,15,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1096,109600,종이 접기,18,['bruteforcing']
1097,109700,마법의 문자열,16,"['bruteforcing', 'knuth–morris–pratt', 'string']"
1098,109800,쌍둥이 마을,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1099,109900,알 수 없는 문장,13,['dynamic programming']
1100,110000,하얀 칸,4,"['implementation', 'string']"
1101,110100,카드 정리 1,12,"['bruteforcing', 'greedy']"
1102,110200,발전소,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1103,110300,게임,14,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
1104,110400,패턴,17,"['case work', 'implementation', 'mathematics', 'string']"
1105,110500,팔,10,"['greedy', 'mathematics']"
1106,110600,호텔,11,"['dynamic programming', 'knapsack']"
1107,110700,리모컨,11,['bruteforcing']
1108,110800,검색 엔진,18,"['data structures', 'graph theory', 'set / map by hashing', 'strongly connected component', 'topological sorting']"
1109,110900,섬,17,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
1110,111000,더하기 사이클,5,"['implementation', 'mathematics']"
1111,111100,IQ Test,13,"['bruteforcing', 'case work', 'implementation', 'mathematics']"
1112,111200,진법 변환,14,"['implementation', 'mathematics', 'number theory']"
1113,111300,수영장 만들기,15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
1114,111400,통나무 자르기,15,"['binary search', 'greedy', 'parametric search']"
1115,111500,순열,15,['graph theory']
1116,111600,순열 2,19,"['graph theory', 'greedy']"
1117,111700,색칠 1,11,"['implementation', 'mathematics']"
1118,111800,색칠 2,19,"['geometry', 'implementation', 'sorting', 'sweeping']"
1119,111900,그래프,15,"['graph theory', 'graph traversal']"
1120,112000,문자열,7,"['bruteforcing', 'string']"
1121,112100,도형,18,"['dynamic programming', 'mathematics']"
1122,112200,뒤집기,17,"['breadth-first search', 'case work', 'graph theory', 'graph traversal', 'mathematics']"
1123,112300,셔플,22,"['exponentiation by squaring', 'mathematics']"
1124,112400,언더프라임,9,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1125,112500,바닥 장식,17,"['case work', 'greedy', 'mathematics']"
1126,112600,같은 탑,18,['dynamic programming']
1127,112700,떡국,22,"['maximum flow', 'max-flow min-cut theorem']"
1128,112800,피보나치 냅색,19,"['backtracking', 'dynamic programming', 'mathematics']"
1129,112900,키,18,"['greedy', 'sorting']"
1130,113000,종이 레이싱,21,"['breadth-first search', 'geometry', 'graph theory', 'graph traversal', 'line segment intersection check']"
1131,113100,숫자,16,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
1132,113200,합,13,['greedy']
1133,113300,반복되지 않는 단어,15,"['backtracking', 'recursion']"
1134,113400,식,21,"['bruteforcing', 'dynamic programming', 'implementation']"
1135,113500,뉴스 전하기,14,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'sorting', 'tree']"
1136,113600,조각 놓기,16,['dynamic programming']
1137,113700,로봇 레이스,17,['dynamic programming']
1138,113800,한 줄로 서기,9,['implementation']
1139,113900,울타리,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1140,114000,요금,18,"['greedy', 'implementation', 'mathematics', 'number theory']"
1141,114100,접두사,9,"['sorting', 'string']"
1142,114200,피자,18,['geometry']
1143,114300,경찰,19,"['graph theory', 'strongly connected component']"
1144,114400,싼 비용,23,"['dynamic programming', 'dynamic programming using connection profile']"
1145,114500,적어도 대부분의 배수,5,['bruteforcing']
1146,114600,지그재그 서기,16,"['combinatorics', 'dynamic programming', 'mathematics']"
1147,114700,BOJ 소풍,18,"['combinatorics', 'geometry', 'mathematics']"
1148,114800,단어 만들기,11,"['implementation', 'string']"
1149,114900,RGB거리,10,['dynamic programming']
1150,115000,백업,22,"['data structures', 'greedy', 'priority queue']"
1151,115100,그림자,17,"['case work', 'geometry', 'geometry; 3d', 'area of a polygon']"
1152,115200,단어의 개수,4,"['implementation', 'string']"
1153,115300,네 개의 소수,12,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1154,115400,팀 편성,16,"['graph theory', 'graph traversal']"
1155,115500,변형 하노이,17,"['ad-hoc', 'dynamic programming']"
1156,115600,장난감,21,"['data structures', 'deque', 'greedy', 'ternary search']"
1157,115700,단어 공부,5,"['implementation', 'string']"
1158,115800,요세푸스 문제,7,"['data structures', 'queue']"
1159,115900,농구 경기,4,"['implementation', 'string']"
1160,116000,Random Number Generator,16,"['exponentiation by squaring', 'mathematics']"
1161,116100,버스,19,"['data structures', 'greedy', 'segment tree with lazy propagation', 'segment tree']"
1162,116200,도로포장,15,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
1163,116300,증가하는 리스트,21,"['dynamic programming', 'implementation', 'string']"
1164,116400,가리기,20,"['ad-hoc', 'backtracking', 'greedy']"
1165,116500,단어퍼즐,22,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'hashing', 'heuristics', 'parsing', 'precomputation', 'string', 'tree', 'trie']"
1166,116600,선물,8,['binary search']
1167,116700,트리의 지름,14,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
1168,116800,요세푸스 문제 2,18,"['data structures', 'segment tree']"
1169,116900,정사각형 진열,15,"['geometry', 'greedy']"
1170,117000,선인장의 개수,18,"['cactus', 'depth-first search', 'graph theory', 'graph traversal']"
1171,117100,사오정,20,['dynamic programming']
1172,117200,선인장 Automorphisms,24,[]
1173,117300,운동,4,"['implementation', 'simulation']"
1174,117400,줄어드는 수,11,"['backtracking', 'bruteforcing']"
1175,117500,배달,15,"['breadth-first search', 'graph theory', 'graph traversal']"
1176,117600,섞기,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1177,117700,조쌤포스,16,"['case work', 'geometry', 'mathematics', 'sweeping']"
1178,117800,간선 추가,16,"['eulerian path / circuit', 'graph theory']"
1179,117900,마지막 요세푸스 문제,19,"['dynamic programming', 'mathematics', 'recursion']"
1180,118000,선인장의 지름,23,"['biconnected component', 'cactus', 'data structures', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
1181,118100,단어 정렬,6,"['sorting', 'string']"
1182,118200,부분수열의 합,9,"['backtracking', 'bruteforcing']"
1183,118300,약속,8,"['mathematics', 'sorting']"
1184,118400,귀농,15,"['bruteforcing', 'data structures', 'set / map by hashing', 'prefix sum']"
1185,118500,유럽여행,17,"['graph theory', 'minimum spanning tree']"
1186,118600,직사각형 색칠하기,12,"['case work', 'greedy', 'sorting']"
1187,118700,숫자 놀이,21,"['constructive', 'divide and conquer', 'mathematics']"
1188,118800,음식 평론가,11,"['euclidean algorithm', 'mathematics', 'number theory']"
1189,118900,컴백홈,10,"['backtracking', 'bruteforcing', 'graph theory', 'graph traversal']"
1190,119000,골 세레모니,23,[]
1191,119100,게임,21,"['breadth-first search', 'data structures', 'dynamic programming', 'game theory', 'graph theory', 'graph traversal', 'set / map by hashing', 'set / map by trees']"
1192,119200,장갑,23,['mathematics']
1193,119300,분수찾기,5,"['implementation', 'mathematics']"
1194,119400,"달이 차오른다, 가자.",15,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
1195,119500,킥다운,11,"['bruteforcing', 'implementation']"
1196,119600,잭 바우어,22,"['arbitrary precision / big integers', 'calculus', 'mathematics', 'numerical analysis']"
1197,119700,최소 스패닝 트리,12,"['graph theory', 'minimum spanning tree']"
1198,119800,삼각형으로 자르기,9,"['bruteforcing', 'geometry', 'mathematics']"
1199,119900,오일러 회로,17,"['depth-first search', 'eulerian path / circuit', 'graph theory', 'graph traversal']"
1200,120000,기상예측,17,"['binary search', 'bruteforcing', 'dynamic programming', 'prefix sum']"
1201,120100,NMK,18,"['constructive', 'greedy', 'mathematics']"
1202,120200,보석 도둑,14,"['data structures', 'greedy', 'priority queue', 'sorting']"
1203,120300,게임,16,['mathematics']
1204,120400,팰린드롬의 개수,21,['dynamic programming']
1205,120500,등수 구하기,7,['implementation']
1206,120600,사람의 수,8,"['bruteforcing', 'mathematics']"
1207,120700,종이 자르기,14,"['backtracking', 'implementation']"
1208,120800,부분수열의 합 2,15,"['binary search', 'meet in the middle']"
1209,120900,단조수열 만들기,17,['dynamic programming']
1210,121000,마피아,20,"['maximum flow', 'max-flow min-cut theorem']"
1211,121100,보일의 법칙,21,"['dynamic programming', 'mathematics', 'number theory']"
1212,121200,8진수 2진수,4,"['implementation', 'mathematics', 'string']"
1213,121300,팰린드롬 만들기,8,"['greedy', 'implementation', 'string']"
1214,121400,쿨한 물건 구매,16,"['bruteforcing', 'mathematics', 'number theory']"
1215,121500,잘못 작성한 요세푸스 코드,17,"['mathematics', 'number theory']"
1217,121700,하우스 M.D.,17,"['2-sat', 'graph theory', 'strongly connected component']"
1218,121800,로봇,25,"['value / coordinate compression', 'data structures', 'geometry', 'implementation', 'segment tree with lazy propagation', 'longest increasing sequence in o(n log n)', 'area of a polygon', 'segment tree', 'stack', 'sweeping']"
1219,121900,오민식의 고민,15,"['bellman–ford', 'graph theory', 'graph traversal']"
1220,122000,MEGACITY,19,"['value / coordinate compression', ""dijkstra's"", 'graph theory', 'graph traversal']"
1221,122100,가까운 점,19,"['data structures', 'divide and conquer', 'geometry', 'geometry; 3d', 'set / map by hashing', 'randomization', 'sorting', 'sweeping']"
1222,122200,홍준 프로그래밍 대회,14,"['mathematics', 'number theory']"
1223,122300,마법의 돌,0,[]
1224,122400,분수,20,"['extended euclidean algorithm', 'mathematics', 'number theory']"
1225,122500,이상한 곱셈,4,"['implementation', 'mathematics', 'string']"
1226,122600,국회,17,"['dynamic programming', 'greedy', 'knapsack']"
1227,122700,그녀의 마음,19,"['ad-hoc', 'breadth-first search', 'case work', 'graph theory', 'graph traversal', 'mathematics']"
1228,122800,전쟁,17,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'set / map by hashing', 'knapsack', 'tree']"
1229,122900,육각수,12,"['dynamic programming', 'mathematics', 'precomputation']"
1230,123000,문자열 거리,15,['dynamic programming']
1231,123100,주식왕 동호,15,"['dynamic programming', 'knapsack']"
1232,123200,체스,22,"['ad-hoc', 'bruteforcing', 'graph theory', 'graph traversal']"
1233,123300,주사위,4,"['bruteforcing', 'implementation']"
1234,123400,크리스마스 트리,14,"['combinatorics', 'dynamic programming', 'mathematics']"
1235,123500,학생 번호,7,"['implementation', 'string']"
1236,123600,성 지키기,5,['implementation']
1237,123700,정ㅋ벅ㅋ,0,[]
1238,123800,파티,13,"[""dijkstra's"", 'graph theory']"
1239,123900,차트,11,['bruteforcing']
1240,124000,노드사이의 거리,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
1241,124100,머리 톡톡,11,"['mathematics', 'number theory', 'primality test']"
1242,124200,소풍,14,"['mathematics', 'number theory']"
1243,124300,팰린드롬,22,['dynamic programming']
1244,124400,스위치 켜고 끄기,7,"['implementation', 'simulation']"
1245,124500,농장 관리,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
1246,124600,온라인 판매,7,"['greedy', 'sorting']"
1247,124700,부호,3,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
1248,124800,Guess,13,"['backtracking', 'bruteforcing']"
1249,124900,워드똑똑,18,"['case work', 'combinatorics', 'dynamic programming', 'exponentiation by squaring', 'inclusion and exclusion', 'mathematics', 'number theory']"
1250,125000,색칠된 공들,24,"['data structures', 'priority queue']"
1251,125100,단어 나누기,6,"['bruteforcing', 'implementation', 'sorting', 'string']"
1252,125200,이진수 덧셈,4,"['arithmetic', 'implementation', 'mathematics']"
1253,125300,좋다,12,"['binary search', 'data structures', 'set / map by hashing', 'sorting', 'two-pointer']"
1254,125400,팰린드롬 만들기,9,"['bruteforcing', 'string']"
1255,125500,전쟁 - 선전포고,17,"[""dijkstra's"", 'graph theory']"
1256,125600,사전,14,"['combinatorics', 'dynamic programming', 'mathematics']"
1257,125700,엄청난 부자,20,"[""dijkstra's"", 'dynamic programming', 'graph theory', 'mathematics']"
1258,125800,문제 할당,18,"['maximum flow', 'minimum cost maximum flow']"
1259,125900,팰린드롬수,5,"['implementation', 'string']"
1260,126000,DFS와 BFS,9,"['graph theory', 'graph traversal', 'breadth-first search', 'depth-first search']"
1261,126100,알고스팟,12,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
1262,126200,알파벳 다이아몬드,9,['implementation']
1263,126300,시간 관리,10,"['greedy', 'sorting']"
1264,126400,모음의 개수,2,"['implementation', 'string']"
1265,126500,순열,18,"['arbitrary precision / big integers', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1266,126600,일어나!,23,"['geometry', 'line segment intersection check', 'sweeping']"
1267,126700,핸드폰 요금,3,"['arithmetic', 'mathematics']"
1268,126800,임시 반장 정하기,5,['implementation']
1269,126900,대칭 차집합,7,"['data structures', 'set / map by hashing', 'set / map by trees']"
1270,127000,전쟁 - 땅따먹기,8,"['data structures', 'implementation', 'boyer–moore majority vote', 'set / map by trees']"
1271,127100,엄청난 부자2,1,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
1272,127200,특별 노드,14,"['dynamic programming', 'dynamic programming on trees', 'tree']"
1273,127300,샷,18,"['data structures', 'prefix sum', 'segment tree']"
1274,127400,커피숍1,0,[]
1275,127500,커피숍2,15,"['segment tree', 'data structures']"
1276,127600,PLATFORME,10,['sorting']
1277,127700,발전소 설치,12,"[""dijkstra's"", 'graph theory']"
1278,127800,연극,13,"['mathematics', 'recursion']"
1279,127900,내멋대로 주사위,15,"['combinatorics', 'dynamic programming', 'knapsack', 'mathematics']"
1280,128000,나무 심기,17,"['data structures', 'segment tree']"
1281,128100,보석상,22,"['duality', 'maximum flow', 'hungarian', 'linear programming', 'minimum cost maximum flow']"
1282,128200,P-수열,20,['dynamic programming']
1283,128300,단축키 지정,9,"['implementation', 'string']"
1284,128400,집 주소,3,"['arithmetic', 'implementation', 'mathematics']"
1285,128500,동전 뒤집기,14,"['bitmask', 'bruteforcing', 'greedy']"
1286,128600,부분 직사각형,10,"['combinatorics', 'mathematics']"
1287,128700,할 수 있다,15,"['arithmetic', 'case work', 'implementation', 'mathematics', 'parsing', 'string']"
1288,128800,전쟁 - 국지전,21,[]
1289,128900,트리의 가중치,18,"['dynamic programming', 'dynamic programming on trees', 'mathematics', 'tree']"
1290,129000,배럭,20,"['bruteforcing', 'greedy', 'implementation', 'mathematics', 'simulation']"
1291,129100,이면수와 임현수,8,"['case work', 'implementation', 'mathematics', 'number theory', 'primality test']"
1292,129200,쉽게 푸는 문제,5,"['implementation', 'mathematics']"
1293,129300,생물농축,18,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'knapsack', 'topological sorting']"
1294,129400,문자열 장식,18,"['greedy', 'sorting', 'string']"
1295,129500,평면도,24,[]
1296,129600,팀 이름 정하기,5,"['implementation', 'string']"
1297,129700,TV 크기,4,"['pythagoras theorem', 'geometry']"
1298,129800,노트북의 주인을 찾아서,17,['bipartite matching']
1299,129900,전쟁 - 탈출편2,17,"[""dijkstra's"", 'graph theory']"
1300,130000,K번째 수,14,"['binary search', 'parametric search']"
1301,130100,비즈 공예,13,['dynamic programming']
1302,130200,베스트셀러,7,"['data structures', 'set / map by hashing', 'sorting', 'string']"
1303,130300,전쟁 - 전투,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
1304,130400,지역,12,"['bruteforcing', 'graph theory', 'graph traversal']"
1305,130500,광고,17,"['knuth–morris–pratt', 'string']"
1306,130600,달려라 홍준,16,"['data structures', 'segment tree', 'sliding window']"
1307,130700,마방진,17,"['ad-hoc', 'implementation', 'mathematics']"
1308,130800,D-Day,6,['implementation']
1309,130900,동물원,10,['dynamic programming']
1310,131000,달리기 코스,18,"['convex hull', 'geometry', 'rotating calipers']"
1311,131100,할 일 정하기 1,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1312,131200,소수,6,['mathematics']
1314,131400,동굴 탐험,19,"['bitmask', ""dijkstra's"", 'dynamic programming', 'dynamic programming using bitfield', 'graph theory']"
1315,131500,RPG,18,['dynamic programming']
1316,131600,그룹 단어 체커,6,"['implementation', 'string']"
1317,131700,그룹 단어,0,[]
1318,131800,포커,13,"['bruteforcing', 'case work', 'implementation', 'precomputation']"
1319,131900,지민 vs 한수,13,"['geometry', 'sweeping']"
1321,132100,군인,17,"['binary search', 'data structures', 'segment tree']"
1322,132200,X와 K,12,"['bitmask', 'mathematics']"
1323,132300,숫자 연결하기,12,"['mathematics', 'number theory', 'pigeonhole principle']"
1324,132400,젠장,14,['dynamic programming']
1325,132500,효율적인 해킹,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
1326,132600,폴짝폴짝,9,"['breadth-first search', 'graph theory', 'graph traversal']"
1327,132700,소트 게임,11,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'set / map by trees']"
1328,132800,고층 빌딩,16,"['combinatorics', 'dynamic programming', 'mathematics']"
1329,132900,증가 수열,15,[]
1330,133000,두 수 비교하기,1,['implementation']
1331,133100,나이트 투어,6,"['implementation', 'simulation']"
1332,133200,풀자,13,['bruteforcing']
1333,133300,부재중 전화,4,"['implementation', 'simulation']"
1334,133400,다음 팰린드롬 수,11,[]
1335,133500,여섯 쌍 서로소,24,"['chinese remainder theorem', 'discrete logarithm', 'fast fourier transform', 'mathematics', 'möbius inversion', 'number theory']"
1336,133600,수열의 개수 NKD,17,"['dynamic programming', 'prefix sum']"
1337,133700,올바른 배열,7,"['implementation', 'sorting', 'two-pointer']"
1338,133800,알 수 없는 번호,12,"['case work', 'mathematics']"
1339,133900,단어 수학,12,['greedy']
1340,134000,연도 진행바,6,"['implementation', 'parsing', 'string']"
1341,134100,사이좋은 형제,13,"['implementation', 'mathematics']"
1342,134200,행운의 문자열,10,['bruteforcing']
1343,134300,폴리오미노,6,['greedy']
1344,134400,축구,12,"['combinatorics', 'dynamic programming', 'mathematics', 'probability theory']"
1345,134500,등차수열,14,"['arbitrary precision / big integers', 'mathematics', 'parametric search']"
1346,134600,탑을 향해서,18,"['dynamic programming', 'graph theory', 'strongly connected component']"
1347,134700,미로 만들기,8,"['implementation', 'simulation']"
1348,134800,주차장,19,"['breadth-first search', 'binary search', 'bipartite matching', 'graph theory', 'graph traversal']"
1349,134900,건축가의 나라,0,[]
1350,135000,진짜 공간,4,"['arithmetic', 'mathematics']"
1351,135100,무한 수열,11,"['data structures', 'dynamic programming', 'set / map by hashing']"
1352,135200,문자열,15,"['backtracking', 'greedy']"
1353,135300,합과 곱,16,['mathematics']
1354,135400,무한 수열 2,11,"['data structures', 'dynamic programming', 'set / map by hashing', 'set / map by trees']"
1355,135500,구멍난 케이크 자르기,14,"['depth-first search', 'graph theory', 'graph traversal', 'implementation', 'mathematics']"
1356,135600,유진수,5,"['arithmetic', 'implementation', 'mathematics', 'string']"
1357,135700,뒤집힌 덧셈,4,"['implementation', 'string']"
1358,135800,하키,7,['geometry']
1359,135900,복권,7,"['bruteforcing', 'combinatorics', 'mathematics', 'probability theory']"
1360,136000,되돌리기,11,['implementation']
1361,136100,두 스트링 마스크,0,[]
1362,136200,펫,4,['implementation']
1363,136300,트리,0,[]
1364,136400,울타리 치기,11,['mathematics']
1365,136500,꼬인 전깃줄,14,"['binary search', 'longest increasing sequence in o(n log n)']"
1366,136600,기타 코드,0,[]
1367,136700,타브 악보,0,[]
1368,136800,물대기,14,"['graph theory', 'minimum spanning tree']"
1369,136900,배열값,16,"['dynamic programming', 'greedy', 'mathematics']"
1370,137000,전쟁 - 화계가 아닌 수계,22,[]
1371,137100,가장 많은 글자,4,"['implementation', 'string']"
1372,137200,단어 합치기,19,"['breadth-first search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal', 'string']"
1373,137300,2진수 8진수,5,"['mathematics', 'string']"
1374,137400,강의실,11,"['data structures', 'greedy', 'priority queue', 'sorting']"
1375,137500,나이,14,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'string']"
1376,137600,민식우선탐색,18,"['binary search', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'segment tree']"
1377,137700,버블 소트,14,['sorting']
1378,137800,증가 수열,0,[]
1379,137900,강의실 2,13,"['data structures', 'greedy', 'priority queue', 'sorting']"
1380,138000,귀걸이,6,"['implementation', 'string']"
1381,138100,요구르트의 유통기한,0,[]
1384,138400,메시지,6,['implementation']
1385,138500,벌집,16,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
1386,138600,f와 g,25,"['divide and conquer', 'fast fourier transform', 'mathematics']"
1387,138700,행렬 교환,0,[]
1388,138800,바닥 장식,8,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
1389,138900,케빈 베이컨의 6단계 법칙,10,"['breadth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
1390,139000,테트리스,19,"['bitmask', 'case work', 'dynamic programming', 'dynamic programming using bitfield', 'implementation']"
1391,139100,종이접기,19,"['ad-hoc', 'data structures', 'sorting', 'stack']"
1392,139200,노래 악보,4,['implementation']
1393,139300,음하철도 구구팔,10,"['bruteforcing', 'mathematics']"
1394,139400,암호,11,"['combinatorics', 'data structures', 'set / map by hashing', 'mathematics', 'string']"
1395,139500,스위치,18,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
1396,139600,크루스칼의 공,20,"['binary search', 'data structures', 'disjoint set', 'graph theory', 'lowest common ancestor', 'minimum spanning tree', 'parallel binary search', 'tree']"
1397,139700,인화철도 구구칠,0,[]
1398,139800,동전 문제,14,"['dynamic programming', 'greedy']"
1399,139900,보물의 위치,16,"['ad-hoc', 'mathematics', 'number theory']"
1400,140000,화물차,14,"[""dijkstra's"", 'graph theory', 'graph traversal', 'implementation']"
1401,140100,요컨대 형택이의 사탕봉지,0,[]
1402,140200,아무래도이문제는A번난이도인것같다,6,"['ad-hoc', 'constructive', 'mathematics']"
1404,140400,토너먼트 승자,8,"['bruteforcing', 'mathematics', 'probability theory']"
1405,140500,미친 로봇,11,"['backtracking', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics']"
1406,140600,에디터,9,"['data structures', 'linked list', 'stack']"
1407,140700,2로 몇 번 나누어질까,12,['mathematics']
1408,140800,24,4,"['arithmetic', 'implementation', 'mathematics']"
1409,140900,점 칠하기,15,['bruteforcing']
1410,141000,패턴의 개수,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'inclusion and exclusion']"
1411,141100,비슷한 단어,8,"['bruteforcing', 'string']"
1412,141200,일방통행,17,"['graph theory', 'topological sorting']"
1413,141300,박스 안의 열쇠,17,"['combinatorics', 'dynamic programming', 'mathematics']"
1414,141400,불우이웃돕기,13,"['graph theory', 'minimum spanning tree', 'string']"
1415,141500,사탕,14,"['dynamic programming', 'knapsack', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1416,141600,팬 서비스,17,['dynamic programming']
1417,141700,국회의원 선거,6,"['data structures', 'greedy', 'implementation', 'priority queue', 'simulation']"
1418,141800,K-세준수,6,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1419,141900,등차수열의 합,11,"['ad-hoc', 'case work', 'mathematics']"
1420,142000,학교 가지마!,19,"['maximum flow', 'max-flow min-cut theorem']"
1421,142100,나무꾼 이다솜,9,"['bruteforcing', 'implementation']"
1422,142200,숫자의 신,17,"['greedy', 'sorting']"
1423,142300,원숭이 키우기,12,['dynamic programming']
1424,142400,새 앨범,14,['mathematics']
1425,142500,원숭이 땅을 옮기다,14,"['binary search', 'ternary search']"
1426,142600,카드 넣기,18,"['data structures', 'greedy', 'sorting', 'set / map by trees']"
1427,142700,소트인사이드,6,"['sorting', 'string']"
1428,142800,다각형의 개수,0,[]
1429,142900,결혼,12,['bruteforcing']
1430,143000,공격,12,"['breadth-first search', 'graph theory', 'graph traversal']"
1431,143100,시리얼 번호,8,['sorting']
1432,143200,그래프 수정,17,"['data structures', 'graph theory', 'priority queue', 'topological sorting']"
1433,143300,화학 실험,15,[]
1434,143400,책 정리,4,"['arithmetic', 'implementation', 'mathematics']"
1435,143500,네 점,14,['geometry']
1436,143600,영화감독 숌,6,['bruteforcing']
1437,143700,수 분해,12,"['greedy', 'mathematics']"
1438,143800,가장 작은 직사각형,13,"['geometry', 'two-pointer']"
1439,143900,뒤집기,6,"['greedy', 'string']"
1440,144000,타임머신,4,['bruteforcing']
1441,144100,나누어 질까,15,"['euclidean algorithm', 'inclusion and exclusion', 'mathematics', 'number theory']"
1442,144200,멋진 수,19,['dynamic programming']
1443,144300,망가진 계산기,15,['bruteforcing']
1444,144400,숌 언어,19,['bipartite matching']
1445,144500,일요일 아침의 데이트,14,"['data structures', ""dijkstra's"", 'graph theory']"
1446,144600,지름길,10,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
1447,144700,보호 천막,0,[]
1448,144800,삼각형 만들기,8,"['greedy', 'mathematics', 'sorting']"
1449,144900,수리공 항승,8,"['greedy', 'sorting']"
1450,145000,냅색문제,15,"['binary search', 'meet in the middle']"
1451,145100,직사각형으로 나누기,11,"['bruteforcing', 'case work', 'prefix sum']"
1452,145200,숌 크로스워드,0,[]
1453,145300,피시방 알바,4,['implementation']
1454,145400,세비 게임,0,[]
1455,145500,뒤집기 II,9,['greedy']
1456,145600,거의 소수,11,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1457,145700,정확해,15,['mathematics']
1458,145800,종이 겹치기,0,[]
1459,145900,걷기,7,"['case work', 'mathematics']"
1460,146000,진욱이의 농장,13,"['binary search', 'bruteforcing', 'prefix sum']"
1461,146100,도서관,11,"['greedy', 'sorting']"
1462,146200,퀴즈쇼,17,"['dynamic programming', 'prefix sum']"
1463,146300,1로 만들기,8,['dynamic programming']
1464,146400,뒤집기 3,11,"['data structures', 'deque', 'greedy', 'string']"
1465,146500,배열 고치기,0,[]
1466,146600,그림 고치기,0,[]
1467,146700,수 지우기,19,['greedy']
1468,146800,네트워크,0,[]
1469,146900,숌 사이 수열,11,"['backtracking', 'bruteforcing']"
1470,147000,올림픽 게임,13,"['greedy', 'implementation', 'simulation']"
1471,147100,사탕 돌리기,16,"['depth-first search', 'graph theory', 'graph traversal', 'strongly connected component']"
1472,147200,전화번호,0,[]
1473,147300,미로 탈출,16,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
1474,147400,밑 줄,10,"['bruteforcing', 'greedy', 'string']"
1475,147500,방 번호,6,['implementation']
1476,147600,날짜 계산,6,"['bruteforcing', 'mathematics', 'number theory']"
1477,147700,휴게소 세우기,12,"['binary search', 'parametric search']"
1478,147800,정사각형,0,[]
1479,147900,네 부분문자열,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1480,148000,보석 모으기,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1481,148100,숌 사각형,13,['backtracking']
1482,148200,같은 자리 수,19,"['backtracking', 'dynamic programming', 'greedy']"
1483,148300,저항,0,[]
1484,148400,다이어트,11,"['mathematics', 'number theory', 'two-pointer']"
1485,148500,정사각형,8,"['geometry', 'sorting']"
1486,148600,등산,14,"[""dijkstra's"", 'floyd–warshall', 'graph theory']"
1487,148700,물건 팔기,7,['bruteforcing']
1488,148800,숌트링,12,"['ad-hoc', 'case work']"
1489,148900,대결,15,"['dynamic programming', 'greedy']"
1490,149000,자리수로 나누기,11,"['bruteforcing', 'mathematics']"
1491,149100,나선,7,"['implementation', 'simulation']"
1492,149200,합,19,"['combinatorics', 'dynamic programming', 'exponentiation by squaring', 'mathematics', 'modular multiplicative inverse', 'number theory']"
1493,149300,박스 채우기,13,"['divide and conquer', 'greedy', 'mathematics']"
1494,149400,절댓값 수열,20,"['case work', 'mathematics', 'number theory']"
1495,149500,기타리스트,10,['dynamic programming']
1496,149600,기타 고르기,0,[]
1497,149700,기타콘서트,9,"['bitmask', 'bruteforcing', 'combinatorics', 'mathematics']"
1498,149800,주기문,17,"['knuth–morris–pratt', 'string']"
1499,149900,뒤집기 수열,15,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'string', 'set / map by trees']"
1500,150000,최대 곱,9,['mathematics']
1501,150100,영어 읽기,11,"['data structures', 'set / map by hashing', 'parsing', 'string']"
1502,150200,숫자 퍼즐 ≤ 8,17,"['backtracking', 'case work', 'constructive', 'implementation', 'mathematics']"
1503,150300,세 수 고르기,9,['bruteforcing']
1504,150400,특정한 최단 경로,12,"[""dijkstra's"", 'graph theory']"
1505,150500,불 켜기,17,"['bitmask', 'bruteforcing', 'greedy']"
1506,150600,경찰서,16,"['graph theory', 'strongly connected component']"
1507,150700,궁금한 민호,14,"['floyd–warshall', 'graph theory']"
1508,150800,레이스,15,"['binary search', 'greedy', 'parametric search']"
1509,150900,팰린드롬 분할,15,['dynamic programming']
1510,151000,이등변 삼각형,16,"['bruteforcing', 'combinatorics', 'mathematics']"
1511,151100,숫자 만들기,16,"['ad-hoc', 'greedy']"
1512,151200,주기문으로 바꾸기,11,"['bruteforcing', 'greedy', 'string']"
1513,151300,경로 찾기,14,['dynamic programming']
1514,151400,자물쇠,18,['dynamic programming']
1515,151500,수 이어 쓰기,8,"['bruteforcing', 'greedy', 'implementation', 'string']"
1516,151600,게임 개발,13,"['dynamic programming', 'graph theory', 'topological sorting']"
1517,151700,버블 소트,16,"['data structures', 'divide and conquer', 'segment tree', 'sorting']"
1518,151800,뉴 매직 스퀘어,20,"['bipartite matching', 'greedy']"
1519,151900,부분 문자열 뽑기 게임,13,"['dynamic programming', 'game theory', 'string']"
1520,152000,내리막 길,13,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
1521,152100,랜덤 소트,17,"['dynamic programming', 'mathematics']"
1522,152200,문자열 교환,11,"['bruteforcing', 'sliding window']"
1523,152300,종점,18,"['bruteforcing', 'graph theory']"
1524,152400,세준세비,5,"['implementation', 'simulation']"
1525,152500,퍼즐,14,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal']"
1526,152600,가장 큰 금민수,5,"['bruteforcing', 'implementation', 'mathematics']"
1527,152700,금민수의 개수,10,['bruteforcing']
1528,152800,금민수의 합,12,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
1529,152900,동민 수열,16,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
1530,153000,금민수의 합,19,"['backtracking', 'dynamic programming', 'greedy']"
1531,153100,투명,6,"['implementation', 'simulation']"
1532,153200,동전 교환,15,['case work']
1533,153300,길의 개수,18,"['exponentiation by squaring', 'graph theory', 'mathematics']"
1534,153400,다각형 자르기,17,['dynamic programming']
1535,153500,안녕,9,"['bruteforcing', 'dynamic programming', 'knapsack']"
1536,153600,"Dance, Dance",18,['maximum flow']
1537,153700,새로운 연산자,16,"[""dijkstra's"", 'graph theory']"
1538,153800,공 칠하기,21,"['combinatorics', 'gaussian elimination', 'linear algebra', 'mathematics']"
1539,153900,이진 검색 트리,17,"['data structures', 'tree', 'set / map by trees']"
1540,154000,정사각형의 개수,13,['mathematics']
1541,154100,잃어버린 괄호,9,"['greedy', 'mathematics', 'parsing', 'string']"
1542,154200,체스 연습,19,"['game theory', 'implementation', 'sprague–grundy theorem']"
1543,154300,문서 검색,7,"['bruteforcing', 'greedy', 'string']"
1544,154400,사이클 단어,7,"['bruteforcing', 'data structures', 'set / map by hashing', 'implementation', 'string']"
1545,154500,안티 팰린드롬,14,"['constructive', 'greedy']"
1546,154600,평균,5,"['arithmetic', 'mathematics']"
1547,154700,공,3,"['implementation', 'simulation']"
1548,154800,부분 삼각 수열,11,"['bruteforcing', 'greedy', 'sorting']"
1549,154900,K,12,"['data structures', 'prefix sum', 'set / map by trees']"
1550,155000,16진수,4,"['mathematics', 'implementation']"
1551,155100,수열의 변화,5,"['implementation', 'mathematics', 'parsing', 'simulation', 'string']"
1552,155200,도미노,10,"['backtracking', 'bruteforcing', 'permutation cycle decomposition']"
1553,155300,도미노 찾기,10,"['backtracking', 'implementation']"
1554,155400,나무 심기,21,"['combinatorics', 'mathematics']"
1555,155500,소수 만들기,16,"['bruteforcing', 'dynamic programming', 'mathematics', 'number theory', 'primality test']"
1556,155600,도미노2,18,"['gaussian elimination', 'linear algebra', 'mathematics']"
1557,155700,제곱 ㄴㄴ,21,"['binary search', 'inclusion and exclusion', 'mathematics', 'number theory']"
1558,155800,그림의 개수,0,"['data structures', 'disjoint set', 'geometry', 'graph theory', 'graph traversal', 'line segment intersection check']"
1559,155900,놀라운 미로,16,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
1560,156000,비숍,8,"['ad-hoc', 'arbitrary precision / big integers']"
1561,156100,놀이 공원,14,"['binary search', 'parametric search']"
1562,156200,계단 수,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1563,156300,개근상,12,['dynamic programming']
1564,156400,팩토리얼5,9,"['mathematics', 'number theory']"
1565,156500,수학,13,"['euclidean algorithm', 'mathematics', 'number theory']"
1566,156600,P배열,13,['bruteforcing']
1567,156700,모든 사이클의 길이,0,[]
1568,156800,새,4,"['implementation', 'mathematics']"
1569,156900,정사각형으로 가리기,8,['implementation']
1570,157000,오세준,11,['implementation']
1571,157100,단어 굴리기,15,"['chinese remainder theorem', 'mathematics', 'number theory']"
1572,157200,중앙값,16,"['binary search', 'data structures', 'segment tree']"
1573,157300,트리 인코딩,18,"['dynamic programming', 'recursion']"
1574,157400,룩 어택,18,['bipartite matching']
1575,157500,졸업,19,"['bipartite matching', 'maximum flow']"
1576,157600,DNA점수,10,"['greedy', 'sorting']"
1577,157700,도로의 개수,11,['dynamic programming']
1578,157800,세계 정복,14,"['binary search', 'parametric search']"
1579,157900,보물 찾기,0,[]
1580,158000,위치 바꾸기,13,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
1581,158100,락스타 락동호,12,['case work']
1582,158200,아티스트 이동호,17,"['dynamic programming', 'implementation', 'knapsack']"
1583,158300,이동호의 트럭,0,[]
1584,158400,게임,11,"['0-1 bfs', ""dijkstra's"", 'graph theory', 'graph traversal']"
1585,158500,경찰,18,"['maximum flow', 'minimum cost maximum flow']"
1586,158600,목장,18,"['articulation points and bridges', 'graph theory']"
1587,158700,이분 매칭,15,['greedy']
1588,158800,수열,15,"['divide and conquer', 'recursion']"
1589,158900,레이저,0,[]
1590,159000,캠프가는 영식,7,"['binary search', 'bruteforcing', 'mathematics']"
1591,159100,수열 복원,20,"['eulerian path / circuit', 'graph theory']"
1592,159200,영식이와 친구들,4,"['implementation', 'simulation']"
1593,159300,문자 해독,11,"['sliding window', 'string']"
1594,159400,전화번호 만들기,14,"['backtracking', 'dynamic programming']"
1595,159500,북쪽나라의 도로,12,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
1596,159600,영식함수,0,[]
1597,159700,아스키 아트,0,[]
1598,159800,꼬리를 무는 숫자 나열,3,"['arithmetic', 'mathematics']"
1599,159900,민식어,11,"['sorting', 'string']"
1600,160000,말이 되고픈 원숭이,13,"['breadth-first search', 'graph theory', 'graph traversal']"
1601,160100,바이너리 파워 비숍,16,"['ad-hoc', 'backtracking', 'graph theory', 'graph traversal']"
1602,160200,도망자 원숭이,17,"['floyd–warshall', 'graph theory']"
1603,160300,작은 정사각형,19,"['dynamic programming', 'game theory', 'sprague–grundy theorem']"
1604,160400,정사각형 자르기,17,"['geometry', 'line segment intersection check']"
1605,160500,반복 부분문자열,18,"['hashing', 'rabin–karp', 'string', 'suffix array and lcp array']"
1606,160600,침투 계획 세우기,7,"['ad-hoc', 'case work', 'mathematics']"
1607,160700,원숭이 타워,13,"['dynamic programming', 'mathematics']"
1608,160800,스타 대회,22,"['data structures', 'disjoint set', 'graph theory', 'strongly connected component', 'topological sorting']"
1609,160900,차의 공격,18,"['dynamic programming', 'prefix sum', 'sorting']"
1610,161000,프로게이머 영식,0,[]
1611,161100,강강술래,0,[]
1612,161200,가지고 노는 1,11,"['mathematics', 'number theory']"
1613,161300,역사,13,"['floyd–warshall', 'graph theory']"
1614,161400,영식이의 손가락,8,"['arithmetic', 'case work', 'implementation', 'mathematics']"
1615,161500,교차개수세기,14,"['data structures', 'segment tree', 'sorting']"
1616,161600,드럼통 메시지,23,"['eulerian path / circuit', 'graph theory']"
1617,161700,허후민,19,"['value / coordinate compression', 'implementation', 'sweeping']"
1618,161800,구역 나누기,0,[]
1619,161900,점 고르기,14,"['geometry', 'sorting']"
1620,162000,나는야 포켓몬 마스터 이다솜,7,"['data structures', 'set / map by hashing']"
1621,162100,조삼모사,13,['dynamic programming']
1622,162200,공통 순열,7,"['sorting', 'string']"
1623,162300,신년 파티,15,"['dynamic programming', 'dynamic programming on trees', 'tree']"
1624,162400,데크 소트,20,"['greedy', 'sorting']"
1625,162500,조명기구,14,"['ad-hoc', 'bruteforcing', 'implementation', 'simulation']"
1626,162600,두 번째로 작은 스패닝 트리,22,"['data structures', 'graph theory', 'lowest common ancestor', 'minimum spanning tree', 'sparse table', 'tree']"
1627,162700,결투,20,"['game theory', 'sprague–grundy theorem']"
1628,162800,수,24,"['dynamic programming', 'greedy']"
1629,162900,곱셈,10,"['exponentiation by squaring', 'mathematics']"
1630,163000,오민식,12,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1631,163100,오영식의 보물,12,"['combinatorics', 'implementation', 'mathematics', 'recursion']"
1632,163200,Line Fighter,19,"['implementation', 'mathematics', 'sorting']"
1633,163300,최고의 팀 만들기,11,['dynamic programming']
1634,163400,완전 이진트리,12,[]
1635,163500,1 또는 -1,16,"['ad-hoc', 'constructive']"
1636,163600,한번 열면 멈출 수 없어,11,"['ad-hoc', 'greedy']"
1637,163700,날카로운 눈,17,"['binary search', 'parametric search']"
1638,163800,컨벡스 헐,19,['dynamic programming']
1639,163900,행운의 티켓,7,"['bruteforcing', 'implementation']"
1640,164000,동전 뒤집기,12,['ad-hoc']
1641,164100,삼각형 개수 세기,0,[]
1642,164200,딱따구리,20,"['combinatorics', 'data structures', 'disjoint set', 'mathematics']"
1643,164300,쿠폰,9,"['implementation', 'mathematics', 'probability theory']"
1644,164400,소수의 연속합,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes', 'two-pointer']"
1645,164500,성지의 생일파티,0,[]
1646,164600,피이보나치 트리,15,"['dynamic programming', 'lowest common ancestor', 'recursion', 'tree']"
1647,164700,도시 분할 계획,12,"['graph theory', 'minimum spanning tree']"
1648,164800,격자판 채우기,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1649,164900,택시,16,"['dynamic programming', 'graph theory', 'topological sorting']"
1650,165000,지민이의 테러 Season II,18,"['maximum flow', 'minimum cost maximum flow']"
1651,165100,숌 코드,0,[]
1652,165200,누울 자리를 찾아라,5,"['implementation', 'string']"
1653,165300,양팔 저울,16,"['bitmask', 'bruteforcing', 'implementation']"
1654,165400,랜선 자르기,9,"['binary search', 'parametric search']"
1655,165500,가운데를 말해요,14,"['data structures', 'priority queue']"
1656,165600,덜컹덜컹,11,"['ad-hoc', 'geometry']"
1657,165700,두부장수 장홍준,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1658,165800,돼지 잡기,19,['maximum flow']
1659,165900,수 (Hard),24,"['dynamic programming', 'greedy']"
1660,166000,캡틴 이다솜,10,['dynamic programming']
1661,166100,다솜이의 신발가게,14,"['bruteforcing', 'sorting']"
1662,166200,압축,11,"['data structures', 'recursion', 'stack']"
1663,166300,XYZ 문자열,15,[]
1664,166400,주민등록번호,13,"['bruteforcing', 'dynamic programming', 'implementation']"
1665,166500,화물열차,20,"['implementation', 'mathematics', 'simulation', 'sorting', 'sweeping']"
1666,166600,최대 증가 직사각형 집합,19,"['data structures', 'dynamic programming', 'segment tree', 'sweeping']"
1667,166700,지민이의 테러 Season IV,17,"['data structures', ""dijkstra's"", 'graph theory', 'set / map by trees']"
1668,166800,트로피 진열,4,['implementation']
1669,166900,멍멍이 쓰다듬기,11,['mathematics']
1670,167000,정상 회담 2,13,"['combinatorics', 'dynamic programming', 'mathematics']"
1671,167100,상어의 저녁식사,18,['bipartite matching']
1672,167200,DNA 해독,4,"['implementation', 'simulation', 'string']"
1673,167300,치킨 쿠폰,4,"['implementation', 'mathematics']"
1674,167400,성준이와 초콜릿,0,[]
1675,167500,팬더 밥주기,22,"['data structures', 'multidimensional segment tree', 'segment tree']"
1676,167600,팩토리얼 0의 개수,6,"['arbitrary precision / big integers', 'mathematics']"
1677,167700,음악,15,['dynamic programming']
1678,167800,기차,0,[]
1679,167900,숫자놀이,10,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
1680,168000,쓰레기 수거,7,"['implementation', 'simulation']"
1681,168100,줄 세우기,4,"['bruteforcing', 'implementation']"
1682,168200,돌리기,10,"['breadth-first search', 'graph theory', 'graph traversal']"
1683,168300,책장 맨 윗칸,0,[]
1684,168400,같은 나머지,11,"['euclidean algorithm', 'mathematics', 'number theory']"
1685,168500,숫자놀이 2,19,"['dynamic programming', 'greedy', 'mathematics']"
1686,168600,복날,12,"['breadth-first search', 'graph theory', 'graph traversal']"
1687,168700,행렬 찾기,13,"['bruteforcing', 'prefix sum']"
1688,168800,지민이의 테러,16,"['geometry', 'line segment intersection check', 'point in non-convex polygon check']"
1689,168900,겹치는 선분,12,"['greedy', 'sorting', 'sweeping']"
1690,169000,순열,18,"['data structures', 'mathematics', 'permutation cycle decomposition', 'sparse table']"
1691,169100,석판,14,['dynamic programming']
1692,169200,뒤집기,20,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'sliding window']"
1693,169300,트리 색칠하기,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
1694,169400,Chessboard in FEN,11,"['implementation', 'simulation']"
1695,169500,팰린드롬 만들기,12,['dynamic programming']
1696,169600,색 막대,0,[]
1697,169700,숨바꼭질,10,"['breadth-first search', 'graph theory', 'graph traversal']"
1698,169800,보안 패널,0,[]
1699,169900,제곱수의 합,9,"['dynamic programming', 'mathematics']"
1700,170000,멀티탭 스케줄링,15,['greedy']
1701,170100,Cubeditor,13,"['knuth–morris–pratt', 'string']"
1702,170200,고속도로,16,"[""dijkstra's"", 'graph theory']"
1703,170300,생장점,3,"['implementation', 'mathematics']"
1704,170400,붕어빵타이쿤,16,"['bitmask', 'bruteforcing']"
1705,170500,컵,0,[]
1706,170600,크로스워드,9,"['implementation', 'parsing', 'sorting', 'string']"
1707,170700,이분 그래프,12,"['breadth-first search', 'bipartite graph', 'depth-first search', 'graph theory', 'graph traversal']"
1708,170800,볼록 껍질,16,"['convex hull', 'geometry']"
1709,170900,타일 위의 원,8,"['geometry', 'pythagoras theorem']"
1710,171000,Flattening Tables,21,[]
1711,171100,직각삼각형,10,"['bruteforcing', 'geometry', 'pythagoras theorem']"
1712,171200,손익분기점,4,"['mathematics', 'arithmetic']"
1713,171300,후보 추천하기,9,"['implementation', 'simulation']"
1715,171500,카드 정렬하기,12,"['data structures', 'greedy', 'priority queue']"
1716,171600,Polynomial Remains,7,"['case work', 'mathematics']"
1717,171700,집합의 표현,12,"['data structures', 'disjoint set']"
1718,171800,암호,4,"['implementation', 'string']"
1719,171900,택배,13,"[""dijkstra's"", 'floyd–warshall', 'graph theory']"
1720,172000,타일 코드,12,"['combinatorics', 'dynamic programming', 'mathematics']"
1721,172100,상자퍼즐,11,"['backtracking', 'bruteforcing']"
1722,172200,순열의 순서,11,"['combinatorics', 'implementation', 'mathematics']"
1723,172300,점 나누기,14,"['binary search', 'bruteforcing', 'implementation', 'sorting', 'two-pointer']"
1724,172400,그림판,15,"['breadth-first search', 'graph theory', 'graph traversal']"
1725,172500,히스토그램,16,"['data structures', 'divide and conquer', 'segment tree', 'stack']"
1726,172600,로봇,13,"['breadth-first search', 'graph theory', 'graph traversal']"
1727,172700,커플 만들기,14,"['dynamic programming', 'greedy', 'sorting']"
1728,172800,구슬 굴리기,16,"['binary search', 'bruteforcing', 'data structures', 'mathematics']"
1729,172900,이차원 배열의 합,15,"['backtracking', 'bruteforcing']"
1730,173000,판화,6,"['implementation', 'simulation']"
1731,173100,추론,4,"['arithmetic', 'mathematics']"
1732,173200,레이저,0,[]
1733,173300,등번호,20,"['depth-first search', 'graph theory', 'graph traversal']"
1734,173400,교통 체계,20,"['articulation points and bridges', 'graph theory', 'lowest common ancestor', 'tree']"
1735,173500,분수 합,8,"['euclidean algorithm', 'mathematics', 'number theory']"
1736,173600,쓰레기 치우기,15,['greedy']
1737,173700,Pibonacci,12,['dynamic programming']
1738,173800,골목길,14,"['bellman–ford', 'graph theory']"
1739,173900,도로 정비하기,20,"['2-sat', 'graph theory', 'strongly connected component']"
1740,174000,거듭제곱,7,"['bitmask', 'mathematics']"
1741,174100,반 나누기,19,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
1742,174200,레이싱결과,17,"['bitmask', 'combinatorics', 'dynamic programming', 'graph theory', 'graph traversal', 'mathematics']"
1743,174300,음식물 피하기,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
1744,174400,수 묶기,11,"['case work', 'greedy', 'sorting']"
1745,174500,숨기,20,"['binary search', 'maximum flow', 'floyd–warshall', 'graph theory']"
1746,174600,Cow Relays,19,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
1747,174700,소수&팰린드롬,10,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1748,174800,수 이어 쓰기 1,7,"['implementation', 'mathematics']"
1749,174900,점수따먹기,12,"['bruteforcing', 'dynamic programming', 'prefix sum']"
1750,175000,서로소의 개수,13,"['dynamic programming', 'knapsack', 'mathematics', 'number theory']"
1751,175100,디버그,18,"['bitmask', 'dynamic programming', 'hashing']"
1752,175200,세상에서 제일 착한 다솜,18,"['dynamic programming', 'sorting']"
1753,175300,최단경로,12,"[""dijkstra's"", 'graph theory']"
1754,175400,진영 순열,17,"['combinatorics', 'dynamic programming', 'mathematics']"
1755,175500,숫자놀이,7,"['mathematics', 'sorting', 'string']"
1756,175600,피자 굽기,11,['implementation']
1757,175700,달려달려,12,['dynamic programming']
1758,175800,알바생 강호,7,"['greedy', 'sorting']"
1759,175900,암호 만들기,11,"['backtracking', 'bruteforcing', 'combinatorics', 'mathematics']"
1760,176000,N-Rook,18,['bipartite matching']
1761,176100,정점들의 거리,16,"['lowest common ancestor', 'tree']"
1762,176200,평면그래프와 삼각형,18,"['binary search', 'graph theory', 'planar graph', 'smaller to larger technique']"
1763,176300,트리 색칠,24,"['data structures', 'disjoint set', 'dynamic programming', 'dynamic programming on trees', 'greedy', 'tree']"
1764,176400,듣보잡,7,"['data structures', 'set / map by hashing', 'sorting', 'string']"
1765,176500,닭싸움 팀 정하기,14,"['data structures', 'disjoint set', 'graph theory']"
1766,176600,문제집,14,"['data structures', 'graph theory', 'priority queue', 'topological sorting']"
1767,176700,N-Rook II,18,"['combinatorics', 'dynamic programming', 'mathematics']"
1768,176800,Center of symmetry,8,[]
1769,176900,3의 배수,6,"['implementation', 'recursion', 'string']"
1770,177000,배수와 약수의 개수,22,"['case work', 'mathematics', 'miller–rabin', 'number theory', 'pollard rho', 'primality test']"
1771,177100,카드 묶음,14,"['breadth-first search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal', 'stack']"
1772,177200,정원 정리,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
1773,177300,폭죽쇼,4,"['implementation', 'mathematics']"
1774,177400,우주신과의 교감,13,"['graph theory', 'minimum spanning tree']"
1775,177500,ASCII Labyrinth,0,[]
1776,177600,깜짝 선물,0,[]
1777,177700,순열복원,16,"['binary search', 'data structures', 'segment tree']"
1778,177800,Ubiquitous Religions,10,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
1779,177900,Text Formalization,8,"['implementation', 'parsing', 'string']"
1780,178000,종이의 개수,9,"['divide and conquer', 'recursion']"
1781,178100,컵라면,14,"['data structures', 'greedy', 'priority queue']"
1782,178200,거울 숫자,16,"['bruteforcing', 'combinatorics', 'implementation', 'mathematics']"
1783,178300,병든 나이트,8,"['case work', 'greedy', 'implementation']"
1784,178400,팰린드롬 인코딩,14,"['ad-hoc', 'greedy']"
1785,178500,팀 사모예드의 신작,18,"['backtracking', 'dynamic programming', 'mathematics']"
1786,178600,찾기,16,"['knuth–morris–pratt', 'string']"
1787,178700,문자열의 주기 예측,19,"['knuth–morris–pratt', 'string']"
1788,178800,피보나치 수의 확장,8,"['dynamic programming', 'mathematics']"
1789,178900,수들의 합,6,"['greedy', 'mathematics']"
1790,179000,수 이어 쓰기 2,10,"['implementation', 'mathematics']"
1791,179100,Queuing at the doctors,14,"['data structures', 'implementation', 'queue', 'simulation']"
1792,179200,공약수,21,"['mathematics', 'möbius inversion', 'number theory', 'prefix sum']"
1793,179300,타일링,9,"['arbitrary precision / big integers', 'dynamic programming']"
1795,179500,마알,12,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
1796,179600,신기한 키보드,12,['dynamic programming']
1797,179700,균형잡힌 줄서기,14,"['data structures', 'set / map by hashing', 'prefix sum', 'sorting']"
1798,179800,원뿔좌표계상의 거리,15,"['geometry', 'geometry; 3d']"
1799,179900,비숍,15,['backtracking']
1800,180000,인터넷 설치,15,"['binary search', ""dijkstra's"", 'graph theory', 'parametric search']"
1801,180100,직사각형 만들기,17,"['dynamic programming', 'knapsack']"
1802,180200,종이 접기,10,"['divide and conquer', 'string']"
1803,180300,무술 연습,13,['graph theory']
1804,180400,랩싸기,18,['dynamic programming']
1805,180500,나무수송,22,"['dynamic programming', 'dynamic programming on trees', 'knapsack', 'tree']"
1806,180600,부분합,12,"['prefix sum', 'two-pointer']"
1807,180700,척 노리스,12,['parametric search']
1808,180800,숌작업,10,"['greedy', 'tree']"
1810,181000,징검다리 달리기 2,13,"[""dijkstra's"", 'geometry', 'graph theory']"
1811,181100,Adjacent Mastermind,5,"['greedy', 'implementation', 'string']"
1812,181200,사탕,7,"['bruteforcing', 'mathematics']"
1813,181300,논리학 교수,5,"['ad-hoc', 'bruteforcing']"
1814,181400,지붕 색칠하기,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
1815,181500,방송국,0,[]
1816,181600,암호 키,5,"['bruteforcing', 'mathematics', 'number theory']"
1817,181700,짐 챙기는 숌,6,"['greedy', 'implementation']"
1818,181800,책정리,14,['longest increasing sequence in o(n log n)']
1819,181900,불끄기,0,[]
1820,182000,Partitioning for fun and profit,13,"['combinatorics', 'dynamic programming', 'mathematics']"
1821,182100,수들의 합 6,10,['bruteforcing']
1822,182200,차집합,7,"['data structures', 'set / map by hashing', 'sorting', 'set / map by trees']"
1823,182300,수확,13,['dynamic programming']
1824,182400,도미노,17,['bipartite matching']
1825,182500,순열 만들기,18,"['constructive', 'greedy', 'implementation']"
1826,182600,연료 채우기,14,"['data structures', 'greedy', 'priority queue', 'sorting']"
1827,182700,여행가이드,14,"['bruteforcing', 'geometry']"
1828,182800,Traveling Salesman,12,"['breadth-first search', 'graph theory', 'graph traversal']"
1829,182900,사탕 항아리,17,"['bitmask', 'constructive']"
1830,183000,거리,21,"['convex hull', 'data structures', 'divide and conquer', 'geometry', 'rotating calipers', 'sweeping']"
1831,183100,과수원,0,[]
1832,183200,카우보이,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics']"
1833,183300,고속철도 설계하기,13,"['graph theory', 'minimum spanning tree']"
1834,183400,나머지와 몫이 같은 수,5,['mathematics']
1835,183500,카드,7,"['data structures', 'deque', 'implementation']"
1836,183600,트리의 가짓수 세기,17,"['dynamic programming', 'dynamic programming on trees', 'tree']"
1837,183700,암호제작,4,"['arbitrary precision / big integers', 'bruteforcing', 'mathematics']"
1838,183800,버블 정렬,14,['sorting']
1839,183900,트리 모델 만들기,22,"['binary search', 'data structures', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree', 'set / map by trees']"
1840,184000,스도쿠,24,"['backtracking', 'dancing links', ""knuth's x""]"
1841,184100,군사 배치,23,"['binary search', ""dijkstra's"", 'maximum flow', 'graph theory', 'max-flow min-cut theorem']"
1842,184200,게임하기,25,"['game theory', 'sprague–grundy theorem']"
1843,184300,방정식,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1844,184400,농지 정리,0,[]
1845,184500,배열 회전,30,"['graph theory', 'mathematics', 'permutation cycle decomposition', 'strongly connected component']"
1846,184600,장기,12,['constructive']
1847,184700,볼록다각형 만들기,0,[]
1848,184800,동굴 탐험,21,"[""dijkstra's"", 'divide and conquer', 'graph theory']"
1849,184900,순열,16,"['binary search', 'data structures', 'segment tree']"
1850,185000,최대공약수,10,"['euclidean algorithm', 'mathematics', 'number theory']"
1851,185100,추 정렬하기,20,"['greedy', 'permutation cycle decomposition']"
1852,185200,수 묶기,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1853,185300,정사영,21,"['calculus', 'geometry', 'geometry; 3d', 'implementation', 'mathematics']"
1854,185400,K번째 최단경로 찾기,17,"['data structures', ""dijkstra's"", 'graph theory', 'priority queue']"
1855,185500,암호,5,"['implementation', 'string']"
1856,185600,단어 게임,14,['dynamic programming']
1857,185700,발레리노,20,"['breadth-first search', ""dijkstra's"", 'dynamic programming', 'graph theory', 'graph traversal']"
1858,185800,기울기가 가장 큰 두 점,16,"['geometry', 'mathematics', 'sorting']"
1859,185900,성적,23,"['convex hull trick', 'data structures', 'segment tree']"
1860,186000,거미줄,19,[]
1861,186100,경로 찾기,0,[]
1862,186200,미터계,8,"['mathematics', 'number theory']"
1863,186300,스카이라인 쉬운거,12,"['data structures', 'greedy', 'stack']"
1864,186400,문어 숫자,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
1865,186500,웜홀,13,"['bellman–ford', 'graph theory']"
1866,186600,택배,17,"['dynamic programming', 'prefix sum', 'sorting']"
1867,186700,돌멩이 제거,18,['bipartite matching']
1868,186800,보물찾기,26,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'greedy', 'tree']"
1869,186900,육각형,0,[]
1870,187000,지붕 제작,0,[]
1871,187100,좋은 자동차 번호판,4,"['implementation', 'string']"
1872,187200,로마 숫자,11,"['arithmetic', 'dynamic programming', 'implementation', 'mathematics', 'prefix sum']"
1873,187300,색종이 자르기,21,['geometry']
1874,187400,스택 수열,9,"['data structures', 'stack']"
1875,187500,테트리스,14,"['dynamic programming', 'implementation']"
1876,187600,튕기는 볼링공,7,"['implementation', 'simulation']"
1877,187700,끔찍한 수열,12,"['case work', 'greedy', 'mathematics', 'number theory']"
1878,187800,천칭 저울,15,"['case work', 'constructive', 'mathematics', 'tree']"
1879,187900,부끄러운 다각형,21,"['geometry', 'line segment intersection check', 'point in non-convex polygon check']"
1880,188000,Big Brother,0,[]
1881,188100,공 바꾸기,14,['greedy']
1882,188200,분수 찾기,16,"['binary search', 'dynamic programming', 'mathematics', 'number theory']"
1884,188400,고속도로,15,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
1885,188500,비부분수열,13,['greedy']
1886,188600,프리즌 브레이크,21,"['breadth-first search', 'binary search', 'bipartite matching', 'graph theory', 'graph traversal']"
1887,188700,Cow Pizza,11,"['bitmask', 'bruteforcing']"
1888,188800,곰팡이,12,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
1889,188900,선물 교환,10,"['bruteforcing', 'data structures', 'graph theory', 'priority queue', 'topological sorting']"
1890,189000,점프,10,['dynamic programming']
1891,189100,사분면,12,['mathematics']
1892,189200,가위바위보,15,"['combinatorics', 'dynamic programming', 'mathematics']"
1893,189300,시저 암호,17,"['bruteforcing', 'knuth–morris–pratt', 'string']"
1894,189400,4번째 점,5,"['geometry', 'implementation']"
1895,189500,필터,7,"['bruteforcing', 'sorting']"
1896,189600,파급효과,0,[]
1897,189700,토달기,11,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'string']"
1898,189800,이전 수열은 어떤 수열일까,14,['greedy']
1899,189900,월드인의 공부 스타일,0,[]
1900,190000,레슬러,9,"['greedy', 'sorting']"
1901,190100,논리식,19,"['parsing', 'string']"
1902,190200,špilja,13,"['binary search', 'geometry', 'mathematics', 'ternary search']"
1904,190400,01타일,8,['dynamic programming']
1905,190500,상자 쌓기,13,"['data structures', 'implementation', 'segment tree']"
1906,190600,자리 바꾸기,18,"['bitmask', 'bruteforcing', 'divide and conquer', 'dynamic programming', 'dynamic programming using bitfield']"
1907,190700,탄소 화합물,7,"['bruteforcing', 'implementation', 'parsing', 'string']"
1908,190800,곱셈 전개식,16,"['combinatorics', 'exponentiation by squaring', 'mathematics']"
1909,190900,냄새 싫어,22,"['binary search', 'convex hull trick', 'data structures', 'graph theory', 'graph traversal']"
1910,191000,위닝,21,"['gaussian elimination', 'linear algebra', 'mathematics']"
1911,191100,흙길 보수하기,10,"['sorting', 'sweeping']"
1912,191200,연속합,9,['dynamic programming']
1913,191300,달팽이,8,['implementation']
1914,191400,하노이 탑,10,"['arbitrary precision / big integers', 'recursion']"
1915,191500,가장 큰 정사각형,12,['dynamic programming']
1916,191600,최소비용 구하기,11,"[""dijkstra's"", 'graph theory']"
1917,191700,정육면체 전개도,15,"['implementation', 'simulation']"
1918,191800,후위 표기식,14,"['data structures', 'stack']"
1919,191900,애너그램 만들기,4,"['implementation', 'string']"
1920,192000,수 찾기,7,"['binary search', 'data structures', 'sorting']"
1921,192100,트리와 쿼리 20,29,"['link/cut tree', 'tree']"
1922,192200,네트워크 연결,12,"['graph theory', 'minimum spanning tree']"
1924,192400,2007년,5,"['implementation', 'mathematics']"
1925,192500,삼각형,6,"['case work', 'geometry', 'implementation', 'pythagoras theorem']"
1926,192600,그림,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
1927,192700,최소 힙,9,"['data structures', 'priority queue']"
1928,192800,게임고안,0,[]
1929,192900,소수 구하기,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1930,193000,정사면체,12,"['implementation', 'mathematics']"
1931,193100,회의실 배정,10,"['greedy', 'sorting']"
1932,193200,정수 삼각형,10,['dynamic programming']
1933,193300,스카이라인,15,"['data structures', 'priority queue', 'sweeping', 'set / map by trees']"
1934,193400,최소공배수,5,"['euclidean algorithm', 'mathematics', 'number theory']"
1935,193500,후위 표기식2,8,"['data structures', 'stack']"
1936,193600,재미있는 수학 문제,24,"['fast fourier transform', 'mathematics', 'number theory']"
1937,193700,욕심쟁이 판다,13,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
1938,193800,통나무 옮기기,14,"['breadth-first search', 'graph theory', 'graph traversal']"
1939,193900,중량제한,13,"['breadth-first search', 'binary search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal']"
1940,194000,주몽,7,"['sorting', 'two-pointer']"
1941,194100,소문난 칠공주,13,"['backtracking', 'breadth-first search', 'bruteforcing', 'combinatorics', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics']"
1942,194200,디지털시계,4,"['implementation', 'mathematics', 'parsing', 'simulation', 'string']"
1943,194300,동전 분배,13,"['dynamic programming', 'knapsack']"
1944,194400,복제 로봇,14,"['breadth-first search', 'graph theory', 'graph traversal', 'minimum spanning tree']"
1945,194500,직사각형,15,"['sorting', 'sweeping']"
1946,194600,신입 사원,10,"['greedy', 'sorting']"
1947,194700,선물 전달,13,"['combinatorics', 'dynamic programming', 'mathematics']"
1948,194800,임계경로,16,"['graph theory', 'graph traversal', 'topological sorting']"
1949,194900,우수 마을,14,"['dynamic programming', 'dynamic programming on trees', 'tree']"
1950,195000,지도,0,[]
1951,195100,활자,8,['mathematics']
1952,195200,달팽이2,5,"['implementation', 'mathematics', 'simulation']"
1953,195300,팀배분,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
1954,195400,화학실험,12,['bruteforcing']
1955,195500,수식 표현,14,['dynamic programming']
1956,195600,운동,12,"['floyd–warshall', 'graph theory']"
1957,195700,앉았다 일어나기,19,"['ad-hoc', 'combinatorics', 'mathematics']"
1958,195800,LCS 3,13,"['dynamic programming', 'string']"
1959,195900,달팽이3,13,"['case work', 'mathematics']"
1960,196000,행렬만들기,14,"['maximum flow', 'greedy', 'sorting']"
1963,196300,소수 경로,12,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1964,196400,"오각형, 오각형, 오각형…",4,['mathematics']
1965,196500,상자넣기,9,['dynamic programming']
1966,196600,프린터 큐,8,"['data structures', 'implementation', 'queue', 'simulation']"
1967,196700,트리의 지름,12,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
1968,196800,우체부,0,[]
1969,196900,DNA,7,"['bruteforcing', 'greedy', 'implementation', 'string']"
1970,197000,건배,17,['dynamic programming']
1971,197100,High Spies,23,['tree']
1972,197200,놀라운 문자열,8,"['data structures', 'set / map by hashing', 'implementation', 'string']"
1973,197300,버스 노선,0,[]
1974,197400,Jump Jump Championship,16,['longest increasing sequence in o(n log n)']
1975,197500,Number Game,4,"['mathematics', 'number theory']"
1976,197600,여행 가자,12,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
1977,197700,완전제곱수,4,"['bruteforcing', 'implementation', 'mathematics']"
1978,197800,소수 찾기,6,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1979,197900,극적인 곱셈,16,"['arbitrary precision / big integers', 'mathematics']"
1980,198000,햄버거 사랑,7,"['bruteforcing', 'implementation', 'mathematics']"
1981,198100,배열에서 이동,15,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal']"
1982,198200,호텔예약,17,"['dynamic programming', 'knapsack']"
1983,198300,숫자 박스,14,['dynamic programming']
1985,198500,디지털 친구,7,"['bruteforcing', 'string']"
1986,198600,체스,9,['implementation']
1987,198700,알파벳,12,"['backtracking', 'depth-first search', 'graph theory', 'graph traversal']"
1988,198800,낮잠 시간,12,['dynamic programming']
1989,198900,부분배열 고르기 2,16,"['data structures', 'divide and conquer', 'prefix sum', 'segment tree', 'stack']"
1990,199000,소수인팰린드롬,11,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1991,199100,트리 순회,10,"['recursion', 'tree']"
1992,199200,쿼드트리,10,"['divide and conquer', 'recursion']"
1993,199300,경주,21,"['dynamic programming', 'meet in the middle']"
1994,199400,등차수열,15,"['binary search', 'data structures', 'dynamic programming', 'sorting']"
1995,199500,폐쇄회로,0,[]
1996,199600,지뢰 찾기,6,['implementation']
1997,199700,박스포장,10,"['implementation', 'mathematics', 'simulation']"
1998,199800,이미지 압축,16,"['bruteforcing', 'data structures', 'divide and conquer', 'set / map by hashing', 'tree']"
1999,199900,최대최소,14,"['data structures', 'segment tree']"
2000,200000,책장제작,0,[]
2001,200100,보석 줍기,15,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
2002,200200,추월,10,"['data structures', 'set / map by hashing', 'implementation', 'string']"
2003,200300,수들의 합 2,7,"['bruteforcing', 'two-pointer']"
2004,200400,조합 0의 개수,9,"['mathematics', 'number theory']"
2005,200500,사발,18,"['bruteforcing', 'case work', 'combinatorics', 'dynamic programming', 'geometry', 'line segment intersection check', 'mathematics']"
2006,200600,Chemistry 101,12,"['parsing', 'string']"
2007,200700,수들의 합 3,17,"['ad-hoc', 'mathematics', 'sorting']"
2008,200800,사다리 게임,16,"['dynamic programming', 'graph theory']"
2010,201000,플러그,3,"['arithmetic', 'mathematics']"
2011,201100,암호코드,11,['dynamic programming']
2012,201200,등수 매기기,8,"['greedy', 'sorting']"
2013,201300,선그리기,13,"['data structures', 'disjoint set', 'geometry', 'line segment intersection check']"
2014,201400,소수의 곱,15,"['data structures', 'mathematics', 'number theory', 'priority queue']"
2015,201500,수들의 합 4,12,"['data structures', 'set / map by hashing', 'prefix sum', 'set / map by trees']"
2016,201600,미팅 주선하기,10,"['case work', 'implementation']"
2017,201700,울타리,21,"['geometry', 'implementation', 'sweeping']"
2018,201800,수들의 합 5,7,"['mathematics', 'two-pointer']"
2019,201900,다각형개수,12,"['geometry', 'line segment intersection check']"
2020,202000,부분 염기서열,16,"['hashing', 'string']"
2021,202100,최소 환승 경로,14,"['breadth-first search', 'graph theory', 'graph traversal']"
2022,202200,사다리,11,"['binary search', 'geometry', 'mathematics', 'pythagoras theorem']"
2023,202300,신기한 소수,11,"['backtracking', 'mathematics', 'number theory', 'primality test']"
2024,202400,선분 덮기,13,"['greedy', 'sorting', 'sweeping']"
2025,202500,나이트투어,28,"['case work', 'constructive', 'heuristics']"
2026,202600,소풍,13,['backtracking']
2027,202700,가장 큰 L,18,"['data structures', 'greedy', 'stack']"
2028,202800,자기복제수,4,['mathematics']
2029,202900,성냥,7,['implementation']
2030,203000,Burger King,16,"['data structures', 'implementation', 'queue', 'simulation']"
2031,203100,이 쿠키 달지 않아!,14,"['binary search', 'dynamic programming']"
2032,203200,피라미드,17,"['data structures', 'implementation', 'multidimensional segment tree', 'prefix sum', 'segment tree']"
2033,203300,반올림,5,"['implementation', 'mathematics']"
2034,203400,반음,6,['implementation']
2035,203500,증가수열,13,"['bruteforcing', 'implementation']"
2036,203600,수열의 점수,12,"['case work', 'greedy', 'sorting']"
2037,203700,문자메시지,5,"['implementation', 'string']"
2038,203800,골롱 수열,14,"['dynamic programming', 'mathematics']"
2039,203900,뱀 찾기,0,[]
2040,204000,수 게임,10,"['dynamic programming', 'game theory', 'prefix sum']"
2041,204100,숫자채우기,20,"['ad-hoc', 'constructive']"
2042,204200,구간 합 구하기,15,"['segment tree', 'data structures']"
2043,204300,수 묶기,0,[]
2044,204400,windows,12,"['implementation', 'sorting']"
2045,204500,마방진,12,['implementation']
2046,204600,이어달리기,0,[]
2047,204700,미로,13,"['breadth-first search', 'graph theory', 'graph traversal']"
2049,204900,가장 먼 두 점,18,"['convex hull', 'geometry', 'rotating calipers']"
2050,205000,타일 게임,0,[]
2051,205100,최소 버텍스 커버,19,"['bipartite matching', 'graph theory']"
2052,205200,지수연산,4,"['arbitrary precision / big integers', 'mathematics']"
2053,205300,반직선,0,[]
2054,205400,계산 문제,15,"['bruteforcing', 'data structures', 'implementation', 'recursion', 'stack', 'string']"
2055,205500,삼각형 찾기,15,['mathematics']
2056,205600,작업,12,"['dynamic programming', 'graph theory', 'topological sorting']"
2057,205700,팩토리얼 분해,6,"['bruteforcing', 'greedy', 'mathematics']"
2058,205800,원자의 에너지,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
2059,205900,작업 순서,0,[]
2060,206000,염소 줄서기,22,"['combinatorics', 'dynamic programming', 'mathematics', 'parametric search']"
2061,206100,좋은 암호,3,"['arbitrary precision / big integers', 'bruteforcing', 'mathematics']"
2062,206200,곱하기 게임,13,"['data structures', 'game theory', 'priority queue']"
2063,206300,철사 연결,9,"['greedy', 'sorting']"
2064,206400,IP 주소,13,"['bitmask', 'implementation']"
2065,206500,나룻배,13,"['data structures', 'implementation', 'queue', 'simulation']"
2066,206600,카드놀이,15,['dynamic programming']
2067,206700,엘리베이터,0,[]
2068,206800,자전거 경주,0,[]
2069,206900,보이는 산맥,14,"['sorting', 'sweeping']"
2070,207000,목걸이 수열,14,"['greedy', 'string']"
2071,207100,바둑,21,"['backtracking', 'graph theory', 'graph traversal', 'implementation']"
2072,207200,오목,9,"['implementation', 'simulation']"
2073,207300,수도배관공사,12,"['dynamic programming', 'knapsack']"
2074,207400,거듭제곱 계산하기,14,"['breadth-first search', 'graph theory', 'graph traversal', 'precomputation']"
2075,207500,N번째 큰 수,9,"['data structures', 'priority queue', 'sorting']"
2076,207600,2차원 벡터,19,"['geometry', 'sorting', 'sweeping', 'two-pointer']"
2078,207800,무한이진트리,8,"['mathematics', 'tree']"
2079,207900,팰린드롬,14,['dynamic programming']
2080,208000,겹치는 선분,19,[]
2081,208100,저울추,20,"['bellman–ford', 'floyd–warshall', 'graph theory']"
2082,208200,시계,7,"['bitmask', 'bruteforcing', 'implementation', 'simulation']"
2083,208300,럭비 클럽,2,['implementation']
2084,208400,차수열,11,"['constructive', 'data structures', 'degree sequence', 'graph theory', 'greedy', 'priority queue']"
2085,208500,진법,0,[]
2086,208600,피보나치 수의 합,15,"['exponentiation by squaring', 'mathematics']"
2087,208700,암호문,15,"['bitmask', 'meet in the middle']"
2088,208800,트리의 개수,14,['dynamic programming']
2089,208900,-2진수,8,"['mathematics', 'number theory']"
2090,209000,조화평균,7,"['euclidean algorithm', 'implementation', 'mathematics', 'number theory']"
2091,209100,동전,13,"['bruteforcing', 'dynamic programming', 'greedy']"
2092,209200,집합의 개수,14,['dynamic programming']
2093,209300,괄호 제거,12,[]
2094,209400,강수량,18,"['case work', 'value / coordinate compression', 'data structures', 'offline queries', 'segment tree', 'sparse table', 'set / map by trees']"
2095,209500,티켓,18,['greedy']
2096,209600,내려가기,11,"['dynamic programming', 'sliding window']"
2097,209700,조약돌,6,['mathematics']
2098,209800,외판원 순회,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'travelling salesman problem']"
2099,209900,The game of death,15,"['exponentiation by squaring', 'graph theory', 'mathematics']"
2100,210000,감시 로봇,0,[]
2101,210100,이미지의 에너지,0,[]
2102,210200,보석 줍기,17,"['binary search', 'prefix sum']"
2103,210300,직교다각형 복원,8,"['geometry', 'sorting']"
2104,210400,부분배열 고르기,16,"['data structures', 'divide and conquer', 'segment tree', 'stack']"
2105,210500,꼬리달린 박성원숭이,17,"['data structures', 'disjoint set', 'graph theory', 'offline queries', 'smaller to larger technique']"
2106,210600,흑염소 감금하기,0,[]
2107,210700,포함하는 구간,12,"['bruteforcing', 'implementation', 'prefix sum', 'sorting']"
2108,210800,통계학,8,"['implementation', 'mathematics', 'sorting']"
2109,210900,순회강연,13,"['data structures', 'greedy', 'priority queue', 'sorting']"
2110,211000,공유기 설치,12,"['binary search', 'parametric search']"
2111,211100,선인장,19,"['arbitrary precision / big integers', 'biconnected component', 'cactus', 'graph theory']"
2112,211200,두 부분 문자열,16,['dynamic programming']
2113,211300,행렬과 피보나치 수,24,"['berlekamp–massey', 'kitamasa', 'linear algebra', 'mathematics']"
2114,211400,동물원 우리,0,[]
2115,211500,갤러리,11,"['implementation', 'string']"
2116,211600,주사위 쌓기,11,"['bruteforcing', 'implementation']"
2117,211700,원형 댄스,7,['mathematics']
2118,211800,두 개의 탑,11,"['prefix sum', 'two-pointer']"
2119,211900,프로그래밍 언어 L,19,"['data structures', 'dynamic programming', 'graph theory', 'implementation', 'segment tree with lazy propagation', 'recursion', 'segment tree', 'simulation', 'topological sorting']"
2120,212000,셋이 놀기,0,[]
2121,212100,넷이 놀기,8,"['binary search', 'data structures', 'geometry', 'set / map by hashing']"
2122,212200,여섯이서 놀기,18,"['ad-hoc', 'bit set', 'combinatorics', 'inclusion and exclusion', 'mathematics']"
2123,212300,인간 탑 쌓기,16,"['greedy', 'sorting']"
2124,212400,블록 쌓기,17,"['dynamic programming', 'prefix sum']"
2125,212500,좀,23,"[""dijkstra's"", 'geometry', 'graph theory', 'point in convex polygon check']"
2126,212600,지진,18,"['binary search', 'graph theory', 'minimum spanning tree', 'parametric search']"
2127,212700,Limit Checking,0,[]
2128,212800,마지막 조별 시합,12,"['bitmask', 'bruteforcing']"
2129,212900,드라이브 파이널,14,"['bellman–ford', 'floyd–warshall', 'graph theory']"
2130,213000,수조,16,"['binary search', 'sweeping']"
2131,213100,로봇 명령,14,"['dynamic programming', 'implementation', 'simulation']"
2132,213200,나무 위의 벌레,14,"['depth-first search', 'graph theory', 'graph traversal']"
2133,213300,타일 채우기,12,['dynamic programming']
2134,213400,창고 이전,7,['greedy']
2135,213500,문자열 압축하기,16,"['dynamic programming', 'string']"
2136,213600,개미,15,"['ad-hoc', 'sorting']"
2137,213700,가장 가까운 분수,12,"['bruteforcing', 'mathematics']"
2138,213800,전구와 스위치,11,['greedy']
2139,213900,나는 너가 살아온 날을 알고 있다,4,"['arithmetic', 'implementation', 'mathematics']"
2140,214000,지뢰찾기,12,"['greedy', 'implementation']"
2141,214100,우체국,12,"['greedy', 'sorting']"
2142,214200,정돈된 배열,14,"['ad-hoc', 'mathematics']"
2143,214300,두 배열의 합,13,"['binary search', 'prefix sum']"
2144,214400,울타리 넘기,15,"['dynamic programming', 'geometry', 'mathematics']"
2145,214500,숫자 놀이,4,"['arithmetic', 'implementation', 'mathematics']"
2146,214600,다리 만들기,13,"['breadth-first search', 'graph theory', 'graph traversal']"
2147,214700,자리 배치하기,0,[]
2148,214800,Super 12,9,['sorting']
2149,214900,암호 해독,8,"['implementation', 'sorting', 'string']"
2150,215000,Strongly Connected Component,16,"['graph theory', 'strongly connected component']"
2151,215100,거울 설치,13,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
2152,215200,여행 계획 세우기,18,"['dynamic programming', 'graph theory', 'strongly connected component', 'topological sorting']"
2153,215300,소수 단어,4,"['mathematics', 'number theory', 'primality test', 'string']"
2154,215400,수 이어 쓰기 3,4,"['bruteforcing', 'implementation', 'string']"
2155,215500,삼각형의 최단 경로,11,"['implementation', 'mathematics']"
2156,215600,포도주 시식,10,['dynamic programming']
2157,215700,여행,12,['dynamic programming']
2158,215800,산악자전거,12,"[""dijkstra's"", 'graph theory']"
2159,215900,케익 배달,14,['dynamic programming']
2160,216000,그림 비교,5,"['bruteforcing', 'implementation']"
2161,216100,카드1,6,"['data structures', 'implementation', 'queue']"
2162,216200,선분 그룹,15,"['data structures', 'disjoint set', 'geometry', 'line segment intersection check']"
2163,216300,초콜릿 자르기,5,"['arithmetic', 'mathematics']"
2164,216400,카드2,7,"['data structures', 'queue']"
2166,216600,다각형의 면적,11,"['geometry', 'area of a polygon']"
2167,216700,2차원 배열의 합,6,"['implementation', 'prefix sum']"
2168,216800,타일 위의 대각선,10,"['euclidean algorithm', 'mathematics', 'number theory']"
2169,216900,로봇 조종하기,14,['dynamic programming']
2170,217000,선 긋기,11,"['sorting', 'sweeping']"
2171,217100,직사각형의 개수,12,"['bruteforcing', 'value / coordinate compression', 'data structures', 'set / map by hashing']"
2172,217200,팰린드롬 경로,17,['dynamic programming']
2173,217300,양파깡 만들기,13,['implementation']
2174,217400,로봇 시뮬레이션,11,"['implementation', 'simulation']"
2175,217500,땅 자르기,11,"['bruteforcing', 'geometry', 'area of a polygon']"
2176,217600,합리적인 이동경로,15,"[""dijkstra's"", 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
2177,217700,급료 계산,0,[]
2178,217800,미로 탐색,10,"['breadth-first search', 'graph theory', 'graph traversal']"
2179,217900,비슷한 단어,11,"['data structures', 'set / map by hashing', 'sorting', 'string', 'set / map by trees']"
2180,218000,소방서의 고민,16,"['greedy', 'sorting']"
2181,218100,Walking the dog,0,[]
2183,218300,테니스 시합,5,"['ad-hoc', 'implementation', 'string']"
2184,218400,김치 배달,18,['dynamic programming']
2185,218500,직사각형의 합집합,19,"['data structures', 'segment tree', 'sweeping']"
2186,218600,문자판,13,"['dynamic programming', 'graph theory', 'graph traversal']"
2187,218700,점 고르기,11,['bruteforcing']
2188,218800,축사 배정,17,['bipartite matching']
2189,218900,Magickology,9,['implementation']
2190,219000,점 고르기 2,12,['bruteforcing']
2191,219100,들쥐의 탈출,17,"['bipartite matching', 'geometry']"
2192,219200,두 수열,18,['dynamic programming']
2193,219300,이친수,8,['dynamic programming']
2194,219400,유닛 이동시키기,11,"['breadth-first search', 'graph theory', 'graph traversal']"
2195,219500,문자열 복사,11,"['greedy', 'string']"
2196,219600,이진수 XOR,17,"['breadth-first search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal']"
2197,219700,분해 반응,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
2198,219800,버스와 손님,0,[]
2199,219900,DNA 해독 2,0,[]
2200,220000,계산기,8,"['implementation', 'mathematics']"
2201,220100,이친수 찾기,14,['dynamic programming']
2202,220200,Custom table sorter,10,"['implementation', 'parsing', 'sorting', 'string']"
2203,220300,선거구 나누기,0,[]
2204,220400,도비의 난독증 테스트,5,"['sorting', 'string']"
2205,220500,저울 추 만들기,10,"['greedy', 'mathematics']"
2206,220600,벽 부수고 이동하기,12,"['breadth-first search', 'graph theory', 'graph traversal']"
2207,220700,가위바위보,17,"['2-sat', 'graph theory', 'strongly connected component']"
2208,220800,보석 줍기,14,"['dynamic programming', 'prefix sum']"
2209,220900,버스 터미널,19,[]
2210,221000,숫자판 점프,9,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
2211,221100,네트워크 복구,14,"[""dijkstra's"", 'graph theory']"
2212,221200,센서,11,"['greedy', 'sorting']"
2213,221300,트리의 독립집합,15,"['dynamic programming', 'dynamic programming on trees', 'tree']"
2214,221400,성냥개비와 정사각형,13,"['parsing', 'string']"
2215,221500,원형 네트워크,18,"['greedy', 'sweeping']"
2216,221600,문자열과 점수,13,['dynamic programming']
2217,221700,로프,7,"['greedy', 'mathematics', 'sorting']"
2218,221800,상자 안의 구슬,13,['dynamic programming']
2219,221900,보안 시스템 설치,12,"['floyd–warshall', 'graph theory']"
2220,222000,힙 정렬,17,"['data structures', 'greedy', 'priority queue']"
2221,222100,작업 공정,0,[]
2222,222200,아이스크림,16,"['constructive', 'graph theory']"
2223,222300,금화,7,['mathematics']
2224,222400,명제 증명,12,"['floyd–warshall', 'graph theory']"
2225,222500,합분해,11,"['dynamic programming', 'mathematics']"
2226,222600,이진수,12,"['arbitrary precision / big integers', 'dynamic programming']"
2227,222700,Checking Causality,0,[]
2228,222800,구간 나누기,12,['dynamic programming']
2229,222900,조 짜기,11,['dynamic programming']
2230,223000,수 고르기,11,"['sorting', 'two-pointer']"
2231,223100,분해합,4,['bruteforcing']
2232,223200,지뢰,9,"['graph theory', 'greedy', 'implementation', 'sorting']"
2233,223300,사과나무,14,"['data structures', 'graph theory', 'lowest common ancestor', 'stack', 'tree']"
2234,223400,성곽,13,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
2235,223500,GPS Encoding,7,"['backtracking', 'dynamic programming', 'implementation', 'string']"
2236,223600,칩 만들기,8,"['greedy', 'sorting']"
2237,223700,수열 축소,17,['dynamic programming']
2238,223800,경매,6,['implementation']
2239,223900,스도쿠,12,"['backtracking', 'implementation']"
2240,224000,자두나무,11,['dynamic programming']
2241,224100,카멜롯,16,[]
2242,224200,삼각형 만들기,16,['dynamic programming']
2243,224300,사탕상자,16,"['binary search', 'segment tree', 'data structures']"
2244,224400,민코프스키 합,17,"['convex hull', 'geometry']"
2245,224500,배열 정리하기,15,"['breadth-first search', 'graph theory', 'graph traversal']"
2246,224600,콘도 선정,6,"['bruteforcing', 'sorting']"
2247,224700,실질적 약수,11,"['mathematics', 'number theory']"
2248,224800,이진수 찾기,13,['dynamic programming']
2249,224900,Olympic Ranking,0,[]
2250,225000,트리의 높이와 너비,14,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
2251,225100,물통,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
2252,225200,줄 세우기,13,"['graph theory', 'topological sorting']"
2253,225300,점프,12,['dynamic programming']
2254,225400,감옥 건설,17,"['convex hull', 'geometry', 'point in convex polygon check']"
2255,225500,트리 만들기,19,"['data structures', 'graph theory', 'greedy', 'minimum spanning tree', 'priority queue']"
2256,225600,젓가락,18,"['dynamic programming', 'sorting']"
2257,225700,화학식량,9,"['data structures', 'stack', 'string']"
2258,225800,정육점,12,"['greedy', 'sorting']"
2259,225900,두더지 잡기,14,"['dynamic programming', 'sorting']"
2260,226000,핵폭탄,0,[]
2261,226100,가장 가까운 두 점,19,"['divide and conquer', 'geometry', 'sweeping']"
2262,226200,토너먼트 만들기,12,['greedy']
2263,226300,트리의 순회,14,"['divide and conquer', 'recursion', 'tree']"
2264,226400,대칭 그림,14,['binary search']
2265,226500,거짓말쟁이,0,[]
2266,226600,금고 테스트,14,['dynamic programming']
2267,226700,Bus Timetable,0,[]
2268,226800,수들의 합 7,15,"['segment tree', 'data structures']"
2269,226900,Prevtree,0,[]
2270,227000,하노이 탑,14,"['mathematics', 'recursion']"
2271,227100,암호화 알고리즘의 약점,17,"['data structures', 'segment tree', 'sparse table']"
2272,227200,램프,19,"['ad-hoc', 'mathematics']"
2273,227300,줄 서기,13,"['floyd–warshall', 'graph theory']"
2274,227400,Conflicting Strings,15,['string']
2275,227500,트리의 높이 줄이기,15,"['greedy', 'tree']"
2276,227600,물 채우기,17,"['data structures', ""dijkstra's"", 'graph theory', 'graph traversal', 'priority queue']"
2277,227700,금고 털기,0,[]
2278,227800,그래프 복원,15,"['constructive', ""dijkstra's"", 'floyd–warshall', 'graph theory', 'greedy']"
2279,227900,사각형과 도형,18,"['geometry', 'prefix sum']"
2280,228000,정사각형과 점,0,[]
2281,228100,데스노트,12,['dynamic programming']
2282,228200,산맥 그리기,19,"['dynamic programming', 'geometry']"
2283,228300,구간 자르기,14,"['prefix sum', 'sweeping', 'two-pointer']"
2284,228400,레이스,17,"['data structures', 'dynamic programming', 'priority queue', 'segment tree', 'sorting']"
2285,228500,우체국,12,['greedy']
2286,228600,비선형 수열,0,[]
2287,228700,모노디지털 표현,14,"['data structures', 'dynamic programming', 'set / map by hashing', 'set / map by trees']"
2288,228800,격자의 분리자,11,[]
2290,229000,LCD Test,9,"['implementation', 'string']"
2291,229100,Sequence,13,['dynamic programming']
2292,229200,벌집,4,['mathematics']
2293,229300,동전 1,11,['dynamic programming']
2294,229400,동전 2,11,['dynamic programming']
2295,229500,세 수의 합,12,"['binary search', 'data structures', 'set / map by hashing', 'meet in the middle']"
2296,229600,건물짓기,12,['dynamic programming']
2297,229700,직각 이등변 삼각형,0,[]
2298,229800,Here-There,14,"['case work', 'implementation']"
2299,229900,수식 계산,0,[]
2300,230000,기지국,13,"['dynamic programming', 'sorting']"
2301,230100,마법 구슬,20,"['constructive', 'divide and conquer', 'mathematics']"
2302,230200,극장 좌석,10,['dynamic programming']
2303,230300,숫자 게임,6,"['bruteforcing', 'implementation']"
2304,230400,창고 다각형,9,"['bruteforcing', 'data structures', 'stack']"
2305,230500,자리 배치,15,['dynamic programming']
2306,230600,유전자,13,['dynamic programming']
2307,230700,도로검문,15,"[""dijkstra's"", 'graph theory']"
2309,230900,일곱 난쟁이,5,"['bruteforcing', 'sorting']"
2310,231000,어드벤처 게임,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
2311,231100,왕복 여행,19,"['maximum flow', 'minimum cost maximum flow']"
2312,231200,수 복원하기,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
2313,231300,보석 구매하기,10,"['dynamic programming', 'prefix sum']"
2314,231400,이세계 게임,12,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
2315,231500,가로등 끄기,18,"['dynamic programming', 'prefix sum']"
2316,231600,도시 왕복하기 2,18,"['maximum flow', 'graph theory']"
2317,231700,결혼식,11,"['greedy', 'sorting']"
2318,231800,상사 찾기,17,"['value / coordinate compression', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'segment tree', 'tree', 'set / map by trees']"
2319,231900,문자열 복원하기,16,['dynamic programming']
2320,232000,끝말잇기,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
2322,232200,아령,20,"['greedy', 'permutation cycle decomposition']"
2323,232300,강강술래,21,"['ad-hoc', 'constructive', 'graph theory']"
2324,232400,이진 행렬,20,"['breadth-first search', 'graph theory', 'graph traversal', 'heuristics']"
2325,232500,개코전쟁,16,"[""dijkstra's"", 'graph theory']"
2326,232600,최소 편집 문제 2,18,"['dynamic programming', 'string']"
2327,232700,말아톤,12,"['dynamic programming', 'greedy', 'sorting']"
2328,232800,그래프의 해시,16,"['arbitrary precision / big integers', 'graph theory', 'graph traversal', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
2329,232900,장애물 설계,16,"['arbitrary precision / big integers', 'dynamic programming']"
2330,233000,미생물 연구실,18,"['data structures', 'greedy', 'segment tree', 'set / map by trees']"
2331,233100,반복수열,7,"['implementation', 'mathematics']"
2332,233200,전화번호,11,"['backtracking', 'data structures', 'dynamic programming', 'stack', 'string']"
2333,233300,생존과 탈출,12,[]
2334,233400,대칭 그림2,19,"['bruteforcing', 'geometry', 'mathematics']"
2335,233500,농부,13,['dynamic programming']
2336,233600,굉장한 학생,19,"['data structures', 'segment tree']"
2337,233700,트리 자르기,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
2338,233800,긴자리 계산,1,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
2339,233900,석판 자르기,15,['divide and conquer']
2340,234000,이진 수열 회전,0,[]
2341,234100,팩스 문제,12,['dynamic programming']
2342,234200,Dance Dance Revolution,13,['dynamic programming']
2343,234300,기타 레슨,10,"['binary search', 'parametric search']"
2344,234400,거울,12,"['bruteforcing', 'implementation', 'simulation']"
2345,234500,지뢰 제거,0,[]
2346,234600,풍선 터뜨리기,8,"['data structures', 'deque']"
2347,234700,거울2,23,['greedy']
2349,234900,무선 통신 기지국,7,"['geometry', 'implementation', 'pythagoras theorem']"
2350,235000,대운하,14,"['data structures', 'disjoint set']"
2351,235100,미지의 다각형,20,"['graph theory', 'graph traversal', 'greedy', 'mathematics']"
2352,235200,반도체 설계,14,"['binary search', 'longest increasing sequence in o(n log n)']"
2353,235300,오타,11,"['implementation', 'string']"
2354,235400,비교교환,13,[]
2355,235500,시그마,4,"['mathematics', 'arithmetic']"
2357,235700,최솟값과 최댓값,15,"['segment tree', 'data structures']"
2358,235800,평행선,7,"['data structures', 'set / map by hashing', 'sorting']"
2359,235900,드라이브,16,"['breadth-first search', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'parametric search']"
2360,236000,Teleport,0,[]
2361,236100,정원,18,[]
2362,236200,탈출,19,"['maximum flow', 'max-flow min-cut theorem']"
2363,236300,약수부분수열,0,[]
2364,236400,담장 너머로,15,"['breadth-first search', 'graph theory', 'graph traversal']"
2365,236500,숫자판 만들기,18,"['binary search', 'maximum flow']"
2366,236600,이진트리 그리기,0,[]
2367,236700,파티,17,['maximum flow']
2369,236900,행렬의 부분합,15,"['bruteforcing', 'prefix sum']"
2370,237000,시장 선거 포스터,12,"['value / coordinate compression', 'implementation']"
2371,237100,파일 구별하기,9,"['bruteforcing', 'data structures', 'set / map by hashing']"
2373,237300,Fibonacci Game,20,"['dynamic programming', 'game theory', 'mathematics']"
2374,237400,같은 수로 만들기,12,"['data structures', 'greedy', 'stack']"
2375,237500,농구 골대 세우기,14,"['greedy', 'sorting']"
2376,237600,단말 정점들의 거리,16,"['constructive', 'implementation', 'tree']"
2378,237800,불필요한 수,13,"['combinatorics', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
2379,237900,트리 탐색하기,16,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'stack', 'tree']"
2381,238100,최대 거리,13,"['ad-hoc', 'mathematics', 'sorting']"
2382,238200,키워드 매칭,0,[]
2383,238300,Ferries,0,[]
2384,238400,I’m a Frayed Knot,0,[]
2385,238500,Secret Sharing,18,"['greedy', 'sorting', 'string']"
2386,238600,도비의 영어 공부,4,"['bruteforcing', 'implementation', 'string']"
2388,238800,블록 쌓기,16,['greedy']
2389,238900,세상의 중심에서...,20,"['geometry', 'heuristics', 'minimum enclosing circle']"
2391,239100,Sascha,5,"['implementation', 'string']"
2392,239200,다각형의 분할,19,"['dynamic programming', 'mathematics']"
2394,239400,드라이브 투어,16,"['dynamic programming', 'graph theory', 'topological sorting']"
2395,239500,순열의 개수,13,['dynamic programming']
2396,239600,같은 길이 막대기 만들기,22,['backtracking']
2397,239700,보이는 정사각형,19,"['value / coordinate compression', 'geometry', 'sweeping']"
2398,239800,3인통화,15,"[""dijkstra's"", 'graph theory']"
2399,239900,거리의 합,4,"['implementation', 'mathematics']"
2401,240100,최대 문자열 붙여넣기,19,"['dynamic programming', 'knuth–morris–pratt', 'string']"
2402,240200,거짓말,0,[]
2403,240300,게시판 구멍 가리기,13,"['greedy', 'parametric search']"
2404,240400,단위 분수로 분할,10,"['backtracking', 'bruteforcing', 'mathematics']"
2405,240500,"세 수, 두 M",12,"['greedy', 'mathematics']"
2406,240600,안정적인 네트워크,13,"['graph theory', 'minimum spanning tree']"
2407,240700,조합,7,"['arbitrary precision / big integers', 'combinatorics', 'mathematics']"
2408,240800,큰 수 계산,4,"['arbitrary precision / big integers', 'arithmetic', 'implementation', 'mathematics']"
2409,240900,파이프 자르기,22,"['depth-first search', 'graph theory', 'graph traversal', 'heuristics']"
2410,241000,2의 멱수의 합,11,['dynamic programming']
2411,241100,아이템 먹기,12,['dynamic programming']
2412,241200,암벽 등반,13,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal']"
2413,241300,비슷한 순열,14,['greedy']
2414,241400,게시판 구멍 막기,18,['bipartite matching']
2415,241500,직사각형,19,"['geometry', 'sorting']"
2416,241600,문,18,"['2-sat', 'graph theory', 'strongly connected component']"
2417,241700,정수 제곱근,7,"['binary search', 'mathematics']"
2418,241800,단어 격자,11,['dynamic programming']
2419,241900,사수아탕,20,['dynamic programming']
2420,242000,사파리월드,1,"['implementation', 'arithmetic', 'mathematics']"
2421,242100,저금통,11,"['dynamic programming', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
2422,242200,한윤정이 이탈리아에 가서 아이스크림을 사먹는데,7,['bruteforcing']
2423,242300,전구를 켜라,15,"['0-1 bfs', ""dijkstra's"", 'graph theory', 'graph traversal']"
2424,242400,부산의 해적,17,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
2425,242500,Lego,0,[]
2426,242600,세계적인 석유 재벌,20,"['binary search', 'data structures', 'segment tree with lazy propagation', 'segment tree']"
2427,242700,2012 지구 멸망,22,"['bruteforcing', 'greedy', 'mathematics']"
2428,242800,표절,8,"['binary search', 'sorting']"
2429,242900,길이,19,"['ad-hoc', 'geometry', 'area of a polygon']"
2430,243000,거울대칭트리 그래프,25,"['ad-hoc', 'graph theory', 'implementation', 'tree', 'tree isomorphism']"
2431,243100,신호 장애,20,"['binary search', 'greedy', 'mathematics']"
2432,243200,순위 정렬,24,"['dynamic programming', 'sorting']"
2433,243300,The Sound of Silence,16,"['data structures', 'deque', 'sliding window']"
2434,243400,점 연결하기,19,"['case work', 'exponentiation by squaring', 'mathematics']"
2435,243500,기상청 인턴 신현수,5,"['bruteforcing', 'prefix sum']"
2436,243600,공약수,11,"['bruteforcing', 'euclidean algorithm', 'mathematics', 'number theory']"
2437,243700,저울,14,"['greedy', 'sorting']"
2438,243800,별 찍기 - 1,1,['implementation']
2439,243900,별 찍기 - 2,2,['implementation']
2440,244000,별 찍기 - 3,2,['implementation']
2441,244100,별 찍기 - 4,3,['implementation']
2442,244200,별 찍기 - 5,3,['implementation']
2443,244300,별 찍기 - 6,3,['implementation']
2444,244400,별 찍기 - 7,3,['implementation']
2445,244500,별 찍기 - 8,3,['implementation']
2446,244600,별 찍기 - 9,3,['implementation']
2447,244700,별 찍기 - 10,10,"['divide and conquer', 'recursion']"
2448,244800,별 찍기 - 11,12,['recursion']
2449,244900,전구,17,['dynamic programming']
2450,245000,모양 정돈,14,"['bruteforcing', 'greedy', 'implementation']"
2451,245100,모둠,17,"['dynamic programming', 'prefix sum']"
2452,245200,그리드 게임,20,"['breadth-first search', 'graph theory', 'graph traversal']"
2453,245300,부서 배치,19,"['data structures', 'depth-first search', 'disjoint set', 'dynamic programming', 'graph theory', 'graph traversal']"
2454,245400,트리 분할,19,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'tree']"
2455,245500,지능형 기차,3,"['arithmetic', 'implementation', 'mathematics']"
2456,245600,나는 학급회장이다,5,"['case work', 'implementation']"
2457,245700,공주님의 정원,13,"['greedy', 'sorting']"
2458,245800,키 순서,12,"['floyd–warshall', 'graph theory', 'graph traversal']"
2459,245900,철사 자르기,12,['implementation']
2460,246000,지능형 기차 2,3,"['arithmetic', 'implementation', 'mathematics']"
2461,246100,대표 선수,14,"['data structures', 'two-pointer']"
2462,246200,보도블록,17,[]
2463,246300,비용,16,"['data structures', 'disjoint set']"
2464,246400,비밀번호,14,"['bitmask', 'greedy', 'mathematics']"
2465,246500,줄 세우기,18,"['data structures', 'segment tree']"
2466,246600,책장,22,"['binary search', 'data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque', 'parametric search']"
2467,246700,용액,11,"['binary search', 'two-pointer']"
2468,246800,안전 영역,10,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
2469,246900,사다리 타기,11,"['implementation', 'string']"
2470,247000,두 용액,11,"['binary search', 'sorting', 'two-pointer']"
2471,247100,모빌 이진수,19,"['data structures', 'priority queue', 'set / map by trees']"
2472,247200,체인점,20,"['data structures', ""dijkstra's"", 'graph theory', 'segment tree']"
2473,247300,세 용액,13,"['binary search', 'sorting', 'two-pointer']"
2474,247400,교차 선분,19,['greedy']
2475,247500,검증수,1,"['implementation', 'arithmetic', 'mathematics']"
2476,247600,주사위 게임,3,"['implementation', 'mathematics']"
2477,247700,참외밭,8,"['geometry', 'implementation', 'mathematics']"
2478,247800,자물쇠,15,"['implementation', 'simulation']"
2479,247900,경로 찾기,12,"['breadth-first search', 'graph theory', 'graph traversal']"
2480,248000,주사위 세개,2,"['arithmetic', 'mathematics']"
2481,248100,해밍 경로,14,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal']"
2482,248200,색상환,12,['dynamic programming']
2483,248300,병원,25,"['depth-first search', 'graph theory', 'graph traversal', 'greedy', 'tree']"
2484,248400,주사위 네개,4,"['case work', 'implementation', 'mathematics']"
2485,248500,가로수,7,"['euclidean algorithm', 'mathematics', 'number theory']"
2486,248600,그레이 코드,20,['constructive']
2487,248700,섞기 수열,12,"['euclidean algorithm', 'mathematics', 'number theory', 'permutation cycle decomposition']"
2488,248800,줄다리기,0,"['dynamic programming', 'parametric search', 'prefix sum']"
2489,248900,응급센터,25,"['ad-hoc', 'graph theory', 'greedy', 'implementation', 'tree']"
2490,249000,윷놀이,3,['implementation']
2491,249100,수열,7,"['dynamic programming', 'implementation']"
2492,249200,보석,13,"['bruteforcing', 'sliding window']"
2493,249300,탑,11,"['data structures', 'stack']"
2494,249400,숫자 맞추기,16,['dynamic programming']
2495,249500,연속구간,4,['string']
2496,249600,금강석,18,"['bruteforcing', 'geometry']"
2497,249700,횡단도로,17,[]
2498,249800,중앙문자열,18,"['case work', 'greedy']"
2499,249900,의좋은 형제,15,"['dynamic programming', 'knapsack']"
2500,250000,복불복,19,"['exponentiation by squaring', 'mathematics']"
2501,250100,약수 구하기,3,"['bruteforcing', 'mathematics']"
2502,250200,떡 먹는 호랑이,9,"['bruteforcing', 'dynamic programming', 'mathematics']"
2503,250300,숫자 야구,8,"['bruteforcing', 'implementation']"
2504,250400,괄호의 값,10,"['data structures', 'implementation', 'stack']"
2505,250500,두 번 뒤집기,16,"['ad-hoc', 'implementation']"
2506,250600,점수계산,3,"['arithmetic', 'implementation', 'mathematics']"
2507,250700,공주 구하기,18,['dynamic programming']
2508,250800,사탕 박사 고창영,5,"['bruteforcing', 'implementation']"
2509,250900,쉬운 매췽,9,[]
2510,251000,어려운 매췽,0,[]
2511,251100,카드놀이,4,['implementation']
2512,251200,예산,8,"['binary search', 'parametric search']"
2513,251300,통학버스,13,"['greedy', 'sorting']"
2514,251400,자동분무기,17,"['implementation', 'mathematics']"
2515,251500,전시장,14,"['binary search', 'dynamic programming', 'sorting']"
2516,251600,원숭이,17,"['constructive', 'implementation']"
2517,251700,달리기,17,"['value / coordinate compression', 'data structures', 'segment tree']"
2518,251800,회전 테이블,16,['dynamic programming']
2519,251900,막대기,21,"['2-sat', 'geometry', 'graph theory', 'line segment intersection check', 'strongly connected component']"
2520,252000,팬케이크 사랑,4,"['arithmetic', 'implementation', 'mathematics']"
2521,252100,팬케이크 사랑 2,0,[]
2522,252200,별 찍기 - 12,3,['implementation']
2523,252300,별 찍기 - 13,3,['implementation']
2524,252400,희원이의 뉴욕 생활,11,['geometry']
2525,252500,오븐 시계,3,"['arithmetic', 'mathematics']"
2526,252600,싸이클,5,['implementation']
2527,252700,직사각형,9,"['case work', 'geometry', 'mathematics']"
2528,252800,사다리,13,"['implementation', 'mathematics', 'simulation']"
2529,252900,부등호,10,"['backtracking', 'bruteforcing']"
2530,253000,인공지능 시계,2,"['arithmetic', 'mathematics']"
2531,253100,회전 초밥,10,"['bruteforcing', 'two-pointer']"
2532,253200,먹이사슬,17,"['binary search', 'longest increasing sequence in o(n log n)', 'sorting']"
2533,253300,사회망 서비스(SNS),13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
2534,253400,카드 배열,21,"['graph theory', 'greedy', 'topological sorting']"
2535,253500,아시아 정보올림피아드,6,"['implementation', 'sorting']"
2536,253600,버스 갈아타기,15,"['breadth-first search', 'geometry', 'graph theory', 'graph traversal']"
2537,253700,점핑 사다리,0,[]
2538,253800,모눈종이 자르기,16,['implementation']
2539,253900,모자이크,13,['binary search']
2540,254000,계란,19,"['ad-hoc', 'implementation', 'simulation']"
2541,254100,점,14,['mathematics']
2542,254200,양팔저울,21,"['geometry', 'line segment intersection check']"
2543,254300,초고속철도,16,"['binary search', 'dynamic programming', 'sorting']"
2544,254400,격자판,20,['bipartite matching']
2545,254500,팬케익 먹기,5,"['arithmetic', 'mathematics']"
2546,254600,경제학과 정원영,5,"['implementation', 'mathematics']"
2547,254700,사탕 선생 고창영,3,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
2548,254800,대표 자연수,8,"['bruteforcing', 'sorting']"
2549,254900,루빅의 사각형,18,"['backtracking', 'bidirectional search', 'graph theory', 'meet in the middle']"
2550,255000,전구,13,"['dynamic programming', 'longest increasing sequence in o(n log n)']"
2551,255100,두 대표 자연수,12,"['mathematics', 'sorting']"
2552,255200,전구숫자,19,"['bitmask', 'dynamic programming', 'meet in the middle']"
2553,255300,마지막 팩토리얼 수,9,"['mathematics', 'number theory']"
2554,255400,마지막 팩토리얼 수2,19,"['arbitrary precision / big integers', 'mathematics', 'number theory']"
2555,255500,생일 출력하기,0,[]
2556,255600,별 찍기 - 14,0,['implementation']
2557,255700,Hello World,1,['implementation']
2558,255800,A+B - 2,1,"['implementation', 'arithmetic', 'mathematics']"
2559,255900,수열,8,"['prefix sum', 'sliding window', 'two-pointer']"
2560,256000,짚신벌레,13,['dynamic programming']
2561,256100,세 번 뒤집기,21,"['ad-hoc', 'backtracking', 'bruteforcing', 'implementation']"
2562,256200,최댓값,3,['implementation']
2563,256300,색종이,5,['implementation']
2564,256400,경비원,10,"['case work', 'implementation']"
2565,256500,전깃줄,11,['dynamic programming']
2566,256600,최댓값,3,['implementation']
2567,256700,색종이 - 2,7,['implementation']
2568,256800,전깃줄 - 2,16,['longest increasing sequence in o(n log n)']
2569,256900,짐정리,20,"['greedy', 'permutation cycle decomposition']"
2570,257000,비숍2,19,['bipartite matching']
2571,257100,색종이 - 3,13,"['implementation', 'prefix sum']"
2572,257200,보드게임,13,"['dynamic programming', 'graph theory']"
2573,257300,빙산,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
2574,257400,마법색종이,22,"['data structures', 'divide and conquer', 'smaller to larger technique', 'tree', 'set / map by trees']"
2575,257500,수열,11,"['case work', 'mathematics', 'number theory']"
2576,257600,홀수,3,"['implementation', 'mathematics']"
2577,257700,숫자의 개수,4,"['arithmetic', 'implementation', 'mathematics']"
2578,257800,빙고,7,['implementation']
2579,257900,계단 오르기,8,['dynamic programming']
2580,258000,스도쿠,12,['backtracking']
2581,258100,소수,6,"['mathematics', 'number theory', 'primality test']"
2582,258200,동전 뒤집기 2,20,"['heuristics', 'randomization', 'simulated annealing']"
2583,258300,영역 구하기,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
2584,258400,트리분할,22,"['dynamic programming', 'dynamic programming on trees', 'tree']"
2585,258500,경비행기,14,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal', 'parametric search']"
2586,258600,소방차,24,"['dynamic programming', 'greedy']"
2587,258700,대표값2,4,"['arithmetic', 'implementation', 'mathematics']"
2588,258800,곱셈,3,"['arithmetic', 'mathematics']"
2589,258900,보물섬,11,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
2590,259000,색종이,12,"['case work', 'greedy']"
2591,259100,숫자카드,11,['dynamic programming']
2592,259200,대표값,4,"['implementation', 'mathematics']"
2593,259300,엘리베이터,16,"['breadth-first search', 'graph theory', 'graph traversal']"
2594,259400,놀이공원,8,"['implementation', 'sweeping']"
2595,259500,배수,20,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory']"
2596,259600,비밀편지,5,"['implementation', 'string']"
2597,259700,줄자접기,7,['implementation']
2598,259800,기둥만들기,18,"['bruteforcing', 'implementation']"
2599,259900,짝 정하기,8,"['bruteforcing', 'implementation']"
2600,260000,구슬게임,12,"['dynamic programming', 'game theory']"
2601,260100,도서실카펫,20,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
2602,260200,돌다리 건너기,12,['dynamic programming']
2603,260300,고속버스 노선,0,[]
2604,260400,농지 정리,22,[]
2605,260500,줄 세우기,4,"['data structures', 'implementation']"
2606,260600,바이러스,8,"['graph theory', 'graph traversal', 'breadth-first search', 'depth-first search']"
2607,260700,비슷한 단어,8,"['implementation', 'string']"
2608,260800,로마 숫자,10,"['implementation', 'mathematics', 'string']"
2609,260900,최대공약수와 최소공배수,5,"['euclidean algorithm', 'mathematics', 'number theory']"
2610,261000,회의준비,14,"['data structures', 'disjoint set', 'floyd–warshall', 'graph theory', 'graph traversal']"
2611,261100,자동차경주,14,"['dynamic programming', 'graph theory', 'topological sorting']"
2612,261200,DNA 유사도,16,['dynamic programming']
2613,261300,숫자구슬,14,"['binary search', 'dynamic programming', 'greedy']"
2614,261400,청개구리,25,"['backtracking', 'gaussian elimination', 'linear algebra', 'mathematics']"
2615,261500,오목,10,"['bruteforcing', 'implementation']"
2616,261600,소형기관차,13,"['dynamic programming', 'prefix sum']"
2617,261700,구슬 찾기,12,"['depth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
2618,261800,경찰차,16,['dynamic programming']
2619,261900,단순 사각형,16,"['binary search', 'value / coordinate compression', 'graph theory', 'graph traversal', 'implementation']"
2620,262000,직각다각형의 면적 구하기,17,"['breadth-first search', 'value / coordinate compression', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
2621,262100,카드게임,7,['implementation']
2622,262200,삼각형만들기,6,['mathematics']
2623,262300,음악프로그램,13,"['graph theory', 'topological sorting']"
2624,262400,동전 바꿔주기,11,['dynamic programming']
2625,262500,DNA유사도,19,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
2626,262600,헬기착륙장,21,"['geometry', 'heuristics', 'minimum enclosing circle']"
2627,262700,트리회전,0,[]
2628,262800,종이자르기,6,['sorting']
2629,262900,양팔저울,13,"['dynamic programming', 'knapsack']"
2630,263000,색종이 만들기,9,"['divide and conquer', 'recursion']"
2631,263100,줄세우기,12,['dynamic programming']
2632,263200,피자판매,14,"['binary search', 'prefix sum']"
2633,263300,로봇,16,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
2634,263400,버스노선,0,[]
2635,263500,수 이어가기,6,"['bruteforcing', 'mathematics']"
2636,263600,치즈,12,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
2637,263700,장난감 조립,14,"['dynamic programming', 'graph theory', 'topological sorting']"
2638,263800,치즈,13,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
2639,263900,주차장,0,[]
2640,264000,유전자,0,[]
2641,264100,다각형그리기,9,['implementation']
2642,264200,전개도,16,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
2643,264300,색종이 올려 놓기,12,"['dynamic programming', 'sorting']"
2644,264400,촌수계산,9,"['graph theory', 'graph traversal', 'breadth-first search', 'depth-first search']"
2645,264500,회로배치,17,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
2646,264600,같은 길이 막대기 만들기,20,['backtracking']
2647,264700,검은점과 하얀점 연결,18,['dynamic programming']
2648,264800,단순 사각형,13,"['bruteforcing', 'implementation', 'simulation']"
2649,264900,비상 연락망,0,[]
2650,265000,교차점개수,12,"['geometry', 'implementation']"
2651,265100,자동차경주대회,12,['dynamic programming']
2652,265200,블록맞추기,15,['implementation']
2653,265300,안정된 집단,12,"['graph theory', 'implementation']"
2654,265400,연결 사각형,16,['backtracking']
2655,265500,가장높은탑쌓기,13,['dynamic programming']
2656,265600,울타리치기,0,[]
2657,265700,화물차의 경로,0,[]
2658,265800,직각이등변삼각형찾기,14,['implementation']
2659,265900,십자카드 문제,8,"['bruteforcing', 'implementation', 'sorting']"
2660,266000,회장뽑기,11,"['breadth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
2661,266100,좋은수열,12,['backtracking']
2662,266200,기업투자,13,"['dynamic programming', 'knapsack']"
2663,266300,간척지 만들기,17,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'mathematics']"
2664,266400,다각형의 확장,22,"['geometry', 'implementation']"
2665,266500,미로만들기,12,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
2666,266600,벽장문의 이동,11,"['bruteforcing', 'dynamic programming']"
2667,266700,단지번호붙이기,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
2668,266800,숫자고르기,11,"['depth-first search', 'graph theory', 'graph traversal']"
2669,266900,직사각형 네개의 합집합의 면적 구하기,5,['implementation']
2670,267000,연속부분최대곱,7,"['bruteforcing', 'dynamic programming']"
2671,267100,잠수함식별,10,"['regular expression', 'string']"
2672,267200,여러 직사각형의 전체 면적 구하기,14,['sweeping']
2673,267300,교차하지 않는 원의 현들의 최대집합,17,['dynamic programming']
2674,267400,삼각퍼즐,20,"['backtracking', 'implementation']"
2675,267500,문자열 반복,4,"['implementation', 'string']"
2676,267600,라스칼 삼각형,9,['mathematics']
2677,267700,에드삭 만들기,7,"['implementation', 'parsing', 'string']"
2678,267800,에드삭 데이터 디코딩하기,6,"['implementation', 'mathematics']"
2679,267900,맨체스터의 도로,18,"[""dijkstra's"", 'maximum flow', 'graph theory', 'graph traversal']"
2680,268000,QR,13,['implementation']
2681,268100,목장 주인 백승환의 선물,14,"['geometry', 'line segment intersection check']"
2682,268200,최대 사이클 1,13,"['combinatorics', 'mathematics']"
2683,268300,황금 천장,0,[]
2684,268400,동전 게임,5,"['implementation', 'string']"
2685,268500,님비합,9,"['implementation', 'mathematics']"
2686,268600,팩스,13,"['implementation', 'string']"
2687,268700,팩스 받기,11,[]
2688,268800,줄어들지 않아,10,['dynamic programming']
2689,268900,I²C,14,"['implementation', 'string']"
2690,269000,옛날에는 조판을 어떻게 했을까?,12,"['data structures', 'parsing', 'regular expression', 'stack', 'string']"
2691,269100,UPC 바코드 읽기,13,[]
2692,269200,쌍둥이 규현이와 승환이의 생일 케익,17,['geometry']
2693,269300,N번째 큰 수,5,['sorting']
2694,269400,합이 같은 구간,13,"['bruteforcing', 'mathematics', 'number theory', 'prefix sum']"
2695,269500,공,14,['dynamic programming']
2696,269600,중앙값 구하기,14,"['data structures', 'priority queue']"
2697,269700,다음수 구하기,9,"['greedy', 'string']"
2698,269800,인접한 비트의 개수,12,['dynamic programming']
2699,269900,격자점 컨벡스헐,16,"['convex hull', 'geometry']"
2700,270000,볼록 격자 다각형의 내부점,15,"['binary search', 'bruteforcing', 'geometry', 'point in convex polygon check']"
2701,270100,육각 퍼즐,15,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
2702,270200,초6 수학,4,"['arithmetic', 'bruteforcing', 'mathematics', 'number theory']"
2703,270300,Cryptoquote,4,"['implementation', 'string']"
2704,270400,이진법 시계,4,['implementation']
2705,270500,팰린드롬 파티션,10,"['dynamic programming', 'recursion']"
2706,270600,문자 보내기,0,[]
2707,270700,노말 정렬,0,[]
2708,270800,폴리큐브의 겉넓이,13,"['implementation', 'parsing', 'string']"
2709,270900,가장 작은 K,18,"['arbitrary precision / big integers', 'exponentiation by squaring', 'mathematics', 'number theory']"
2710,271000,삼각형 정원,15,"['calculus', 'geometry', 'mathematics']"
2711,271100,오타맨 고창영,4,"['implementation', 'string']"
2712,271200,미국 스타일,3,"['arithmetic', 'implementation', 'mathematics']"
2713,271300,규현이의 사랑을 담은 문자메시지,8,['implementation']
2714,271400,문자를 받은 승환이,6,"['implementation', 'string']"
2715,271500,상범 마법 팬케이크 하우스,11,['constructive']
2716,271600,원숭이 매달기,10,"['data structures', 'stack', 'tree']"
2717,271700,Model Rocket Height,0,[]
2718,271800,타일 채우기,15,"['bitmask', 'dynamic programming']"
2719,271900,공간 개념 테스트,0,[]
2720,272000,세탁소 사장 동혁,3,"['arithmetic', 'greedy', 'mathematics']"
2721,272100,삼각수의 합,3,"['implementation', 'mathematics']"
2722,272200,Shuffle’m Up,9,[]
2723,272300,눌러서 잠금 해제,11,"['bitmask', 'combinatorics', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics']"
2724,272400,메시지 변환기,18,"['data structures', 'implementation', 'parsing', 'stack', 'string']"
2725,272500,보이는 점의 개수,9,"['euclidean algorithm', 'mathematics', 'number theory', 'prefix sum']"
2726,272600,삼각 N-Queen,15,"['constructive', 'mathematics']"
2727,272700,"2,3 거듭제곱의 합",17,"['ad-hoc', 'constructive', 'greedy', 'mathematics', 'recursion']"
2728,272800,오늘은 마가리타 한 잔?,16,['dynamic programming']
2729,272900,이진수 덧셈,5,"['arithmetic', 'implementation', 'mathematics']"
2730,273000,오늘은 OS 숙제 제출일,10,"['bruteforcing', 'case work', 'implementation', 'parsing', 'string']"
2731,273100,1379와 세제곱,16,"['backtracking', 'mathematics', 'number theory']"
2732,273200,Kindergarten Graduation,0,[]
2733,273300,Brainf*ck,13,"['data structures', 'implementation', 'simulation', 'stack', 'string']"
2734,273400,드럼통 쌓기,0,[]
2735,273500,No Fold’em Hold’em,0,[]
2736,273600,모형 로켓 발사,0,[]
2737,273700,연속 합,12,"['mathematics', 'number theory']"
2738,273800,행렬 덧셈,1,"['implementation', 'mathematics']"
2739,273900,구구단,1,"['implementation', 'mathematics']"
2740,274000,행렬 곱셈,6,"['implementation', 'linear algebra', 'mathematics']"
2741,274100,N 찍기,1,['implementation']
2742,274200,기찍 N,2,['implementation']
2743,274300,단어 길이 재기,1,"['implementation', 'string']"
2744,274400,대소문자 바꾸기,1,"['implementation', 'string']"
2745,274500,진법 변환,4,"['implementation', 'string', 'mathematics']"
2747,274700,피보나치 수,4,"['implementation', 'mathematics']"
2748,274800,피보나치 수 2,5,"['dynamic programming', 'mathematics']"
2749,274900,피보나치 수 3,14,"['exponentiation by squaring', 'mathematics']"
2750,275000,수 정렬하기,4,"['sorting', 'implementation']"
2751,275100,수 정렬하기 2,6,['sorting']
2752,275200,세수정렬,2,['sorting']
2753,275300,윤년,1,"['implementation', 'arithmetic', 'mathematics']"
2754,275400,학점계산,1,"['implementation', 'string']"
2755,275500,이번학기 평점은 몇점?,5,"['arithmetic', 'implementation', 'mathematics']"
2756,275600,다트,4,"['geometry', 'implementation', 'mathematics', 'pythagoras theorem']"
2757,275700,엑셀,8,"['mathematics', 'string']"
2758,275800,로또,12,['dynamic programming']
2759,275900,팬케이크 뒤집기,11,"['constructive', 'greedy']"
2760,276000,마술사 현우,8,"['case work', 'parsing', 'string']"
2761,276100,모형 로켓의 높이,14,"['geometry', 'geometry; 3d', 'mathematics']"
2762,276200,구역 채우기,0,"['ad-hoc', 'case work', 'geometry', 'implementation']"
2763,276300,Histology Assistant,16,"['ad-hoc', 'depth-first search', 'graph theory', 'graph traversal', 'greedy', 'implementation']"
2764,276400,마지막 사진 찍기,15,['dynamic programming']
2765,276500,자전거 속도,3,"['arithmetic', 'mathematics']"
2766,276600,Candy Sharing Game,6,"['implementation', 'simulation']"
2768,276800,세금 계산,0,[]
2769,276900,논리식 비교,20,"['backtracking', 'implementation', 'parsing', 'string']"
2772,277200,완전히 다양화된 수열,0,[]
2773,277300,바깥 삼각형의 중심,13,['geometry']
2774,277400,아름다운 수,4,['implementation']
2775,277500,부녀회장이 될테야,5,"['dynamic programming', 'implementation', 'mathematics']"
2776,277600,암기왕,7,"['binary search', 'data structures', 'set / map by hashing', 'sorting']"
2777,277700,숫자 놀이,9,"['greedy', 'mathematics']"
2778,277800,측량사 지윤,13,['geometry']
2779,277900,비밀어,14,['dynamic programming']
2780,278000,비밀번호,10,"['dynamic programming', 'graph theory']"
2781,278100,놀이 동산,0,[]
2782,278200,로맨틱 왕,18,"['breadth-first search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal', 'travelling salesman problem']"
2783,278300,삼각 김밥,3,"['arithmetic', 'implementation', 'mathematics']"
2784,278400,가로 세로 퍼즐,8,"['bruteforcing', 'implementation']"
2785,278500,체인,9,['greedy']
2786,278600,상근이의 레스토랑,14,"['greedy', 'sorting']"
2787,278700,흔한 수열 문제,18,['bipartite matching']
2788,278800,스타트업,20,"['data structures', 'merge sort tree', 'offline queries', 'segment tree', 'sorting']"
2789,278900,유학 금지,4,"['implementation', 'string']"
2790,279000,F7,9,"['ad-hoc', 'greedy', 'sorting']"
2791,279100,KONCERT,0,[]
2792,279200,보석 상자,9,"['binary search', 'parametric search']"
2793,279300,숫자의 힘,17,"['mathematics', 'number theory']"
2794,279400,화성,20,['dynamic programming']
2795,279500,사업 확장,24,"['backtracking', ""dijkstra's"", 'dynamic programming', 'floyd–warshall', 'graph theory']"
2796,279600,만남,16,['geometry']
2797,279700,트램폴린,16,['greedy']
2798,279800,블랙잭,4,['bruteforcing']
2799,279900,블라인드,7,['implementation']
2800,280000,괄호 제거,11,"['data structures', 'recursion', 'stack', 'string']"
2801,280100,REZ,11,['mathematics']
2802,280200,크레용,18,"['binary search', 'inclusion and exclusion', 'parametric search', 'prefix sum']"
2803,280300,내가 어렸을 때 가지고 놀던 장난감,21,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'inclusion and exclusion']"
2804,280400,크로스워드 만들기,4,"['implementation', 'string']"
2805,280500,나무 자르기,9,"['binary search', 'parametric search']"
2806,280600,DNA 발견,12,['dynamic programming']
2807,280700,정사각형 크로스워드,19,"['combinatorics', 'graph theory', 'mathematics']"
2808,280800,책 쌓기,18,[]
2809,280900,아스키 거리,20,"['aho-corasick', 'data structures', 'string', 'tree', 'trie']"
2810,281000,컵홀더,5,"['greedy', 'implementation', 'string']"
2811,281100,상범이의 우울,7,"['bruteforcing', 'implementation', 'prefix sum', 'simulation']"
2812,281200,크게 만들기,13,"['data structures', 'greedy', 'stack']"
2813,281300,매력있는 울타리,17,"['constructive', 'greedy']"
2814,281400,최소인수,21,"['binary search', 'case work', 'inclusion and exclusion', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
2815,281500,암호 해독가 최준민,0,[]
2816,281600,디지털 티비,5,"['constructive', 'implementation']"
2817,281700,ALPS식 투표,8,['implementation']
2818,281800,숙제하기 싫을 때,10,"['constructive', 'implementation', 'mathematics', 'simulation']"
2819,281900,상근이의 로봇,14,"['binary search', 'prefix sum']"
2820,282000,자동차 공장,18,"['data structures', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
2821,282100,컨베이어 벨트,20,[]
2822,282200,점수 계산,6,['sorting']
2823,282300,유턴 싫어,9,['graph theory']
2824,282400,최대공약수,10,"['implementation', 'mathematics', 'number theory', 'primality test']"
2825,282500,수업시간에 교수님 몰래 교실을 나간 상근이,14,"['bitmask', 'mathematics']"
2826,282600,함수의 리턴값,21,"['dynamic programming', 'prefix sum']"
2827,282700,현주네 피자 가게,20,[]
2828,282800,사과 담기 게임,6,"['greedy', 'implementation']"
2829,282900,아름다운 행렬,13,['prefix sum']
2830,283000,행성 X3,13,"['bitmask', 'mathematics']"
2831,283100,댄스 파티,12,"['greedy', 'sorting', 'two-pointer']"
2832,283200,정렬,16,"['data structures', 'segment tree']"
2833,283300,나이트,0,[]
2834,283400,박스 정렬,0,[]
2835,283500,인기도 조사,17,"['data structures', 'implementation', 'segment tree with lazy propagation', 'prefix sum', 'segment tree']"
2836,283600,수상 택시,13,['sweeping']
2837,283700,트럭 운전사 상근,24,[]
2838,283800,비숍 낙서,0,[]
2839,283900,설탕 배달,7,"['dynamic programming', 'greedy', 'mathematics']"
2840,284000,행운의 바퀴,7,"['implementation', 'simulation']"
2841,284100,외계인의 기타 연주,10,"['data structures', 'stack']"
2842,284200,집배원 한상덕,16,"['breadth-first search', 'binary search', 'depth-first search', 'graph theory', 'graph traversal', 'two-pointer']"
2843,284300,마블,18,"['data structures', 'disjoint set', 'offline queries']"
2844,284400,자료 구조,24,"['splay tree', 'tree']"
2845,284500,파티가 끝나고 난 뒤,2,"['implementation', 'arithmetic', 'mathematics']"
2846,284600,오르막길,5,['implementation']
2847,284700,게임을 만든 동준이,7,['greedy']
2848,284800,알고스팟어,17,"['graph theory', 'topological sorting']"
2849,284900,탭댄스,20,"['data structures', 'segment tree']"
2850,285000,배관공 김선영,25,"['dynamic programming', 'dynamic programming using connection profile']"
2851,285100,슈퍼 마리오,4,"['bruteforcing', 'implementation', 'prefix sum']"
2852,285200,NBA 농구,8,"['implementation', 'string']"
2853,285300,배,10,"['greedy', 'mathematics', 'number theory']"
2854,285400,문제 출제,12,['dynamic programming']
2855,285500,흥미로운 수열,18,"['binary search', 'parametric search', 'prefix sum']"
2856,285600,동규가 설치한 그림판,0,[]
2857,285700,FBI,3,"['string', 'implementation']"
2858,285800,기숙사 바닥,4,"['arithmetic', 'bruteforcing', 'mathematics']"
2859,285900,별 관찰,7,"['bruteforcing', 'mathematics', 'number theory']"
2860,286000,종이에 숫자 쓰기,12,"['euclidean algorithm', 'mathematics', 'number theory']"
2861,286100,원섭동 사람들,17,"['graph theory', 'greedy', 'topological sorting']"
2862,286200,수학 게임,20,"['dynamic programming', 'game theory', 'mathematics']"
2863,286300,이게 분수?,3,"['arithmetic', 'implementation', 'mathematics']"
2864,286400,5와 6의 차이,4,"['arithmetic', 'greedy', 'mathematics']"
2865,286500,나는 위대한 슈퍼스타K,7,"['greedy', 'sorting']"
2866,286600,문자열 잘라내기,11,"['binary search', 'sorting', 'string']"
2867,286700,수열의 값,17,"['data structures', 'stack']"
2868,286800,MONO,18,"['data structures', 'sweeping']"
2869,286900,달팽이는 올라가고 싶다,6,['mathematics']
2870,287000,수학숙제,7,"['parsing', 'sorting', 'string']"
2871,287100,아름다운 단어,14,['greedy']
2872,287200,우리집엔 도서관이 있어,9,['greedy']
2873,287300,롤러코스터,18,"['constructive', 'greedy', 'implementation']"
2874,287400,검정 직사각형,0,[]
2875,287500,대회 or 인턴,3,"['arithmetic', 'implementation', 'mathematics']"
2876,287600,그래픽스 퀴즈,9,['dynamic programming']
2877,287700,4와 7,11,"['implementation', 'mathematics']"
2878,287800,캔디캔디,14,"['binary search', 'greedy', 'sorting']"
2879,287900,코딩은 예쁘게,14,"['greedy', 'implementation']"
2880,288000,ŽABE,17,"['ad-hoc', 'mathematics', 'number theory']"
2881,288100,산책길,13,"['binary search', 'sorting']"
2882,288200,소수 사이클,18,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
2883,288300,남극의 과학자,0,[]
2884,288400,알람 시계,3,"['arithmetic', 'mathematics']"
2885,288500,초콜릿 식사,9,"['greedy', 'mathematics', 'number theory']"
2886,288600,자리 전쟁,15,"['greedy', 'implementation', 'sorting']"
2887,288700,행성 터널,16,"['graph theory', 'minimum spanning tree', 'sorting']"
2888,288800,상범 게임,18,['dynamic programming']
2889,288900,레스토랑,22,"['constructive', 'depth-first search', 'eulerian path / circuit', 'graph theory', 'graph traversal']"
2890,289000,카약,6,"['implementation', 'sorting', 'string']"
2891,289100,카약과 강풍,6,"['greedy', 'implementation']"
2892,289200,심심한 준규,11,"['ad-hoc', 'bitmask']"
2893,289300,XOR 도형,17,['inclusion and exclusion']
2894,289400,명탐정 홍즈,0,[]
2895,289500,그렘린,0,[]
2896,289600,무알콜 칵테일,5,"['arithmetic', 'mathematics']"
2897,289700,몬스터 트럭,5,"['bruteforcing', 'implementation']"
2898,289800,고대 자물쇠,14,[]
2899,289900,구슬 없애기,21,['dynamic programming']
2900,290000,프로그램,14,"['mathematics', 'number theory', 'prefix sum']"
2901,290100,CHUCK,0,[]
2902,290200,KMP는 왜 KMP일까?,4,"['implementation', 'string']"
2903,290300,중앙 이동 알고리즘,3,['mathematics']
2904,290400,수학은 너무 쉬워,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
2905,290500,홍준이와 울타리,19,"['data structures', 'sliding window']"
2906,290600,폭발 사고,18,"['data structures', 'dynamic programming', 'inclusion and exclusion', 'segment tree']"
2907,290700,재료 사러 가는 길,21,"['exponentiation by squaring', 'graph theory', 'mathematics']"
2908,290800,상수,4,"['implementation', 'mathematics']"
2909,290900,캔디 구매,4,"['implementation', 'mathematics']"
2910,291000,빈도 정렬,8,"['data structures', 'set / map by hashing', 'sorting', 'set / map by trees']"
2911,291100,전화 복구,16,"['greedy', 'sorting']"
2912,291200,백설공주와 난쟁이,19,"['data structures', ""mo's"", 'offline queries', 'randomization', 'segment tree']"
2913,291300,동혁 천문 관측소,0,[]
2914,291400,저작권,3,"['implementation', 'arithmetic', 'mathematics']"
2915,291500,로마 숫자 재배치,10,[]
2916,291600,자와 각도기,12,"['mathematics', 'number theory']"
2917,291700,늑대 사냥꾼,14,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
2918,291800,Arrange,0,[]
2919,291900,카드 놀이,20,"['data structures', 'greedy', 'priority queue', 'string', 'suffix array and lcp array']"
2920,292000,음계,4,['implementation']
2921,292100,도미노,3,['mathematics']
2922,292200,즐거운 단어,11,"['backtracking', 'bruteforcing']"
2923,292300,숫자 게임,15,"['greedy', 'two-pointer']"
2924,292400,천재,16,"['graph theory', 'mathematics', 'permutation cycle decomposition']"
2925,292500,신기한 물체,24,"['value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'mathematics', 'number theory', 'offline queries', 'segment tree']"
2926,292600,비례대표,0,[]
2927,292700,남극 탐험,21,"['data structures', 'disjoint set', 'heavy-light decomposition', 'offline queries', 'segment tree', 'tree']"
2928,292800,빨랫줄,23,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
2929,292900,머신 코드,5,"['implementation', 'parsing', 'regular expression', 'string']"
2930,293000,가위 바위 보,5,"['bruteforcing', 'greedy', 'implementation']"
2931,293100,가스관,14,"['implementation', 'simulation']"
2932,293200,표 회전,8,[]
2933,293300,미네랄,14,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
2934,293400,LRH 식물,17,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
2935,293500,소음,3,"['arithmetic', 'mathematics', 'string']"
2936,293600,채식주의자,6,"['case work', 'geometry', 'mathematics']"
2937,293700,블록 정리,12,"['bruteforcing', 'prefix sum']"
2938,293800,3으로 나누어 떨어지지 않는 배열,11,"['case work', 'constructive', 'mathematics']"
2939,293900,택배 배달,21,"['dynamic programming', 'graph theory']"
2940,294000,SLICICE,0,[]
2941,294100,크로아티아 알파벳,6,"['implementation', 'string']"
2942,294200,퍼거슨과 사과,9,"['euclidean algorithm', 'mathematics', 'number theory']"
2943,294300,토끼,7,"['implementation', 'simulation', 'square root decomposition']"
2944,294400,수박 던지기 게임,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'implementation', 'simulation']"
2945,294500,사과의 개수,19,['dynamic programming']
2946,294600,알라딘과 램프,19,"['dynamic programming', 'implementation', 'simulation']"
2947,294700,나무 조각,5,"['implementation', 'simulation']"
2948,294800,2009년,4,['implementation']
2949,294900,45도,7,['implementation']
2950,295000,SLIKAR,0,[]
2951,295100,금고 사업,22,['inclusion and exclusion']
2952,295200,주기율표,0,[]
2953,295300,나는 요리사다,3,"['arithmetic', 'implementation', 'mathematics']"
2954,295400,창영이의 일기장,4,"['implementation', 'string']"
2955,295500,스도쿠 풀기,14,['implementation']
2956,295600,대칭 행렬,21,"['greedy', 'implementation']"
2957,295700,이진 탐색 트리,16,"['data structures', 'set / map by trees']"
2958,295800,도로 네트워크,19,"[""dijkstra's"", 'graph theory']"
2959,295900,거북이,3,"['arithmetic', 'mathematics']"
2960,296000,에라토스테네스의 체,7,"['implementation', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
2961,296100,도영이가 만든 맛있는 음식,9,"['bitmask', 'bruteforcing']"
2962,296200,동물원 확장,17,['binary search']
2963,296300,무한 이진 트리 탐색,12,"['arbitrary precision / big integers', 'mathematics']"
2964,296400,벽과 못,21,"['convex hull', 'geometry']"
2965,296500,캥거루 세마리,3,['mathematics']
2966,296600,찍기,4,['implementation']
2967,296700,그리스-로마 건축,16,"['bruteforcing', 'implementation']"
2968,296800,보드 게임의 왕 김동혁,18,"['implementation', 'mathematics']"
2969,296900,메뚜기,18,"['data structures', 'dynamic programming']"
2970,297000,두더지,0,[]
2971,297100,GLASNICI,0,[]
2972,297200,KOLEKCIJA,11,[]
2973,297300,TAMNICA,0,[]
2974,297400,자기곱,21,"['bruteforcing', 'dynamic programming', 'mathematics', 'number theory']"
2975,297500,Transactions,3,"['arithmetic', 'implementation', 'mathematics']"
2976,297600,NIKOLA,14,['dynamic programming']
2977,297700,폭탄제조,15,"['binary search', 'parametric search']"
2978,297800,A=S,16,"['dynamic programming', 'greedy']"
2979,297900,트럭 주차,4,"['implementation', 'simulation']"
2980,298000,도로와 신호등,7,"['implementation', 'mathematics', 'simulation']"
2981,298100,검문,12,"['euclidean algorithm', 'mathematics', 'number theory']"
2982,298200,국왕의 방문,14,"[""dijkstra's"", 'graph theory']"
2983,298300,개구리 공주,17,"['data structures', 'implementation', 'linked list', 'sorting', 'set / map by trees']"
2984,298400,고속도로,19,"['dynamic programming', 'sorting']"
2985,298500,세 수,3,"['arithmetic', 'case work', 'implementation', 'mathematics']"
2986,298600,파스칼,8,"['mathematics', 'number theory']"
2987,298700,사과나무,12,"['geometry', 'implementation', 'mathematics', 'point in convex polygon check']"
2988,298800,아보가드로,19,['greedy']
2989,298900,개구리 왕눈이,17,['dynamic programming']
2990,299000,단어 검색,20,"['binary search', 'data structures', 'string', 'tree', 'trie']"
2991,299100,사나운 개,3,"['arithmetic', 'mathematics']"
2992,299200,크면서 작은 수,8,"['backtracking', 'bruteforcing', 'string']"
2993,299300,세 부분,6,"['bruteforcing', 'implementation', 'sorting', 'string']"
2994,299400,내한 공연,16,"['dynamic programming', 'knapsack']"
2995,299500,생일,17,"['data structures', 'longest increasing sequence in o(n log n)', 'segment tree']"
2996,299600,큐브 모으기,0,[]
2997,299700,네 번째 수,3,"['arithmetic', 'implementation', 'mathematics']"
2998,299800,8진수,4,"['implementation', 'mathematics', 'string']"
2999,299900,비밀 이메일,5,"['implementation', 'string']"
3000,300000,직각 삼각형,10,"['combinatorics', 'geometry', 'mathematics']"
3001,300100,이상한 문제,17,"['dynamic programming', 'parametric search']"
3002,300200,아날로그 다이얼,19,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
3003,300300,"킹, 퀸, 룩, 비숍, 나이트, 폰",1,"['implementation', 'arithmetic', 'mathematics']"
3004,300400,체스판 조각,3,['mathematics']
3005,300500,크로스워드 퍼즐 쳐다보기,9,"['implementation', 'parsing', 'string']"
3006,300600,터보소트,17,"['data structures', 'segment tree']"
3007,300700,숫자 원,18,"['ad-hoc', 'mathematics']"
3008,300800,직각 삼각형의 개수,17,"['binary search', 'geometry', 'sorting', 'two-pointer']"
3009,300900,네 번째 점,3,"['geometry', 'implementation']"
3010,301000,페그,9,"['bruteforcing', 'implementation']"
3011,301100,이름 지어주기,14,['bruteforcing']
3012,301200,올바른 괄호 문자열,18,['dynamic programming']
3013,301300,부분 수열의 중앙값,14,['prefix sum']
3014,301400,자전거 경주,24,"['articulation points and bridges', 'cactus', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
3015,301500,오아시스 재결합,15,"['data structures', 'stack']"
3016,301600,Clustering,0,[]
3017,301700,가까운 수 찾기,16,"['backtracking', 'greedy', 'implementation']"
3018,301800,캠프파이어,7,"['data structures', 'set / map by hashing', 'implementation']"
3019,301900,테트리스,10,"['bruteforcing', 'implementation']"
3020,302000,개똥벌레,11,"['binary search', 'prefix sum']"
3021,302100,원형 자갈,0,[]
3022,302200,PRASE,7,"['data structures', 'set / map by hashing', 'implementation', 'simulation', 'string']"
3023,302300,마술사 이민혁,5,"['implementation', 'string']"
3024,302400,마라톤 틱택토,8,"['bruteforcing', 'implementation']"
3025,302500,돌 던지기,17,"['data structures', 'dynamic programming', 'implementation', 'simulation', 'stack']"
3026,302600,V,20,"['dynamic programming', 'mathematics']"
3027,302700,3차원 직사각형,22,"['data structures', 'geometry', 'geometry; 3d', 'multidimensional segment tree', 'segment tree', 'sliding window', 'sweeping']"
3028,302800,창영마을,4,"['implementation', 'simulation', 'string']"
3029,302900,경고,3,"['arithmetic', 'implementation', 'mathematics', 'string']"
3030,303000,테니스,15,"['case work', 'implementation', 'parsing', 'string']"
3031,303100,리그,15,"['bruteforcing', 'case work']"
3032,303200,승리,16,"['dynamic programming', 'game theory']"
3033,303300,가장 긴 문자열,18,"['hashing', 'rabin–karp', 'string', 'suffix array and lcp array']"
3034,303400,앵그리 창영,3,"['geometry', 'mathematics', 'pythagoras theorem']"
3035,303500,스캐너,5,"['implementation', 'string']"
3036,303600,링,7,"['euclidean algorithm', 'mathematics', 'number theory']"
3037,303700,혼란,15,"['dynamic programming', 'prefix sum']"
3038,303800,완전 이진 트리,17,"['ad-hoc', 'constructive', 'tree']"
3039,303900,스터디장 홍준,20,"['binary search', 'value / coordinate compression', 'data structures', 'segment tree']"
3040,304000,백설 공주와 일곱 난쟁이,4,['bruteforcing']
3041,304100,N-퍼즐,5,['implementation']
3042,304200,트리플렛,9,"['bruteforcing', 'geometry']"
3043,304300,장난감 탱크,17,"['greedy', 'sorting']"
3044,304400,자전거 경주 준비하기,17,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'topological sorting']"
3045,304500,이중 연결 리스트,18,"['data structures', 'greedy', 'linked list', 'longest increasing sequence in o(n log n)']"
3046,304600,R2,2,"['implementation', 'arithmetic', 'mathematics']"
3047,304700,ABC,3,['implementation']
3048,304800,개미,7,"['implementation', 'simulation', 'string']"
3049,304900,다각형의 대각선,6,"['combinatorics', 'mathematics']"
3050,305000,집들이,14,['prefix sum']
3051,305100,군사 기지,20,"['bruteforcing', 'geometry', 'line segment intersection check']"
3052,305200,나머지,4,"['arithmetic', 'mathematics']"
3053,305300,택시 기하학,3,"['geometry', 'mathematics']"
3054,305400,피터팬 프레임,6,['implementation']
3055,305500,탈출,12,"['breadth-first search', 'graph theory', 'graph traversal']"
3056,305600,007,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
3057,305700,디버그,18,"['bit set', 'dynamic programming', 'hashing', 'prefix sum']"
3058,305800,짝수를 찾아라,3,"['arithmetic', 'implementation', 'mathematics']"
3059,305900,등장하지 않는 문자의 합,3,"['implementation', 'string']"
3060,306000,욕심쟁이 돼지,5,"['implementation', 'mathematics', 'simulation']"
3061,306100,사다리,8,['greedy']
3062,306200,수 뒤집기,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
3063,306300,게시판,8,"['geometry', 'mathematics']"
3064,306400,Minesweeper,11,"['greedy', 'implementation']"
3065,306500,Tournament,0,[]
3066,306600,브리징 시그널,14,"['binary search', 'longest increasing sequence in o(n log n)']"
3067,306700,Coins,11,"['dynamic programming', 'knapsack']"
3071,307100,The ♡ System,8,"['implementation', 'mathematics']"
3073,307300,집으로 가는 길,18,[]
3075,307500,Astromeeting,13,"[""dijkstra's"", 'floyd–warshall', 'graph theory', 'graph traversal']"
3076,307600,상근이의 체스판,4,"['implementation', 'string']"
3077,307700,임진왜란,8,"['bruteforcing', 'data structures', 'set / map by hashing']"
3078,307800,좋은 친구,12,"['data structures', 'queue', 'sliding window']"
3079,307900,입국심사,11,"['binary search', 'parametric search']"
3080,308000,아름다운 이름,18,"['data structures', 'recursion', 'tree', 'trie']"
3081,308100,프로세서 디자인,0,[]
3082,308200,아름다운 제도,0,[]
3083,308300,고속도로 구매,22,[]
3084,308400,FPS,0,[]
3085,308500,사탕 게임,9,"['bruteforcing', 'implementation']"
3086,308600,초콜릿 자르기,15,['dynamic programming']
3087,308700,상근일,11,[]
3088,308800,화분 부수기,9,['greedy']
3089,308900,네잎 클로버를 찾아서,13,"['binary search', 'data structures', 'implementation', 'simulation', 'sorting']"
3090,309000,차이를 최소로,18,"['binary search', 'greedy', 'parametric search']"
3091,309100,PEKAR,0,[]
3092,309200,TRAVA,16,[]
3093,309300,새 게임,0,[]
3094,309400,강아지 기다리기,0,[]
3095,309500,플러스의 개수,11,"['bruteforcing', 'implementation']"
3096,309600,영화제,14,"['bitmask', 'bruteforcing', 'combinatorics', 'mathematics']"
3097,309700,산책 경로,7,"['bruteforcing', 'geometry', 'implementation']"
3098,309800,소셜네트워크,8,"['graph theory', 'implementation']"
3099,309900,도트 매트릭스 프린터,12,['dynamic programming']
3100,310000,국기 인식,7,"['bruteforcing', 'implementation', 'string']"
3101,310100,토끼의 이동,13,"['implementation', 'mathematics']"
3102,310200,겹치지 않는 원,17,['dynamic programming']
3103,310300,순열의 순서,21,"['data structures', 'offline queries', 'persistent segment tree', 'segment tree']"
3104,310400,쿠키,22,"['dynamic programming', 'string']"
3105,310500,벽 쌓기,0,[]
3106,310600,월급 인상,21,"['data structures', 'euler tour technique', 'lowest common ancestor', 'segment tree', 'tree']"
3107,310700,IPv6,10,"['implementation', 'string']"
3108,310800,로고,13,"['data structures', 'disjoint set', 'geometry']"
3109,310900,빵집,14,"['depth-first search', 'graph theory', 'graph traversal', 'greedy']"
3110,311000,부등식,13,['mathematics']
3111,311100,검열,17,"['data structures', 'deque', 'implementation', 'stack', 'string']"
3112,311200,쥐덫,0,[]
3113,311300,양,16,"['greedy', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
3114,311400,사과와 바나나,14,"['dynamic programming', 'prefix sum']"
3115,311500,꽃,20,"['data structures', 'segment tree', 'sorting']"
3116,311600,생물학자,13,"['bruteforcing', 'mathematics']"
3117,311700,YouTube,15,"['data structures', 'sparse table']"
3118,311800,과학자,0,[]
3119,311900,울타리,20,"['data structures', 'greedy', 'segment tree', 'sorting']"
3120,312000,PODJELA,0,[]
3121,312100,"빨간점, 파란점",23,"['data structures', 'geometry', 'segment tree', 'sweeping']"
3122,312200,IGRACI,17,"['data structures', 'segment tree']"
3123,312300,배추,15,[]
3124,312400,공원 산책,14,"['combinatorics', 'mathematics']"
3125,312500,GONDOR,12,"['data structures', 'geometry', 'graph theory', 'implementation', 'priority queue', 'pythagoras theorem', 'simulation']"
3126,312600,반역의 원철이,10,"['bruteforcing', 'implementation']"
3127,312700,JEZERO,0,[]
3128,312800,Hangman Game,15,['dynamic programming']
3129,312900,상범이의 은밀한 메세지,8,['string']
3130,313000,붙인드롬,11,"['bruteforcing', 'knapsack', 'mathematics', 'number theory']"
3131,313100,크리스마스 선물,16,"['bruteforcing', 'prefix sum']"
3132,313200,구조조정,10,"['graph theory', 'sorting']"
3133,313300,코끼리,20,"['binary search', 'data structures', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'segment tree']"
3134,313400,A Standard Problem,0,[]
3135,313500,라디오,6,"['greedy', 'mathematics']"
3136,313600,평면도,17,"['data structures', 'euler characteristic (χ=v-e+f)', 'geometry', 'set / map by hashing']"
3137,313700,DORUCAK,0,[]
3138,313800,STUPOVI,7,[]
3139,313900,VANDAL,7,"['case work', 'mathematics']"
3140,314000,GULIVER,14,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
3141,314100,폭발하는 공,0,[]
3142,314200,즐거운 삶을 위한 노력,14,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
3143,314300,울타리를 치자!,0,[]
3144,314400,자석,15,[]
3145,314500,지리지도,15,[]
3146,314600,SLIKA,14,[]
3147,314700,LIJEN,0,[]
3148,314800,빙고,18,['meet in the middle']
3149,314900,MRAVOGRAD,0,[]
3150,315000,NOGA,0,[]
3151,315100,합이 0,11,"['binary search', 'bruteforcing', 'sorting', 'two-pointer']"
3152,315200,예쁜 숫자,7,"['implementation', 'mathematics']"
3153,315300,타워 디펜스,21,"['2-sat', 'graph theory', 'strongly connected component']"
3154,315400,알람시계,5,"['bruteforcing', 'implementation']"
3155,315500,터널,9,[]
3156,315600,노래,11,"['data structures', 'set / map by hashing', 'sorting']"
3157,315700,osmo,12,[]
3158,315800,Sierpinski 삼각형,11,"['ad-hoc', 'implementation']"
3159,315900,전구,18,"['ad-hoc', 'dynamic programming']"
3160,316000,24 성냥개비 퍼즐,10,['case work']
3161,316100,izbori,8,['implementation']
3162,316200,turbo,7,"['implementation', 'simulation']"
3163,316300,떨어지는 개미,16,"['ad-hoc', 'sorting']"
3164,316400,패턴,12,"['bruteforcing', 'mathematics']"
3165,316500,5,13,"['backtracking', 'greedy', 'mathematics']"
3166,316600,maraton,17,"['graph theory', 'graph traversal']"
3167,316700,기차표 검사,12,['greedy']
3168,316800,stolni,7,"['constructive', 'implementation', 'simulation']"
3169,316900,테트리스 같은 게임,22,['dynamic programming']
3170,317000,grad,9,[]
3171,317100,크레인,0,[]
3172,317200,현주와 윤주의 재미있는 단어 게임,17,"['data structures', 'segment tree', 'sorting', 'string']"
3173,317300,karla,0,[]
3174,317400,나누기,19,[]
3175,317500,formule,0,[]
3176,317600,도로 네트워크,17,"['data structures', 'lowest common ancestor', 'sparse table', 'tree']"
3177,317700,크로아티아 수 읽기,16,"['implementation', 'mathematics']"
3178,317800,코코스,12,"['data structures', 'implementation', 'sorting', 'string', 'tree', 'trie']"
3179,317900,삼각형,0,[]
3180,318000,banana,0,[]
3181,318100,줄임말 만들기,4,"['implementation', 'string']"
3182,318200,한동이는 공부가 하기 싫어!,8,"['bruteforcing', 'graph theory', 'graph traversal']"
3183,318300,Dates,4,['implementation']
3184,318400,양,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
3185,318500,kviz,8,"['case work', 'implementation', 'string']"
3186,318600,소변기,9,['implementation']
3187,318700,양치기 꿍,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
3188,318800,nule,8,"['dynamic programming', 'mathematics']"
3189,318900,tomo,7,"['implementation', 'mathematics', 'number theory', 'pigeonhole principle', 'simulation']"
3190,319000,뱀,12,"['data structures', 'deque', 'implementation', 'queue', 'simulation']"
3191,319100,autoput,14,[]
3192,319200,매직 스퀘어,11,['implementation']
3193,319300,공,12,"['dynamic programming', 'implementation', 'simulation']"
3194,319400,nogomet,14,"['implementation', 'sorting']"
3195,319500,ribari,13,"['binary search', 'prefix sum']"
3196,319600,utrka,7,[]
3197,319700,백조의 호수,16,"['breadth-first search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal']"
3198,319800,nagibni,0,[]
3199,319900,ABCD,9,"['geometry', 'mathematics']"
3200,320000,xl,0,[]
3201,320100,vid,0,[]
3202,320200,papir,0,[]
3203,320300,프로그래밍 언어 Z,22,"['exponentiation by squaring', 'implementation', 'mathematics', 'parsing', 'simulation', 'string']"
3204,320400,커플 깨기,20,"['eulerian path / circuit', 'graph theory']"
3205,320500,fusnote,9,[]
3206,320600,haker,11,[]
3207,320700,hugo,0,[]
3208,320800,gus,4,"['implementation', 'mathematics', 'simulation']"
3209,320900,gumbi,15,[]
3210,321000,piloti,0,[]
3211,321100,kino,6,['sorting']
3212,321200,otmica,0,[]
3213,321300,피자,7,"['greedy', 'mathematics']"
3214,321400,zagrade,0,[]
3215,321500,reklame,0,[]
3216,321600,다운로드,9,['greedy']
3217,321700,malloc,15,"['data structures', 'implementation', 'linked list']"
3218,321800,spam,10,"['bruteforcing', 'case work', 'parsing', 'string']"
3219,321900,novci,0,[]
3220,322000,mars,0,[]
3221,322100,개미의 이동,11,"['ad-hoc', 'sorting']"
3223,322300,chip,0,[]
3224,322400,grupe,11,"['data structures', 'greedy', 'stack']"
3225,322500,mapa,0,[]
3226,322600,전화 요금,5,"['arithmetic', 'implementation', 'mathematics']"
3227,322700,MO,5,"['implementation', 'simulation']"
3228,322800,극한 피자 배달,10,[]
3229,322900,LIFTOVI,15,"[""dijkstra's"", 'graph theory']"
3230,323000,"금메달, 은메달, 동메달은 누가?",5,['implementation']
3231,323100,카드놀이,7,['implementation']
3232,323200,Multiply,5,['mathematics']
3233,323300,BRODOVI,13,['sweeping']
3234,323400,LUKA,4,"['implementation', 'simulation', 'string']"
3235,323500,TRAJEKT,7,"['greedy', 'sorting']"
3236,323600,TELEPORT,12,"['bruteforcing', 'floyd–warshall', 'graph theory']"
3237,323700,UHODE,8,"['data structures', 'set / map by hashing', 'implementation', 'simulation', 'set / map by trees']"
3238,323800,LINIJE,0,[]
3239,323900,SUMA,20,"['geometry', 'mathematics', 'two-pointer']"
3240,324000,JOKER,13,"['greedy', 'implementation', 'simulation']"
3242,324200,JEZIK,10,[]
3243,324300,MRAVI,11,[]
3244,324400,두 부분 문자열 2,17,"['binary search', 'dynamic programming']"
3245,324500,거리,0,[]
3246,324600,SLALOM,0,[]
3247,324700,A1,0,[]
3248,324800,JOZO,0,[]
3250,325000,VOKITOKI,0,[]
3251,325100,SONG,7,['string']
3252,325200,JANICA,9,"['arithmetic', 'implementation', 'mathematics', 'sorting']"
3253,325300,TRAM,9,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
3254,325400,김밥 21개,7,"['implementation', 'simulation']"
3255,325500,WINDOWS,0,[]
3256,325600,비행기,10,['implementation']
3257,325700,발코딩,13,['dynamic programming']
3258,325800,컴포트,9,"['bruteforcing', 'implementation', 'simulation']"
3259,325900,PEOPLE,10,"['bitmask', 'bruteforcing']"
3260,326000,TEAMS,14,"['dynamic programming', 'graph theory', 'graph traversal']"
3261,326100,TOWER,0,[]
3262,326200,BUHA,7,['implementation']
3263,326300,LIGNJA,9,[]
3264,326400,ONE,10,"['depth-first search', 'graph theory', 'graph traversal', 'greedy']"
3265,326500,수열로 수열 구하기,16,"['constructive', 'greedy']"
3266,326600,문자열의 확장과 거리,13,[]
3267,326700,TWO,17,"['breadth-first search', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
3268,326800,COLA,11,"['implementation', 'simulation']"
3269,326900,PARKING,0,[]
3270,327000,CATTLE,15,"['dynamic programming', 'implementation']"
3271,327100,MEADOW,0,[]
3272,327200,SAFE,0,[]
3273,327300,두 수의 합,8,"['sorting', 'two-pointer']"
3276,327600,ICONS,3,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
3277,327700,DOMAINS,7,"['data structures', 'string', 'set / map by trees']"
3278,327800,EXCHANGE,10,[]
3279,327900,DOLLARS,6,['greedy']
3280,328000,CARDS,5,"['implementation', 'simulation']"
3281,328100,T9,5,"['implementation', 'string']"
3282,328200,ROOMS,4,"['implementation', 'simulation']"
3283,328300,BARCODE,9,"['ad-hoc', 'dynamic programming', 'implementation', 'string']"
3284,328400,MASS,11,"['data structures', 'stack']"
3285,328500,DECODE,7,"['implementation', 'string']"
3286,328600,SHELVES,14,['dynamic programming']
3287,328700,CALC,0,[]
3288,328800,BEER,8,['ad-hoc']
3289,328900,FRIENDS,14,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
3290,329000,GAME,0,[]
3291,329100,LIST,13,['greedy']
3292,329200,CARDS,11,[]
3293,329300,MONKEY,13,[]
3294,329400,PASTE,8,[]
3295,329500,단방향 링크 네트워크,19,['bipartite matching']
3296,329600,SEARCH,13,"['breadth-first search', 'graph theory', 'graph traversal']"
3297,329700,POLYGON,19,"['convex hull', 'dynamic programming', 'geometry']"
3298,329800,WEDDING,0,[]
3299,329900,POWER,18,['dynamic programming']
3300,330000,무어 기계,14,"['dynamic programming', 'parsing', 'regular expression', 'string']"
3301,330100,FATBOY,14,['dynamic programming']
3302,330200,Job Scheduling,0,[]
3303,330300,Printed Circuit Board,27,"['data structures', 'geometry', 'stack']"
3304,330400,Sailing Race,0,[]
3307,330700,대회가 끝나고 난 뒤 빰빠빰,16,"['data structures', 'mathematics', 'stack']"
3308,330800,Matching,23,"['data structures', 'knuth–morris–pratt', 'segment tree', 'string']"
3309,330900,Hotel,19,"['data structures', 'greedy', 'priority queue', 'sorting', 'set / map by trees']"
3310,331000,Teams,22,[]
3311,331100,Traffic,23,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'planar graph', 'strongly connected component', 'topological sorting']"
3312,331200,Similarity,9,[]
3313,331300,The Alliances,21,"['bipartite matching', 'implementation']"
3314,331400,An Arithmetic Rectangle,19,"['case work', 'implementation', 'mathematics']"
3315,331500,Bodyguards,22,"['data structures', 'greedy', 'mathematics', 'set / map by trees']"
3316,331600,The MP3 Player,22,"['data structures', 'segment tree']"
3317,331700,PIN,21,"['backtracking', 'string']"
3318,331800,A Huge Tower,18,"['binary search', 'combinatorics', 'mathematics', 'sorting']"
3319,331900,전령들,23,"['convex hull trick', 'data structures', 'dynamic programming', 'tree']"
3320,332000,사진,0,[]
3321,332100,가장 큰 직사각형,19,"['dynamic programming', 'greedy', 'sorting', 'sweeping']"
3322,332200,정렬의 시간복잡도,0,[]
3323,332300,삼각형,22,"['convex hull', 'data structures', 'geometry', 'segment tree']"
3324,332400,Dominance,16,"['binary search', 'geometry', 'mathematics', 'sorting']"
3325,332500,Information,0,[]
3326,332600,Knights,16,"['dynamic programming', 'game theory']"
3327,332700,Fence,19,"['convex hull trick', 'convex hull', 'dynamic programming', 'geometry']"
3328,332800,Choosing Orders and Renting Machines,0,[]
3329,332900,Ministry,21,"['hashing', 'parsing', 'string', 'tree', 'tree isomorphism']"
3330,333000,Nasty Calculations,14,[]
3331,333100,Airport Show,0,[]
3332,333200,Royal treasury,15,"['dynamic programming', 'dynamic programming on trees', 'tree']"
3333,333300,Antenna,23,"['binary search', 'geometry', 'parametric search']"
3334,333400,Queue,19,[]
3335,333500,Walk,23,[]
3336,333600,Connect,24,"['ad-hoc', 'bitmask', 'case work', 'dynamic programming', 'dynamic programming using bitfield', 'implementation']"
3337,333700,Link,22,[]
3338,333800,Depot Rearrangement,16,"['eulerian path / circuit', 'graph theory', 'graph traversal']"
3339,333900,Mobile Service,0,[]
3340,334000,Multi-key Sorting,7,"['data structures', 'set / map by hashing', 'sorting']"
3342,334200,Lanterns,0,[]
3343,334300,장미,12,"['bruteforcing', 'mathematics', 'number theory']"
3344,334400,N-Queen,18,"['case work', 'constructive']"
3345,334500,괄호,18,['dynamic programming']
3346,334600,꿍 기지국,18,"['binary search', 'data structures', 'geometry', 'stack']"
3347,334700,Peaks,20,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
3348,334800,Fireworks in RightAngleles,21,"['mathematics', 'sorting', 'sweeping']"
3349,334900,Melody,20,[]
3350,335000,Candy Machine,19,"['binary search', 'data structures', 'greedy', 'longest increasing sequence in o(n log n)']"
3351,335100,삼각 분할,20,"['smaller to larger technique', 'tree']"
3352,335200,BEARs,0,[]
3353,335300,Printed Circuit Board,13,"['dynamic programming', 'greedy', 'longest increasing sequence in o(n log n)']"
3354,335400,Matching Bins,17,[]
3355,335500,Candies,19,"['bitmask', 'dynamic programming']"
3356,335600,라디오 전송,17,"['knuth–morris–pratt', 'string']"
3357,335700,Monument,22,"['binary search', 'data structures', 'divide and conquer', 'prefix sum', 'stack']"
3358,335800,Towers of coins,12,"['dynamic programming', 'game theory']"
3359,335900,사각 사각,9,['dynamic programming']
3360,336000,깡총깡총,10,['mathematics']
3361,336100,Handshakes,0,[]
3362,336200,수수께끼,15,"['binary search', 'data structures', 'greedy', 'parametric search', 'priority queue']"
3363,336300,동전,12,['bruteforcing']
3364,336400,Escape,21,"['dual graph', 'maximum flow', 'graph theory', 'max-flow min-cut theorem', 'planar graph']"
3365,336500,Building a Fence,23,"[""dijkstra's"", 'graph theory', 'planar graph']"
3366,336600,수열 줄이기,14,"['data structures', 'greedy']"
3367,336700,Bitwise Expressions,20,"['data structures', 'greedy', 'priority queue']"
3368,336800,Coin Collector,18,['greedy']
3369,336900,Countries,8,"['graph theory', 'implementation']"
3370,337000,City Planning,19,"['binary search', 'mathematics']"
3371,337100,RLE Compression,0,[]
3372,337200,보드 점프,10,"['arbitrary precision / big integers', 'dynamic programming']"
3373,337300,Cards,11,"['greedy', 'sorting']"
3374,337400,Camouflaged camp,0,[]
3375,337500,Magic Parenthesis,0,[]
3376,337600,Maze,0,[]
3377,337700,Ancient Manuscript,0,[]
3378,337800,Bus Trip,0,[]
3379,337900,Polygon,0,[]
3380,338000,Linker,0,[]
3381,338100,Barrel,10,[]
3382,338200,Gems,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
3383,338300,Submarines,25,"['splay tree', 'tree']"
3385,338500,Speed Limits,0,[]
3386,338600,테니스 클럽,0,[]
3387,338700,Calculator Game,10,"['bruteforcing', 'case work', 'mathematics', 'number theory']"
3388,338800,L Game,0,[]
3389,338900,Moving Robots,0,[]
3391,339100,나이트,18,['bipartite matching']
3392,339200,화성 지도,19,"['data structures', 'segment tree', 'sweeping']"
3394,339400,Honeycomb Problem,0,[]
3395,339500,Time Zones,0,[]
3396,339600,Electronical Plate,0,[]
3397,339700,Division Expression,9,"['euclidean algorithm', 'mathematics', 'number theory']"
3398,339800,Stickers,0,[]
3399,339900,Mutexes,13,['backtracking']
3400,340000,Expressions,10,['dynamic programming']
3405,340500,파산하는 왕국,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory']"
3406,340600,Who wants to live forever?,21,"['mathematics', 'string']"
3407,340700,맹세,9,"['bruteforcing', 'dynamic programming', 'graph theory', 'graph traversal', 'string']"
3408,340800,Non-boring sequences,22,"['data structures', 'divide and conquer']"
3409,340900,문자 방정식,21,"['dynamic programming', 'dynamic programming on trees', 'parsing', 'string', 'tree']"
3410,341000,Farm and factory,24,[]
3411,341100,Jewel heist,20,"['data structures', 'persistent segment tree', 'segment tree', 'sweeping']"
3412,341200,Darts,5,"['geometry', 'implementation', 'pythagoras theorem']"
3413,341300,The Dragon and the knights,20,['geometry']
3414,341400,Conservation,15,"['breadth-first search', 'graph theory', 'graph traversal', 'topological sorting']"
3415,341500,Graphic Madness,22,[]
3416,341600,Boring Card Game,0,[]
3417,341700,Vigenère Cipher Encryption,4,"['implementation', 'string']"
3418,341800,Unique Encryption Keys,17,[]
3419,341900,Racing Car Trail,23,"['bipartite matching', 'depth-first search', 'graph theory', 'graph traversal']"
3420,342000,Stack Machine Programmer,19,[]
3421,342100,이상한 규정,24,"['implementation', 'splay tree', 'tree']"
3422,342200,Vigenère Cipher Analysis,0,[]
3423,342300,The Grille,8,['implementation']
3424,342400,Unchanged Picture,25,['geometry']
3425,342500,고스택,13,"['data structures', 'implementation', 'stack']"
3426,342600,Ardenia,24,[]
3427,342700,Beasts,23,[]
3428,342800,Casting Spells,19,"[""manacher's"", 'string']"
3429,342900,방어선,17,"['binary search', 'data structures', 'dynamic programming', 'segment tree']"
3430,343000,용이 산다,15,"['data structures', 'greedy', 'priority queue', 'set / map by trees']"
3431,343100,Fields and Farmers,19,['case work']
3432,343200,Game,5,"['bruteforcing', 'implementation']"
3433,343300,Hanging Hats,21,[]
3434,343400,Insults,18,"['data structures', 'stack', 'string']"
3435,343500,Justice for All,22,"['combinatorics', 'constructive', 'mathematics']"
3436,343600,Strange Billboard,0,[]
3437,343700,Phone Cell,22,"['geometry', 'parametric search']"
3438,343800,Hexagonal Parcels,0,[]
3439,343900,Key Task,0,[]
3440,344000,Gates of Logic,22,"['graph theory', 'graph traversal', 'implementation', 'topological sorting']"
3441,344100,Weird Numbers,0,[]
3442,344200,직각 다각형,16,['geometry']
3443,344300,Reaux! Sham! Beaux!,6,"['data structures', 'set / map by hashing', 'implementation', 'string']"
3444,344400,Robotic Sort,23,"['splay tree', 'tree']"
3445,344500,Tough Water Level,0,[]
3446,344600,Ants,0,[]
3447,344700,버그왕,5,"['parsing', 'regular expression', 'string']"
3448,344800,문자 인식,5,"['implementation', 'string']"
3449,344900,해밍 거리,4,['string']
3450,345000,Desperate Electrician,0,[]
3451,345100,Easy Task,6,['implementation']
3452,345200,Bundling,0,[]
3453,345300,Shortcut,0,[]
3454,345400,Dice Contest,0,[]
3455,345500,November Rain,0,[]
3456,345600,축구공,18,"['ad-hoc', 'euler characteristic (χ=v-e+f)', 'geometry', 'mathematics']"
3457,345700,Which is Next,0,[]
3458,345800,Hang or not to hang,0,[]
3459,345900,Minimizing Maximizer,20,"['data structures', 'dynamic programming', 'segment tree with lazy propagation', 'segment tree']"
3460,346000,이진수,3,"['implementation', 'mathematics']"
3461,346100,Alice and Bob,19,"['dual graph', 'graph theory', 'planar graph']"
3462,346200,이진 스털링 수,14,"['combinatorics', 'mathematics']"
3463,346300,Calendar of Maya,0,[]
3464,346400,Decoding Morse sequences,17,"['data structures', 'dynamic programming', 'tree', 'trie']"
3466,346600,Choir,0,[]
3467,346700,Gates,21,"['binary search', 'constructive']"
3468,346800,Horizontally Visible Segments,0,[]
3469,346900,Simple Arithmetics,9,[]
3470,347000,The Bulk,0,[]
3471,347100,Complete the sequence!,0,[]
3472,347200,Direct Visibility,0,[]
3473,347300,Complicated Expressions,15,"['case work', 'data structures', 'parsing', 'stack', 'string']"
3474,347400,교수가 된 현우,8,"['mathematics', 'number theory']"
3475,347500,The Game of Master-Mind,0,[]
3476,347600,Hotline,22,"['implementation', 'parsing', 'string']"
3477,347700,I-Keyboard,15,[]
3478,347800,Run Away,0,[]
3479,347900,Equipment Box,18,"['geometry', 'mathematics']"
3480,348000,Secret Code,0,[]
3481,348100,The Proper Key,0,[]
3482,348200,Labyrinth,14,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
3483,348300,Piggy-Bank,11,"['dynamic programming', 'knapsack']"
3484,348400,Lifting the Stone,13,[]
3485,348500,Play on Words,0,[]
3486,348600,Adding Reversed Numbers,4,"['arithmetic', 'implementation', 'mathematics']"
3487,348700,Copying Books,16,"['binary search', 'greedy']"
3488,348800,Substitution Cipher,0,[]
3489,348900,Commedia dell' arte,0,[]
3490,349000,Calculating Expressions on Turing Machine,0,[]
3491,349100,Skyscraper Floors,19,"['breadth-first search', 'depth-first search', 'extended euclidean algorithm', 'graph theory', 'graph traversal', 'mathematics', 'number theory']"
3492,349200,Glass Beads,19,"['string', 'suffix array and lcp array']"
3493,349300,Hares and Foxes,0,[]
3494,349400,Invitation Cards,0,[]
3495,349500,아스키 도형,10,"['geometry', 'implementation']"
3496,349600,Binary Encoding,8,['implementation']
3497,349700,Caption,20,[]
3498,349800,사전의 크기,19,[]
3499,349900,미토콘드리아 이브,15,"['data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation', 'tree']"
3500,350000,Flights,0,[]
3501,350100,최대공약수 맞추기 게임,19,"['greedy', 'mathematics']"
3502,350200,Huzita Axiom 6,0,[]
3503,350300,Interactive Permutation Guessing,19,['randomization']
3504,350400,Journey,0,[]
3505,350500,Kingdom Roadmap,19,[]
3506,350600,Lanes,0,[]
3507,350700,Automated Telephone Exchange,3,"['bruteforcing', 'mathematics']"
3508,350800,Black Square,10,['case work']
3509,350900,Cube Coloring,0,[]
3510,351000,Dice,8,"['mathematics', 'probability theory', 'sorting']"
3511,351100,Electrification,0,[]
3512,351200,Flat,3,"['arithmetic', 'implementation', 'mathematics', 'string']"
3513,351300,Galaxy Interconnection,16,"['depth-first search', 'graph theory', 'graph traversal']"
3514,351400,High security,0,[]
3515,351500,Immediate Delivery,24,"['bitmask', 'data structures', ""dijkstra's"", 'graph theory', 'priority queue', 'topological sorting']"
3516,351600,John’s Inversions,16,"['data structures', 'segment tree', 'sorting']"
3517,351700,Kids Like Cakes,0,[]
3518,351800,공백왕 빈-칸,7,"['implementation', 'parsing', 'string']"
3519,351900,계산왕 연산군,0,[]
3520,352000,Cactus Revolution,25,"['cactus', 'depth-first search', 'graph theory', 'graph traversal', 'greedy']"
3521,352100,Dome of Circus,0,[]
3522,352200,Evacuation Plan,13,"['dynamic programming', 'sorting']"
3523,352300,Factorial Simplification,12,['mathematics']
3525,352500,Hands of Poker,18,['implementation']
3526,352600,이상적인 경로,16,"['breadth-first search', 'graph theory', 'graph traversal', 'greedy']"
3527,352700,Jungle Outpost,25,"['binary search', 'geometry', 'half plane intersection', 'parametric search']"
3528,352800,K-Graph Oddity,18,"['depth-first search', 'graph theory', 'graph traversal', 'greedy']"
3529,352900,Alien Communication Masterclass,9,"['ad-hoc', 'constructive', 'mathematics', 'number theory']"
3530,353000,Bug2,0,[]
3531,353100,Commuting Functions,19,['mathematics']
3532,353200,Defense of a Kingdom,7,['sorting']
3533,353300,Explicit Formula,3,"['implementation', 'mathematics']"
3534,353400,Frames,10,"['bruteforcing', 'geometry']"
3535,353500,Gadgets Factory,24,[]
3536,353600,Horrible Truth,0,[]
3537,353700,Ideal Contest,0,[]
3538,353800,Journey,26,[]
3539,353900,Kitchen Robot,0,[]
3540,354000,Asteroids,22,[]
3541,354100,상근타워,10,"['binary search', 'mathematics']"
3542,354200,Database,8,"['data structures', 'string', 'set / map by trees']"
3543,354300,Exclusive Access 2,23,[]
3544,354400,Funny Language,15,"['data structures', 'greedy', 'priority queue', 'string']"
3545,354500,Garbling Game,19,"['arbitrary precision / big integers', 'data structures', 'sparse table']"
3546,354600,Headshot,5,['mathematics']
3547,354700,Inspection,19,"['maximum flow', 'minimum cost maximum flow']"
3548,354800,Java Certification,18,"['dynamic programming', 'knapsack']"
3549,354900,K-equivalence,0,[]
3550,355000,Auxiliary Question of the Universe,9,"['constructive', 'implementation', 'string']"
3551,355100,Bureaucracy,8,"['graph theory', 'implementation', 'topological sorting']"
3552,355200,Circles on a Screen,14,"['geometry', 'mathematics', 'prefix sum']"
3553,355300,Dragon’s Question,6,"['ad-hoc', 'mathematics']"
3554,355400,Enigmatic Device,3,['implementation']
3555,355500,Four Points,20,"['case work', 'geometry']"
3556,355600,Grand Theft Auto Wheel,0,[]
3557,355700,Homo or Hetero?,9,"['data structures', 'set / map by hashing', 'set / map by trees']"
3558,355800,Image Recognition,0,[]
3559,355900,Jealous Numbers,15,"['inclusion and exclusion', 'mathematics', 'number theory']"
3560,356000,Kripke Model,0,[]
3561,356100,Aerodynamics,0,[]
3562,356200,Clock,0,[]
3563,356300,Finding Liars,0,[]
3564,356400,Exclusive Access,0,[]
3565,356500,피보나치 진법,18,"['dynamic programming', 'mathematics']"
3566,356600,대형 스크린,4,"['arithmetic', 'implementation', 'mathematics']"
3567,356700,Hell on the Markets,14,[]
3568,356800,iSharp,8,"['parsing', 'string']"
3569,356900,Javanese Cryptoanalysis,0,[]
3570,357000,KINA Is Not Abbreviation,0,[]
3571,357100,Access Control Lists,0,[]
3572,357200,Billboard,11,[]
3573,357300,Class,0,[]
3574,357400,Deposits,0,[]
3575,357500,Enchanted Mirror,0,[]
3576,357600,Fenwick Tree,14,[]
3577,357700,Ground Works,26,[]
3578,357800,Holes,3,"['greedy', 'implementation', 'string']"
3579,357900,Important Wires,0,[]
3580,358000,Just Too Lucky,0,[]
3581,358100,Key to Success,0,[]
3582,358200,Ants,21,"['convex hull', 'divide and conquer', 'geometry']"
3583,358300,Building for UN,0,[]
3584,358400,가장 가까운 공통 조상,12,"['depth-first search', 'graph theory', 'graph traversal', 'lowest common ancestor', 'tree']"
3585,358500,Diver,0,[]
3586,358600,방정식,17,"['case work', 'data structures', 'implementation', 'mathematics', 'parsing', 'stack', 'string']"
3587,358700,Fund Management,0,[]
3588,358800,Water Main Break,5,['implementation']
3589,358900,Christmas Gifts,22,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
3590,359000,i18n,14,"['case work', 'implementation', 'parsing', 'string']"
3591,359100,Japanese Writing,0,[]
3592,359200,Kingdom Partitioning,0,[]
3593,359300,DFA,19,[]
3594,359400,A+B,13,"['arbitrary precision / big integers', 'mathematics', 'number theory', 'string']"
3595,359500,맥주 냉장고,4,"['bruteforcing', 'mathematics']"
3596,359600,크로스와 크로스,18,"['game theory', 'sprague–grundy theorem']"
3597,359700,Domestic Networks,0,[]
3598,359800,엘리베이터,17,"[""dijkstra's"", 'graph theory']"
3599,359900,Formula,0,[]
3600,360000,Given a string. . .,19,[]
3601,360100,History of Football,0,[]
3602,360200,iChess,4,"['bruteforcing', 'mathematics']"
3603,360300,Journey with Pigs,0,[]
3604,360400,K’ak’-u-pakal and Mayan Script,0,[]
3605,360500,Billing Tables,0,[]
3606,360600,Cellular Automaton,20,"['exponentiation by squaring', 'linear algebra', 'mathematics']"
3607,360700,Driving Directions,0,[]
3608,360800,Exchange,0,[]
3609,360900,Fool’s Game,0,[]
3610,361000,Graveyard,8,['mathematics']
3611,361100,팀의 난이도,24,"['binary search', 'maximum flow', 'max-flow min-cut theorem', 'parametric search']"
3612,361200,Interconnect,0,[]
3613,361300,Java vs C++,8,"['case work', 'implementation', 'parsing', 'string']"
3614,361400,정사각형,13,"['euclidean algorithm', 'mathematics', 'number theory']"
3615,361500,Alphabet,0,[]
3616,361600,Bridges,14,"['dynamic programming', 'dynamic programming on trees', 'tree']"
3617,361700,Confectionery,0,[]
3618,361800,Deciphering,0,[]
3619,361900,Equation,0,[]
3620,362000,Feng Shui,0,[]
3621,362100,족보,10,"['greedy', 'mathematics']"
3622,362200,어떤 호박의 할로윈 여행,4,"['case work', 'geometry', 'mathematics']"
3623,362300,상범이의 액자,0,[]
3624,362400,Japanese Puzzle,0,[]
3625,362500,Kennings,0,[]
3626,362600,Guards,11,"['bruteforcing', 'implementation', 'mathematics']"
3627,362700,Hardwood Cutting,0,[]
3628,362800,Knockdown,0,[]
3629,362900,Astronomy,8,['mathematics']
3630,363000,Bee Garden,0,[]
3631,363100,Cutting a Block,0,[]
3632,363200,Drying,11,"['binary search', 'parametric search']"
3633,363300,Expectation,15,"['linearity of expectation', 'mathematics', 'probability theory', 'statistics']"
3634,363400,Flip and Turn,7,"['ad-hoc', 'implementation']"
3635,363500,Godfather,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
3636,363600,Horn Clauses,14,['greedy']
3637,363700,Inner Vertices,17,"['value / coordinate compression', 'data structures', 'segment tree']"
3638,363800,Jenny's First Exams,0,[]
3639,363900,K Best,13,['binary search']
3640,364000,제독,19,"['maximum flow', 'minimum cost maximum flow']"
3641,364100,호프집 선택,18,"['combinatorics', 'implementation', 'mathematics']"
3642,364200,자전거,0,[]
3643,364300,디지털 시계,17,"['bitmask', 'bruteforcing']"
3644,364400,그래프 매칭,14,"['arbitrary precision / big integers', 'dynamic programming']"
3645,364500,토너먼트 조작,20,[]
3646,364600,경비원,0,[]
3647,364700,흥미로운 집합,0,[]
3648,364800,아이돌,18,"['2-sat', 'graph theory', 'strongly connected component']"
3649,364900,로봇 프로젝트,11,"['binary search', 'sorting', 'two-pointer']"
3650,365000,암호 해독,15,"['data structures', 'set / map by hashing']"
3651,365100,이항계수,15,"['binary search', 'combinatorics', 'mathematics']"
3652,365200,새트리,11,"['mathematics', 'recursion']"
3653,365300,영화 수집,17,"['data structures', 'segment tree']"
3654,365400,L퍼즐,22,"['2-sat', 'graph theory', 'strongly connected component']"
3655,365500,먼저 가세요,10,"['greedy', 'sorting', 'string']"
3656,365600,수영장 만들기,21,"['maximum flow', 'max-flow min-cut theorem']"
3657,365700,총격전,14,"['constructive', 'floyd–warshall', 'graph theory']"
3658,365800,Tichu,10,"['backtracking', 'implementation', 'recursion']"
3659,365900,RFID 추적,19,['geometry']
3660,366000,열차 지연,0,[]
3661,366100,생일 선물,13,"['greedy', 'sorting']"
3662,366200,보석 분배,18,"['data structures', 'dynamic programming', 'greedy', 'priority queue', 'sorting']"
3663,366300,고득점,13,['greedy']
3664,366400,언덕,0,[]
3665,366500,최종 순위,15,"['graph theory', 'topological sorting']"
3666,366600,리스크,21,"['binary search', 'maximum flow', 'parametric search']"
3667,366700,Selling Land,18,"['data structures', 'stack']"
3668,366800,Stock Prices,0,[]
3669,366900,Telephone Network,17,[]
3670,367000,Wormly,0,[]
3671,367100,산업 스파이의 편지,12,"['bruteforcing', 'combinatorics', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
3672,367200,Common Subexpression Elimination,0,[]
3673,367300,나눌 수 있는 부분 수열,13,"['mathematics', 'prefix sum']"
3674,367400,Fractal,0,[]
3675,367500,Mountain Road,0,[]
3676,367600,Moving to Nuremberg,18,"['dynamic programming', 'dynamic programming on trees', 'tree']"
3677,367700,Room Assignments,19,['graph theory']
3678,367800,카탄의 개척자,15,"['implementation', 'simulation']"
3679,367900,단순 다각형,17,"['convex hull', 'geometry', 'sorting']"
3680,368000,Wormholes,0,[]
3681,368100,모빌,15,"['ad-hoc', 'mathematics', 'parsing', 'string']"
3682,368200,동치 증명,18,"['graph theory', 'strongly connected component']"
3683,368300,고양이와 개,19,['bipartite matching']
3684,368400,어려운 문제,8,['bruteforcing']
3685,368500,김강山,24,"['dynamic programming', 'slope trick']"
3686,368600,Sculpture,0,[]
3687,368700,성냥개비,14,"['dynamic programming', 'greedy']"
3688,368800,래프팅 디자인,0,[]
3689,368900,셔플,13,[]
3690,369000,Videopoker,0,[]
3691,369100,컴퓨터 조립,13,"['binary search', 'data structures', 'set / map by hashing']"
3692,369200,펭귄들의 행진,21,['maximum flow']
3693,369300,컨테이너,11,['bruteforcing']
3694,369400,Youth Hostel Dorm,0,[]
3695,369500,Escape from Enemy Territory,13,"['breadth-first search', 'graph theory', 'graph traversal', 'parametric search']"
3696,369600,Flight Safety,24,"['divide and conquer', 'geometry', 'voronoi diagram']"
3697,369700,정상,17,"['breadth-first search', 'graph theory', 'graph traversal']"
3698,369800,애매함,0,[]
3699,369900,주차 빌딩,6,"['implementation', 'mathematics']"
3700,370000,걷기,18,"['geometry', 'point in non-convex polygon check', 'sorting']"
3701,370100,스도쿠 변형,15,"['backtracking', 'bruteforcing', 'implementation']"
3702,370200,The SetStack Computer,14,"['bit set', 'data structures', 'implementation', 'stack']"
3703,370300,Pie,9,"['binary search', 'parametric search']"
3704,370400,Ticket to Ride,0,[]
3705,370500,Lineland’s Airport,0,[]
3706,370600,Leonardo’s Notebook,11,"['permutation cycle decomposition', 'string']"
3707,370700,Unequalled Consumption,0,[]
3708,370800,Declaration of Content,0,[]
3709,370900,레이저빔은 어디로,10,"['graph theory', 'graph traversal', 'implementation', 'simulation']"
3710,371000,Pesky Heroes,0,[]
3711,371100,학번,6,"['bruteforcing', 'mathematics', 'number theory']"
3712,371200,Tantrix,0,[]
3713,371300,당일치기,18,['bipartite matching']
3714,371400,Up the Stairs,0,[]
3715,371500,Secret — MAX,0,[]
3716,371600,Safety Grade,0,[]
3717,371700,Search by template,0,[]
3718,371800,Roots Intervals,0,[]
3719,371900,팰린드롬 날짜,21,"['ad-hoc', 'backtracking', 'bruteforcing', 'case work', 'greedy', 'implementation']"
3720,372000,Choosing a camera,0,[]
3721,372100,Road Planner,0,[]
3722,372200,Term Generator,0,[]
3723,372300,Painting,0,[]
3724,372400,표,6,"['arbitrary precision / big integers', 'bruteforcing']"
3725,372500,Calculator,0,[]
3726,372600,가장 큰 원,0,[]
3727,372700,프로그래밍 대회,0,[]
3728,372800,Control Points,0,[]
3729,372900,Gamers,0,[]
3730,373000,Cosmic Station,0,[]
3731,373100,Game,12,"['dynamic programming', 'graph theory', 'graph traversal']"
3732,373200,Proof Generator,0,[]
3733,373300,Shares,1,"['arithmetic', 'mathematics']"
3734,373400,RSA 인수 분해,17,"['ad-hoc', 'mathematics']"
3735,373500,Hard-working Student,0,[]
3736,373600,System Engineer,18,['bipartite matching']
3737,373700,Cycles of Lanes,18,"['articulation points and bridges', 'biconnected component', 'cactus', 'depth-first search', 'graph theory', 'graph traversal']"
3738,373800,Multiprocessor Scheduling,0,[]
3739,373900,Maze Stretching,0,[]
3740,374000,Software Industry Revolution,0,[]
3741,374100,The Lucky Numbers,0,[]
3742,374200,The Robbery,0,[]
3743,374300,The Computer Game,0,[]
3744,374400,The Bad Number,0,[]
3745,374500,오름세,14,"['binary search', 'longest increasing sequence in o(n log n)']"
3746,374600,Sky Code,19,"['inclusion and exclusion', 'mathematics', 'number theory']"
3747,374700,완벽한 선거!,17,"['2-sat', 'graph theory', 'strongly connected component']"
3748,374800,Lucky cities,21,"['articulation points and bridges', 'biconnected component', 'graph theory']"
3749,374900,Build Your Home,11,"['geometry', 'area of a polygon']"
3750,375000,Quick answer,0,[]
3751,375100,행운의 수,0,[]
3752,375200,최대공약수 행렬식,23,"['euler totient function', 'linear algebra', 'mathematics', 'number theory']"
3753,375300,Internet Service Providers,0,[]
3754,375400,John,18,['game theory']
3755,375500,Double Queue,12,"['data structures', 'priority queue']"
3756,375600,‘JBC’,0,[]
3757,375700,Loan Scheduling,0,[]
3758,375800,KCPC,8,['sorting']
3759,375900,Highway,0,[]
3760,376000,Computers,12,['dynamic programming']
3761,376100,The Stable Marriage Problem,20,"['graph theory', 'parsing', 'stable marriage problem', 'string']"
3762,376200,Arne Saknussemm,0,[]
3763,376300,스도쿠,24,"['backtracking', 'dancing links', ""knuth's x""]"
3764,376400,Products,25,"['a*', 'depth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
3765,376500,Celebrity jeopardy,0,[]
3766,376600,Sherlock Holmes,0,[]
3767,376700,Payment System,0,[]
3768,376800,Stargates,0,[]
3769,376900,최댓값,20,"['greedy', 'mathematics']"
3770,377000,대한민국,16,"['data structures', 'segment tree']"
3771,377100,“Shortest” pair of paths,0,[]
3772,377200,Linear world,0,[]
3773,377300,Songs,0,[]
3774,377400,Tour,0,[]
3777,377700,Computer Transformation,12,"['arbitrary precision / big integers', 'dynamic programming']"
3778,377800,애너그램 거리,4,"['implementation', 'string']"
3779,377900,주기,17,"['knuth–morris–pratt', 'string']"
3780,378000,네트워크 연결,16,"['data structures', 'disjoint set']"
3781,378100,Cave Exploration,0,[]
3782,378200,City Game,13,"['bruteforcing', 'prefix sum']"
3783,378300,세제곱근,16,"['arbitrary precision / big integers', 'binary search', 'mathematics', 'numerical analysis']"
3784,378400,Cable TV Network,0,[]
3785,378500,Alibaba,0,[]
3786,378600,Booklets,0,[]
3787,378700,Count on Canton,6,"['bruteforcing', 'implementation', 'mathematics']"
3788,378800,Delta Encoding and Decoding,0,[]
3789,378900,Hidden Password,19,"['string', 'suffix array and lcp array']"
3790,379000,Crazy tea party,8,[]
3792,379200,Lord of the Ring,0,[]
3793,379300,Common Subsequence,11,['dynamic programming']
3794,379400,Power Network,0,[]
3795,379500,Firefighters,0,[]
3796,379600,Binary Polynomials,0,[]
3797,379700,Cash Machine,0,[]
3798,379800,Beer Land,8,[]
3799,379900,BOAT,0,[]
3800,380000,Art Gallery,0,[]
3801,380100,Game,0,[]
3802,380200,MANAGER,0,[]
3803,380300,Networking,12,"['graph theory', 'minimum spanning tree']"
3804,380400,Sly Number,0,[]
3805,380500,벌집들,0,[]
3806,380600,S를 T로,13,['greedy']
3807,380700,고창영 비밀번호의 비밀,20,"['mathematics', 'number theory']"
3808,380800,ACGU,0,[]
3809,380900,Old School Days,0,[]
3810,381000,Sentry Robots,0,[]
3811,381100,How do spiders walk on water?,0,[]
3812,381200,되팔렘,0,[]
3813,381300,The Moon of Valencia,0,[]
3814,381400,Countdown,0,[]
3825,382500,은행수,11,"['bruteforcing', 'mathematics', 'number theory', 'primality test']"
3826,382600,스타일리시,11,"['bruteforcing', 'implementation', 'string']"
3827,382700,일차원 세포 자동자,16,"['exponentiation by squaring', 'mathematics']"
3828,382800,잘못된 계산,16,"['bruteforcing', 'dynamic programming', 'gaussian elimination', 'linear algebra', 'mathematics']"
3829,382900,Sliding Block Puzzle,23,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal', 'implementation']"
3830,383000,교수님은 기다리지 않는다,18,"['data structures', 'disjoint set']"
3831,383100,Let There Be Light,20,"['bit set', 'geometry', 'geometry; 3d']"
3832,383200,Company Organization,0,[]
3833,383300,아름다운 레이아웃,0,[]
3834,383400,Cubic Colonies,24,[]
3835,383500,Alphabet Soup,21,"[""burnside's lemma"", 'combinatorics', 'knuth–morris–pratt', 'mathematics', 'string']"
3836,383600,Coin Collecting,27,['matroid']
3837,383700,사이버 도넛 범죄 수사,19,"['data structures', 'implementation', 'segment tree', 'sweeping']"
3838,383800,Distributing Ballot Boxes,8,"['binary search', 'implementation']"
3839,383900,"Game, Set and Match",0,[]
3840,384000,Guess the Numbers,0,[]
3841,384100,Non-negative Partial Sums,17,"['data structures', 'deque', 'prefix sum']"
3842,384200,Peer Review,0,[]
3843,384300,볼록 정다각형,15,"['bruteforcing', 'geometry', 'mathematics']"
3844,384400,백준 공화국,15,"['exponentiation by squaring', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
3845,384500,잔디깎기,5,"['sorting', 'sweeping']"
3846,384600,Periodic points,23,"['dynamic programming', 'linear algebra', 'mathematics']"
3847,384700,Comparing answers,19,"['heuristics', 'implementation', 'linear algebra', 'mathematics', 'randomization']"
3848,384800,Fake scoreboard,0,[]
3849,384900,Palindromic DNA,22,"['2-sat', 'data structures', 'disjoint set', 'graph theory', 'strongly connected component']"
3850,385000,Jumping monkey,20,"['breadth-first search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal']"
3851,385100,Sensor network,0,[]
3852,385200,생산 공정,0,[]
3853,385300,자물쇠와 열쇠,0,[]
3854,385400,3-sided dice,15,['geometry']
3855,385500,Trick or Treat,12,"['binary search', 'geometry', 'ternary search']"
3856,385600,Working at the Restaurant,8,"['implementation', 'string']"
3857,385700,전구 게임,0,[]
3858,385800,Darts,21,"['binary search', 'combinatorics', 'dynamic programming', 'game theory', 'mathematics', 'parametric search']"
3859,385900,Genetics,0,[]
3860,386000,할로윈 묘지,16,"['bellman–ford', 'graph theory']"
3861,386100,Slalom,20,"['dynamic programming', 'geometry']"
3862,386200,Routing,0,[]
3863,386300,행복한 전화 통화,5,"['bruteforcing', 'case work', 'implementation']"
3864,386400,Stammering Aliens,19,"['binary search', 'parametric search', 'string', 'suffix array and lcp array']"
3865,386500,학회원,12,"['breadth-first search', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'parsing', 'string']"
3866,386600,풍선 수집,14,"['dynamic programming', 'greedy']"
3867,386700,고속도로 위의 마을,0,[]
3868,386800,Awkward Lights,0,[]
3869,386900,The Two Men of the Japanese Alps,0,[]
3870,387000,Find the Multiples,15,"['value / coordinate compression', 'data structures', 'dynamic programming', 'set / map by hashing', 'mathematics', 'number theory', 'prefix sum', 'set / map by trees']"
3871,387100,Test Case Tweaking,0,[]
3872,387200,Where’s Wally,0,[]
3873,387300,Intersection of Two Prisms,23,"['calculus', 'geometry', 'geometry; 3d', 'implementation', 'mathematics']"
3874,387400,Matrix Calculator,21,"['implementation', 'parsing', 'string']"
3875,387500,Cubist Artwork,11,['greedy']
3876,387600,sed 이용,12,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation', 'simulation', 'string']"
3877,387700,Swimming Jam,0,[]
3878,387800,점 분리,19,"['convex hull', 'geometry', 'line segment intersection check', 'point in convex polygon check']"
3879,387900,Origami Through-Hole,22,[]
3880,388000,화학자의 수학,0,[]
3881,388100,말파티 원,16,"['geometry', 'mathematics']"
3882,388200,스무고개,18,[]
3883,388300,Hobby on Rails,0,[]
3884,388400,Infected Land,0,[]
3885,388500,회색 영역,10,"['implementation', 'mathematics']"
3886,388600,Expected Allowance,9,"['bruteforcing', 'mathematics', 'probability theory']"
3887,388700,Stopped Watches,0,[]
3888,388800,Digits on the Floor,0,[]
3889,388900,구면 거울,16,[]
3890,389000,Traveling Cube,0,[]
3891,389100,키워드 검색,0,[]
3892,389200,Top Spinning,0,[]
3893,389300,공통 다항식,0,[]
3894,389400,지그재그,0,[]
3895,389500,그리고 하나가 남았다,16,"['data structures', 'dynamic programming', 'mathematics', 'number theory', 'segment tree']"
3896,389600,소수 사이 수열,9,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
3897,389700,Minimal Backgammon,13,"['dynamic programming', 'implementation', 'mathematics', 'probability theory']"
3898,389800,Lowest Pyramid,0,[]
3899,389900,도로 지도,0,[]
3900,390000,Slim Span,17,"['data structures', 'disjoint set', 'graph theory', 'minimum spanning tree', 'two-pointer']"
3901,390100,The Morning after Halloween,16,"['breadth-first search', 'graph theory', 'graph traversal']"
3902,390200,Bug Hunt,12,"['data structures', 'set / map by hashing', 'implementation', 'parsing', 'recursion', 'stack', 'string']"
3903,390300,제주도,22,"['binary search', 'geometry', 'half plane intersection']"
3904,390400,The Teacher's Side of Math,22,"['gaussian elimination', 'linear algebra', 'mathematics', 'number theory']"
3905,390500,How I Wonder What You Are!,16,"['geometry', 'geometry; 3d']"
3906,390600,How I Mathematician Wonder What You Are!,22,"['geometry', 'half plane intersection']"
3907,390700,정육면체 8퍼즐,21,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'meet in the middle']"
3908,390800,서로 다른 소수의 합,13,"['dynamic programming', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
3909,390900,맨하탄 배선,0,[]
3910,391000,거듭제곱 계산,13,"['backtracking', 'graph theory', 'graph traversal']"
3911,391100,Polygons on the Grid,0,[]
3912,391200,The Best Name for Your Baby,0,[]
3913,391300,Enjoyable Communication,0,[]
3914,391400,Maximum Sum,12,['dynamic programming']
3915,391500,Book Replacement,0,[]
3916,391600,Colored Cubes,0,[]
3917,391700,Organize Your Train,0,[]
3918,391800,Mobile Computing,11,"['bitmask', 'bruteforcing']"
3919,391900,Atomic Car Race,13,['dynamic programming']
3920,392000,Network Mess,0,[]
3921,392100,Bingo,0,[]
3922,392200,Shy Polygon,21,"['geometry', 'line segment intersection check', 'point in non-convex polygon check']"
3923,392300,저울,9,"['bruteforcing', 'mathematics', 'sorting']"
3924,392400,Make a Sequence,12,"['implementation', 'simulation']"
3925,392500,암호화의 취약점 찾기,8,"['bitmask', 'implementation', 'mathematics']"
3926,392600,Pathological Paths,16,"['implementation', 'parsing', 'string', 'tree']"
3927,392700,Confusing Login Names,0,[]
3928,392800,Dice Puzzle,0,[]
3929,392900,Color the Map,17,[]
3930,393000,Inherit the Spheres,0,[]
3931,393100,Crossing Prisms,0,[]
3932,393200,Unreliable Messengers,9,"['implementation', 'simulation', 'string']"
3933,393300,라그랑주의 네 제곱수 정리,11,"['bruteforcing', 'dynamic programming']"
3934,393400,Area of Polygons,16,"['geometry', 'sorting']"
3935,393500,바람의 신,17,"['data structures', 'dynamic programming', 'set / map by hashing']"
3936,393600,Molecular Formula,15,"['data structures', 'hashing', 'parsing', 'recursion', 'stack', 'string']"
3937,393700,Gap,0,[]
3938,393800,Concert Hall Scheduling,19,"['maximum flow', 'minimum cost maximum flow']"
3939,393900,Monster Trap,0,[]
3943,394300,헤일스톤 수열,4,"['implementation', 'simulation']"
3944,394400,나머지 계산,9,"['mathematics', 'number theory']"
3945,394500,Pen Counts,10,['mathematics']
3946,394600,랜덤 걷기,18,"['dynamic programming', 'mathematics', 'probability theory']"
3947,394700,폴하버의 삼각형,0,[]
3948,394800,홍준이의 친위대,16,"['combinatorics', 'dynamic programming', 'mathematics']"
3949,394900,Mad Veterinarian,0,[]
3950,395000,Windmill Animation,0,[]
3951,395100,Push-To Telescope,0,[]
3952,395200,Mystery,6,['string']
3953,395300,Battleship,0,[]
3954,395400,Brainf**k 인터프리터,15,"['data structures', 'implementation', 'simulation', 'stack']"
3955,395500,캔디 분배,16,"['extended euclidean algorithm', 'mathematics', 'number theory']"
3956,395600,Outsourcing,0,[]
3957,395700,Pizza Hawaii,0,[]
3958,395800,롤러코스터 타기,0,[]
3959,395900,스키 점프,15,"['geometry', 'mathematics', 'physics']"
3960,396000,Suffix Array Re-construction,0,[]
3961,396100,터치스크린 키보드,9,[]
3962,396200,Track Smoothing,0,[]
3963,396300,Treasure Diving,0,[]
3964,396400,팩토리얼과 거듭제곱,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
3965,396500,Genetic Fraud,0,[]
3966,396600,Indiana Jones and the lost Soccer Cup,0,[]
3967,396700,매직 스타,11,"['backtracking', 'implementation']"
3968,396800,Magical Crafting,0,[]
3969,396900,My brother’s diary,0,[]
3970,397000,안전 구역,23,"['convex hull', 'geometry']"
3971,397100,Sightseeing,0,[]
3972,397200,Suiting Weavers,0,[]
3973,397300,Time To Live,13,"['graph theory', 'graph traversal', 'tree']"
3974,397400,Absurd prices,0,[]
3975,397500,Cheating or Not,0,[]
3976,397600,역습,8,['dynamic programming']
3977,397700,축구 전술,17,"['graph theory', 'strongly connected component']"
3978,397800,Hacking,11,"['bruteforcing', 'hashing', 'string']"
3979,397900,Last Minute Constructions,0,[]
3980,398000,선발 명단,11,"['backtracking', 'bruteforcing']"
3981,398100,큐브러버,13,"['calculus', 'linear algebra', 'mathematics']"
3982,398200,Soccer Bets,5,['implementation']
3983,398300,The Two-ball Game,0,[]
3984,398400,To score or not to score,0,[]
3985,398500,롤 케이크,5,"['implementation', 'simulation']"
3986,398600,좋은 단어,7,"['data structures', 'stack']"
3987,398700,보이저 1호,9,"['implementation', 'simulation']"
3988,398800,수 고르기,17,"['data structures', 'deque', 'priority queue', 'sliding window']"
3989,398900,유행성 독감,17,"['exponentiation by squaring', 'mathematics']"
3990,399000,화면 보호기,22,"['data structures', 'mathematics', 'segment tree']"
3991,399100,한번 쏘면 멈출 수 없어,8,"['constructive', 'implementation']"
3992,399200,Caravan Robbers,19,"['convex hull trick', 'parametric search']"
3993,399300,Disjoint Regular Expressions,24,"['0-1 bfs', 'breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal', 'implementation', 'parsing', 'regular expression', 'string']"
3994,399400,Exact Measurement,19,['greedy']
3995,399500,스네이크 큐브,18,"['backtracking', 'implementation']"
3996,399600,위대한 사기꾼,12,[]
3997,399700,하이퍼드롬,15,"['bitmask', 'prefix sum']"
3998,399800,단백질 식별,24,['dynamic programming']
3999,399900,텔레점프,20,"['ad-hoc', 'case work', 'constructive']"
4000,400000,Kingdom Reunion,28,"['case work', 'data structures', 'geometry', 'implementation', 'point in convex polygon check', 'point in non-convex polygon check', 'sweeping', 'set / map by trees']"
4001,400100,미노타우르스 미궁,22,"['binary search', 'dynamic programming', 'graph theory', 'graph traversal', 'prefix sum']"
4002,400200,닌자배치,20,"['data structures', 'priority queue', 'smaller to larger technique', 'tree']"
4003,400300,경비병,22,"['data structures', 'dynamic programming', 'greedy', 'sparse table']"
4004,400400,쿠나이,26,"['data structures', 'implementation', 'priority queue', 'segment tree', 'sweeping']"
4005,400500,테이블 색칠하기,21,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'mathematics']"
4006,400600,경로 찾기,20,"['value / coordinate compression', ""dijkstra's"", 'geometry', 'graph theory', 'sweeping']"
4007,400700,단어 추측 게임,0,[]
4008,400800,특공대,21,"['convex hull trick', 'dynamic programming']"
4009,400900,순찰,24,"['dynamic programming', 'dynamic programming on trees', 'tree']"
4010,401000,신호,22,"['geometry', 'linearity of expectation', 'mathematics', 'probability theory', 'sweeping']"
4011,401100,기름 파기,22,"['mathematics', 'prefix sum']"
4012,401200,컨벤션 센터,22,"['data structures', 'greedy', 'sparse table']"
4013,401300,ATM,19,"['dynamic programming', 'graph theory', 'strongly connected component', 'topological sorting']"
4014,401400,도로,19,"['data structures', 'disjoint set', 'graph theory', 'greedy', 'minimum spanning tree']"
4015,401500,DNA,16,['dynamic programming']
4016,401600,모빌,17,"['ad-hoc', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'greedy', 'tree']"
4017,401700,동물원,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
4018,401800,Babs’ Box Boutique,0,[]
4019,401900,Flash Mob,9,"['mathematics', 'sorting']"
4020,402000,Hexagon Perplexagon,12,"['backtracking', 'implementation']"
4021,402100,I’ve Got Your Back(gammon),0,[]
4022,402200,Parencedence!,0,[]
4023,402300,Road Series,0,[]
4024,402400,Show Me the Money,11,"['graph theory', 'graph traversal', 'implementation', 'mathematics']"
4025,402500,"Sofa, So Good",0,[]
4026,402600,Town Square,0,[]
4027,402700,The Agency,0,[]
4028,402800,Chain of Fools,6,"['bruteforcing', 'implementation', 'mathematics', 'number theory']"
4029,402900,콩도르세 역설,13,"['bruteforcing', 'greedy']"
4030,403000,포켓볼,9,"['binary search', 'mathematics', 'precomputation']"
4031,403100,The Banzhaf Buzz-Of,0,[]
4032,403200,GPS I Love You,0,[]
4033,403300,Have You Driven a Fjord Lately?,0,[]
4034,403400,Mobile,0,[]
4035,403500,Wally World,0,[]
4036,403600,Cut It Out!,0,[]
4037,403700,Flip It!,0,[]
4038,403800,Maze,0,[]
4039,403900,Photo Shoot,0,[]
4040,404000,Polar Bear,18,"['implementation', 'simulation']"
4041,404100,Pro-Test Voting,0,[]
4042,404200,Vampires!,10,['implementation']
4043,404300,"We’ve Got Chemistry, Babe",0,[]
4044,404400,도전 24,14,"['bruteforcing', 'dynamic programming']"
4045,404500,Cover Up,0,[]
4046,404600,Decompressing in a GIF,10,['string']
4047,404700,Flipper,0,[]
4048,404800,The Flood,11,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
4049,404900,행렬의 텐서곱,16,"['euclidean algorithm', 'implementation', 'mathematics', 'number theory']"
4050,405000,Trip the Lights Fantastic,0,[]
4051,405100,Windows,0,[]
4052,405200,Bordering on Madness,0,[]
4053,405300,Jack of All Trades,0,[]
4054,405400,LCR,12,"['implementation', 'simulation']"
4055,405500,파티가 좋아 파티가 좋아,10,"['greedy', 'sorting']"
4056,405600,스-스-스도쿠,12,['backtracking']
4057,405700,Tanks a Lot,0,[]
4058,405800,The Worm Turns,0,[]
4059,405900,You’ll be Working on the Railroad,0,[]
4060,406000,CIVIC DILL MIX,12,"['implementation', 'mathematics', 'string']"
4061,406100,A Foldy but a Goody,0,[]
4062,406200,Give Me an E,15,"['ad-hoc', 'implementation', 'mathematics']"
4063,406300,"Lemmings, Lemmings Everywhere. But Not For Long.",0,[]
4064,406400,Once Around the Lock,13,"['case work', 'implementation']"
4065,406500,A Puzzling Problem,0,[]
4066,406600,"And Now, a Remainder from Our Sponsor",14,"['bruteforcing', 'string']"
4067,406700,Target Practice,0,[]
4068,406800,Caterpillar,12,"['ad-hoc', 'breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
4069,406900,Hie with the Pie,0,[]
4070,407000,"Mahershalalhashbaz, Nebuchadnezzar, and Billy Bob Benjamin Go to the Regionals",5,"['implementation', 'sorting', 'string']"
4071,407100,The Mastermind Master’s Mind,0,[]
4072,407200,Words,4,"['implementation', 'string']"
4073,407300,Stake Your Claim,0,[]
4074,407400,약어,0,[]
4075,407500,Countdown,0,[]
4076,407600,The Game of Efil,11,"['bruteforcing', 'implementation']"
4077,407700,Reliable Nets,16,"['dynamic programming', 'graph theory']"
4078,407800,Square Count,0,[]
4079,407900,Swamp Things,0,[]
4080,408000,Two Ends,15,['dynamic programming']
4081,408100,Sunday Drive,0,[]
4082,408200,Hexagram,0,[]
4083,408300,직사각형 만들기,0,[]
4084,408400,Viva la Diferencia,3,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
4085,408500,Robot Navigation,0,[]
4086,408600,Folding Game,0,[]
4087,408700,Burnout,0,[]
4088,408800,Family Fortune,16,"['dynamic programming', 'recursion', 'tree']"
4089,408900,Moving Points,0,[]
4090,409000,뱀파이어 숫자,12,"['binary search', 'implementation', 'precomputation']"
4091,409100,Balloons,15,"['greedy', 'sorting']"
4092,409200,비트 개수 세기,18,"['bitmask', 'mathematics']"
4093,409300,Data Recovery,0,[]
4094,409400,Equal Angles,0,[]
4095,409500,최대 정사각형,12,['dynamic programming']
4096,409600,팰린드로미터,6,"['bruteforcing', 'string']"
4097,409700,수익,9,['dynamic programming']
4098,409800,Roller Coaster,19,['dynamic programming']
4099,409900,Skyline,13,"['combinatorics', 'mathematics']"
4101,410100,크냐?,1,['implementation']
4104,410400,Block Game,0,[]
4105,410500,유클리드,9,"['geometry', 'mathematics']"
4106,410600,Museum Guards,17,['maximum flow']
4107,410700,Knitting,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
4108,410800,지뢰찾기,6,['implementation']
4109,410900,The Ninja Way,21,"['bellman–ford', 'graph theory']"
4110,411000,당구대,15,['geometry']
4111,411100,Robot Challenge,12,['dynamic programming']
4112,411200,Mosaic,20,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
4113,411300,Series / Parallel Resistor Circuits,0,[]
4114,411400,The Heart of the Country,12,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
4115,411500,Lawrence of Arabia,11,['dynamic programming']
4116,411600,Shoring Up the Levees,0,[]
4117,411700,Combination Lock,4,"['arithmetic', 'implementation', 'mathematics']"
4118,411800,Fred’s Lotto Tickets,4,['implementation']
4119,411900,A No-Win Situation,0,[]
4120,412000,A Walk in the Park,0,[]
4121,412100,Teleport Out!,0,[]
4122,412200,Worms,14,['dynamic programming']
4123,412300,Bridges and Tunnels,12,"[""dijkstra's"", 'graph theory']"
4124,412400,Secret Polynomial,16,"['ad-hoc', 'case work', 'mathematics']"
4125,412500,Room Painting,0,[]
4126,412600,Course Scheduling,0,[]
4127,412700,Tetrahedron Inequality,0,[]
4128,412800,Cookie Crumbs,0,[]
4129,412900,Meganominoes,9,"['ad-hoc', 'data structures', 'set / map by hashing', 'set / map by trees']"
4130,413000,Buying Gas,9,['greedy']
4131,413100,Modulo Solitaire,9,"['breadth-first search', 'graph theory', 'graph traversal']"
4132,413200,Subset Sum,8,['backtracking']
4133,413300,Triangle War,17,"['bitmask', 'dynamic programming', 'game theory', 'implementation', 'mathematics']"
4134,413400,다음 소수,7,"['bruteforcing', 'mathematics', 'number theory', 'primality test']"
4135,413500,How Big Is It?,15,"['bruteforcing', 'geometry', 'mathematics']"
4136,413600,Pousse,6,['implementation']
4137,413700,487-3279,6,"['data structures', 'set / map by hashing', 'implementation', 'sorting', 'string', 'set / map by trees']"
4138,413800,Paper Route,12,"['depth-first search', 'graph theory', 'graph traversal']"
4139,413900,Octagons,11,"['greedy', 'implementation', 'string']"
4140,414000,Party Location,14,['geometry']
4141,414100,Numbersrebmun,4,"['implementation', 'string']"
4142,414200,Class Schedule,16,"['dynamic programming', 'floyd–warshall', 'graph theory']"
4143,414300,Bridges and Tunnels,12,"['data structures', 'disjoint set', 'set / map by hashing', 'string', 'set / map by trees']"
4144,414400,Alien Communicating Machines,5,"['implementation', 'mathematics']"
4145,414500,Geometric Sequence,14,"['case work', 'mathematics']"
4146,414600,Largest Square,13,"['binary search', 'dynamic programming', 'parametric search', 'prefix sum']"
4147,414700,Harmonious Matrices,0,[]
4148,414800,31게임,13,"['data structures', 'dynamic programming', 'game theory', 'set / map by hashing', 'recursion']"
4149,414900,큰 수 소인수분해,21,"['mathematics', 'miller–rabin', 'number theory', 'pollard rho', 'primality test']"
4150,415000,피보나치 수,5,['arbitrary precision / big integers']
4151,415100,Compound Words,13,"['data structures', 'set / map by hashing', 'string', 'tree', 'trie']"
4152,415200,New Horizons,0,[]
4153,415300,직각삼각형,3,"['geometry', 'mathematics', 'pythagoras theorem']"
4154,415400,Buzzwords,6,"['bruteforcing', 'data structures', 'set / map by hashing', 'implementation', 'string']"
4155,415500,Ferry Loading V,0,[]
4156,415600,Driving Range,13,"['data structures', 'disjoint set']"
4157,415700,Frosh Week,16,"['value / coordinate compression', 'data structures', 'segment tree', 'sorting']"
4158,415800,CD,6,"['binary search', 'data structures', 'set / map by hashing', 'two-pointer']"
4159,415900,알래스카,8,"['greedy', 'sorting']"
4160,416000,이혼,16,"['data structures', 'set / map by hashing', 'meet in the middle']"
4161,416100,나이트의 여행,14,[]
4162,416200,Paintball,10,"['geometry', 'graph theory', 'graph traversal', 'implementation']"
4163,416300,Shopping,12,"['bruteforcing', ""dijkstra's"", 'graph theory']"
4164,416400,Stack Machine,0,[]
4165,416500,Ideas,0,[]
4166,416600,HST,7,"['arithmetic', 'data structures', 'set / map by hashing', 'mathematics', 'parsing', 'string']"
4167,416700,Tunnelling the Earth,13,"['geometry', 'geometry; 3d', 'mathematics']"
4168,416800,Rooks,13,['bruteforcing']
4169,416900,Pipes,0,[]
4170,417000,Cantor,12,"['graph theory', 'graph traversal', 'mathematics']"
4171,417100,Meltdown,0,[]
4172,417200,sqrt log sin,8,['dynamic programming']
4173,417300,MC part deux,0,[]
4174,417400,Moveable maze,0,[]
4175,417500,Pick up sticks,13,"['data structures', 'deque', 'graph theory', 'topological sorting']"
4176,417600,Digits,4,"['implementation', 'simulation', 'string']"
4177,417700,Rotate to root,0,[]
4178,417800,Tic Tac Toe,0,[]
4179,417900,불!,12,"['breadth-first search', 'graph theory', 'graph traversal']"
4180,418000,Nice Prefixes,0,[]
4181,418100,Convex Hull,16,"['convex hull', 'geometry', 'sorting']"
4182,418200,Slalom,16,"['binary search', 'parametric search']"
4183,418300,Unique Snowflakes,11,"['data structures', 'set / map by hashing', 'set / map by trees', 'two-pointer']"
4184,418400,Ocean Currents,13,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
4185,418500,Colliding Traffic,0,[]
4186,418600,Zerg Rush!!!,0,[]
4187,418700,Scrolling Sign,0,[]
4188,418800,Cranes,9,"['bitmask', 'bruteforcing', 'geometry', 'pythagoras theorem']"
4189,418900,WiFi,12,['parametric search']
4190,419000,Exact Change,10,['dynamic programming']
4191,419100,Dominos 2,10,"['depth-first search', 'graph theory', 'graph traversal']"
4192,419200,Logo 2,0,[]
4193,419300,Laurel Creek,0,[]
4194,419400,Rocket Stages,0,[]
4195,419500,친구 네트워크,14,"['data structures', 'disjoint set', 'set / map by hashing']"
4196,419600,도미노,17,"['graph theory', 'strongly connected component']"
4197,419700,Logo,5,"['implementation', 'mathematics', 'simulation']"
4198,419800,열차정렬,15,['dynamic programming']
4199,419900,Classified,0,[]
4200,420000,Hot Spot,14,[]
4201,420100,Snakes and Ladders,0,[]
4202,420200,Balance,15,['geometry']
4203,420300,Asteroid Rangers,25,"['graph theory', 'minimum spanning tree']"
4204,420400,Curvy Little Bottles,18,"['binary search', 'calculus', 'mathematics']"
4205,420500,버스기사 승재,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
4206,420600,피보나치 단어,21,"['dynamic programming', 'knuth–morris–pratt', 'string']"
4207,420700,Infiltration,21,"['backtracking', 'bitmask', 'bit set', 'bruteforcing', 'graph theory', 'mathematics']"
4208,420800,열쇠,0,[]
4209,420900,Minimum Cost Flow,24,"['bruteforcing', ""dijkstra's"", 'graph theory', 'implementation']"
4210,421000,로봇 청소기,25,"['dynamic programming', 'geometry']"
4211,421100,금고 회사,24,"['binary search', 'data structures', 'implementation', 'segment tree']"
4212,421200,최단 비행 경로,26,"[""dijkstra's"", 'geometry', 'geometry; 3d', 'graph theory']"
4213,421300,그릇 쌓기,19,"['dynamic programming', 'sorting']"
4214,421400,Takeover Wars,24,['greedy']
4215,421500,비밀 프로젝트,21,[]
4216,421600,Afﬁne Mess,0,[]
4217,421700,신성 문자,14,"['breadth-first search', 'graph theory', 'graph traversal']"
4218,421800,칩 설계,25,"['circulation', 'maximum flow', 'minimum cost maximum flow']"
4219,421900,커피 전문점,18,"['implementation', 'prefix sum']"
4220,422000,Machine Works,22,"['convex hull trick', 'dynamic programming']"
4221,422100,Magic Sticks,24,"['binary search', 'dynamic programming', 'geometry', 'mathematics']"
4222,422200,Mining Your Own Business,22,"['articulation points and bridges', 'biconnected component', 'graph theory']"
4223,422300,Mummy Madness,23,"['binary search', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
4224,422400,피라미드,18,[]
4225,422500,쓰레기 슈트,18,"['convex hull', 'geometry']"
4226,422600,Gangs,12,"['recursion', 'string']"
4227,422700,Smeech,9,"['data structures', 'mathematics', 'parsing', 'probability theory', 'stack', 'string']"
4228,422800,The Dragon of Loowater,10,"['greedy', 'sorting']"
4229,422900,Tournament,0,[]
4230,423000,사랑과 전쟁,18,"['2-sat', 'graph theory', 'strongly connected component']"
4231,423100,Exchange Rates,14,"['dynamic programming', 'mathematics', 'probability theory']"
4232,423200,Conformity,8,"['data structures', 'set / map by hashing', 'sorting']"
4233,423300,가짜소수,11,"['exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'number theory', 'primality test']"
4234,423400,Carpool,0,[]
4235,423500,Friend or Foe?,0,[]
4236,423600,Open Source,7,"['data structures', 'set / map by hashing', 'implementation', 'sorting']"
4237,423700,비 단조성,10,['ad-hoc']
4238,423800,Humidex,6,"['implementation', 'mathematics']"
4239,423900,Tour de France,0,[]
4240,424000,Texas Trip,20,['geometry']
4241,424100,소수 없는 수열,13,"['backtracking', 'implementation', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
4242,424200,Hit or Miss,11,"['implementation', 'simulation']"
4243,424300,보안 업체,18,['dynamic programming']
4244,424400,Roll Playing Games,14,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
4245,424500,Team Rankings,9,"['bruteforcing', 'implementation']"
4246,424600,To and Fro,5,[]
4247,424700,Translations,0,[]
4248,424800,Chat Rooms,11,"['data structures', 'set / map by hashing', 'implementation', 'prefix sum', 'queue', 'string', 'set / map by trees']"
4249,424900,Hermes' Colony,0,[]
4250,425000,EKG Sequence,0,[]
4251,425100,"Water Main Break, Fixed",9,['bruteforcing']
4252,425200,Polly Nomials,0,[]
4253,425300,Pushing Boxes,0,[]
4254,425400,Ball Toss,8,['implementation']
4255,425500,Galactic Breakup,0,[]
4256,425600,트리,14,"['divide and conquer', 'recursion', 'tree']"
4257,425700,프리오더 포스트오더,12,"['combinatorics', 'mathematics', 'tree']"
4258,425800,Knockout Tournament,0,[]
4259,425900,Plugged In,0,[]
4260,426000,One Person “The Price is Right”,12,['dynamic programming']
4261,426100,Slots of Fun,0,[]
4262,426200,Semi-prime H-numbers,12,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
4263,426300,Rectilinear polygon,0,[]
4264,426400,Life Forms,0,[]
4265,426500,Tautology,13,"['bitmask', 'bruteforcing', 'data structures', 'parsing', 'stack', 'string']"
4266,426600,Rinse,0,[]
4267,426700,"The Trip, 2007",8,[]
4268,426800,Mall Mania,0,[]
4269,426900,Moonshine,0,[]
4270,427000,WFF 'N PROOF,0,[]
4271,427100,Cousins,0,[]
4272,427200,Ferry Loading IV,11,"['implementation', 'simulation', 'two-pointer']"
4273,427300,Card Hands,0,[]
4274,427400,Eventually periodic sequence,0,[]
4275,427500,Point of view in Flatland,0,[]
4276,427600,0이 몇 개?,13,['mathematics']
4277,427700,Educational journey,14,['mathematics']
4278,427800,Go,13,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
4279,427900,Medals,6,"['bruteforcing', 'implementation', 'mathematics']"
4280,428000,Flipping colors,0,[]
4281,428100,Crabbles,8,"['bitmask', 'bruteforcing', 'implementation']"
4282,428200,War on Weather,7,['implementation']
4283,428300,Factstone Benchmark,8,['mathematics']
4284,428400,A Walk Through the Forest,16,[]
4285,428500,Prerequisites?,4,['implementation']
4286,428600,So you want to be a 2^n-aire?,15,"['calculus', 'mathematics', 'probability theory']"
4287,428700,Word Ratios,4,"['implementation', 'string']"
4288,428800,Pick-up sticks,0,[]
4289,428900,Rock-Paper-Scissors Tournament,5,"['arithmetic', 'implementation', 'mathematics']"
4290,429000,Structural Equivalence,0,[]
4291,429100,Brownie Points I,5,"['implementation', 'simulation']"
4292,429200,Magic Bitstrings,14,"['mathematics', 'number theory']"
4293,429300,Cutting a polygon,0,[]
4294,429400,Bungee Jumping,13,"['arithmetic', 'implementation', 'mathematics', 'physics']"
4295,429500,Brownie Points II,0,[]
4296,429600,Great Circle,0,[]
4297,429700,Ultra-QuickSort,17,"['value / coordinate compression', 'data structures', 'divide and conquer', 'segment tree', 'sorting']"
4298,429800,Up the Ante,0,[]
4299,429900,AFC 윔블던,3,"['arithmetic', 'mathematics']"
4300,430000,Traditional BINGO,7,"['implementation', 'simulation']"
4301,430100,Practice,0,[]
4302,430200,Help!,0,[]
4303,430300,Treequivalence,0,[]
4304,430400,Antiarithmetic?,9,"['bruteforcing', 'mathematics']"
4305,430500,성격 진단 테스트,17,"['graph theory', 'strongly connected component']"
4306,430600,Map,13,"['case work', 'geometry', 'implementation']"
4307,430700,개미,10,['ad-hoc']
4308,430800,Cat,0,[]
4309,430900,Evil Straw Warts Live,0,[]
4310,431000,Mint,10,"['bruteforcing', 'euclidean algorithm', 'mathematics', 'number theory']"
4311,431100,Expanding Rods,0,[]
4312,431200,3의 제곱,8,"['arbitrary precision / big integers', 'mathematics']"
4313,431300,Work Reduction,0,[]
4314,431400,Grid Speed,0,[]
4315,431500,나무 위의 구슬,15,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
4316,431600,Tango Tango Insurrection,0,[]
4317,431700,Advanced Causal Measurements (ACM),14,"['binary search', 'greedy', 'parametric search']"
4318,431800,A flea on a chessboard,11,"['implementation', 'pigeonhole principle', 'simulation']"
4319,431900,Jack and Jill,0,[]
4320,432000,완전 P제곱수,9,['mathematics']
4321,432100,Calories from Fat,8,[]
4322,432200,Dead Fraction,7,[]
4323,432300,Biometrics,0,[]
4324,432400,XYZZY,0,[]
4325,432500,A Brief Gerrymander,0,[]
4326,432600,Russian Dolls,0,[]
4327,432700,Combination Lock,3,"['implementation', 'mathematics']"
4328,432800,기초 나머지 계산,5,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
4329,432900,Genealogical Research,0,[]
4330,433000,Treasure Map,17,"['geometry', 'mathematics']"
4331,433100,Intellectual Property,0,[]
4332,433200,Persistent Numbers,11,"['greedy', 'mathematics']"
4333,433300,Major Scales,0,[]
4334,433400,Dumb Bones,14,[]
4335,433500,숫자 맞추기,5,['implementation']
4336,433600,Temple of Dune,11,['geometry']
4337,433700,Ferry Loading II,11,[]
4338,433800,Catenyms,0,[]
4339,433900,Basic,0,[]
4340,434000,"Rock, Scissors, Paper",7,"['implementation', 'simulation']"
4341,434100,연립 방정식,18,"['case work', 'implementation', 'mathematics', 'parsing', 'string']"
4342,434200,유클리드 게임,14,"['euclidean algorithm', 'game theory', 'mathematics', 'number theory']"
4343,434300,Arctic Network,13,"['graph theory', 'minimum spanning tree']"
4344,434400,평균은 넘겠지,5,"['arithmetic', 'mathematics']"
4345,434500,Time Zones,8,[]
4346,434600,Trains,0,[]
4347,434700,Tic Tac Toe,10,['bruteforcing']
4348,434800,막대 정사각형,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
4349,434900,Blocks,4,"['bruteforcing', 'geometry', 'implementation', 'mathematics']"
4350,435000,Faucet Flow,0,[]
4351,435100,Hay Points,6,"['data structures', 'set / map by hashing', 'string']"
4352,435200,Jogging Trails,0,[]
4353,435300,Beavergnaw,7,"['geometry', 'geometry; 3d', 'mathematics']"
4354,435400,문자열 제곱,16,"['knuth–morris–pratt', 'string']"
4355,435500,서로소,15,"['euler totient function', 'mathematics', 'number theory']"
4356,435600,Return of the Jedi,0,[]
4357,435700,이산 로그,20,"['discrete logarithm', ""fermat's little theorem"", 'mathematics', 'meet in the middle', 'number theory']"
4358,435800,생태학,9,"['data structures', 'set / map by hashing', 'string', 'set / map by trees']"
4359,435900,Forests,6,['implementation']
4360,436000,A Star not a Tree?,18,"['geometry', 'gradient descent']"
4361,436100,Adventures in Moving - Part IV,12,['dynamic programming']
4362,436200,Pairsumonious Numbers,19,[]
4363,436300,Snow Clearing,7,"['geometry', 'mathematics']"
4364,436400,Adventures in Moving - Part V,0,[]
4365,436500,Stack 'em Up,5,['implementation']
4366,436600,Average Speed,5,"['implementation', 'mathematics', 'parsing', 'string']"
4367,436700,Subway,0,[]
4368,436800,Babelfish,7,"['data structures', 'set / map by hashing', 'string']"
4369,436900,Bounding box,0,[]
4370,437000,곱셈 게임,11,['game theory']
4371,437100,No Tipping,0,[]
4372,437200,Subway,13,['mathematics']
4373,437300,수집합,15,"['binary search', 'two-pointer']"
4374,437400,지프의 법칙,9,"['data structures', 'set / map by hashing', 'parsing', 'string']"
4375,437500,1,8,"['bruteforcing', 'mathematics', 'number theory']"
4376,437600,Gopher II,17,"['bipartite matching', 'geometry']"
4377,437700,Tight words,10,['dynamic programming']
4378,437800,트ㅏㅊ;,6,"['ad-hoc', 'implementation', 'string']"
4379,437900,나누기,11,"['arbitrary precision / big integers', 'mathematics']"
4380,438000,Hotter Colder,0,[]
4381,438100,Bridge,19,"['constructive', 'greedy']"
4382,438200,Saskatchewan,0,[]
4383,438300,점프는 즐거워,6,['implementation']
4384,438400,공평하게 팀 나누기,16,"['dynamic programming', 'knapsack']"
4385,438500,Interpreter,12,"['implementation', 'simulation']"
4386,438600,별자리 만들기,13,"['graph theory', 'minimum spanning tree']"
4387,438700,Language Cardinality,13,"['backtracking', 'parsing', 'recursion', 'string']"
4388,438800,받아올림,4,"['arithmetic', 'implementation', 'mathematics']"
4389,438900,Demerit Points,7,"['implementation', 'simulation']"
4390,439000,Edit Step Ladders,0,[]
4391,439100,Y2K Accounting Bug,7,[]
4392,439200,Airline Hub,11,['geometry']
4393,439300,Snakes,0,[]
4394,439400,Snap,0,[]
4395,439500,Steps,11,['mathematics']
4396,439600,지뢰 찾기,7,"['implementation', 'parsing', 'string']"
4397,439700,Choose and divide,10,"['arbitrary precision / big integers', 'mathematics']"
4398,439800,Old Wine Into New Bottles,0,[]
4399,439900,끝인드롬,14,"['bruteforcing', 'implementation', 'string']"
4400,440000,Origami,0,[]
4401,440100,Fire Station,0,[]
4402,440200,Soundex,5,"['implementation', 'string']"
4403,440300,Ferry Loading,15,['dynamic programming']
4404,440400,Dog & Gopher,0,[]
4405,440500,Gas Station Numbers,10,"['combinatorics', 'mathematics']"
4406,440600,Billiard,7,"['arithmetic', 'geometry', 'mathematics', 'physics']"
4407,440700,The Brick Stops Here,12,"['dynamic programming', 'knapsack']"
4408,440800,Election,8,"['data structures', 'set / map by hashing', 'sorting']"
4409,440900,Maze,0,[]
4410,441000,Boastin' Red Socks,10,[]
4411,441100,The Trip,7,"['arithmetic', 'greedy', 'mathematics', 'sorting']"
4412,441200,Doublets,13,"[""dijkstra's"", 'graph theory', 'string']"
4413,441300,CDVII,0,[]
4414,441400,Factovisors,11,['mathematics']
4415,441500,Spaghetti,0,[]
4416,441600,Prime Distance,12,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
4417,441700,Yahtzee,20,"['backtracking', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'implementation']"
4418,441800,Request for Proposal,6,['implementation']
4419,441900,Australian Voting,11,"['implementation', 'simulation']"
4420,442000,Chocolate Chip Cookies,13,"['bruteforcing', 'geometry']"
4421,442100,Hippity Hopscotch,8,['dynamic programming']
4422,442200,Crypt Kicker II,11,"['data structures', 'set / map by hashing', 'string']"
4423,442300,Watching Watches,7,['mathematics']
4424,442400,Polylops,12,"['ad-hoc', 'geometry', 'implementation']"
4425,442500,Crypt Kicker,0,[]
4426,442600,Dick and Jane,6,"['case work', 'mathematics']"
4427,442700,Leaps Tall Buildings (in a single bound),10,"['mathematics', 'physics']"
4428,442800,Contest Scoreboard,8,"['data structures', 'set / map by hashing', 'sorting']"
4429,442900,Poker Hands,10,"['bitmask', 'case work', 'implementation']"
4430,443000,Is Bigger Smarter?,12,"['dynamic programming', 'sorting']"
4435,443500,중간계 전쟁,3,"['arithmetic', 'implementation', 'mathematics']"
4436,443600,엘프의 검,4,"['bruteforcing', 'mathematics']"
4437,443700,Painted Cube,21,"['breadth-first search', 'graph theory', 'graph traversal']"
4438,443800,팡고른 숲,17,"['sorting', 'sweeping']"
4439,443900,Rings and Runes,13,"['bitmask', 'bruteforcing']"
4440,444000,Ritual Circle,0,[]
4441,444100,Saruman’s Level Up,11,"['mathematics', 'number theory']"
4442,444200,빌보의 생일,16,"['data structures', 'segment tree']"
4443,444300,Spellcasting,0,[]
4444,444400,Temple Build,16,['dynamic programming']
4445,444500,Tile Cut,17,['maximum flow']
4446,444600,ROT13,6,"['implementation', 'string']"
4447,444700,좋은놈 나쁜놈,4,"['implementation', 'string']"
4448,444800,Bracelets,20,"['dynamic programming', 'string']"
4449,444900,A Classic Myth: Flatland Superhero,0,[]
4450,445000,Collateral Cleanup,0,[]
4451,445100,LatticeLand,18,"['breadth-first search', 'geometry', 'graph theory', 'graph traversal']"
4452,445200,Lightning Lessons,8,"['implementation', 'simulation']"
4453,445300,Locksmith,0,[]
4454,445400,상근이의 여자친구,9,['binary search']
4455,445500,The Status is Not Quo,11,['implementation']
4456,445600,Stupendous Man,27,['mathematics']
4457,445700,상근이의 자물쇠,13,['dynamic programming']
4458,445800,첫 글자를 대문자로,3,"['implementation', 'string']"
4459,445900,Always Follow the Rules in Zombieland,3,"['implementation', 'string']"
4461,446100,뱀파이어 김상근 백작,12,"['binary search', 'bruteforcing', 'mathematics']"
4462,446200,Zombie Swallows,0,[]
4463,446300,피보나치 수 분석,18,"['implementation', 'mathematics', 'number theory', 'pollard rho', 'precomputation', 'primality test']"
4464,446400,Pride and Prejudice and Zombies,21,[]
4465,446500,Tales from DeCrypt,0,[]
4466,446600,A Smart Brain is a Tasty Brain,6,"['data structures', 'implementation', 'parsing', 'stack', 'string']"
4467,446700,Building Zombie Fences,25,"['dynamic programming', 'dynamic programming using connection profile']"
4468,446800,Save the Python Programmers!,0,[]
4469,446900,Zombie Blast!,21,['dynamic programming']
4470,447000,줄번호,2,"['implementation', 'string']"
4471,447100,The Navi-Computer is Down!,4,"['geometry', 'geometry; 3d', 'mathematics', 'string']"
4472,447200,Blenjeel Sand Worms and Color Wriggles,0,[]
4473,447300,This Can’t Go On Forever,0,[]
4474,447400,Rescue Beacon,0,[]
4475,447500,Let the Wookiee Win!,0,[]
4476,447600,Laser Turret Maintenance,6,['implementation']
4477,447700,George Lucas and 1138,0,[]
4478,447800,Spare the Ewoks!,22,[]
4479,447900,The History of the Sith Rulers,0,[]
4480,448000,Laser Shot,16,"['bruteforcing', 'euclidean algorithm', 'geometry', 'mathematics', 'number theory']"
4481,448100,Power Grid,0,[]
4482,448200,Tetrahedral Stacks of Cannonballs,4,['mathematics']
4483,448300,“Robot Roll Call – Cambot...Servo...Gypsy...Croooow”,5,"['implementation', 'string']"
4484,448400,Cave Crisis,0,[]
4485,448500,녹색 옷 입은 애가 젤다지?,12,"[""dijkstra's"", 'graph theory']"
4486,448600,Pencils from the 19th Century,4,"['bruteforcing', 'implementation', 'mathematics']"
4487,448700,Optimal Strategy for the ICPC,0,[]
4488,448800,Symbolic Logic Mechanization,17,"['bruteforcing', 'case work', 'data structures', 'implementation', 'parsing', 'stack', 'string']"
4489,448900,Repair Depots,0,[]
4490,449000,Crazy Circuits,0,[]
4491,449100,PropBot,0,[]
4492,449200,“Ancient” Calculator,8,"['bruteforcing', 'implementation']"
4493,449300,가위 바위 보?,3,['implementation']
4494,449400,Missile Command,19,"['bitmask', 'bruteforcing', 'case work', 'mathematics', 'physics']"
4495,449500,Palindromic Primes Category in Jeopardy!,0,[]
4496,449600,Pebbles,0,[]
4497,449700,Rubik’s Cube®,0,[]
4498,449800,Geek Challenge [SKRZAT] (Base Minus Two),9,"['mathematics', 'number theory']"
4499,449900,Frogger,12,"[""dijkstra's"", 'graph theory']"
4500,450000,"“Bubble Gum, Bubble Gum, in the dish, how many pieces do you wish?”",4,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
4501,450100,Games R Us,0,[]
4502,450200,Cover Up,0,[]
4503,450300,구슬,17,"['0-1 bfs', 'bitmask', ""dijkstra's"", 'graph theory']"
4504,450400,배수 찾기,3,"['arithmetic', 'mathematics']"
4505,450500,Car Racing,0,[]
4506,450600,All Your Base,0,[]
4507,450700,단어와 주기율표,0,[]
4508,450800,This is Halloween: Saving Money,0,[]
4509,450900,Coffin Tiles,7,"['mathematics', 'number theory']"
4510,451000,Thinking Inside the Box,0,[]
4511,451100,Lightbulb Testing,0,[]
4512,451200,Operation: Merchant Boorinei,0,[]
4513,451300,The Neptune Adventure,14,"[""dijkstra's"", 'graph theory']"
4514,451400,Phil In the Blanks,0,[]
4515,451500,"Honeycomb, Honeycomb, Me Want Honeycomb!",0,[]
4516,451600,YO!,0,[]
4517,451700,Barcode of Judgment,0,[]
4518,451800,Frenemies,0,[]
4519,451900,Know When to Hold Them,0,[]
4520,452000,I'm Attacking the Darkness!,12,"['bruteforcing', 'parsing', 'string']"
4521,452100,Rank and File,0,[]
4522,452200,The Extent of the Problem,0,[]
4523,452300,Filtration,0,[]
4524,452400,Like Water for Clay,0,[]
4525,452500,Wandering Aimlessly,0,[]
4526,452600,Cables ... in Spaaace!,0,[]
4527,452700,Patterns and Pictures,0,[]
4528,452800,No Wormholes Were Harmed...,0,[]
4529,452900,Tribute (Editor),0,[]
4530,453000,1은 흥미로운 숫자,10,"['implementation', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
4531,453100,Verdis Quo,10,['implementation']
4532,453200,The Screen Behind the Mirror,0,[]
4533,453300,Another Brick in the Wall,0,[]
4534,453400,The Sidewinder Sleeps Tonite,11,"['graph theory', 'graph traversal', 'implementation']"
4535,453500,Rout 66,0,[]
4536,453600,Schottkey 7th Path,0,[]
4537,453700,Another Version of the Truth,0,[]
4538,453800,The Final Countdown,11,[]
4539,453900,반올림,5,"['arithmetic', 'implementation', 'mathematics']"
4540,454000,Q,6,['implementation']
4541,454100,Enigmatologically Cruciverbalistic,0,[]
4542,454200,Blue Jeans,6,"['bruteforcing', 'string']"
4543,454300,Core Wars,0,[]
4544,454400,'Roid Rage,0,[]
4545,454500,Children of the Candy Corn,0,[]
4546,454600,Panic Room,0,[]
4547,454700,Plinko,0,[]
4548,454800,Defining Moment,7,[]
4549,454900,Jetpack Sniper 3000 Fragfest Extreme,0,[]
4550,455000,Pegs,13,"['data structures', 'dynamic programming']"
4551,455100,Janken Tactics,0,[]
4552,455200,Bingo!,9,['bruteforcing']
4553,455300,Artificial Strife,0,[]
4554,455400,It's My Derivative,13,"['implementation', 'mathematics', 'parsing', 'string']"
4555,455500,MisLED,18,"['ad-hoc', 'bitmask', 'case work']"
4556,455600,Relative Relatives,9,"['data structures', 'graph theory', 'set / map by hashing', 'sorting']"
4557,455700,Syntax Included,13,"['data structures', 'parsing', 'regular expression', 'stack', 'string']"
4558,455800,Choose Your Own Adventure,0,[]
4559,455900,Know When to Hold 'em,0,[]
4560,456000,Cubic Rube,19,"['bruteforcing', 'implementation']"
4561,456100,As the Crow Flies,13,['graph theory']
4562,456200,No Brainer,3,['implementation']
4563,456300,리벤지 오브 피타고라스,11,"['mathematics', 'number theory']"
4564,456400,숫자 카드놀이,4,['implementation']
4565,456500,Any Way You Slice It,0,[]
4566,456600,Is the Name of This Problem,5,"['implementation', 'parsing', 'string']"
4567,456700,The Mark of a Wizard,0,[]
4568,456800,LRU Caching,11,"['data structures', 'string']"
4569,456900,Jugglefest,6,"['implementation', 'simulation']"
4570,457000,Bounce,0,[]
4571,457100,Grade School Multiplication,8,[]
4572,457200,Laser Tag,0,[]
4573,457300,Pizza Pricing,6,['implementation']
4574,457400,스도미노쿠,15,"['backtracking', 'implementation']"
4575,457500,Refrigerator Magnets,4,"['data structures', 'set / map by hashing', 'string']"
4576,457600,Shut the Box,0,[]
4577,457700,소코반,13,"['implementation', 'simulation']"
4578,457800,Crash and Go(relians),0,[]
4579,457900,Judges' Time Calculation,0,[]
4580,458000,Mad Scientist,4,"['implementation', 'prefix sum']"
4581,458100,Voting,4,"['implementation', 'string']"
4582,458200,Queen Collisions,8,['implementation']
4583,458300,거울상,4,"['implementation', 'string']"
4584,458400,Top This,0,[]
4585,458500,Quick Search,0,[]
4586,458600,Image Compression,10,['divide and conquer']
4587,458700,이집트 분수,10,"['bruteforcing', 'euclidean algorithm', 'implementation', 'mathematics', 'number theory', 'simulation']"
4588,458800,Up and Down,0,[]
4589,458900,Gnome Sequencing,2,['implementation']
4590,459000,DuLL,0,[]
4591,459100,Black Vienna,0,[]
4592,459200,중복을 없애자,4,['implementation']
4593,459300,"Rock, Paper, Scissors",4,"['implementation', 'string']"
4594,459400,A to Z Numerals,0,[]
4595,459500,Cell Towers,0,[]
4596,459600,RIPOFF,11,['dynamic programming']
4597,459700,패리티,4,"['implementation', 'string']"
4598,459800,Lampyridae Teleportae,6,"['geometry', 'implementation', 'simulation']"
4599,459900,Hex Tile Equations,0,[]
4600,460000,정글의 법칙,9,['implementation']
4601,460100,Bulletin Board,0,[]
4602,460200,Serial Numbers,16,"['bruteforcing', 'case work', 'implementation', 'simulation']"
4603,460300,Line & Circle Maze,18,"['floyd–warshall', 'geometry', 'graph theory', 'implementation']"
4604,460400,Steganography,6,"['bitmask', 'implementation', 'parsing', 'string']"
4605,460500,Typesetting,0,[]
4606,460600,The Seven Percent Solution,4,"['implementation', 'string']"
4607,460700,Slink,22,['implementation']
4608,460800,Persistent Bits,8,"['bitmask', 'implementation']"
4609,460900,Here We Go(relians) Again,11,"[""dijkstra's"", 'graph theory', 'parsing', 'string']"
4610,461000,Electronic Document Security,0,[]
4611,461100,Guard,0,[]
4612,461200,Rock Skipping,8,['bruteforcing']
4613,461300,Quicksum,4,"['implementation', 'string']"
4614,461400,Linear Pachinko,8,"['implementation', 'mathematics', 'probability theory', 'simulation']"
4615,461500,Power cables to sewer pipes,0,[]
4616,461600,Falling Ice,0,[]
4617,461700,Frugal Search,0,[]
4618,461800,Go Go Gorelians,12,"['breadth-first search', 'bruteforcing', 'depth-first search', 'geometry', 'geometry; 3d', 'graph theory', 'graph traversal', 'tree']"
4619,461900,루트,3,"['bruteforcing', 'mathematics']"
4620,462000,Pascal's Travels,9,['dynamic programming']
4621,462100,Overflowing Bookshelf,0,[]
4622,462200,Connect,0,[]
4623,462300,Copier Reduction,3,"['arithmetic', 'mathematics']"
4624,462400,Time to Graduate,0,[]
4625,462500,Painter,11,"['data structures', 'greedy', 'implementation', 'priority queue', 'simulation']"
4626,462600,가글,9,"['mathematics', 'number theory']"
4627,462700,뛰어라 도마뱀,18,['maximum flow']
4628,462800,Netiquette,7,"['implementation', 'string']"
4629,462900,Get Them All,0,[]
4630,463000,Triangle Cuts,0,[]
4631,463100,Symmetric Order,5,"['implementation', 'string']"
4632,463200,Flow Layout,9,"['implementation', 'simulation']"
4633,463300,Permutation Code,0,[]
4634,463400,Ink Blots,0,[]
4635,463500,Speed Limit,3,"['arithmetic', 'implementation', 'mathematics']"
4636,463600,Clay Bully,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
4637,463700,Robots,12,['greedy']
4638,463800,Bright Bracelet,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
4639,463900,Treadmill,9,"['implementation', 'simulation']"
4640,464000,Data Mining?,12,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
4641,464100,Doubles,5,"['bruteforcing', 'implementation']"
4642,464200,Fax Regions,21,"['case work', 'data structures', 'disjoint set', 'dynamic programming', 'dynamic programming using connection profile', 'queue']"
4643,464300,Tournament Brackets,17,"['greedy', 'implementation']"
4644,464400,"Programmer, Rank Thyself",8,"['implementation', 'mathematics', 'sorting']"
4645,464500,힐베르트 곡선,18,"['divide and conquer', 'dynamic programming', 'recursion']"
4646,464600,Magnificent Meatballs,4,"['implementation', 'mathematics']"
4647,464700,Safecracker,6,['bruteforcing']
4648,464800,Oil Pipeline,13,"['bruteforcing', 'implementation']"
4649,464900,Tanning Salon,6,"['bitmask', 'data structures', 'set / map by hashing', 'implementation', 'simulation']"
4650,465000,Jungle Roads,12,"['graph theory', 'minimum spanning tree']"
4651,465100,Transmitters,12,"['bruteforcing', 'geometry']"
4652,465200,W's Cipher,9,"['implementation', 'string']"
4653,465300,Split Windows,14,"['implementation', 'recursion', 'tree']"
4654,465400,Index Generation,15,"['implementation', 'parsing', 'sorting', 'string']"
4655,465500,Hangover,3,['mathematics']
4656,465600,Double Vision,10,"['bruteforcing', 'implementation', 'string']"
4657,465700,Image Perimeters,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
4658,465800,삼각형 게임,11,"['backtracking', 'bruteforcing']"
4659,465900,비밀번호 발음하기,6,"['implementation', 'string']"
4660,466000,Colorville,8,"['implementation', 'simulation']"
4661,466100,Falling Leaves,10,"['implementation', 'tree']"
4662,466200,Edge Detection,16,"['binary search', 'data structures', 'greedy', 'set / map by hashing', 'implementation']"
4663,466300,Instruens Fabulam,14,"['implementation', 'parsing', 'string']"
4664,466400,Find the Winning Move,15,"['data structures', 'dynamic programming', 'game theory', 'set / map by hashing']"
4665,466500,Myacm Triangles,13,"['bruteforcing', 'geometry', 'point in convex polygon check', 'area of a polygon']"
4666,466600,Exchange Rates,15,"['breadth-first search', 'depth-first search', 'euclidean algorithm', 'graph theory', 'graph traversal', 'mathematics', 'number theory']"
4667,466700,Loansome Car Buyer,9,"['implementation', 'mathematics', 'simulation']"
4668,466800,Automatic Editing,8,"['implementation', 'string']"
4669,466900,Robot Motion,10,"['implementation', 'simulation']"
4670,467000,Booklet Printing,6,['implementation']
4671,467100,Finding Rectangles,13,"['bruteforcing', 'geometry']"
4672,467200,Don't Get Rooked,11,"['backtracking', 'breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
4673,467300,셀프 넘버,6,"['bruteforcing', 'implementation', 'mathematics']"
4674,467400,Do the Untwist,7,"['bruteforcing', 'mathematics', 'string']"
4675,467500,Word Amalgamation,5,"['bruteforcing', 'data structures', 'sorting', 'string', 'set / map by trees']"
4676,467600,Haiku Review,7,"['implementation', 'string']"
4677,467700,Oil Deposits,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
4678,467800,Skew Binary,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
4679,467900,The Snail,6,"['implementation', 'simulation']"
4680,468000,Sum It Up,9,"['backtracking', 'bruteforcing']"
4681,468100,WIMP,18,"['implementation', 'simulation']"
4682,468200,Polynomial Showdown,5,"['case work', 'implementation']"
4683,468300,The Doors,15,"['bruteforcing', ""dijkstra's"", 'dynamic programming', 'geometry', 'graph theory', 'implementation']"
4684,468400,Mapmaker,11,"['data structures', 'set / map by hashing', 'implementation', 'mathematics']"
4685,468500,Board Silly,0,[]
4686,468600,Equation Elation,12,"['implementation', 'mathematics', 'parsing', 'string']"
4687,468700,Wheeler Caravans,10,"['implementation', 'mathematics']"
4688,468800,Another Puzzling Problem,12,"['backtracking', 'implementation']"
4689,468900,Basically Speaking,6,[]
4690,469000,완전 세제곱,3,"['bruteforcing', 'implementation', 'mathematics', 'precomputation']"
4691,469100,DNA Translation,10,"['bruteforcing', 'implementation', 'precomputation', 'string']"
4692,469200,Galactic Import,11,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'mathematics']"
4693,469300,Mark-up,11,"['implementation', 'parsing', 'string']"
4694,469400,A Puzzling Problem,12,"['backtracking', 'bruteforcing', 'implementation']"
4695,469500,Letter Sequence Analysis,8,"['data structures', 'implementation', 'sorting', 'string', 'set / map by trees']"
4696,469600,St. Ives,2,"['arithmetic', 'mathematics']"
4697,469700,Fifty Coats of Gray,5,"['arithmetic', 'geometry', 'geometry; 3d', 'implementation', 'mathematics']"
4698,469800,부품 테스트,0,[]
4699,469900,Collision Detection,0,[]
4700,470000,Dueling Philosophers Problem,14,[]
4701,470100,Party Games,18,[]
4702,470200,Funhouse,0,[]
4703,470300,그림의 추측,19,"['constructive', 'mathematics', 'number theory']"
4704,470400,Tsunami,0,[]
4705,470500,Roaming Romans,4,[]
4706,470600,쌍둥이 역설,3,"['arithmetic', 'mathematics']"
4707,470700,"Raggedy, Raggedy",0,[]
4708,470800,AAAA,5,[]
4709,470900,Thunk and Plunk,0,[]
4710,471000,Losers Are Winners,0,[]
4711,471100,Line of Sight,0,[]
4712,471200,Stained Glass,0,[]
4713,471300,Road Rally,0,[]
4714,471400,Lunacy,2,"['arithmetic', 'implementation', 'mathematics']"
4715,471500,Two Mountaineers,0,[]
4716,471600,풍선,15,"['greedy', 'sorting']"
4717,471700,Selling Cells,0,[]
4718,471800,Not One Bit More,18,"['bitmask', 'dynamic programming', 'mathematics']"
4719,471900,Abstract Extract,0,[]
4720,472000,Roller Coaster,0,[]
4721,472100,Spy Cam,0,[]
4722,472200,Underground Cables,13,"['graph theory', 'minimum spanning tree']"
4723,472300,Parlay Wagering,0,[]
4724,472400,Extended Manhattan Distance,0,[]
4725,472500,Stringer,0,[]
4726,472600,Word ladder,0,[]
4727,472700,Close Enough Computations,4,['mathematics']
4728,472800,I-Soar,0,[]
4729,472900,"Trie, Again Trie",0,[]
4730,473000,Stems Sell,0,[]
4731,473100,Signal Strength,0,[]
4732,473200,조옮김,5,['implementation']
4733,473300,Mobiles Alabama,0,[]
4734,473400,Out of Sight,0,[]
4735,473500,Witness Redaction Plan,0,[]
4736,473600,Safety in Alchemy,0,[]
4737,473700,Potholes,0,[]
4738,473800,Bulls and Cows,0,[]
4739,473900,The Turn of the Shrew,0,[]
4740,474000,"거울, 오! 거울",3,"['implementation', 'string']"
4741,474100,Enigmatic Travel,0,[]
4742,474200,Crosswords Insider,0,[]
4743,474300,Doors and Penguins,0,[]
4744,474400,Gypsy Moths,0,[]
4745,474500,Marbles in Three Baskets,0,[]
4746,474600,Generic Units Conversion,0,[]
4747,474700,Zoned Out,0,[]
4748,474800,Shrew-ology,0,[]
4749,474900,Take Your Vitamins,5,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
4751,475100,Extrusion,0,[]
4752,475200,HTML 에디터,16,"['parsing', 'string']"
4753,475300,Mobiles,0,[]
4754,475400,Context-Free Clock,0,[]
4755,475500,Right-Hand Rule,0,[]
4756,475600,WordStack,0,[]
4757,475700,A Contesting Decision,4,"['implementation', 'simulation', 'string']"
4758,475800,Filling Out the Team,3,['implementation']
4759,475900,Auctions R Us,0,[]
4760,476000,GHOST,0,[]
4761,476100,Doggone Moles,0,[]
4762,476200,Line of Sight,13,['geometry']
4763,476300,Tangled in Cables,12,"['graph theory', 'minimum spanning tree']"
4764,476400,"All Roads Lead to Albuquerque, er, Rome",0,[]
4765,476500,Balanced Budget Initiative,0,[]
4766,476600,일반 화학 실험,3,"['arithmetic', 'mathematics']"
4771,477100,아름다운 삼각형,0,[]
4773,477300,Reverse Roman Notation,0,[]
4774,477400,Financial Management,7,[]
4775,477500,Spelling Be,6,"['data structures', 'set / map by hashing', 'string', 'set / map by trees']"
4776,477600,Apply a Cold Compress,0,[]
4777,477700,A Baron Landscape,0,[]
4778,477800,In Defence of a Garden,0,[]
4779,477900,칸토어 집합,8,"['divide and conquer', 'recursion']"
4780,478000,Chambers Ceramic Conundrum,0,[]
4781,478100,사탕 가게,12,"['dynamic programming', 'knapsack']"
4782,478200,분수 뺄셈,14,"['euclidean algorithm', 'mathematics', 'number theory']"
4784,478400,Unhappy Numbers,19,['dynamic programming']
4785,478500,Walls,0,[]
4786,478600,CosmoCraft,27,['greedy']
4787,478700,Covered Walkway,0,[]
4788,478800,Double Dealing,15,"['combinatorics', 'mathematics', 'permutation cycle decomposition']"
4789,478900,The End of the World,17,"['dynamic programming', 'mathematics']"
4790,479000,Estimation,19,"['data structures', 'dynamic programming', 'priority queue']"
4791,479100,Juggler,0,[]
4792,479200,레드 블루 스패닝 트리,18,"['data structures', 'disjoint set', 'graph theory', 'minimum spanning tree']"
4793,479300,The Red Gem,22,['geometry']
4794,479400,Science!,24,"['bipartite matching', 'maximum flow']"
4795,479500,The Worm in the Apple,25,"['convex hull', 'geometry', 'geometry; 3d']"
4796,479600,캠핑,5,"['greedy', 'mathematics']"
4797,479700,화학,14,"['implementation', 'parsing', 'string']"
4798,479800,등차수열에 관한 디리클레의 정리,20,"['extended euclidean algorithm', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
4799,479900,Fuel Stops,13,[]
4800,480000,대충 정렬,17,"['bitmask', 'bruteforcing', 'dynamic programming', 'dynamic programming using bitfield']"
4801,480100,Nine,6,"['bruteforcing', 'case work', 'implementation', 'string']"
4802,480200,함수 오버로딩,20,"['ad-hoc', 'dynamic programming', 'dynamic programming on trees', 'implementation', 'parsing', 'string', 'tree']"
4803,480300,트리,12,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'tree']"
4804,480400,Catching Shade in Flatland,14,['geometry']
4805,480500,Emergency Room,0,[]
4806,480600,줄 세기,3,['implementation']
4807,480700,Iterated Difference,4,"['implementation', 'simulation']"
4808,480800,Shape Number,0,[]
4809,480900,Stock Prices,6,"['implementation', 'sorting']"
4810,481000,Contour Tracing,11,"['depth-first search', 'graph theory', 'graph traversal', 'implementation']"
4811,481100,알약,12,['dynamic programming']
4812,481200,Robot Navigation,12,"['breadth-first search', 'graph theory', 'graph traversal']"
4813,481300,User Names,0,[]
4814,481400,Citizenship Application,15,"['case work', 'implementation']"
4815,481500,Wealthy Family,0,[]
4816,481600,Supply Mission,0,[]
4817,481700,괄호,15,"['parsing', 'string']"
4818,481800,Ropes,5,"['arithmetic', 'implementation', 'mathematics']"
4819,481900,Chain Code,0,[]
4820,482000,Task,0,[]
4821,482100,페이지 세기,6,"['implementation', 'parsing', 'string']"
4822,482200,축구,14,"['backtracking', 'bruteforcing', 'data structures', 'set / map by hashing', 'implementation', 'sorting', 'string']"
4823,482300,Railroad,0,[]
4824,482400,Post Office,4,"['case work', 'implementation']"
4825,482500,Aronson,0,[]
4826,482600,Range,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
4827,482700,Coverage,0,[]
4828,482800,XML,17,"['data structures', 'implementation', 'parsing', 'regular expression', 'stack', 'string']"
4829,482900,Clickomania,13,['dynamic programming']
4830,483000,Balance,8,"['implementation', 'mathematics', 'simulation']"
4831,483100,Resistors,0,[]
4832,483200,Shuffling,0,[]
4833,483300,Papa,0,[]
4834,483400,Wax,0,[]
4835,483500,Walk in the Park,15,"['data structures', 'precomputation', 'sorting']"
4836,483600,춤,7,"['implementation', 'parsing', 'string']"
4837,483700,Trucking,0,[]
4838,483800,When,20,"['parsing', 'string']"
4839,483900,소진법,7,"['implementation', 'mathematics', 'number theory', 'primality test']"
4840,484000,Tree Grafting,15,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
4841,484100,Look and Say,4,"['implementation', 'string']"
4842,484200,Server Relocation,13,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
4843,484300,Coin Toss,13,"['geometry', 'implementation', 'mathematics', 'probability theory']"
4844,484400,Vacation Rentals,15,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
4845,484500,Baseball,16,"['implementation', 'simulation']"
4846,484600,Team Work,0,[]
4847,484700,Wavelet Compression,0,[]
4848,484800,집합 숫자 표기법,9,"['data structures', 'dynamic programming', 'string']"
4849,484900,Bridge Bidding,14,['implementation']
4850,485000,Baskets of Gold Coins,3,"['arithmetic', 'mathematics']"
4851,485100,Toothpick Arithmetic,15,"['dynamic programming', 'mathematics', 'number theory']"
4852,485200,Winter Festival,9,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'string', 'set / map by trees']"
4853,485300,Knots,9,"['combinatorics', 'mathematics']"
4854,485400,String Equations,0,[]
4855,485500,Tire Dimensions,0,[]
4856,485600,Random Walk,0,[]
4857,485700,Paint Mix,0,[]
4858,485800,Open and Close,0,[]
4860,486000,Smallest Difference,10,['bruteforcing']
4861,486100,Faulty Odometer,7,"['mathematics', 'number theory']"
4862,486200,마지막 자리,18,"['euler totient function', 'exponentiation by squaring', 'mathematics', 'number theory']"
4863,486300,Suit Distribution,9,"['combinatorics', 'mathematics', 'probability theory']"
4864,486400,Gold Coins,4,"['arithmetic', 'implementation', 'mathematics']"
4865,486500,Shortest Prefixes,7,"['bruteforcing', 'string']"
4866,486600,Squares,13,"['bruteforcing', 'data structures', 'geometry', 'set / map by hashing']"
4868,486800,Mix and Build,14,"['bruteforcing', 'dynamic programming', 'graph theory', 'graph traversal', 'implementation']"
4869,486900,Blackjack,5,"['implementation', 'mathematics', 'probability theory']"
4872,487200,SPIN,5,"['implementation', 'string']"
4873,487300,SHAKE,0,[]
4874,487400,TOYS,0,[]
4875,487500,COMPRESS,8,"['mathematics', 'string']"
4876,487600,SHEET,0,[]
4877,487700,GYM,6,"['mathematics', 'probability theory']"
4878,487800,PLANKS,0,[]
4879,487900,PERMS,12,"['dynamic programming', 'mathematics']"
4880,488000,다음수,3,"['arithmetic', 'mathematics']"
4881,488100,자리수의 제곱,6,"['bruteforcing', 'implementation']"
4882,488200,정규형,13,"['data structures', 'stack', 'tree']"
4883,488300,삼각 그래프,10,['dynamic programming']
4884,488400,FIFA 월드컵,6,"['arithmetic', 'mathematics']"
4885,488500,월드 오브 큐브,0,[]
4886,488600,나이트 이야기,0,[]
4887,488700,Jumping Beans,0,[]
4888,488800,문시티 건설,15,"['bruteforcing', 'geometry', 'line segment intersection check', 'travelling salesman problem']"
4889,488900,안정적인 문자열,10,"['data structures', 'greedy', 'stack', 'string']"
4890,489000,"Tiles of Tetris, NOT!",4,"['euclidean algorithm', 'mathematics', 'number theory']"
4891,489100,Not So Flat After All,8,['mathematics']
4892,489200,숫자 맞추기 게임,3,"['arithmetic', 'implementation', 'mathematics']"
4893,489300,Hop — Don’t Walk!,14,"['breadth-first search', 'graph theory', 'graph traversal']"
4894,489400,Air Strike,14,[]
4895,489500,Stock Chase,0,[]
4896,489600,땅 나누기,0,[]
4897,489700,Kind of a Blur,0,[]
4898,489800,National Treasures,0,[]
4899,489900,Tobo or not Tobo,13,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation']"
4900,490000,7 더하기,9,"['implementation', 'string']"
4901,490100,Match Maker,0,[]
4902,490200,삼각형의 값,14,"['bruteforcing', 'implementation', 'mathematics', 'prefix sum', 'recursion']"
4903,490300,Relax! It’s just a game,5,"['combinatorics', 'mathematics']"
4904,490400,Einbahnstrasse,0,[]
4905,490500,Think I’ll Buy Me a Football Team,10,['constructive']
4906,490600,Musical Chairs,15,"['dynamic programming', 'mathematics']"
4907,490700,월쉬 행렬,13,"['bitmask', 'divide and conquer', 'mathematics']"
4908,490800,A Day at the Races,10,['sorting']
4909,490900,Judging Olympia,3,"['arithmetic', 'implementation', 'mathematics']"
4910,491000,Hide That Number,8,"['implementation', 'mathematics', 'string']"
4911,491100,Rotating Rings,7,[]
4912,491200,A Tale from the Dark Side of The Moon,6,"['implementation', 'string']"
4913,491300,페르마의 크리스마스 정리,12,"['mathematics', 'number theory', 'prefix sum', 'primality test', 'sieve of eratosthenes']"
4914,491400,Incidental Points,0,[]
4915,491500,Let’s Go to the Movies,0,[]
4916,491600,The Writer's Club,0,[]
4917,491700,Moving Sticks,0,[]
4918,491800,Jonny Hates Math,0,[]
4919,491900,Being Smarty!,9,"['implementation', 'mathematics', 'parsing', 'string']"
4920,492000,테트리스 게임,11,"['bruteforcing', 'implementation']"
4921,492100,나무 블록,7,"['data structures', 'implementation', 'simulation', 'stack']"
4922,492200,Walk Like an Egyptian,3,"['implementation', 'mathematics']"
4923,492300,The Great Sahara,8,"['implementation', 'mathematics']"
4924,492400,정수론 싫어,16,"['mathematics', 'number theory', 'prefix sum', 'primality test', 'sieve of eratosthenes']"
4925,492500,Minimum Spanning Tree,0,[]
4926,492600,A-to-Z,0,[]
4927,492700,Casting Out Nines,5,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
4928,492800,The Earth is Flat!,12,"['data structures', 'stack', 'string']"
4929,492900,수열 걷기,10,['implementation']
4930,493000,Alpha of Degree k,0,[]
4931,493100,큐 소트,0,[]
4932,493200,Still Johnny Can’t Add,5,"['arithmetic', 'implementation', 'mathematics']"
4933,493300,뉴턴의 사과,14,"['data structures', 'stack', 'tree']"
4934,493400,The Euclidian Clock,5,['geometry']
4935,493500,Chop Ahoy! Revisited!,10,['backtracking']
4936,493600,What’s your Logo?,16,"['data structures', 'euler characteristic (χ=v-e+f)', 'geometry']"
4937,493700,It’s All About Three,9,"['mathematics', 'number theory']"
4938,493800,Gift from the Goddess of Programming,10,"['implementation', 'simulation']"
4939,493900,The Sorcerer’s Donut,10,"['bruteforcing', 'data structures', 'set / map by hashing', 'implementation', 'string']"
4940,494000,Weaker than Planned,0,[]
4941,494100,Long Distance Taxi,16,"['data structures', ""dijkstra's"", 'graph theory', 'set / map by hashing']"
4942,494200,Driving an Icosahedral Rover,0,[]
4943,494300,City Merger,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'greedy', 'string']"
4944,494400,Captain Q’s Treasure,0,[]
4945,494500,ASCII Expression,0,[]
4946,494600,Encircling Circles,0,[]
4947,494700,Round Trip,0,[]
4948,494800,베르트랑 공준,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
4949,494900,균형잡힌 세상,7,"['data structures', 'stack', 'string']"
4950,495000,Identically Colored Panels Connection,12,"['backtracking', 'breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
4951,495100,"And Then, How Many Are There?",17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
4952,495200,Planning Rolling Blackouts,14,['dynamic programming']
4953,495300,Watchdog Corporation,0,[]
4954,495400,A Broken Door,18,[]
4955,495500,Pablo Squarson's Headache,6,['implementation']
4956,495600,Amazing Mazes,11,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
4957,495700,Pollock's conjecture,10,['dynamic programming']
4962,496200,Next Mayor,6,"['implementation', 'simulation']"
4963,496300,섬의 개수,9,"['graph theory', 'graph traversal', 'breadth-first search', 'depth-first search']"
4964,496400,단어 덧셈,12,"['backtracking', 'bruteforcing', 'mathematics', 'string']"
4965,496500,Discrete Speed,16,"[""dijkstra's"", 'graph theory']"
4966,496600,Cards,17,"['bipartite matching', 'euclidean algorithm', 'mathematics', 'number theory']"
4967,496700,Tighten Up!,0,[]
4968,496800,Equal Total Scores,5,"['bruteforcing', 'implementation', 'mathematics']"
4969,496900,월요일-토요일,10,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
4970,497000,디지털 회로 개론,12,"['bruteforcing', 'data structures', 'parsing', 'stack', 'string']"
4971,497100,Twirling Robot,15,"[""dijkstra's"", 'graph theory']"
4972,497200,Roll-A-Big-Ball,17,"['geometry', 'line segment intersection check', 'parametric search']"
4973,497300,ICPC: Intelligent Congruent Partition of Chocolate,0,[]
4974,497400,ICPC Score Totalizer Software,4,"['arithmetic', 'implementation', 'mathematics']"
4975,497500,Analyzing Login/Logout Records,8,"['implementation', 'simulation']"
4976,497600,Cut the Cake,11,"['implementation', 'simulation']"
4977,497700,Cliff Climbing,15,"[""dijkstra's"", 'graph theory', 'implementation']"
4978,497800,Twirl Around,0,[]
4979,497900,Dr. Podboq or: How We Became Asymmetric,0,[]
4980,498000,Dirichlet's Theorem on Arithmetic Progressions,7,"['bruteforcing', 'mathematics', 'number theory', 'primality test']"
4981,498100,Organize Your Train part II,7,"['bruteforcing', 'data structures', 'set / map by hashing', 'string']"
4982,498200,Hexerpents of Hexwamp,0,[]
4983,498300,Curling 2.0,11,"['backtracking', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
4984,498400,The Genome Database of All Space Life,17,"['parsing', 'recursion', 'string']"
4985,498500,Secrets in Shadows,0,[]
4986,498600,Ohgas' Fortune,8,"['implementation', 'mathematics', 'simulation']"
4987,498700,Polygonal Line Search,11,"['bruteforcing', 'geometry']"
4988,498800,Numeral System,7,"['parsing', 'string']"
4989,498900,Traveling by Stagecoach,16,"['bitmask', ""dijkstra's"", 'graph theory']"
4990,499000,Earth Observation with a Mobile Robot Team,24,"['breadth-first search', 'data structures', 'geometry', 'graph theory', 'graph traversal', 'implementation']"
4991,499100,로봇 청소기,14,"['breadth-first search', 'bitmask', 'bruteforcing', 'graph theory', 'graph traversal']"
4992,499200,Hanafuda Shuffle,7,"['data structures', 'implementation', 'stack']"
4993,499300,Red and Black,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
4994,499400,배수 찾기,15,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics']"
4995,499500,원과 점,19,"['geometry', 'mathematics']"
4996,499600,Water Tank,0,[]
4997,499700,Name the Crossing,0,[]
4998,499800,저금,4,"['implementation', 'mathematics', 'simulation']"
4999,499900,아!,1,"['implementation', 'string']"
5000,500000,빵 정렬,18,"['data structures', 'mathematics', 'segment tree']"
5001,500100,Cookie Selection,15,"['data structures', 'priority queue']"
5002,500200,도어맨,10,"['data structures', 'greedy', 'stack']"
5003,500300,Eco-driving,0,[]
5004,500400,파워 블로거,26,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'floyd–warshall', 'graph theory']"
5005,500500,Galactic Warlords,0,[]
5006,500600,Horror List,10,"['breadth-first search', 'graph theory', 'graph traversal']"
5007,500700,Infiltration,0,[]
5008,500800,Juice,18,[]
5009,500900,유치원,20,"['2-sat', 'graph theory', 'parametric search', 'strongly connected component']"
5010,501000,수화물,17,"['mathematics', 'sweeping']"
5011,501100,Robots on a grid,11,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
5012,501200,불만 정렬,17,"['data structures', 'segment tree']"
5013,501300,Death Knight Hero,4,"['implementation', 'string']"
5014,501400,스타트링크,11,"['breadth-first search', 'graph theory', 'graph traversal']"
5015,501500,ls,14,['dynamic programming']
5016,501600,Knigs of the Forest,12,"['data structures', 'implementation', 'priority queue', 'simulation']"
5017,501700,Car Trouble,0,[]
5018,501800,Private Space,0,[]
5019,501900,"홀수, 짝수, 그리고 창영",0,[]
5020,502000,Enemy Division,0,[]
5021,502100,왕위 계승,12,"['data structures', 'graph theory', 'set / map by hashing', 'topological sorting']"
5022,502200,연결,15,"['breadth-first search', 'graph theory', 'graph traversal']"
5023,502300,Borg Boogie,0,[]
5024,502400,Dirty Driving,6,['sorting']
5025,502500,낙서,18,"['euclidean algorithm', 'mathematics', 'number theory']"
5026,502600,박사 과정,4,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
5027,502700,Great Geek Game-show 3000!,0,[]
5028,502800,Polyomino Powers,0,[]
5029,502900,Statisticians,0,[]
5030,503000,Skyline,0,[]
5031,503100,Around the track,0,[]
5032,503200,탄산 음료,4,"['arithmetic', 'mathematics']"
5033,503300,Money Matters,10,"['breadth-first search', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
5034,503400,Allergy Test,16,"['backtracking', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
5035,503500,Rain Fall,9,['mathematics']
5036,503600,Speedy Escape,17,"['binary search', ""dijkstra's"", 'graph theory']"
5037,503700,Gokigen Naname,0,[]
5038,503800,Flight Planning,0,[]
5039,503900,Beacons,0,[]
5040,504000,Playfair Cipher,7,"['implementation', 'simulation', 'string']"
5041,504100,Code Permutations,19,"['combinatorics', 'dynamic programming', 'mathematics', 'möbius inversion', 'number theory']"
5042,504200,나무 옮기기,16,"['dynamic programming', 'sorting']"
5043,504300,정말 좋은 압축,5,['mathematics']
5044,504400,코드 절도,19,"['binary search', 'hashing', 'parametric search', 'rabin–karp', 'string', 'suffix array and lcp array']"
5045,504500,Dinner,0,[]
5046,504600,전국 대학생 프로그래밍 대회 동아리 연합,6,['implementation']
5047,504700,Fixing the Bugs,0,[]
5048,504800,Getting Gold,12,"['breadth-first search', 'graph theory', 'graph traversal']"
5049,504900,Hard Evidence,0,[]
5050,505000,Introspective Caching,0,[]
5051,505100,피타고라스의 정리,21,"['fast fourier transform', 'mathematics']"
5052,505200,전화번호 목록,12,"['data structures', 'sorting', 'string', 'tree', 'trie']"
5053,505300,Cuckoo Hashing,15,"['depth-first search', 'graph theory', 'graph traversal', 'implementation']"
5054,505400,주차의 신,4,"['implementation', 'mathematics']"
5055,505500,DNA 복사,0,[]
5056,505600,Circle of Debt,0,[]
5057,505700,Full Tank?,15,"[""dijkstra's"", 'graph theory']"
5058,505800,Nested Dolls,16,"['binary search', 'greedy', 'longest increasing sequence in o(n log n)']"
5059,505900,Shopaholic,7,"['greedy', 'sorting']"
5060,506000,무글 맵스,13,['dynamic programming']
5061,506100,Amphiphilic Carbon Molecules,0,[]
5062,506200,Different Digits,20,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory']"
5063,506300,TGN,3,"['arithmetic', 'mathematics']"
5064,506400,Jezzball,0,[]
5065,506500,Link and Pop -- the Block Game,0,[]
5066,506600,The Counting Problem,0,[]
5067,506700,Whac-a-Mole,13,['dynamic programming']
5068,506800,Random Walking,16,"['dynamic programming', 'mathematics']"
5069,506900,미로에 갇힌 상근,11,['dynamic programming']
5070,507000,The Rotation Game,18,"['backtracking', 'implementation']"
5071,507100,Tian Ji -- The Horse Racing,12,"['greedy', 'sorting']"
5072,507200,The Floor Bricks,0,[]
5073,507300,삼각형과 세 변,3,"['geometry', 'mathematics']"
5074,507400,When Do We Finish?,3,"['implementation', 'mathematics']"
5075,507500,Car Park,0,[]
5076,507600,Web Pages,12,"['data structures', 'parsing', 'stack', 'string']"
5077,507700,Maps,6,"['bruteforcing', 'implementation']"
5078,507800,Shirts,5,"['implementation', 'sorting', 'string']"
5079,507900,Discounts,11,['dynamic programming']
5080,508000,Microspikes,0,[]
5081,508100,Constellations,11,"['bruteforcing', 'data structures', 'disjoint set', 'graph theory']"
5082,508200,Image Segmentation,0,[]
5083,508300,Team Dessert,0,[]
5084,508400,Bat Positioning,0,[]
5085,508500,Gooseberry Tart BASIC,19,"['parsing', 'string']"
5086,508600,배수와 약수,3,"['arithmetic', 'mathematics']"
5087,508700,Card Cutting,3,['implementation']
5088,508800,Archaeological Digs,5,['implementation']
5089,508900,Travelling Salesman,5,"['data structures', 'set / map by hashing', 'sorting', 'string', 'set / map by trees']"
5090,509000,Street Numbers,0,[]
5091,509100,Hostel Nights,0,[]
5092,509200,Air Old Zeeland,6,"['data structures', 'implementation', 'set / map by trees']"
5093,509300,Letter Replacement,5,"['implementation', 'string']"
5094,509400,Balloons,0,[]
5095,509500,Matrix Powers,12,"['divide and conquer', 'exponentiation by squaring', 'linear algebra', 'mathematics']"
5096,509600,Standing Pins,0,[]
5097,509700,The God Delusion,0,[]
5098,509800,Adjacent Edges,0,[]
5099,509900,Vectors,0,[]
5100,510000,Jean and Joe’s Clothes,4,['implementation']
5101,510100,Sequences,3,"['arithmetic', 'mathematics']"
5102,510200,Sarah's Toys,3,"['arithmetic', 'implementation', 'mathematics']"
5103,510300,DVDs,4,"['implementation', 'simulation', 'string']"
5104,510400,NoMoPhobia,7,"['data structures', 'set / map by hashing', 'implementation', 'sorting', 'set / map by trees']"
5105,510500,Postman Joe,5,"['implementation', 'simulation']"
5106,510600,Target,6,['implementation']
5107,510700,마니또,10,"['data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'permutation cycle decomposition']"
5108,510800,Lego Bricks,0,[]
5109,510900,Extreme TTT,0,[]
5110,511000,A Foldy but a Goody,0,[]
5111,511100,Congested Networks,0,[]
5112,511200,Functional Programming Counts,0,[]
5113,511300,Packages Par Avion,0,[]
5114,511400,Ascii Art,0,[]
5115,511500,Coded Communication,7,[]
5116,511600,Water?,14,['prefix sum']
5117,511700,Martian Pranks,0,[]
5118,511800,Chemical Analysis,0,[]
5119,511900,Driving the Rover,12,[]
5120,512000,Martian Pits,15,"['graph theory', 'graph traversal', 'implementation']"
5121,512100,Alarmist,4,"['arithmetic', 'implementation', 'mathematics']"
5122,512200,Countdown,5,"['implementation', 'mathematics']"
5123,512300,Hiking Trails,0,[]
5124,512400,Emergency Rations,13,"['data structures', 'greedy', 'priority queue']"
5125,512500,Armageddon,10,['geometry']
5126,512600,Numerology,0,[]
5127,512700,Weird Currency,9,['implementation']
5128,512800,Bartering,0,[]
5129,512900,Runaway Time Machines,0,[]
5130,513000,Preventing Paradoxes,9,['geometry']
5131,513100,Geologic Strata,10,['implementation']
5132,513200,Exotic Foods,11,['dynamic programming']
5133,513300,Recipes,5,"['implementation', 'mathematics']"
5134,513400,Grocery Shopping,6,"['data structures', 'implementation', 'string']"
5135,513500,Ice Cream,12,"['ad-hoc', 'case work', 'greedy']"
5136,513600,Going to the Movies,0,[]
5137,513700,Mendelian Genetics,0,[]
5138,513800,Road Trip,0,[]
5139,513900,Oil Exploration,4,"['implementation', 'string']"
5140,514000,Rig Placement,0,[]
5141,514100,Safety Precautions,10,"['bruteforcing', 'dynamic programming']"
5142,514200,Oily Currents,0,[]
5143,514300,Seymour the Seal,12,"['breadth-first search', 'graph theory', 'graph traversal']"
5144,514400,Ecosystem,0,[]
5145,514500,Subway Fares,4,['implementation']
5146,514600,Segment Pricing,11,['dynamic programming']
5147,514700,Network Expansion,0,[]
5148,514800,Expansion Order,10,['greedy']
5149,514900,Map Interface,4,"['arithmetic', 'implementation', 'mathematics']"
5150,515000,Wireless Network,7,"['implementation', 'simulation']"
5151,515100,Lobbying,4,['implementation']
5152,515200,Emergency Room,0,[]
5153,515300,Social Network Vaccinations,11,"['backtracking', 'string']"
5154,515400,Cherry Picking,13,['dynamic programming']
5155,515500,Gadget Purchases,4,"['arithmetic', 'implementation', 'mathematics']"
5156,515600,Health Plan Comparison,0,[]
5157,515700,Bailout Bonus,3,"['arithmetic', 'implementation', 'mathematics']"
5158,515800,Risk Assessment,0,[]
5159,515900,Stock Trading,0,[]
5160,516000,Foreclosure Borough,14,"['geometry', 'point in convex polygon check', 'point in non-convex polygon check']"
5161,516100,Toxic Assets,5,"['arithmetic', 'implementation', 'mathematics']"
5162,516200,Stimulus Package,9,['bruteforcing']
5163,516300,Isn’t It Funny How a Bear Likes Honey?,3,"['arithmetic', 'implementation', 'mathematics']"
5164,516400,The Hare and the Hedgehogs,0,[]
5165,516500,Hermit Crabs,0,[]
5166,516600,Monkeys at Typewriters,9,"['mathematics', 'string']"
5167,516700,Swamp Kangaroo,0,[]
5168,516800,Zebra Herd,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
5169,516900,A Fistful of Dollars,5,"['bruteforcing', 'implementation']"
5170,517000,Clue,0,[]
5171,517100,Fingerprints,5,"['implementation', 'string']"
5172,517200,The Perfect Alibi,7,['implementation']
5173,517300,Emergency Response,15,"[""dijkstra's"", 'graph theory']"
5174,517400,Arsenic and Old Lace,0,[]
5175,517500,문제없는 문제,10,"['bitmask', 'bruteforcing']"
5176,517600,대회 자리,4,['implementation']
5177,517700,출력 형식이 잘못되었습니다,9,"['parsing', 'regular expression', 'string']"
5178,517800,시간 초과,18,"['convex hull', 'geometry', 'implementation', 'mathematics', 'parsing', 'string']"
5179,517900,우승자는 누구?,8,"['implementation', 'sorting']"
5180,518000,피자!,13,"['ad-hoc', 'bruteforcing', 'geometry']"
5181,518100,Overlap!,0,[]
5182,518200,Study Days,12,"['dynamic programming', 'knapsack']"
5183,518300,Exam Seating,0,[]
5184,518400,Yes or No?,8,"['greedy', 'sorting']"
5185,518500,Essay Writing,0,[]
5186,518600,파티를 열어라!!!,10,"['greedy', 'sorting']"
5187,518700,Civil Engineering,4,"['arithmetic', 'implementation', 'mathematics']"
5188,518800,Biomedical Engineering,10,"['dynamic programming', 'string']"
5189,518900,Electrical Engineering,0,[]
5190,519000,Aerospace & Mechanical Engineering,4,"['arithmetic', 'mathematics', 'physics']"
5191,519100,Industrial & Systems Engineering,12,['bruteforcing']
5192,519200,Computer Science,9,"['implementation', 'parsing', 'string']"
5193,519300,Fundraising,5,['implementation']
5194,519400,Gerrymandering,0,[]
5195,519500,Stump Speech,5,"['implementation', 'string']"
5196,519600,Campaign Stops,12,"['bruteforcing', 'graph theory', 'graph traversal']"
5197,519700,Butterfly Ballots,10,"['case work', 'greedy']"
5198,519800,And The Winner Is,0,[]
5199,519900,Volleyball Scores,0,[]
5200,520000,Sand Castles,0,[]
5201,520100,Swimming with Sharks,0,[]
5202,520200,Sun Bathing,18,"['calculus', 'geometry', 'geometry; 3d', 'mathematics']"
5203,520300,New Friends,0,[]
5204,520400,Beach Party,9,['bruteforcing']
5205,520500,School Colors,5,"['bruteforcing', 'implementation']"
5206,520600,Lunch,10,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
5207,520700,Orange Bowl,11,"['combinatorics', 'dynamic programming', 'mathematics']"
5208,520800,Course Load,10,"['bruteforcing', 'implementation']"
5209,520900,Lecture Screens,18,"['geometry', 'line segment intersection check', 'sweeping']"
5210,521000,Campus Buildings,5,['string']
5211,521100,가단조와 다장조,5,"['implementation', 'string']"
5212,521200,지구 온난화,9,"['implementation', 'simulation']"
5213,521300,과외맨,14,"['breadth-first search', 'graph theory', 'graph traversal']"
5214,521400,환승,14,"['breadth-first search', 'graph theory', 'graph traversal']"
5215,521500,로테이트,0,[]
5216,521600,축구,0,[]
5217,521700,쌍의 합,3,['implementation']
5218,521800,알파벳 거리,4,"['implementation', 'mathematics', 'string']"
5219,521900,String Transformations,6,['string']
5220,522000,Error Detection,3,"['implementation', 'mathematics']"
5221,522100,Pythogorean Triples,6,"['bruteforcing', 'sorting', 'string']"
5222,522200,Vigenère Cipher,4,"['implementation', 'string']"
5223,522300,Shut The Box I,8,[]
5224,522400,Battleground Preservation,0,[]
5225,522500,Breaking Vigenère Cipher,10,[]
5226,522600,Shut The Box II,0,[]
5227,522700,Game of Stones,18,"['game theory', 'graph theory', 'sprague–grundy theorem']"
5228,522800,Base K,0,"['mathematics', 'implementation']"
5229,522900,Most Frequent Square,0,[]
5230,523000,Prefix Codes,6,"['implementation', 'simulation']"
5231,523100,Rotation Maze,0,[]
5232,523200,Grid Nim,15,"['dynamic programming', 'game theory']"
5233,523300,"Buddy, Can You Spare a Tronk?",0,[]
5234,523400,Find Fame in Disc Arena,0,[]
5235,523500,Even Sum More Than Odd Sum,3,"['arithmetic', 'implementation', 'mathematics']"
5236,523600,Longest Decreasing Suffix,4,"['implementation', 'string']"
5237,523700,Connected or Not Connected,8,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
5238,523800,Stacked Floating Mountains,4,"['arithmetic', 'implementation', 'mathematics']"
5239,523900,Chess Puzzle,5,['implementation']
5240,524000,Life Connections,0,[]
5241,524100,Circle of Friends,0,[]
5242,524200,Floating Mountain Stability,13,[]
5243,524300,Aim It Right!,0,[]
5244,524400,Navi Navigation,0,[]
5245,524500,Locate Mining Center,0,[]
5246,524600,Checkerboard Rows,4,['implementation']
5247,524700,Mining Maps,7,['graph theory']
5248,524800,Hauling Ore,10,"['breadth-first search', 'graph theory', 'graph traversal', 'parsing', 'string']"
5249,524900,BOI-handsome,0,[]
5250,525000,최단 경로들,23,"['data structures', ""dijkstra's"", 'graph theory', 'segment tree with lazy propagation', 'lowest common ancestor', 'segment tree', 'tree']"
5251,525100,Spiral,24,[]
5252,525200,The Best Teams,21,"['data structures', 'segment tree']"
5253,525300,Fan Groups,21,"['graph theory', 'strongly connected component', 'topological sorting']"
5254,525400,Balls,21,"['convex hull trick', 'dynamic programming']"
5255,525500,2circles,25,"['binary search', 'convex hull', 'geometry', 'half plane intersection', 'rotating calipers']"
5256,525600,medians,15,"['ad-hoc', 'greedy']"
5257,525700,timeismoney,26,"['convex hull', 'divide and conquer', 'geometry', 'graph theory', 'minimum spanning tree']"
5258,525800,trapezoid,21,"['value / coordinate compression', 'data structures', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'segment tree', 'sweeping']"
5259,525900,pawns,16,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
5260,526000,puzzle,0,[]
5261,526100,sorting,0,[]
5262,526200,heritage,0,[]
5263,526300,samba,6,"['data structures', 'set / map by hashing', 'implementation', 'set / map by trees']"
5264,526400,spiral123,15,['implementation']
5265,526500,Cipher,0,[]
5266,526600,Strange Dream,0,[]
5267,526700,Points,0,[]
5268,526800,The stairways of Saharna,0,[]
5269,526900,Toponyms,0,[]
5337,533700,웰컴,1,['implementation']
5338,533800,마이크로소프트 로고,1,['implementation']
5339,533900,콜센터,1,['implementation']
5347,534700,LCM,6,"['euclidean algorithm', 'mathematics', 'number theory']"
5354,535400,J박스,3,['implementation']
5355,535500,화성 수학,4,"['arithmetic', 'implementation', 'mathematics']"
5361,536100,전투 드로이드 가격,3,"['arithmetic', 'mathematics']"
5363,536300,요다,4,"['implementation', 'string']"
5371,537100,Annoying Mosquitos,5,"['bruteforcing', 'implementation']"
5372,537200,나쁜 과학자,17,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
5373,537300,큐빙,16,"['implementation', 'simulation']"
5374,537400,올바른 바이너리 문자열,0,[]
5375,537500,공책 구매,16,"['dynamic programming', 'greedy']"
5376,537600,소수를 분수로,10,"['euclidean algorithm', 'mathematics', 'number theory', 'parsing', 'string']"
5377,537700,승혁이의 과외돌이네 집 탈출하기,21,"['convex hull', 'geometry', 'point in convex polygon check']"
5378,537800,Hex,11,"['graph theory', 'graph traversal']"
5379,537900,Islands,0,[]
5380,538000,Jumbled Letters,13,"['bitmask', 'data structures', 'set / map by hashing', 'implementation', 'sorting']"
5381,538100,Popping Balloons,0,[]
5382,538200,Quick out of the Harbour,13,"[""dijkstra's"", 'graph theory']"
5383,538300,안녕! 난 루피! 장래에 해적왕이 될 사내다!,24,['geometry']
5384,538400,Bad Wiring,16,"['bruteforcing', 'greedy']"
5385,538500,Ultimate Finishing Strike,0,[]
5386,538600,금화 게임,17,"['game theory', 'sprague–grundy theorem']"
5387,538700,Walking the Plank,0,[]
5388,538800,Parking Ships,18,"['dynamic programming', 'greedy']"
5389,538900,제곱근 작도,9,"['bruteforcing', 'mathematics', 'number theory']"
5390,539000,Gene Shuffle,6,"['data structures', 'set / map by trees']"
5391,539100,Top 2000,0,[]
5392,539200,The Twin Tower,10,[]
5393,539300,콜라츠,8,"['arithmetic', 'mathematics', 'number theory']"
5394,539400,시계,24,"['binary search', 'case work', 'geometry']"
5395,539500,Snooker,0,[]
5396,539600,Pie Division,0,[]
5397,539700,키로거,9,"['data structures', 'linked list', 'stack']"
5398,539800,틀렸습니다,20,['bipartite matching']
5399,539900,Penguin Bashing,0,[]
5400,540000,Gearbox,0,[]
5401,540100,Escape from the Minefield,28,"['data structures', 'delaunay triangulation', 'disjoint set', 'geometry']"
5402,540200,Baby’s Blocks,0,[]
5403,540300,The Pharaoh’s Curse,0,[]
5404,540400,차원 워프 드라이브,0,[]
5405,540500,프랙탈 거리,18,[]
5406,540600,"No Smoking, Please",19,"['maximum flow', 'graph theory', 'max-flow min-cut theorem']"
5407,540700,Song contest,14,"['data structures', 'geometry', 'set / map by hashing', 'implementation', 'mathematics', 'sorting']"
5408,540800,Message,15,"['implementation', 'mathematics']"
5409,540900,The skatepark's new ramps,0,[]
5410,541000,Road,0,[]
5411,541100,Warfare,0,[]
5412,541200,Blackjack,0,[]
5413,541300,Robintron,0,[]
5414,541400,Diamond Dealer,23,"['convex hull', 'geometry', 'mathematics', 'sorting', 'sweeping']"
5415,541500,ASM – The Abelian Sandpile Model,11,['implementation']
5416,541600,Cell Phones,0,[]
5417,541700,Evacuation,0,[]
5418,541800,Giant Cover,0,[]
5419,541900,북서풍,17,"['value / coordinate compression', 'data structures', 'segment tree', 'sweeping']"
5420,542000,Shepherds and Engineers,9,"['case work', 'implementation']"
5421,542100,Ski Lifts,18,"['graph theory', 'strongly connected component']"
5422,542200,Tables,0,[]
5423,542300,Another Dice Game,0,[]
5424,542400,천하제일 게임 대회,21,[]
5425,542500,자리합,15,['mathematics']
5426,542600,비밀 편지,6,"['implementation', 'mathematics', 'string']"
5427,542700,불,12,"['breadth-first search', 'graph theory', 'graph traversal']"
5428,542800,Good Coalition,0,[]
5429,542900,Hot Dogs in Manhattan,14,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal']"
5430,543000,AC,11,"['deque', 'parsing', 'implementation', 'string', 'data structures']"
5431,543100,책 쌓기,14,[]
5432,543200,Stifling the Mutiny,0,[]
5433,543300,RNG,0,[]
5434,543400,Attack of the Giant n-pus,0,[]
5435,543500,Polly Wants a Cracker,0,[]
5436,543600,Rolling Dice,0,[]
5437,543700,Dividing the Loot,7,['greedy']
5438,543800,Secret Island Base,24,['geometry']
5439,543900,Stealth Ninja,0,[]
5440,544000,In and Out,0,[]
5441,544100,Shuriken Game,0,[]
5442,544200,Evolution,0,[]
5443,544300,Have a Nice Day,0,[]
5444,544400,시리얼 넘버,16,"['dynamic programming', 'knapsack', 'sliding window']"
5445,544500,Equal Is Not Really Equal,0,[]
5446,544600,용량 부족,18,"['data structures', 'string', 'tree', 'trie']"
5447,544700,Stock Market,9,['dynamic programming']
5448,544800,Acrobat Reader,0,[]
5449,544900,Farmer John,17,"[""dijkstra's"", 'geometry', 'graph theory', 'line segment intersection check']"
5450,545000,Imagine,0,[]
5451,545100,My Cousin Obama,0,[]
5452,545200,Bancopia,0,[]
5453,545300,Flipping Networks,0,[]
5454,545400,Insecurity,0,[]
5455,545500,Mandalas,21,"['arbitrary precision / big integers', 'euler characteristic (χ=v-e+f)', 'geometry', 'mathematics']"
5456,545600,Minotaur,0,[]
5457,545700,Mondriaan,0,[]
5458,545800,Nim/3,0,[]
5459,545900,Venus Rover,0,[]
5460,546000,양궁,28,"['ad-hoc', 'binary search', 'data structures', 'greedy', 'segment tree']"
5461,546100,고용,17,"['data structures', 'greedy', 'priority queue', 'segment tree', 'sorting']"
5462,546200,POI,6,"['implementation', 'sorting']"
5463,546300,건포도,14,"['dynamic programming', 'prefix sum']"
5464,546400,주차장,9,"['data structures', 'implementation', 'queue', 'simulation']"
5465,546500,곰돌이,15,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal']"
5466,546600,상인,22,"['data structures', 'dynamic programming', 'segment tree']"
5467,546700,Type Printer,17,"['data structures', 'sorting', 'string', 'tree', 'trie']"
5468,546800,Islands,22,"['dynamic programming', 'dynamic programming on trees', 'tree']"
5469,546900,Fish,25,"['binary search', 'combinatorics', 'data structures', 'mathematics', 'segment tree', 'sorting', 'two-pointer']"
5470,547000,균형잡힌 직선형 정원,19,"['case work', 'dynamic programming', 'mathematics']"
5471,547100,Pyramid Base,20,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
5472,547200,Teleporters,22,"['permutation cycle decomposition', 'sorting']"
5473,547300,Flood,21,[]
5474,547400,Sails,21,"['data structures', 'greedy', 'segment tree', 'set / map by trees']"
5475,547500,Miners,15,['dynamic programming']
5476,547600,장난감 동물,21,"['binary search', 'data structures', 'segment tree']"
5477,547700,마라톤 훈련 방해하기,23,"['bitmask', 'cactus', 'depth-first search', 'dynamic programming', 'dynamic programming using bitfield', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'lowest common ancestor', 'tree']"
5479,547900,Pyramid,18,"['data structures', 'deque', 'multidimensional segment tree', 'prefix sum', 'priority queue', 'segment tree', 'sliding window']"
5480,548000,전함,20,"['value / coordinate compression', 'data structures', 'offline queries', 'segment tree']"
5481,548100,The Valley of Mexico,20,['dynamic programming']
5482,548200,Joining Points,23,"['ad-hoc', 'divide and conquer', 'geometry', 'point in convex polygon check']"
5483,548300,Polish Flag,0,[]
5484,548400,정원,19,"['dynamic programming', 'prefix sum', 'two-pointer']"
5485,548500,평균값 수열,14,"['ad-hoc', 'mathematics']"
5486,548600,Mountains,21,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
5487,548700,Birthday,0,[]
5488,548800,That Nice Euler Circuit,0,[]
5489,548900,Numbers,4,['implementation']
5491,549100,Artemis,0,[]
5492,549200,Hermes,20,[]
5493,549300,Empodia,20,"['ad-hoc', 'binary search', 'data structures', 'segment tree', 'stack']"
5494,549400,Comparing Code,0,[]
5495,549500,Amazing Robots,0,[]
5496,549600,Utopia Divided,23,"['ad-hoc', 'constructive', 'sorting']"
5498,549800,Batch Scheduling,18,"['convex hull trick', 'dynamic programming', 'prefix sum']"
5500,550000,Twofive,0,[]
5501,550100,Depot,8,['backtracking']
5502,550200,팰린드롬,13,['dynamic programming']
5503,550300,Car Parking,0,[]
5504,550400,Post Office,13,['dynamic programming']
5506,550600,Contact,16,['bitmask']
5507,550700,Starry Night,17,"['graph theory', 'graph traversal', 'implementation']"
5508,550800,Party Lamps,16,"['bruteforcing', 'data structures', 'set / map by trees']"
5509,550900,Polygon,0,[]
5519,551900,소수방진,20,['backtracking']
5520,552000,The Clocks,11,['bruteforcing']
5521,552100,The Circle,0,[]
5522,552200,카드 게임,1,"['arithmetic', 'mathematics']"
5523,552300,경기 결과,3,['implementation']
5524,552400,입실 관리,3,['string']
5525,552500,IOIOI,10,['string']
5526,552600,ダーツ (Darts),14,"['binary search', 'meet in the middle', 'two-pointer']"
5527,552700,전구 장식,12,['ad-hoc']
5528,552800,달려라 IOI 열차,15,['dynamic programming']
5529,552900,저택,16,"[""dijkstra's"", 'graph theory', 'graph traversal', 'implementation']"
5530,553000,JOIOI 탑,20,"['binary search', 'greedy']"
5531,553100,버블 정렬,24,"['data structures', 'divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
5532,553200,방학 숙제,2,"['arithmetic', 'mathematics']"
5533,553300,유니크,5,"['arithmetic', 'implementation', 'mathematics']"
5534,553400,간판,6,"['bruteforcing', 'string']"
5535,553500,패셔니스타,12,['dynamic programming']
5536,553600,물고기의 서식 범위,12,"['value / coordinate compression', 'sorting', 'sweeping']"
5537,553700,お土産購入計画 (Gifts),20,['dynamic programming']
5538,553800,JJOOII (JJOOII),10,"['implementation', 'string']"
5539,553900,たのしいカードゲーム (Card Game is Fun),9,"['bruteforcing', 'greedy']"
5540,554000,夜店 (Night Market),13,"['dynamic programming', 'knapsack']"
5541,554100,釘 (Nails),18,"['ad-hoc', 'prefix sum']"
5542,554200,JOI 국가의 행사,21,"['binary search', 'data structures', ""dijkstra's"", 'disjoint set', 'graph theory', 'parallel binary search']"
5543,554300,상근날드,2,"['arithmetic', 'mathematics']"
5544,554400,리그,5,['implementation']
5545,554500,최고의 피자,8,"['greedy', 'sorting']"
5546,554600,파스타,12,['dynamic programming']
5547,554700,일루미네이션,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
5548,554800,지그재그 숫자,19,"['dynamic programming', 'implementation']"
5549,554900,행성 탐사,11,['prefix sum']
5550,555000,헌책방,15,"['dynamic programming', 'prefix sum', 'sorting']"
5551,555100,쇼핑몰,16,"[""dijkstra's"", 'graph theory']"
5552,555200,걷는 산타클로스,16,"['mathematics', 'sorting']"
5553,555300,微生物実験 (Bug Party),18,"['data structures', 'greedy', 'priority queue', 'segment tree']"
5554,555400,심부름 가는 길,2,"['implementation', 'arithmetic', 'mathematics']"
5555,555500,반지,6,"['bruteforcing', 'string']"
5556,555600,타일,9,"['implementation', 'mathematics']"
5557,555700,1학년,11,['dynamic programming']
5558,555800,チーズ (Cheese),11,"['breadth-first search', 'graph theory', 'graph traversal']"
5559,555900,JOI 깃발,21,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
5560,556000,旅人,7,['prefix sum']
5561,556100,과자의 분할,16,['dynamic programming']
5562,556200,つらら,13,"['data structures', 'dynamic programming', 'implementation', 'priority queue']"
5563,556300,博覧会,23,[]
5564,556400,ダンジョン,24,[]
5565,556500,영수증,3,"['arithmetic', 'implementation', 'mathematics']"
5566,556600,주사위 게임,4,"['implementation', 'simulation']"
5567,556700,결혼식,9,"['graph theory', 'graph traversal']"
5568,556800,카드 놓기,7,"['bruteforcing', 'data structures', 'set / map by hashing']"
5569,556900,출근 경로,12,['dynamic programming']
5570,557000,산타클로스와 루돌프,19,"['backtracking', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
5571,557100,ピザ,12,['binary search']
5572,557200,사다리 게임,16,"['dynamic programming', 'sorting']"
5573,557300,산책,18,['dynamic programming']
5574,557400,認証レベル,20,[]
5575,557500,타임 카드,2,"['arithmetic', 'implementation', 'mathematics']"
5576,557600,콘테스트,4,"['implementation', 'sorting']"
5577,557700,RBY팡!,14,"['data structures', 'implementation', 'simulation', 'stack']"
5578,557800,薄氷渡り,12,"['backtracking', 'depth-first search', 'graph theory', 'graph traversal']"
5579,557900,シャッフル,19,[]
5580,558000,빙고 게임,15,['dynamic programming']
5581,558100,碁石ならべ,11,[]
5582,558200,공통 부분 문자열,11,"['dynamic programming', 'string']"
5583,558300,ぴょんぴょん川渡り,17,[]
5584,558400,ペンキの色,16,"['value / coordinate compression', 'graph theory', 'graph traversal', 'prefix sum']"
5585,558500,거스름돈,4,['greedy']
5586,558600,JOI와 IOI,4,"['implementation', 'string']"
5587,558700,카드 캡터 상근이,8,"['implementation', 'simulation']"
5588,558800,별자리 찾기,12,"['bruteforcing', 'data structures', 'set / map by hashing']"
5589,558900,おせんべい,9,"['bitmask', 'bruteforcing', 'greedy']"
5590,559000,船旅,11,"[""dijkstra's"", 'graph theory']"
5591,559100,最大の和,7,"['prefix sum', 'sliding window']"
5592,559200,最長の階段,9,"['implementation', 'two-pointer']"
5593,559300,最古の遺跡,14,"['bruteforcing', 'data structures', 'geometry', 'set / map by hashing', 'set / map by trees']"
5594,559400,最悪の記者,17,[]
5595,559500,最軽量のモビール,17,[]
5596,559600,시험 점수,2,"['arithmetic', 'implementation', 'mathematics']"
5597,559700,과제 안 내신 분..?,1,['implementation']
5598,559800,카이사르 암호,4,"['implementation', 'string']"
5599,559900,カードの並び替え,6,"['implementation', 'simulation']"
5600,560000,품질검사,8,['implementation']
5601,560100,通学経路,10,"['combinatorics', 'dynamic programming', 'mathematics']"
5602,560200,問題1,4,"['implementation', 'sorting']"
5603,560300,問題2,5,"['implementation', 'string']"
5604,560400,問題3,7,"['backtracking', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'recursion']"
5605,560500,問題4,10,[]
5606,560600,問題5,17,"['data structures', 'segment tree', 'sweeping']"
5607,560700,問題 １,3,"['arithmetic', 'implementation', 'mathematics']"
5608,560800,問題 ２,5,"['data structures', 'set / map by hashing', 'implementation', 'string']"
5609,560900,問題 ３,7,"['implementation', 'simulation']"
5610,561000,問題 ４,13,[]
5611,561100,問題 ５,16,[]
5612,561200,터널의 입구와 출구,3,"['implementation', 'simulation']"
5613,561300,계산기 프로그램,3,"['arithmetic', 'implementation', 'mathematics']"
5614,561400,問題 3,8,"['data structures', 'hashing', 'set / map by hashing', 'sorting']"
5615,561500,아파트 임대,20,"['mathematics', 'miller–rabin', 'number theory', 'primality test']"
5616,561600,로드샵,10,"['arbitrary precision / big integers', 'combinatorics', 'mathematics']"
5617,561700,問題 1,4,"['geometry', 'mathematics', 'pythagoras theorem']"
5618,561800,공약수,4,"['bruteforcing', 'mathematics', 'number theory']"
5619,561900,세 번째,9,"['bruteforcing', 'data structures', 'greedy', 'implementation', 'mathematics', 'pigeonhole principle', 'priority queue', 'sorting']"
5620,562000,가장 가까운 두 점의 거리,0,"['divide and conquer', 'sweeping', 'sorting']"
5621,562100,問題 5,0,[]
5622,562200,다이얼,4,['implementation']
5623,562300,수열의 합,7,['mathematics']
5624,562400,좋은 수,13,['dynamic programming']
5625,562500,페스트리,14,['prefix sum']
5626,562600,제단,16,['dynamic programming']
5627,562700,박테리아,21,"['chinese remainder theorem', 'graph theory', 'mathematics', 'number theory']"
5628,562800,바이너리 행렬,0,[]
5631,563100,방사능,11,"['binary search', 'geometry', 'sorting']"
5632,563200,버젼 관리 IDE,20,"['data structures', 'rope', 'string']"
5635,563500,생일,6,"['implementation', 'sorting', 'string']"
5636,563600,소수 부분 문자열,10,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes', 'string']"
5637,563700,가장 긴 단어,7,"['parsing', 'regular expression', 'string']"
5638,563800,수문,10,"['binary search', 'bitmask', 'bruteforcing', 'dynamic programming']"
5639,563900,이진 검색 트리,12,"['graph theory', 'graph traversal', 'recursion', 'tree']"
5640,564000,즐거운 색칠,15,['bruteforcing']
5641,564100,겉보기에 쌍둥이 소수,11,"['arbitrary precision / big integers', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
5642,564200,퀸 게임,0,"['game theory', 'precomputation', 'sprague–grundy theorem']"
5643,564300,Spelling Suggestion,0,[]
5644,564400,Coalescing Continents,15,"['bruteforcing', 'implementation']"
5645,564500,Fence Making,11,['geometry']
5646,564600,트리 경로,0,[]
5647,564700,연속 합,19,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
5648,564800,역원소 정렬,7,['sorting']
5649,564900,Line of Best Fit,13,"['linear algebra', 'mathematics']"
5650,565000,Software Licenses,0,[]
5651,565100,완전 중요한 간선,20,['maximum flow']
5655,565500,평점,0,[]
5656,565600,비교 연산자,4,"['implementation', 'string']"
5666,566600,Hot Dogs,3,"['arithmetic', 'implementation', 'mathematics']"
5667,566700,Tornado!,6,[]
5668,566800,Arranging Heaps,20,[]
5669,566900,Boxes and Stones,0,[]
5670,567000,휴대폰 자판,17,"['data structures', 'string', 'tree', 'trie']"
5671,567100,호텔 방 번호,6,"['bruteforcing', 'mathematics']"
5672,567200,Environment Protection,0,[]
5673,567300,Fix the Pond,0,[]
5674,567400,Game of Tiles,0,[]
5675,567500,시침과 분침,5,"['implementation', 'mathematics', 'simulation']"
5676,567600,음주 코딩,15,"['segment tree', 'data structures']"
5677,567700,Joining Couples,19,"['case work', 'graph theory', 'lowest common ancestor', 'topological sorting', 'tree']"
5678,567800,Bakugan,4,['implementation']
5679,567900,Hailstone Sequences,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
5680,568000,Army buddies,0,[]
5681,568100,공 쌓기,15,"['dynamic programming', 'prefix sum']"
5682,568200,Candy’s Candy,0,[]
5683,568300,상학어,0,[]
5684,568400,Electrical Pollution,0,[]
5685,568500,파일 검색,0,[]
5686,568600,Garden Fence,0,[]
5687,568700,Hedge Mazes,0,[]
5688,568800,In Braille,6,"['implementation', 'string']"
5689,568900,Jupiter Attacks!,19,[]
5690,569000,King’s Poker,5,['case work']
5691,569100,평균 중앙값 문제,4,"['arithmetic', 'mathematics']"
5692,569200,팩토리얼 진법,4,"['arithmetic', 'mathematics']"
5693,569300,Ants Colony,0,[]
5694,569400,Bingo!,5,"['implementation', 'mathematics']"
5695,569500,공원점,0,[]
5696,569600,숫자 세기,12,['mathematics']
5697,569700,Electric Needs,0,[]
5698,569800,Tautogram,4,"['implementation', 'parsing', 'string']"
5699,569900,문자열 농장,21,"['aho-corasick', 'data structures', 'dynamic programming', 'tree', 'trie']"
5700,570000,활동과잉 소년 강산이,0,[]
5701,570100,Ingenious Metro,0,[]
5702,570200,Jollo,11,['bruteforcing']
5703,570300,Kids’ Wishes,0,[]
5704,570400,팬그램,4,"['implementation', 'string']"
5705,570500,Hexagonal Tiles,7,[]
5706,570600,Another Crisis,0,[]
5707,570700,Brothers,11,"['implementation', 'simulation']"
5708,570800,Code Lock,0,[]
5709,570900,Dinner Hall,0,[]
5710,571000,전기 요금,12,"['binary search', 'implementation', 'mathematics']"
5711,571100,File Recover,0,[]
5712,571200,Grapevine,0,[]
5713,571300,Hooligan,0,[]
5714,571400,Isosceles Triangles,0,[]
5715,571500,Jingle Composing,4,['string']
5716,571600,Klingon Levels,6,"['implementation', 'mathematics']"
5717,571700,상근이의 친구들,2,"['arithmetic', 'mathematics']"
5718,571800,Abwords,0,[]
5719,571900,거의 최단 경로,16,"[""dijkstra's"", 'graph theory', 'graph traversal']"
5720,572000,진법 알아내기,0,[]
5721,572100,사탕 줍기 대회,12,['dynamic programming']
5722,572200,DNA 부분 수열,0,[]
5723,572300,Electricity,7,['implementation']
5724,572400,파인만,3,"['arithmetic', 'mathematics']"
5725,572500,Pole Position,6,['implementation']
5726,572600,Higgs Boson,0,[]
5727,572700,Traveling Shoemaker Problem,0,[]
5728,572800,Bora Bora,0,[]
5729,572900,수축하는 다각형,15,[]
5730,573000,Acquapia,0,[]
5731,573100,Ambiguous Codes,0,[]
5732,573200,Ballroom Lights,0,[]
5733,573300,Car Plates Competition,12,[]
5734,573400,Drop the Triples,0,[]
5735,573500,Emoticons :-),19,"['aho-corasick', 'data structures', 'tree', 'trie']"
5736,573600,Finding Seats,14,"['binary search', 'dynamic programming', 'prefix sum']"
5737,573700,Galou is back!,13,"['bipartite graph', 'graph theory', 'graph traversal']"
5738,573800,He is offside!,5,"['implementation', 'sorting']"
5739,573900,ICPC Scoreboard,0,[]
5740,574000,Justice League,0,[]
5741,574100,Soccer League,7,['sorting']
5742,574200,Weekend Lottery,5,['implementation']
5743,574300,Lazy Jumping Frog,14,"[""dijkstra's"", 'graph theory', 'prefix sum']"
5744,574400,Jukebox,0,[]
5745,574500,Bubble Maps,0,[]
5746,574600,Onion Layers,17,[]
5747,574700,Odd or Even,5,"['greedy', 'mathematics']"
5748,574800,Power Generation,16,"['depth-first search', 'graph theory', 'graph traversal', 'greedy']"
5749,574900,Report Recovery,0,[]
5750,575000,Turkish Roulette,0,[]
5751,575100,Head or Tail,3,['implementation']
5752,575200,Mission Impossible,0,[]
5753,575300,Pascal Library,3,['implementation']
5754,575400,ICPC Strikes Again,0,[]
5755,575500,Optical Fiber,0,[]
5756,575600,Where Are My Genes,0,[]
5757,575700,Computer DJ,0,[]
5758,575800,P-Networks,11,"['constructive', 'sorting']"
5759,575900,Light Up,0,[]
5760,576000,Land Division Tax,0,[]
5761,576100,Petanque,0,[]
5762,576200,Long Night of Museums,0,[]
5763,576300,Magic Trick,7,['implementation']
5764,576400,Two-Stacks Solitaire,0,[]
5765,576500,Zing Zhu’s Oyster Farm,0,[]
5766,576600,할아버지는 유명해!,7,['implementation']
5767,576700,Cutting Edge,0,[]
5768,576800,Divide and Conquer,5,[]
5769,576900,Make a Guess,0,[]
5770,577000,Dice,5,"['implementation', 'simulation']"
5771,577100,Secure Region,0,[]
5772,577200,Runner Pawns,0,[]
5773,577300,The Splitting Club,0,[]
5774,577400,Kryptonite Mine,0,[]
5775,577500,X-Mart,0,[]
5776,577600,Telecommunication Partners,0,[]
5777,577700,Child Play,0,[]
5778,577800,Fake tickets,4,['implementation']
5779,577900,Square Lottery,0,[]
5780,578000,Uncle Tom’s Inherited Land,18,"['bipartite matching', 'maximum flow']"
5781,578100,Grandpa’s Rubik Cube,16,"['implementation', 'simulation']"
5782,578200,This Sentence is False,0,[]
5783,578300,Will Indiana Jones Get There?,0,[]
5784,578400,Duty Free Shop,0,[]
5785,578500,Not Too Convex Hull,19,"['convex hull', 'dynamic programming', 'geometry']"
5786,578600,"I hate SPAM, but some people love it",12,"['breadth-first search', 'graph theory', 'graph traversal']"
5787,578700,Noise Effect,7,"['bruteforcing', 'implementation']"
5788,578800,Supermarket,10,[]
5789,578900,한다 안한다,4,"['implementation', 'string']"
5790,579000,Log Books,0,[]
5791,579100,Myth Busters,0,[]
5792,579200,CrossNumber,0,[]
5793,579300,Movers Problems,0,[]
5794,579400,Monkey Business,0,[]
5795,579500,Fridge lock,0,[]
5796,579600,Fat Ninjas,0,[]
5797,579700,Class Packing,12,"['dynamic programming', 'greedy']"
5798,579800,Esspe-Peasee,20,"['extended euclidean algorithm', 'mathematics', 'number theory']"
5799,579900,Slithering Serpent,0,[]
5800,580000,성적 통계,6,"['implementation', 'sorting']"
5801,580100,Avoiding a disaster,7,[]
5802,580200,Roll-call in Woop Woop High,0,[]
5803,580300,Difficult Routes,0,[]
5804,580400,RealPhobia,18,"['euclidean algorithm', 'extended euclidean algorithm', 'mathematics', 'number theory']"
5805,580500,Insidious Branding,0,[]
5806,580600,Help-or-else,0,[]
5807,580700,Pahom on Water,0,[]
5808,580800,Detour Buster,0,[]
5809,580900,Oil Skimming,0,[]
5810,581000,Numbers Game,0,[]
5811,581100,낙하산 고리들,24,"['case work', 'data structures', 'disjoint set', 'graph theory', 'implementation']"
5812,581200,크래이피쉬 글쓰는 기계,19,"['data structures', 'sparse table', 'tree']"
5813,581300,이상적인 도시,24,"['dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
5814,581400,마상시합 토너먼트,22,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'lowest common ancestor', 'segment tree', 'tree']"
5815,581500,HIPERPROSTOR,20,"[""dijkstra's"", 'graph theory', 'mathematics']"
5816,581600,ROTACIJE,22,"['constructive', 'implementation']"
5817,581700,고통받는 난쟁이들,17,"['data structures', 'segment tree']"
5818,581800,SPIJUNI,14,"['graph theory', 'minimum spanning tree']"
5819,581900,열대 식물원,22,"['graph theory', 'graph traversal']"
5820,582000,경주,21,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'tree']"
5821,582100,쌀 창고,17,"['binary search', 'prefix sum', 'two-pointer']"
5822,582200,악어의 지하 도시,20,"[""dijkstra's"", 'graph theory']"
5823,582300,코끼리,26,"['greedy', 'square root decomposition']"
5824,582400,Photo,22,[]
5825,582500,Yin and Yang,22,[]
5826,582600,Figure Eight,20,[]
5827,582700,What's Up With Gravity,14,"['0-1 bfs', ""dijkstra's"", 'graph theory', 'implementation', 'simulation']"
5828,582800,Fuel Economy,16,"['data structures', 'greedy', 'stack']"
5829,582900,Luxury River Cruise,12,"['depth-first search', 'graph theory', 'graph traversal']"
5830,583000,Bovine Ballet,11,"['geometry', 'implementation', 'simulation']"
5831,583100,Blink,12,"['bitmask', 'graph theory', 'implementation']"
5832,583200,Photo,13,"['greedy', 'sorting']"
5833,583300,Haywire,16,"['backtracking', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'heuristics', 'meet in the middle']"
5834,583400,The Cow Run,18,['dynamic programming']
5835,583500,Hill Walk,0,[]
5836,583600,Necklace,20,"['knuth–morris–pratt', 'string']"
5837,583700,Poker Hands,11,['greedy']
5838,583800,Farm Painting,16,"['data structures', 'segment tree', 'sorting', 'sweeping', 'set / map by trees']"
5839,583900,Cow Race,6,"['implementation', 'simulation']"
5840,584000,Breed Proximity,6,['implementation']
5841,584100,Breed Assignment,9,['backtracking']
5842,584200,Partitioning the Farm,18,"['binary search', 'bitmask', 'bruteforcing']"
5843,584300,Taxi,20,"['mathematics', 'prefix sum']"
5844,584400,Route Design,17,"['dynamic programming', 'sorting']"
5845,584500,Perimeter,16,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by trees']"
5846,584600,Tractor,15,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal']"
5847,584700,Milk Scheduling,13,"['dynamic programming', 'graph theory', 'topological sorting']"
5848,584800,Message Relay,9,"['bruteforcing', 'graph theory', 'graph traversal', 'implementation']"
5849,584900,Cow Crossings,12,"['data structures', 'sorting', 'stack']"
5850,585000,Perimeter,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
5851,585100,Cow Lineup,17,"['value / coordinate compression', 'data structures', 'sliding window', 'two-pointer']"
5852,585200,Island Travels,17,"['breadth-first search', 'bitmask', ""dijkstra's"", 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal', 'implementation', 'travelling salesman problem']"
5853,585300,Seating,21,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
5854,585400,Painting the Fence,13,['sweeping']
5855,585500,Square Overlap,16,['sweeping']
5856,585600,Party Invitations,11,"['data structures', 'implementation', 'queue', 'set / map by trees']"
5857,585700,Mirrors,13,"['bruteforcing', 'implementation', 'simulation']"
5858,585800,Painting the Fence,13,['sweeping']
5859,585900,Liars and Truth Tellers,14,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
5860,586000,Gangs of Instanbull/Cowstantinople,20,"['greedy', 'implementation', 'simulation']"
5861,586100,First!,19,"['data structures', 'floyd–warshall', 'graph theory', 'string', 'tree', 'trie']"
5862,586200,Running Away From the Barn,18,"['data structures', 'smaller to larger technique']"
5863,586300,Crazy Fences,18,"['geometry', 'point in non-convex polygon check']"
5864,586400,Wifi Setup,12,['dynamic programming']
5865,586500,Milk Routing,14,"[""dijkstra's"", 'graph theory']"
5866,586600,Meet and Greet,6,"['implementation', 'simulation']"
5867,586700,Scrambled Letters,12,"['binary search', 'sorting']"
5868,586800,Crazy Fences,16,"['value / coordinate compression', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
5869,586900,Balanced Cow Breeds,16,['dynamic programming']
5870,587000,Concurrently Balanced Strings,20,"['binary search', 'data structures', 'prefix sum', 'stack']"
5871,587100,Balanced Trees,23,"['depth-first search', 'graph theory', 'graph traversal', 'greedy']"
5872,587200,Clumsy Cows,11,['greedy']
5873,587300,Distant Pastures,13,"['bruteforcing', ""dijkstra's"", 'floyd–warshall', 'graph theory']"
5874,587400,소를 찾아라,7,"['combinatorics', 'mathematics', 'prefix sum', 'sweeping']"
5875,587500,오타,13,"['data structures', 'prefix sum']"
5876,587600,Horseshoes,9,"['backtracking', 'bruteforcing', 'recursion']"
5877,587700,Tied Down,0,[]
5878,587800,Bookshelf,21,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
5879,587900,Balanced Cow Subsets,18,"['bitmask', 'meet in the middle']"
5880,588000,Unlocking Blocks,17,"['breadth-first search', 'geometry', 'graph theory', 'graph traversal', 'implementation']"
5881,588100,Bookshelf,12,['dynamic programming']
5882,588200,Running Laps,18,"['data structures', 'mathematics', 'prefix sum', 'segment tree', 'sorting']"
5883,588300,아이폰 9S,7,"['bruteforcing', 'implementation']"
5884,588400,감시 카메라,12,"['bruteforcing', 'geometry', 'sorting']"
5885,588500,Islands,10,"['implementation', 'sorting', 'sweeping']"
5886,588600,Unlocking Blocks,16,"['breadth-first search', 'bruteforcing', 'depth-first search', 'geometry', 'graph theory', 'graph traversal', 'implementation']"
5887,588700,Large Banner,0,[]
5888,588800,Haybale Restacking,18,"['mathematics', 'sorting']"
5889,588900,Cows in a Skyscraper,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
5890,589000,Tractor,12,"['0-1 bfs', 'breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
5891,589100,Flowerpot,15,"['binary search', 'data structures', 'deque', 'segment tree', 'sliding window', 'two-pointer']"
5892,589200,Landscaping,16,"['dynamic programming', 'maximum flow', 'minimum cost maximum flow']"
5893,589300,17배,2,"['arbitrary precision / big integers', 'implementation', 'mathematics']"
5894,589400,Connect the Cows,11,"['backtracking', 'bruteforcing', 'geometry', 'implementation']"
5895,589500,Wrong Directions,17,"['data structures', 'dynamic programming', 'geometry', 'set / map by hashing', 'implementation', 'prefix sum', 'simulation']"
5896,589600,효율적으로 소 사기,18,"['data structures', 'greedy', 'priority queue']"
5897,589700,Symmetry,0,[]
5898,589800,Nearby Cows,16,"['dynamic programming', 'dynamic programming on trees', 'inclusion and exclusion', 'tree']"
5899,589900,Overplanting,14,"['data structures', 'sweeping']"
5900,590000,Cow IDs,13,"['combinatorics', 'dynamic programming', 'mathematics']"
5901,590100,Relocation,15,"['bruteforcing', ""dijkstra's"", 'graph theory']"
5902,590200,Rope Folding,9,"['bruteforcing', 'implementation']"
5903,590300,Overplanting,13,"['inclusion and exclusion', 'sorting', 'sweeping']"
5904,590400,Moo 게임,11,"['divide and conquer', 'recursion']"
5905,590500,악당 로봇,20,"['aho-corasick', 'data structures', 'dynamic programming', 'string', 'tree', 'trie']"
5906,590600,Cow Run,0,[]
5907,590700,Bovine Alliance,16,"['combinatorics', 'data structures', 'graph theory', 'mathematics']"
5908,590800,Delivery Route,17,"['breadth-first search', 'value / coordinate compression', ""dijkstra's"", 'graph theory', 'graph traversal']"
5909,590900,Bale Share,15,"['dynamic programming', 'knapsack']"
5910,591000,Mountain Climbing,18,['greedy']
5911,591100,선물,8,"['bruteforcing', 'greedy', 'sorting']"
5912,591200,Haybale Stacking,10,['prefix sum']
5913,591300,준규와 사과,11,"['backtracking', 'bruteforcing']"
5914,591400,Cow Photography,17,['sorting']
5915,591500,Simplifying the Farm,18,"['graph theory', 'minimum spanning tree']"
5916,591600,농장 관리,20,"['data structures', 'heavy-light decomposition', 'segment tree with lazy propagation', 'lowest common ancestor', 'segment tree', 'tree']"
5917,591700,Roadblock,14,"[""dijkstra's"", 'graph theory']"
5918,591800,Umbrellas for Cows,14,['dynamic programming']
5919,591900,Hay Bales,4,"['implementation', 'mathematics']"
5920,592000,Cow Photography,16,"['ad-hoc', 'sorting']"
5921,592100,Escaping the Farm,8,"['bruteforcing', 'implementation']"
5922,592200,Above the Median,17,"['data structures', 'segment tree']"
5923,592300,바이너리 스도쿠,20,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
5924,592400,Cow Steeplechase,18,"['bipartite matching', 'geometry']"
5925,592500,Cow Beauty Pageant,15,"['breadth-first search', 'graph theory', 'graph traversal']"
5926,592600,Cow Lineup,13,"['value / coordinate compression', 'sorting', 'two-pointer']"
5927,592700,Tile Exchanging,13,"['dynamic programming', 'knapsack']"
5928,592800,Contest Timing,2,"['arithmetic', 'implementation', 'mathematics']"
5929,592900,Awkward Digits,5,"['bruteforcing', 'implementation', 'mathematics', 'string']"
5930,593000,Moo Sick,7,"['bruteforcing', 'implementation', 'sorting']"
5931,593100,Cow Beauty Pageant,10,"['breadth-first search', 'graph theory', 'graph traversal']"
5932,593200,Cow Photographs,18,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
5933,593300,Buying Feed,20,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
5934,593400,Visiting Cows,14,"['dynamic programming', 'dynamic programming on trees', 'tree']"
5935,593500,Banner,12,"['bruteforcing', 'euclidean algorithm', 'mathematics', 'number theory']"
5936,593600,Candy,13,"['depth-first search', 'graph theory', 'graph traversal', 'knapsack']"
5937,593700,Chocolate Milk,13,"['graph theory', 'topological sorting']"
5938,593800,Daisy Chains in the Field,8,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
5939,593900,Race Results,6,"['implementation', 'sorting']"
5940,594000,Math Practice,4,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics', 'precomputation']"
5941,594100,Cow Calisthenics,20,"['binary search', 'greedy']"
5942,594200,Big Macs Around the World,15,"['bellman–ford', 'graph theory', 'mathematics']"
5943,594300,Threatening Letter,22,"['data structures', 'segment tree', 'string', 'suffix array and lcp array']"
5944,594400,Apple Delivery,12,"[""dijkstra's"", 'graph theory']"
5945,594500,Treasure Chest,13,"['dynamic programming', 'game theory']"
5946,594600,The Trough Game,10,"['bitmask', 'bruteforcing']"
5947,594700,Book Club,5,"['bruteforcing', 'implementation']"
5948,594800,Bad Random Numbers,5,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
5949,594900,Adding Commas,3,['string']
5950,595000,Bottleneck,23,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'priority queue', 'slope trick', 'smaller to larger technique', 'tree']"
5951,595100,The Continental Cowngress,18,"['2-sat', 'graph theory', 'strongly connected component']"
5952,595200,Roads and Planes,19,"[""dijkstra's"", 'graph theory', 'topological sorting']"
5953,595300,Profits,10,['dynamic programming']
5954,595400,Dividing the Gold,13,"['dynamic programming', 'knapsack']"
5955,595500,Traffic Lights,16,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal', 'implementation', 'simulation']"
5956,595600,Symmetry,4,"['mathematics', 'recursion']"
5957,595700,Cleaning the Dishes,6,"['data structures', 'implementation', 'simulation', 'stack']"
5958,595800,Space Exploration,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
5959,595900,Crop Circles,4,"['bruteforcing', 'geometry', 'pythagoras theorem']"
5960,596000,Cowlphabet,13,[]
5961,596100,The Lost Cows,0,[]
5962,596200,Generic Cow Protests,18,"['value / coordinate compression', 'data structures', 'dynamic programming', 'prefix sum', 'segment tree']"
5963,596300,Cow Line,10,"['combinatorics', 'mathematics']"
5964,596400,Best Parenthesis,9,"['data structures', 'mathematics', 'stack']"
5965,596500,The Triangle,15,"['prefix sum', 'sweeping']"
5966,596600,Cow Cotillion,7,"['data structures', 'stack']"
5967,596700,Cow Treats,7,"['implementation', 'simulation']"
5968,596800,Hexagonal Pasture Network,12,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'mathematics']"
5969,596900,Brownie Slicing,0,[]
5970,597000,Tree Decoration,0,[]
5971,597100,Meeting Place,12,"['lowest common ancestor', 'tree']"
5972,597200,택배 배송,11,"[""dijkstra's"", 'graph theory']"
5973,597300,Bovine Bridge Battle,13,"['ad-hoc', 'data structures', 'set / map by trees']"
5974,597400,Lucky Charms,4,"['arithmetic', 'mathematics']"
5975,597500,Pathfinding,9,"['breadth-first search', 'graph theory', 'graph traversal']"
5976,597600,A spiral walk,6,['implementation']
5977,597700,Mowing the Lawn,18,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
5978,597800,Odd degrees,19,"['depth-first search', 'graph theory', 'graph traversal']"
5979,597900,납땜하기,26,"['convex hull trick', 'dynamic programming', 'dynamic programming on trees', 'smaller to larger technique', 'tree']"
5980,598000,Corn Maze,11,"['breadth-first search', 'graph theory', 'graph traversal']"
5981,598100,Cow Checkers,18,['game theory']
5982,598200,Forgotten Password,15,"['dynamic programming', 'string']"
5983,598300,Learning Languages,15,"['data structures', 'disjoint set', 'graph theory']"
5984,598400,The Bovine Fire Drill,5,"['implementation', 'simulation']"
5985,598500,Skewed Sorting,7,"['divide and conquer', 'implementation', 'recursion']"
5986,598600,3D Space Exploration,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
5987,598700,String Function Encoding,5,"['implementation', 'string']"
5988,598800,홀수일까 짝수일까,3,"['arbitrary precision / big integers', 'arithmetic', 'mathematics', 'string']"
5989,598900,The Robot Plow,5,['implementation']
5990,599000,Barn Echoes,8,[]
5991,599100,Papaya Jungle,7,"['graph theory', 'graph traversal', 'implementation', 'simulation']"
5992,599200,The Leisurely Stroll,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
5993,599300,Invasion of the Milkweed,9,"['breadth-first search', 'graph theory', 'graph traversal']"
5994,599400,Allowance,0,[]
5995,599500,Bessie's Weight Problem,11,"['dynamic programming', 'knapsack']"
5996,599600,Heat Wave,11,"[""dijkstra's"", 'graph theory']"
5997,599700,Who Brings the Cookies?,18,"['bipartite matching', 'maximum flow']"
5998,599800,Lights,16,"['bit set', 'meet in the middle']"
5999,599900,Cow Rescue,0,[]
6000,600000,동전 게임,18,"['dynamic programming', 'game theory']"
6001,600100,The Grand Farm-off,7,"['mathematics', 'sorting']"
6002,600200,Job Hunt,12,"['bellman–ford', 'graph theory']"
6003,600300,Claustrophobic Cows,5,"['bruteforcing', 'geometry', 'pythagoras theorem']"
6004,600400,The Chivalrous Cow,9,"['breadth-first search', 'graph theory', 'graph traversal']"
6005,600500,Cow Pinball,10,"['bruteforcing', 'dynamic programming']"
6006,600600,Dizzy Cows,17,"['graph theory', 'topological sorting']"
6007,600700,Cow Toll Paths,0,[]
6008,600800,Video Game Troubles,15,['dynamic programming']
6009,600900,Bobsledding,16,[]
6010,601000,Music Notes,9,['binary search']
6011,601100,Selfish Grazing,8,['greedy']
6012,601200,The Big Dance,8,['recursion']
6013,601300,Lonesome Partners,4,['bruteforcing']
6014,601400,Shorter Musical Notes,5,['implementation']
6015,601500,Taking Turns,0,[]
6016,601600,Shipping Around an Island,0,[]
6017,601700,Cow Telephones,0,[]
6018,601800,Tea Time,10,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
6019,601900,"Buying Feed, II",8,"['dynamic programming', 'sorting']"
6020,602000,Cheese Towers,11,[]
6021,602100,DNA Sequencing,6,"['implementation', 'string']"
6022,602200,Theater Seating,8,"['geometry', 'implementation', 'pythagoras theorem', 'sorting']"
6023,602300,Word Morph,11,"['breadth-first search', 'binary search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation', 'precomputation', 'sorting', 'string']"
6024,602400,Covering the Corral,0,[]
6025,602500,Cows on Ice,0,[]
6026,602600,Slowing down,0,[]
6027,602700,Chocolate Buying,11,[]
6028,602800,Chocolate Giving,12,"[""dijkstra's"", 'graph theory']"
6029,602900,Chocolate Eating,0,[]
6030,603000,Scavenger Hunt,3,"['bruteforcing', 'mathematics', 'number theory']"
6031,603100,Feeding Time,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
6032,603200,Toy Shopping,6,"['greedy', 'implementation', 'sorting']"
6033,603300,Great Cow Gathering,0,[]
6034,603400,Barn Allocation,0,[]
6035,603500,StarCowraft,21,[]
6036,603600,The Rock Game,11,[]
6037,603700,Test Taking,0,[]
6038,603800,Need For Speed,13,['greedy']
6039,603900,Need For Speed,7,"['bitmask', 'bruteforcing']"
6040,604000,Hexadecimal Conversion,4,"['arbitrary precision / big integers', 'implementation', 'mathematics']"
6041,604100,MasterMind,9,"['bruteforcing', 'implementation']"
6042,604200,Longest Contiguous Subsequence,10,"['bruteforcing', 'dynamic programming']"
6043,604300,Cow Politics,17,"['data structures', 'greedy', 'lowest common ancestor', 'tree', 'set / map by trees']"
6044,604400,Rocks and Trees,0,[]
6045,604500,Driving Out the Piggies,0,[]
6047,604700,Cow Hopscotch,21,['dynamic programming']
6048,604800,Water Slides,0,[]
6049,604900,Triangle Counting,18,[]
6050,605000,Mountain Watching,12,"['dynamic programming', 'implementation']"
6051,605100,시간 여행,13,"['data structures', 'implementation', 'stack']"
6052,605200,Cow Pals,6,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
6053,605300,Mountain Watching,7,['ad-hoc']
6054,605400,Relay race,11,"[""dijkstra's"", 'graph theory', 'implementation', 'simulation']"
6056,605600,Darts,6,['bruteforcing']
6057,605700,Building A Fence,13,"['dynamic programming', 'mathematics']"
6058,605800,Machine Schedule,0,[]
6059,605900,Pasture Walking,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'lowest common ancestor', 'tree']"
6060,606000,Wheel Rotation,4,"['implementation', 'mathematics']"
6061,606100,Holedox Moving,0,[]
6062,606200,Mixed Up Cows,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
6063,606300,Rubik's Cube,16,"['implementation', 'simulation']"
6064,606400,카잉 달력,10,"['chinese remainder theorem', 'mathematics', 'number theory']"
6065,606500,Watering - 5,8,[]
6066,606600,Buying Hay,12,"['dynamic programming', 'knapsack']"
6067,606700,Guarding the Farm,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
6068,606800,시간 관리하기,11,"['greedy', 'sorting']"
6069,606900,Switching Lights,5,"['implementation', 'simulation']"
6070,607000,Chocolate,0,[]
6071,607100,Game Prediction,0,[]
6072,607200,Trick or Treat on the Farm,13,"['depth-first search', 'graph theory', 'graph traversal']"
6073,607300,Secret Message,16,"['data structures', 'tree', 'trie']"
6074,607400,Winning Checkers,0,[]
6075,607500,Largest Fence,22,[]
6076,607600,Hay For Sale,9,[]
6077,607700,Patting Heads,0,[]
6078,607800,Jigsaw Puzzles,0,[]
6079,607900,Checkers,12,"['backtracking', 'bruteforcing', 'implementation']"
6080,608000,Bad Grass,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
6081,608100,Hay Expenses,4,"['implementation', 'prefix sum']"
6082,608200,Earthquake Damage,0,[]
6083,608300,The Baric Bovine,0,[]
6084,608400,Safe Travel,0,[]
6085,608500,Best Spot,0,[]
6086,608600,최대 유량,0,"['graph theory', 'implementation', 'simulation']"
6087,608700,레이저 통신,13,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
6089,608900,Pumps and Pipes,0,[]
6090,609000,Casting,25,"['geometry', 'rotating calipers']"
6091,609100,핑크 플로이드,15,"['graph theory', 'minimum spanning tree']"
6092,609200,Strange Towers of Hanoi,7,['precomputation']
6093,609300,Competition,0,[]
6094,609400,The Leprechaun,0,[]
6095,609500,Surround the Islands,12,"['data structures', 'disjoint set']"
6096,609600,Bulls and Cows,11,['dynamic programming']
6097,609700,Cruel Math Teacher,4,"['arbitrary precision / big integers', 'arithmetic', 'mathematics', 'string']"
6098,609800,"Cruel Math Teacher, II",12,"['mathematics', 'numerical analysis', 'parametric search']"
6099,609900,Exams,12,"['binary search', 'meet in the middle']"
6100,610000,Moon Mooing,13,[]
6101,610100,식당,18,['dynamic programming']
6102,610200,Earthquake Damage 2,0,[]
6103,610300,Sand Castle,9,"['greedy', 'sorting']"
6104,610400,Cow Frisbee Team,12,"['dynamic programming', 'mathematics', 'number theory']"
6105,610500,Look Up,9,"['data structures', 'stack']"
6106,610600,Payback,9,['greedy']
6107,610700,Plumbing the Pond,6,"['bruteforcing', 'implementation']"
6108,610800,The Perfect Cow,6,"['implementation', 'sorting']"
6109,610900,Dairy Queen,10,"['dynamic programming', 'knapsack']"
6110,611000,Watering - 2,6,"['ad-hoc', 'constructive']"
6111,611100,Watering - 3,7,"['ad-hoc', 'constructive']"
6112,611200,Holiday Painting,0,[]
6114,611400,Ski Lessons,11,['dynamic programming']
6115,611500,Work Scheduling,15,"['data structures', 'greedy', 'priority queue']"
6116,611600,케이크,20,['dynamic programming']
6117,611700,Bovine Embroidery,21,"['data structures', 'geometry', 'sweeping']"
6118,611800,숨바꼭질,10,"['breadth-first search', 'graph theory', 'graph traversal']"
6119,611900,Cow Line,8,"['data structures', 'deque']"
6120,612000,Cow Digit Game,12,"['dynamic programming', 'game theory']"
6121,612100,Grazing2,0,[]
6122,612200,Time Cards,5,"['implementation', 'simulation']"
6123,612300,O Those Fads,6,"['greedy', 'sorting']"
6124,612400,Good Grass,6,['bruteforcing']
6125,612500,Treasure Cave,9,"['graph theory', 'graph traversal', 'tree']"
6126,612600,Cow Cash,9,"['dynamic programming', 'knapsack']"
6127,612700,Super Paintball,7,[]
6128,612800,Bessie's Secret Pasture,9,['bruteforcing']
6129,612900,Obstacle Course,11,"['0-1 bfs', 'breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
6130,613000,Privileged Cows,10,"['ad-hoc', 'greedy', 'mathematics']"
6131,613100,완전 제곱수,3,"['arithmetic', 'bruteforcing', 'mathematics']"
6132,613200,전화선,18,['dynamic programming']
6133,613300,Random Walk,0,[]
6134,613400,Sunscreen,17,['greedy']
6135,613500,Cow Hurdles,12,"['floyd–warshall', 'graph theory']"
6136,613600,Milking Time,12,"['dynamic programming', 'sorting']"
6137,613700,문자열 생성,12,"['greedy', 'string', 'two-pointer']"
6138,613800,Exploration,6,"['implementation', 'simulation', 'sorting']"
6139,613900,Speed Reading,4,"['implementation', 'mathematics', 'simulation']"
6140,614000,Radar Installation,0,[]
6141,614100,Sightseeing Cows,19,"['bellman–ford', 'binary search', 'graph theory', 'parametric search']"
6142,614200,Gourmet Grazers,17,"['binary search', 'data structures', 'greedy', 'set / map by trees']"
6143,614300,문자열 생성 2,14,"['greedy', 'string', 'suffix array and lcp array']"
6144,614400,Charm Bracelet,10,"['dynamic programming', 'knapsack', 'sliding window']"
6145,614500,Watering - 4,8,"['case work', 'precomputation']"
6146,614600,신아를 만나러,10,"['breadth-first search', 'graph theory', 'graph traversal']"
6147,614700,Bookshelf,6,"['greedy', 'sorting']"
6148,614800,Bookshelf 2,7,"['backtracking', 'bitmask', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
6149,614900,Card Stacking,7,"['data structures', 'implementation', 'queue', 'simulation']"
6150,615000,Summing Sums,18,"['exponentiation by squaring', 'mathematics', 'number theory']"
6151,615100,The Bovine Accordion and Banjo Orchestra,20,[]
6152,615200,Treasure,0,[]
6153,615300,Haybale Guessing,20,"['binary search', 'data structures', 'segment tree with lazy propagation', 'segment tree']"
6154,615400,Artificial Lake,20,[]
6155,615500,Cell Phone Network,18,"['dynamic programming', 'dynamic programming on trees', 'tree']"
6156,615600,Cow Contest,12,"['floyd–warshall', 'graph theory', 'graph traversal']"
6159,615900,코스튬 파티,6,"['bruteforcing', 'prefix sum', 'sorting', 'two-pointer']"
6160,616000,Election Time,6,"['implementation', 'mathematics', 'sorting']"
6161,616100,iCow,5,"['implementation', 'simulation']"
6162,616200,Superlatives,3,"['implementation', 'mathematics']"
6164,616400,Hotel,20,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
6165,616500,Game of Lines,7,"['bruteforcing', 'mathematics']"
6166,616600,Meteor Shower,13,"['breadth-first search', 'graph theory', 'graph traversal']"
6167,616700,Eating Together,14,['dynamic programming']
6168,616800,Dining Cows,6,"['bruteforcing', 'prefix sum']"
6169,616900,Long Distance Racing,5,"['implementation', 'simulation']"
6170,617000,World Cup Noise,8,['dynamic programming']
6171,617100,땅따먹기,21,"['convex hull trick', 'dynamic programming']"
6172,617200,Cow Jogging,16,"['backtracking', ""dijkstra's"", 'graph theory', 'topological sorting']"
6173,617300,Pearl Pairing,14,"['constructive', 'greedy']"
6174,617400,The Loathesome Hay Baler,8,"['depth-first search', 'graph theory', 'graph traversal']"
6175,617500,Cow Travelling,12,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
6176,617600,River Crossing,12,['dynamic programming']
6177,617700,Statistics,6,"['implementation', 'sorting']"
6178,617800,Lake Making,7,"['implementation', 'simulation']"
6179,617900,Oh Those Rollers,8,"['depth-first search', 'geometry', 'graph theory', 'graph traversal', 'mathematics', 'pythagoras theorem']"
6180,618000,Crisis on the Farm,14,[]
6181,618100,플러드 필 (Flood Fill),21,"['data structures', 'divide and conquer', 'sweeping']"
6182,618200,Roads Around The Farm,9,"['bruteforcing', 'divide and conquer', 'mathematics', 'recursion']"
6183,618300,Word Power,12,"['bruteforcing', 'greedy', 'string']"
6184,618400,Cow Cars,13,"['greedy', 'sorting']"
6185,618500,Clear And Present Danger,11,"['floyd–warshall', 'graph theory']"
6186,618600,Best Grass,7,"['graph theory', 'graph traversal', 'implementation']"
6187,618700,Going to the Movies,7,"['backtracking', 'bruteforcing']"
6188,618800,Clear Cold Water,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
6189,618900,Munching,10,"['breadth-first search', 'graph theory', 'graph traversal']"
6190,619000,Another Cow Number Game,3,"['arithmetic', 'implementation', 'mathematics']"
6191,619100,Cows on Skates,11,"['breadth-first search', 'graph theory', 'graph traversal']"
6192,619200,Cow Pie Treasures,9,['dynamic programming']
6193,619300,Hungry Cows,9,['dynamic programming']
6194,619400,Building the Moat,16,"['convex hull', 'geometry']"
6195,619500,Fence Repair,12,"['data structures', 'greedy', 'priority queue']"
6196,619600,Corn Fields,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
6197,619700,Roadblocks,16,"[""dijkstra's"", 'graph theory']"
6198,619800,옥상 정원 꾸미기,11,"['data structures', 'stack']"
6199,619900,Big Square,12,"['bruteforcing', 'geometry']"
6200,620000,Round Numbers,18,"['combinatorics', 'dynamic programming', 'mathematics']"
6201,620100,New Cow Brands,9,"['backtracking', 'bruteforcing']"
6203,620300,Serious Cow Tag,7,"['geometry', 'implementation', 'simulation', 'sorting']"
6205,620500,The Fewest Coins,19,"['dynamic programming', 'knapsack']"
6206,620600,Milk Patterns,18,"['binary search', 'hashing', 'rabin–karp', 'string', 'suffix array and lcp array']"
6207,620700,Cow Picnic,10,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
6208,620800,Cow Roller Coaster,12,"['dynamic programming', 'knapsack']"
6209,620900,제자리 멀리뛰기,14,"['binary search', 'greedy', 'parametric search']"
6210,621000,Wonderprime Brands,18,"['backtracking', 'bruteforcing', 'implementation', 'mathematics', 'number theory', 'primality test']"
6211,621100,The Eating Puzzle,8,"['backtracking', 'bruteforcing']"
6212,621200,Dream Counting,6,"['bruteforcing', 'mathematics']"
6213,621300,Balanced Lineup,15,"['data structures', 'segment tree']"
6214,621400,Problem Solving,15,['dynamic programming']
6216,621600,Protecting the Flowers,14,"['greedy', 'mathematics', 'sorting']"
6217,621700,Tallest Cow,15,['ad-hoc']
6218,621800,Balanced Lineup,15,"['data structures', 'segment tree']"
6219,621900,소수의 자격,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
6220,622000,Making Change,9,['dynamic programming']
6221,622100,The Bale Tower,8,"['bruteforcing', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'sorting']"
6222,622200,Building A New Barn,15,[]
6223,622300,Cow Sorting,20,"['greedy', 'permutation cycle decomposition']"
6226,622600,Silver Lilypad Pond,16,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
6227,622700,Time Planner,0,[]
6228,622800,Cow Yahtzee,10,"['bruteforcing', 'parsing', 'string']"
6229,622900,Bronze Lilypad Pond,8,"['breadth-first search', 'graph theory', 'graph traversal']"
6230,623000,Buy One Get One Free,7,"['greedy', 'sorting', 'two-pointer']"
6231,623100,Gold Balanced Lineup,16,"['data structures', 'hashing', 'set / map by hashing', 'prefix sum', 'set / map by trees']"
6232,623200,Ranking the Cows,17,"['depth-first search', 'graph theory', 'graph traversal']"
6233,623300,Face The Right Way,14,"['prefix sum', 'sliding window']"
6235,623500,Argus,11,"['data structures', 'implementation', 'priority queue']"
6236,623600,용돈 관리,9,"['binary search', 'parametric search']"
6240,624000,Cheapest Palindrome,15,['dynamic programming']
6241,624100,Dining,20,['maximum flow']
6242,624200,City Horizon,13,"['data structures', 'set / map by hashing', 'sweeping', 'set / map by trees']"
6243,624300,Mileage Bank,0,[]
6244,624400,Moving Object Recognition,0,[]
6245,624500,Cow Solitaire,7,"['bruteforcing', 'dynamic programming']"
6246,624600,풍선 놀이,4,['implementation']
6247,624700,Widening of Channels,10,"['graph theory', 'graph traversal']"
6248,624800,Bronze Cow Party,11,"[""dijkstra's"", 'graph theory']"
6249,624900,TV Reports,3,['implementation']
6250,625000,ATM PIN Theft,9,"['combinatorics', 'implementation', 'mathematics']"
6251,625100,Leaking Dike,0,[]
6252,625200,Fire Evacuation Plan,0,[]
6253,625300,Forgetful Waiter,0,[]
6254,625400,Computerizing a Stockroom,0,[]
6255,625500,Harvesting a Farm,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
6256,625600,Rectangular Painting,0,[]
6257,625700,Corrupted BST,0,[]
6258,625800,Sightseeing,0,[]
6259,625900,WonderTeam,8,['mathematics']
6260,626000,Encrypted SMS,5,"['implementation', 'string']"
6261,626100,Hopeless Coach,0,[]
6262,626200,Yungom,14,"['data structures', 'greedy', 'priority queue']"
6263,626300,New Island,0,[]
6264,626400,Sub-dictionary,20,"['graph theory', 'strongly connected component', 'topological sorting']"
6265,626500,Sharif Super Computer,0,[]
6266,626600,Circle Artwork,0,[]
6267,626700,Crazy Bits,20,"['bitmask', 'maximum flow', 'minimum cost maximum flow']"
6268,626800,누리카베,24,"['backtracking', 'constructive', 'implementation']"
6269,626900,Team Arrangement,0,[]
6270,627000,Barbara Bennett's Wild Numbers,0,[]
6271,627100,Calculating Taxi Fare,0,[]
6272,627200,Party at Hali-Bula,17,[]
6273,627300,Against Mammoths,0,[]
6274,627400,Chessboard Dance,0,[]
6275,627500,Islands and Bridges,0,[]
6276,627600,Treasure of the Chimp Island,0,[]
6277,627700,Warez Test,0,[]
6278,627800,Zombie’s Treasure Chest,0,[]
6279,627900,삼각형 피자,17,"['combinatorics', 'implementation', 'mathematics', 'precomputation']"
6280,628000,Xavier is Learning to Count,24,"['combinatorics', 'fast fourier transform', 'mathematics']"
6281,628100,Winmine.exe,0,[]
6282,628200,Very Boring Homework,0,[]
6283,628300,Universal Question Answering System,0,[]
6284,628400,Triangles and Quadrangle,0,[]
6285,628500,Share the Cakes,0,[]
6286,628600,리벤지 오브 피보나치,19,"['arbitrary precision / big integers', 'data structures', 'mathematics', 'tree', 'trie']"
6287,628700,Quelling Blade,0,[]
6288,628800,Ball Machine,20,"['data structures', 'euler tour technique', 'lowest common ancestor', 'priority queue', 'sparse table', 'tree']"
6289,628900,무-팰린드롬 숫자,19,['dynamic programming']
6290,629000,Pipes,21,['graph theory']
6291,629100,Brunhilda’s Birthday,18,"['dynamic programming', 'greedy', 'mathematics', 'number theory']"
6292,629200,Tracks in the Snow,16,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
6293,629300,Vim,27,"['case work', 'dynamic programming']"
6294,629400,Solitaire,20,"['bruteforcing', 'implementation', 'meet in the middle']"
6295,629500,Left labyrinths,0,[]
6296,629600,Crazy Search,6,"['data structures', 'set / map by hashing']"
6297,629700,Intervals,22,"['breadth-first search', 'graph theory', 'graph traversal']"
6298,629800,Family,0,[]
6299,629900,Timetable,0,[]
6300,630000,단어 퍼즐,21,"['aho-corasick', 'data structures', 'implementation', 'string', 'tree', 'trie']"
6301,630100,Water Treatment Plants,0,[]
6302,630200,Servers,0,[]
6303,630300,Optimal Programs,0,[]
6304,630400,The die is cast,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'sorting']"
6305,630500,"It's not a Bug, it's a Feature!",0,[]
6306,630600,Reflections,0,[]
6307,630700,Going in circles on Alpha Centauri,0,[]
6308,630800,Blowing Fuses,6,"['implementation', 'simulation']"
6309,630900,Fast Food,0,[]
6310,631000,Sorting Slides,0,[]
6311,631100,Single-Player Games,0,[]
6312,631200,Triangles,18,['dynamic programming']
6313,631300,Instant Complexity,0,[]
6314,631400,There’s treasure everywhere!,9,"['geometry', 'implementation', 'parsing', 'simulation', 'string']"
6315,631500,Video Surveillance,9,"['ad-hoc', 'geometry']"
6316,631600,Pushing Boxes,14,"['breadth-first search', 'bit set', 'graph theory', 'graph traversal']"
6317,631700,Always on the run,0,[]
6318,631800,Box of Bricks,4,"['arithmetic', 'implementation', 'mathematics']"
6319,631900,Island of Logic,15,"['bruteforcing', 'case work', 'implementation', 'parsing', 'string']"
6320,632000,MBone,0,[]
6321,632100,IBM 빼기 1,3,"['string', 'implementation']"
6322,632200,직각 삼각형의 두 변,4,"['arithmetic', 'geometry', 'mathematics', 'pythagoras theorem']"
6323,632300,Carbon Dating,5,['mathematics']
6324,632400,URLs,10,"['case work', 'parsing', 'string']"
6325,632500,Definite Values,6,"['data structures', 'implementation', 'set / map by trees']"
6326,632600,Atlantis,11,"['value / coordinate compression', 'geometry', 'mathematics', 'sorting', 'sweeping']"
6327,632700,Cog-Wheels,0,[]
6328,632800,Erdös Numbers,13,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'string']"
6329,632900,Number Game,0,[]
6330,633000,Ouroboros Snake,0,[]
6331,633100,Fold-up Patterns,0,[]
6332,633200,Railroad,0,[]
6333,633300,Smith Numbers,12,"['bruteforcing', 'mathematics', 'number theory', 'primality test']"
6334,633400,Maze,0,[]
6335,633500,Date bugs,5,"['bruteforcing', 'implementation']"
6336,633600,Robbery,15,['implementation']
6337,633700,Dreisam Equations,0,[]
6338,633800,Formatting Text,0,[]
6339,633900,The Game,0,[]
6340,634000,Dividing,0,[]
6341,634100,S-Trees,0,[]
6342,634200,Treasure,15,"['ad-hoc', 'case work', 'dynamic programming']"
6343,634300,King,0,[]
6344,634400,Prime Land,0,[]
6345,634500,Word,0,[]
6346,634600,Time,0,[]
6347,634700,Puzzle,0,[]
6348,634800,Append,0,[]
6349,634900,Gossiping,0,[]
6350,635000,Tin Cutter,0,[]
6351,635100,FORCAL,0,[]
6352,635200,L-system,0,[]
6353,635300,Packets,0,[]
6354,635400,Crosswords,13,"['graph theory', 'graph traversal', 'implementation']"
6355,635500,Intervals,0,[]
6356,635600,Robot,12,"['breadth-first search', 'graph theory', 'graph traversal']"
6357,635700,Network,0,[]
6358,635800,Four Quarters,8,"['dynamic programming', 'mathematics', 'probability theory']"
6359,635900,만취한 상범,4,"['implementation', 'mathematics', 'number theory', 'simulation']"
6360,636000,L-I-N-G-O: LINGO,12,"['case work', 'implementation', 'string']"
6361,636100,Number Base Conversion,4,"['arbitrary precision / big integers', 'arithmetic', 'implementation', 'mathematics', 'string']"
6362,636200,Unimodal Palindromic Decompositions,13,['dynamic programming']
6363,636300,Extended Lights Out,13,"['bruteforcing', 'greedy']"
6364,636400,Dehuff,0,[]
6365,636500,Picture Puzzle,0,[]
6366,636600,Strictly Inscribed Similar Triangles,0,[]
6367,636700,Color Me Less,5,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
6368,636800,"P,MTHBGWB",5,"['implementation', 'simulation', 'string']"
6369,636900,Plato’s Blocks,17,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'greedy', 'implementation']"
6370,637000,Bode Plot,10,"['calculus', 'mathematics', 'physics']"
6371,637100,Follow My Logic,17,"['graph theory', 'graph traversal', 'implementation', 'simulation']"
6372,637200,Microprocessor Simulation,8,"['implementation', 'simulation']"
6373,637300,Round and Round We Go,8,"['arbitrary precision / big integers', 'arithmetic', 'implementation', 'mathematics', 'simulation', 'string']"
6374,637400,To the Max,9,"['bruteforcing', 'dynamic programming', 'prefix sum']"
6375,637500,Set Me,6,"['bruteforcing', 'implementation', 'string']"
6376,637600,e 계산,4,"['arithmetic', 'mathematics']"
6377,637700,Problem Bee,16,"['case work', 'geometry']"
6378,637800,디지털 루트,3,"['arbitrary precision / big integers', 'implementation', 'mathematics']"
6379,637900,Scramble Sort,8,"['implementation', 'parsing', 'sorting', 'string']"
6380,638000,A Well-Formed Problem,15,"['data structures', 'implementation', 'parsing', 'stack', 'string']"
6381,638100,Entropy,13,"['data structures', 'greedy', 'priority queue', 'string']"
6382,638200,N-Credible Mazes,11,"['breadth-first search', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing']"
6383,638300,SPF,11,"['articulation points and bridges', 'breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
6384,638400,Area,12,"['geometry', ""pick's theorem""]"
6386,638600,Cog-Wheels,0,[]
6388,638800,Enigma,0,[]
6389,638900,Gridland,11,['mathematics']
6391,639100,Number Game,0,[]
6393,639300,Code Breaking,0,[]
6394,639400,Eeny Meeny,0,[]
6395,639500,Hearts,16,['implementation']
6396,639600,Bonus Bonds,0,[]
6397,639700,Bit Maps,12,['divide and conquer']
6398,639800,Laser Lines,0,[]
6399,639900,Roman Numerals,0,[]
6400,640000,Calculator Language,19,"['parsing', 'string']"
6401,640100,Network Wars,0,[]
6402,640200,Strategy,0,[]
6403,640300,Keywords,0,[]
6404,640400,City Navigation,0,[]
6405,640500,Paper Folding,0,[]
6406,640600,Shuffling Patience,0,[]
6407,640700,String Computer,0,[]
6408,640800,Stamps,0,[]
6409,640900,Making Change,9,"['bruteforcing', 'greedy', 'implementation']"
6410,641000,The Sultan's Successors,11,['backtracking']
6411,641100,Theseus and the Minotaur,0,[]
6412,641200,Xenosemantics,0,[]
6413,641300,Clock Patience,0,[]
6414,641400,Car Trialling,0,[]
6415,641500,Mapping the Route,0,[]
6416,641600,트리인가?,12,"['data structures', 'graph theory', 'tree']"
6417,641700,코코넛 그 두 번째 이야기,6,"['bruteforcing', 'implementation']"
6418,641800,Nonstop Travel,0,[]
6419,641900,Doing Windows,0,[]
6420,642000,Numerically Speaking,6,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
6421,642100,It's Ir-Resist-Able,0,[]
6422,642200,Getting Chorded,9,"['parsing', 'string']"
6423,642300,"Run, Run, Runaround Numbers",8,[]
6424,642400,Optimal Array Multiplication Sequence,0,[]
6425,642500,Transferable Voting,0,[]
6426,642600,Psuedo-Random Numbers,5,"['implementation', 'simulation']"
6428,642800,Stars,0,[]
6429,642900,Hexagon,0,[]
6430,643000,Domino Effect,16,"['bruteforcing', 'floyd–warshall', 'graph theory']"
6431,643100,Pendulum,0,[]
6432,643200,Border,0,[]
6434,643400,Ships,0,[]
6436,643600,Floppies,3,"['arithmetic', 'implementation', 'mathematics']"
6437,643700,Golf,3,['implementation']
6438,643800,Reverse Text,4,['string']
6439,643900,교차,15,"['geometry', 'line segment intersection check']"
6440,644000,Synchronous Design,0,[]
6441,644100,Graph Coloring,0,[]
6442,644200,Triangle,0,[]
6443,644300,애너그램,10,"['backtracking', 'string']"
6444,644400,스프레드시트,17,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'parsing', 'string', 'topological sorting']"
6446,644600,Peter's Calculator,20,[]
6448,644800,Stockbroker Grapevine,12,"['floyd–warshall', 'graph theory']"
6449,644900,Frame Stacking,0,[]
6450,645000,Channel Allocation,19,[]
6451,645100,Alien Security,0,[]
6452,645200,Octal Fractions,0,[]
6454,645400,Trip Routing,13,"['data structures', ""dijkstra's"", 'graph theory', 'set / map by hashing', 'implementation', 'parsing', 'string']"
6455,645500,Transaction Processing,0,[]
6456,645600,Perfect Hash,0,[]
6457,645700,Pascal Program Lengths,0,[]
6458,645800,Circle Through Three Points,15,"['geometry', 'implementation']"
6460,646000,Pizza Anyone?,7,"['bitmask', 'bruteforcing']"
6461,646100,Adam's Genes,0,[]
6462,646200,Risk,10,"['breadth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
6463,646300,팩트,6,"['arbitrary precision / big integers', 'mathematics', 'number theory']"
6464,646400,Horse Shoe Scoring,0,[]
6465,646500,Stats,0,[]
6467,646700,Prime Cuts,6,"['implementation', 'mathematics', 'number theory', 'primality test']"
6468,646800,Gears on a Board,0,[]
6469,646900,Uniform Generator,4,"['implementation', 'mathematics']"
6470,647000,"Excuses, Excuses!",8,"['implementation', 'parsing', 'string']"
6473,647300,Unix ls,0,[]
6474,647400,Palindromes,5,"['data structures', 'set / map by hashing', 'implementation', 'string']"
6475,647500,M*A*S*H,0,[]
6476,647600,Postscript,16,"['implementation', 'parsing', 'precomputation', 'string']"
6477,647700,Radar Scopes,0,[]
6478,647800,Message Routing,10,['implementation']
6479,647900,Factorial Frequencies,4,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
6480,648000,Identifying Legal Pascal Real Constants,0,[]
6481,648100,Extrapolation Using a Difference Table,0,[]
6482,648200,Evaluating Simple C Expressions,13,"['parsing', 'string']"
6483,648300,The Finite State Text-Processing Machine,0,[]
6484,648400,PostScript Emulation,0,[]
6485,648500,Inventory Maintenance,8,"['data structures', 'set / map by hashing', 'implementation']"
6486,648600,Cowculations,0,[]
6487,648700,두 직선의 교차 여부,9,['geometry']
6488,648800,Hi-Q,0,[]
6489,648900,Call Forwarding,0,[]
6490,649000,Making the Grade,0,[]
6491,649100,Perfection,3,"['bruteforcing', 'implementation', 'mathematics', 'number theory']"
6492,649200,Shipping Routes,9,"['floyd–warshall', 'graph theory', 'graph traversal', 'implementation']"
6493,649300,Slurpys,12,"['recursion', 'regular expression', 'string']"
6494,649400,Another lottery,6,"['euclidean algorithm', 'greedy', 'mathematics', 'number theory']"
6495,649500,Ballot evaluation,6,"['arbitrary precision / big integers', 'case work', 'data structures', 'set / map by hashing', 'implementation', 'parsing', 'string']"
6496,649600,Cyclic antimonotonic permutations,18,"['constructive', 'mathematics']"
6497,649700,전력난,12,"['graph theory', 'minimum spanning tree']"
6498,649800,엘리어스 감마 코드,11,[]
6499,649900,Food portion size,8,[]
6500,650000,랜덤 숫자 만들기,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
6501,650100,Hotel booking,12,[]
6502,650200,동혁 피자,4,"['geometry', 'implementation', 'mathematics', 'pythagoras theorem']"
6503,650300,망가진 키보드,10,"['string', 'two-pointer']"
6504,650400,킬로미터를 마일로,5,['mathematics']
6505,650500,문자열 디코딩,14,['permutation cycle decomposition']
6506,650600,엘 도라도,11,['dynamic programming']
6507,650700,Forest,0,[]
6508,650800,A Game with Marbles,4,"['implementation', 'mathematics', 'simulation']"
6509,650900,Help Bob,13,[]
6510,651000,Annoying painting tool,10,['greedy']
6511,651100,Black and white painting,0,[]
6512,651200,Cylinder,10,['geometry']
6513,651300,Deli Deli,7,"['case work', 'data structures', 'set / map by hashing', 'implementation', 'string']"
6514,651400,Expressions,0,[]
6515,651500,Frequent values,19,"['data structures', ""mo's"", 'offline queries', 'segment tree']"
6516,651600,Grocery store,7,['bruteforcing']
6517,651700,Halloween treats,0,[]
6518,651800,오타 자동 수정,0,[]
6519,651900,Basic wall maze,0,[]
6520,652000,Construct the wall maze,0,[]
6521,652100,Dihedral groups,13,['mathematics']
6522,652200,Economic phone calls,0,[]
6523,652300,요세푸스 한 번 더!,15,"['data structures', 'graph theory']"
6524,652400,Wine trading in Gergovia,0,[]
6525,652500,동차 수열,12,['ad-hoc']
6526,652600,Ambiguous permutations,6,"['implementation', 'permutation cycle decomposition']"
6527,652700,빙고라니!,8,"['implementation', 'string']"
6528,652800,106 miles to Chicago,12,"[""dijkstra's"", 'graph theory']"
6529,652900,Decorate the wall,16,"['value / coordinate compression', 'sweeping']"
6530,653000,European railroad tracks,0,[]
6531,653100,이런 문제는 유치원생도 해결할 수 있어,16,"['dynamic programming', 'string']"
6532,653200,Game schedule required,0,[]
6533,653300,Help the problem setter,0,[]
6534,653400,All Discs Considered,13,"['breadth-first search', 'graph theory', 'graph traversal']"
6535,653500,Boolean Logic,20,"['implementation', 'parsing', 'string']"
6536,653600,Code,16,"['backtracking', 'graph theory']"
6537,653700,In Danger,7,[]
6538,653800,Run Length Encoding,6,"['implementation', 'parsing', 'string']"
6539,653900,Fractran,0,[]
6540,654000,Huffman's Greed,0,[]
6541,654100,Binary Search Heap Construction,0,[]
6542,654200,Assistance Required,9,[]
6543,654300,그래프의 싱크,17,"['graph theory', 'strongly connected component']"
6544,654400,Fixed Partition Contest Management,0,[]
6545,654500,"Drink, on Ice",6,"['case work', 'mathematics', 'physics']"
6546,654600,Edge,0,[]
6547,654700,Fold,0,[]
6548,654800,Genetic Code,0,[]
6549,654900,히스토그램에서 가장 큰 직사각형,16,"['data structures', 'divide and conquer', 'segment tree', 'stack']"
6550,655000,부분 문자열,6,"['greedy', 'string']"
6551,655100,Balanced Food,0,[]
6552,655200,California Jones and the Gate to Freedom,0,[]
6553,655300,Diplomatic License,6,['geometry']
6554,655400,Polygon Programming with Ease,10,['geometry']
6555,655500,The Sierpinski Fractal,9,"['implementation', 'recursion']"
6556,655600,Paths on a Grid,7,"['combinatorics', 'mathematics']"
6557,655700,Hall of Fountains,0,[]
6558,655800,Average is not Fast Enough!,0,[]
6559,655900,Bound Found,0,[]
6560,656000,Code the Tree,0,[]
6561,656100,Decode the Tree,0,[]
6562,656200,Etaoin Shrdlu,6,[]
6563,656300,Fiber Network,0,[]
6564,656400,Global Roaming,10,"['geometry', 'mathematics']"
6565,656500,"Hard to Believe, but True!",4,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
6566,656600,애너그램 그룹,9,"['data structures', 'set / map by hashing', 'implementation', 'sorting', 'string', 'set / map by trees']"
6567,656700,Let it Bead,16,"['bruteforcing', ""burnside's lemma"", 'combinatorics', 'mathematics']"
6568,656800,귀도 반 로썸은 크리스마스날 심심하다고 파이썬을 만들었다,11,"['implementation', 'simulation']"
6569,656900,몬드리안의 꿈,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
6570,657000,Equidistance,0,[]
6571,657100,피보나치 수의 개수,8,"['arbitrary precision / big integers', 'dynamic programming', 'mathematics']"
6572,657200,Phylogenetic Trees Inherited,0,[]
6573,657300,Hike on a Graph,0,[]
6574,657400,새로운 과일,14,"['dynamic programming', 'string']"
6575,657500,Bee Maja,0,[]
6576,657600,쿼드 트리,8,['recursion']
6577,657700,From Dusk till Dawn (or Vladimir the Vampire),11,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing']"
6578,657800,Euro Cup 2000,0,[]
6579,657900,Friends,11,"['data structures', 'parsing', 'stack', 'string']"
6580,658000,쿼드 트리,8,"['divide and conquer', 'parsing', 'recursion', 'string']"
6581,658100,HTML,11,"['parsing', 'string']"
6582,658200,Artificial Intelligence?,9,"['implementation', 'parsing', 'string']"
6583,658300,Balancing Bank Accounts,0,[]
6584,658400,The Settlers of Catan,10,"['backtracking', 'depth-first search', 'graph theory', 'graph traversal']"
6585,658500,Team Queue,9,"['data structures', 'implementation', 'queue']"
6586,658600,Error Correction,13,[]
6587,658700,France '98,12,"['implementation', 'simulation']"
6588,658800,골드바흐의 추측,10,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
6589,658900,Heavy Cargo,11,"['data structures', ""dijkstra's"", 'graph theory', 'set / map by hashing', 'string']"
6590,659000,덧셈 체인,13,"['backtracking', 'bruteforcing', 'precomputation']"
6591,659100,이항 쇼다운,7,"['combinatorics', 'mathematics']"
6592,659200,Compromise,13,['dynamic programming']
6593,659300,상범 빌딩,11,"['breadth-first search', 'graph theory', 'graph traversal']"
6594,659400,방정식 풀이,14,"['ad-hoc', 'mathematics', 'parsing', 'string']"
6595,659500,프로거,13,"['floyd–warshall', 'graph theory']"
6596,659600,Globetrotter,0,[]
6597,659700,트리 복구,12,"['depth-first search', 'divide and conquer', 'graph theory', 'graph traversal', 'recursion', 'tree']"
6598,659800,Arbitrage,14,"['floyd–warshall', 'graph theory']"
6599,659900,The Tower of Babylon,10,"['bruteforcing', 'dynamic programming', 'graph theory', 'sorting', 'topological sorting']"
6600,660000,원의 둘레,8,"['geometry', 'mathematics']"
6601,660100,Knight Moves,10,"['breadth-first search', 'graph theory', 'graph traversal']"
6602,660200,Eeny Meeny Moo,10,"['data structures', 'queue']"
6603,660300,로또,9,"['backtracking', 'combinatorics', 'mathematics', 'recursion']"
6604,660400,Matrix Chain Multiplication,8,"['data structures', 'stack']"
6605,660500,Humble Numbers,13,"['data structures', 'priority queue']"
6606,660600,Charlie the Cockchafer,0,[]
6607,660700,Gregory the Grasshopper,0,[]
6608,660800,Lisa the Ladybug,0,[]
6609,660900,모기곱셈,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
6610,661000,Rhinoceros Beetle,0,[]
6611,661100,Simon the Spider,0,[]
6612,661200,개미의 이동,14,"['ad-hoc', 'sorting']"
6613,661300,버그잡는 꿍,19,"['knuth–morris–pratt', 'string']"
6614,661400,Analog Clock Display,17,"['geometry', 'implementation']"
6615,661500,콜라츠 추측,8,"['bruteforcing', 'lowest common ancestor', 'tree']"
6616,661600,문자열 암호화,8,"['implementation', 'string']"
6617,661700,Mine the Gradient,0,[]
6618,661800,Invasion,0,[]
6619,661900,Intergalactic Mortgage,0,[]
6620,662000,Simple Polygon,21,"['data structures', 'geometry', 'line segment intersection check', 'sweeping', 'set / map by trees']"
6621,662100,Ambiguous Result,0,[]
6622,662200,Domino tiling,12,['backtracking']
6623,662300,Arbitrage?,0,[]
6624,662400,Bus Schedules,0,[]
6625,662500,Bus Clock Display,0,[]
6626,662600,Measuring Problem Difficulty,21,"['data structures', 'divide and conquer', 'dynamic programming', 'segment tree', 'sorting', 'sweeping']"
6627,662700,The Easiest Problem is This One,5,"['bruteforcing', 'implementation', 'mathematics']"
6628,662800,Prohibición de fumar,0,[]
6629,662900,Pyramid Guards,0,[]
6630,663000,Hack around the Lock,0,[]
6631,663100,God Save the i-th Queen,0,[]
6632,663200,Arable Area,15,"['convex hull', 'geometry']"
6633,663300,Clock Captcha,0,[]
6634,663400,Digital Display,7,"['implementation', 'precomputation']"
6635,663500,Intriguing Identifiers,9,"['case work', 'implementation', 'parsing', 'string']"
6636,663600,Letter Lies,0,[]
6637,663700,Odd Opportunities,0,[]
6638,663800,Peculiar Primes,0,[]
6639,663900,Robotic Rails,0,[]
6640,664000,Suspicious Stocks,7,"['dynamic programming', 'greedy']"
6641,664100,Alea iacta est,0,[]
6642,664200,On-Line Banking,5,"['implementation', 'simulation']"
6643,664300,International Collegiate Programming Contest,0,[]
6644,664400,Careful Declaration,16,['dynamic programming']
6645,664500,Stock Exchange,5,"['implementation', 'string']"
6646,664600,Wooden Fence,0,[]
6647,664700,Safe Gambling,20,"['data structures', 'greedy', 'prefix sum', 'segment tree']"
6648,664800,Government Help,0,[]
6649,664900,Tree Insertions,0,[]
6650,665000,Catch the Bus!,0,[]
6651,665100,Calendar of Events,9,['implementation']
6652,665200,Roman Expressions,14,"['implementation', 'parsing', 'string']"
6653,665300,Geometric Shapes,0,[]
6654,665400,Corporate Identity,16,"['hashing', 'string', 'suffix array and lcp array']"
6655,665500,"Money Money Money, Must Be Funny",0,[]
6656,665600,Railway Transportation,0,[]
6657,665700,Soccer Tournament,0,[]
6658,665800,Hypertheseus,0,[]
6659,665900,All Friends,0,[]
6660,666000,Board Game,0,[]
6661,666100,Crane,0,[]
6662,666200,Divisors,8,"['mathematics', 'number theory', 'primality test']"
6663,666300,Emag eht htiw Em Pleh,0,[]
6664,666400,Failing Roads,0,[]
6665,666500,Go Endgame,0,[]
6666,666600,Help Me with the Game,7,"['implementation', 'parsing', 'sorting', 'string']"
6667,666700,IVXLCDM,0,[]
6668,666800,Agents,0,[]
6669,666900,Boatherds,0,[]
6670,667000,C Looooops,16,"['extended euclidean algorithm', 'mathematics', 'number theory']"
6671,667100,Death to Binary?,0,[]
6672,667200,Electricity,17,"['articulation points and bridges', 'biconnected component', 'graph theory']"
6673,667300,Firepersons,0,[]
6674,667400,God of the Vile Baskers,0,[]
6675,667500,Herbalists,0,[]
6676,667600,Inglish-Number Translator,10,"['parsing', 'string']"
6677,667700,Japan Plotter Driver,14,['implementation']
6678,667800,Bridge Hands,0,[]
6679,667900,싱기한 네자리 숫자,4,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
6680,668000,Building a New Depot,11,[]
6681,668100,Truck History,0,[]
6682,668200,Base Numbers,13,"['arbitrary precision / big integers', 'dynamic programming']"
6683,668300,Paper Cutting,0,[]
6684,668400,Hexagonal Routes,0,[]
6685,668500,Storehouse,0,[]
6686,668600,Traffic Jam,0,[]
6687,668700,Sea Battle,0,[]
6688,668800,The Die Is Cast,12,"['graph theory', 'graph traversal']"
6689,668900,Defragmentation,0,[]
6690,669000,Formatting Text,0,[]
6691,669100,Hole Cutter,0,[]
6692,669200,Interesting Maze Game,19,"['bruteforcing', 'graph theory', 'graph traversal', 'implementation', 'parsing', 'string']"
6693,669300,Complicated Route,0,[]
6694,669400,The Perfect Symmetry,8,"['data structures', 'geometry', 'set / map by hashing', 'set / map by trees']"
6695,669500,Mysterious Villa,0,[]
6696,669600,Too Much Water,4,"['geometry', 'mathematics', 'pythagoras theorem']"
6697,669700,Pizza delivery,0,[]
6698,669800,Ball bearings,0,[]
6699,669900,S-Nim,0,[]
6700,670000,Sylvester construction,9,"['divide and conquer', 'recursion']"
6701,670100,Who owns the Amiga?,0,[]
6702,670200,Lazy Evaluation,0,[]
6703,670300,Easter holidays,0,[]
6704,670400,Tourist,16,['dynamic programming']
6705,670500,Hardware,0,[]
6706,670600,Budget,0,[]
6707,670700,Frogger,0,[]
6708,670800,Gallup,0,[]
6709,670900,Jackpot,6,"['euclidean algorithm', 'mathematics', 'number theory']"
6710,671000,Spiderman’s workout,0,[]
6711,671100,Subway planning,0,[]
6712,671200,Exploding CPU,0,[]
6713,671300,The Mailbox Manufacturers Problem,11,['dynamic programming']
6714,671400,Parallel computer simulator,9,[]
6715,671500,Moving Pianos,0,[]
6716,671600,Collecting Beepers,9,['bruteforcing']
6717,671700,Quantum,0,[]
6718,671800,Goldbach’s conjecture,10,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
6719,671900,Downpayment,0,[]
6720,672000,Simplified λ-evaluations,0,[]
6721,672100,Backward numbers,3,"['arithmetic', 'implementation', 'mathematics', 'string']"
6722,672200,Christmas presents,0,[]
6723,672300,Tournament ranking,0,[]
6724,672400,Directed mazes,14,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
6725,672500,Connecting islands,17,"['bruteforcing', 'geometry', 'graph theory', 'line segment intersection check', 'minimum spanning tree']"
6726,672600,A language for constants,10,"['breadth-first search', 'graph theory', 'graph traversal']"
6727,672700,Bridge placements,0,[]
6728,672800,Request for permission,0,[]
6729,672900,Traffic planning,0,[]
6730,673000,A model railroad,0,[]
6731,673100,Comment removal,0,[]
6732,673200,R.Ø.L.P.,0,[]
6733,673300,A fair jury,0,[]
6734,673400,Radio direction finder,16,"['gaussian elimination', 'geometry', 'linear algebra', 'mathematics']"
6735,673500,Returning books,0,[]
6736,673600,The Idiot of the Year Contest!,4,"['arbitrary precision / big integers', 'arithmetic', 'implementation', 'mathematics', 'string']"
6737,673700,Parsing Real Numbers,0,[]
6738,673800,Co-workers from Hell,0,[]
6739,673900,Connected Gheeves,0,[]
6740,674000,Rotating Scoreboard,0,[]
6741,674100,ACM Underground,0,[]
6742,674200,Expression Evaluator,10,['implementation']
6743,674300,Rectangle Cutting,0,[]
6744,674400,Parallelogram Counting,17,"['combinatorics', 'data structures', 'geometry', 'set / map by hashing', 'mathematics']"
6745,674500,Software Company,0,[]
6746,674600,The Happy Worm,0,[]
6747,674700,Median Weight Bead,13,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
6748,674800,Odd Loving Bakers,0,[]
6749,674900,Next in line,2,"['implementation', 'mathematics']"
6750,675000,Rotating letters,3,"['implementation', 'string']"
6751,675100,From 1987 to 2013,4,"['bruteforcing', 'implementation']"
6752,675200,Time on task,6,"['greedy', 'sorting']"
6753,675300,Chances of winning,9,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'recursion']"
6754,675400,Bridge transport,7,"['data structures', 'queue']"
6755,675500,Who is taller?,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
6756,675600,Factor Solitaire,11,"['greedy', 'mathematics', 'number theory']"
6757,675700,팰린드롬 진법,16,['mathematics']
6758,675800,Tourney,0,[]
6759,675900,LHC,0,[]
6760,676000,A Romantic Movie Outing,0,[]
6761,676100,Transforming Comets,0,[]
6762,676200,Repetitivity,22,"['dynamic programming', 'mathematics']"
6763,676300,Speed fines are not fine!,2,['implementation']
6764,676400,Sounds fishy!,2,['implementation']
6765,676500,Icon Scaling,4,"['implementation', 'string']"
6766,676600,Big Bang Secrets,4,"['implementation', 'string']"
6767,676700,A Coin Game,11,"['breadth-first search', 'graph theory', 'graph traversal']"
6768,676800,Don’t pass me the ball!,3,"['combinatorics', 'mathematics']"
6769,676900,Aromatic Numbers,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
6770,677000,Absolutely Acidic,7,"['implementation', 'sorting']"
6771,677100,Mouse Journey,11,['dynamic programming']
6772,677200,Choose Your Own Arithmetic,9,"['backtracking', 'breadth-first search', 'depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
6773,677300,The Hungary Games,15,"[""dijkstra's"", 'graph theory']"
6774,677400,Mhocskian Languages,0,[]
6775,677500,Editor Distance,0,[]
6776,677600,Sample Size,0,[]
6777,677700,The Winds Of War,0,[]
6778,677800,Which Alien?,2,['implementation']
6779,677900,Who Has Seen The Wind,3,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
6780,678000,Sumac Sequences,3,"['arithmetic', 'implementation', 'mathematics']"
6781,678100,Boring Business,0,[]
6782,678200,Unfriend,0,[]
6783,678300,English or French?,4,"['implementation', 'string']"
6784,678400,Multiple Choice,3,['implementation']
6785,678500,Alice Through the Looking Glass,8,"['divide and conquer', 'recursion']"
6786,678600,Blood Distribution,17,"['bipartite matching', 'bitmask', 'maximum flow']"
6787,678700,Switch,13,"['bruteforcing', 'dynamic programming']"
6788,678800,Putnam,0,[]
6789,678900,Vampire Tunnels,0,[]
6790,679000,Spies Like Us,0,[]
6791,679100,Reorganization,0,[]
6792,679200,Fixing Disks,0,[]
6793,679300,Biggest (Zero Carbon) Footprint,0,[]
6794,679400,"What is n, Daddy?",3,"['mathematics', 'precomputation']"
6795,679500,Up and Down,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
6796,679600,Punchy,5,"['implementation', 'simulation']"
6797,679700,Global Warming,7,['bruteforcing']
6798,679800,Knight Hop,8,"['breadth-first search', 'graph theory', 'graph traversal']"
6799,679900,Computer Purchase,5,"['implementation', 'sorting', 'string']"
6800,680000,Huffman Encoding,8,"['greedy', 'tree']"
6801,680100,Firehose,0,[]
6802,680200,Animal Farm,0,[]
6803,680300,Nutrient Tree,0,[]
6804,680400,Barking Dogs!,0,[]
6805,680500,Tree Pruning,0,[]
6806,680600,Wowow,17,"['data structures', 'segment tree']"
6807,680700,Computer Purchase Return,0,[]
6808,680800,Space Miner,13,"['geometry', 'geometry; 3d', 'linear algebra', 'mathematics']"
6809,680900,Shuffle,7,"['exponentiation by squaring', 'implementation', 'mathematics', 'string']"
6810,681000,ISBN,2,"['arithmetic', 'implementation', 'mathematics']"
6811,681100,Old Fishin’ Hole,4,"['arithmetic', 'bruteforcing', 'mathematics']"
6812,681200,Good times,3,"['arithmetic', 'implementation', 'mathematics']"
6813,681300,Signage,9,"['greedy', 'implementation', 'mathematics', 'string']"
6814,681400,Degrees of Separation,0,[]
6820,682000,Dinner,0,[]
6850,685000,Cows,16,"['convex hull', 'geometry', 'area of a polygon']"
6851,685100,Snowflakes,7,"['data structures', 'set / map by hashing', 'sorting']"
6852,685200,Bowling for Numbers++,0,[]
6881,688100,Number Matrix,11,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
6882,688200,The Great Spamway Strike,0,[]
6884,688400,소수 부분 수열,9,"['bruteforcing', 'mathematics', 'number theory', 'prefix sum', 'primality test', 'sieve of eratosthenes']"
6885,688500,Segments,13,['dynamic programming']
6965,696500,Censor,4,"['implementation', 'string']"
6970,697000,Sentences,5,[]
6971,697100,Nasty Numbers,6,"['mathematics', 'number theory']"
6972,697200,Double Knockout Competition,8,"['implementation', 'simulation']"
6973,697300,Dynamic Dictionary Coding,7,"['data structures', 'set / map by hashing', 'parsing', 'string']"
6974,697400,Long Division,3,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
6975,697500,"Deficient, Perfect, and Abundant",3,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics', 'number theory']"
6976,697600,Divisibility by 11,4,"['arbitrary precision / big integers', 'arithmetic', 'implementation', 'mathematics']"
6977,697700,Pattern Generator,7,['backtracking']
6978,697800,When in Rome...,8,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
6979,697900,Maximum Distance,4,['bruteforcing']
6980,698000,Train Swapping,5,"['implementation', 'sorting']"
6981,698100,Safebreaker,0,[]
6982,698200,Quadtrees,0,[]
6983,698300,Where's Waldorf?,9,"['bruteforcing', 'implementation']"
6984,698400,All Roads Lead Where?,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
6985,698500,Hoppers,13,"['breadth-first search', 'graph theory', 'graph traversal']"
6986,698600,절사평균,8,"['implementation', 'sorting']"
6987,698700,월드컵,11,"['backtracking', 'bruteforcing']"
6988,698800,타일 밟기,15,"['binary search', 'dynamic programming']"
6989,698900,채점,18,"['bitmask', 'bit set', 'dynamic programming']"
6990,699000,달팽이,21,"['geometry', 'implementation', 'line segment intersection check', 'sorting']"
6991,699100,계통 트리,19,"['graph theory', 'hashing']"
6992,699200,Arithmetic Sequence,4,"['implementation', 'mathematics']"
6993,699300,Shift Letters,4,"['implementation', 'string']"
6994,699400,Hobbiton Farms,14,['geometry']
6995,699500,Hand Detection,4,"['bruteforcing', 'implementation']"
6996,699600,애너그램,5,"['implementation', 'sorting', 'string']"
6997,699700,Guessing Game I,5,"['implementation', 'string']"
6998,699800,Tree Isomorphism,11,"['graph theory', 'graph traversal', 'sorting', 'tree', 'tree isomorphism']"
6999,699900,Guessing Game II,0,[]
7000,700000,Ent Numbers,0,[]
7001,700100,King Thrór’s Gold Problem,0,[]
7002,700200,Maximum Damage,0,[]
7003,700300,Checker Board,18,"['game theory', 'sprague–grundy theorem']"
7004,700400,Poly-polygonal Numbers,14,"['data structures', 'mathematics', 'priority queue']"
7005,700500,Stacking Cubes,10,['implementation']
7006,700600,"To bet, or not to bet",0,[]
7007,700700,BSP Trees,0,[]
7008,700800,Double Trouble,9,"['bruteforcing', 'implementation', 'string']"
7009,700900,Relief Supplies,0,[]
7010,701000,Snowball Fight,0,[]
7011,701100,Weather Forecasting,0,[]
7012,701200,Building Snowmen,0,[]
7013,701300,Walking on Thin Ice,0,[]
7014,701400,Snow Cones,9,['string']
7015,701500,Millennium,4,"['implementation', 'simulation']"
7016,701600,Recurring Decimals,8,"['implementation', 'mathematics', 'simulation', 'sorting']"
7017,701700,Biased Dice,13,"['implementation', 'simulation']"
7018,701800,Railway Connection,14,"[""dijkstra's"", 'floyd–warshall', 'graph theory']"
7019,701900,Chain-Confined Path,22,"['dynamic programming', 'geometry', 'implementation']"
7020,702000,Generic Poker,0,[]
7021,702100,Patisserie ACM,0,[]
7024,702400,Letter Game,0,[]
7025,702500,Packing Rectangles,0,[]
7026,702600,Shopping Offers,0,[]
7030,703000,Little Shop of Flowers,11,['dynamic programming']
7031,703100,Hidden Codes,0,[]
7033,703300,Flatten,0,[]
7034,703400,A Strip of Land,0,[]
7035,703500,Recycling proteins,0,[]
7036,703600,Grazing on the Run,18,['dynamic programming']
7038,703800,Cow Patterns,20,"['knuth–morris–pratt', 'string']"
7039,703900,Barn Expansion,0,[]
7040,704000,밥 먹기,20,"['bellman–ford', 'graph theory', 'greedy']"
7041,704100,Dividing the Path,17,"['data structures', 'deque', 'dynamic programming', 'greedy', 'sliding window']"
7042,704200,Cow Ski Area,17,"['data structures', 'graph theory', 'graph traversal', 'strongly connected component']"
7043,704300,Cleaning Shifts,10,"['greedy', 'sorting']"
7044,704400,Bad Cowtractors,12,"['graph theory', 'minimum spanning tree', 'sorting']"
7045,704500,Tree Cutting,13,"['센트로이드', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
7046,704600,Journey,9,"['graph theory', 'graph traversal', 'tree']"
7047,704700,Clouds,0,[]
7048,704800,Sweets,16,"['combinatorics', 'mathematics']"
7049,704900,Trips,0,[]
7050,705000,Football league,0,[]
7051,705100,Puzzle,20,['constructive']
7052,705200,Two sawmills,16,"['convex hull trick', 'dynamic programming']"
7053,705300,시프트 레지스터,18,"['gaussian elimination', 'linear algebra', 'mathematics']"
7054,705400,Trip,0,[]
7055,705500,"Bugs Integrated, Inc.",0,[]
7056,705600,A decorative fence,0,[]
7057,705700,A highway and the seven dwarfs,21,"['binary search', 'convex hull', 'geometry', 'rotating calipers']"
7058,705800,Royal guards,18,['bipartite matching']
7060,706000,Printed Circuit,0,[]
7064,706400,Air Raid,19,"['bipartite matching', 'graph theory']"
7068,706800,Diamonds,0,[]
7070,707000,Cards,0,[]
7080,708000,A New Beginning,0,[]
7081,708100,Reading,19,"['dynamic programming', 'exponentiation by squaring', 'mathematics', 'prefix sum']"
7082,708200,Strip,0,[]
7083,708300,CPU,0,[]
7084,708400,Requests,0,[]
7085,708500,Couples,0,[]
7086,708600,Sailing race,0,[]
7087,708700,Tickets,0,[]
7088,708800,Word counting,0,[]
7093,709300,The Running Man,0,[]
7094,709400,Task Execution,0,[]
7095,709500,Factorials,6,"['arbitrary precision / big integers', 'mathematics']"
7096,709600,Street Network,0,[]
7097,709700,Cycle Detection,0,[]
7098,709800,QuadTrees,0,[]
7106,710600,Wonderful Fours,11,['bruteforcing']
7107,710700,Journey of A Knight,9,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
7108,710800,Billiards,0,[]
7109,710900,The Value of an Expression,0,[]
7110,711000,The Folded Sheet,0,[]
7111,711100,The Strange Sequence,13,"['bruteforcing', 'dynamic programming', 'greedy', 'mathematics', 'recursion']"
7112,711200,Cutting Out of Factorials,18,"['bruteforcing', 'mathematics', 'number theory']"
7113,711300,Rectangle,6,"['mathematics', 'number theory', 'recursion']"
7114,711400,Numbers,6,"['bruteforcing', 'mathematics']"
7115,711500,Circle,8,"['geometry', 'implementation', 'mathematics', 'pythagoras theorem']"
7116,711600,Series,14,"['implementation', 'mathematics']"
7117,711700,"Sevens, twos and zeros",16,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'meet in the middle', 'number theory']"
7118,711800,Ones,12,"['mathematics', 'number theory']"
7119,711900,The Magician,11,"['ad-hoc', 'breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'set / map by trees']"
7120,712000,String,4,['string']
7121,712100,Pencil Factory,7,"['euclidean algorithm', 'inclusion and exclusion', 'mathematics', 'number theory']"
7122,712200,Heating Main,0,[]
7138,713800,Robots,22,"['data structures', ""dijkstra's"", 'graph theory', 'implementation', 'priority queue']"
7139,713900,Toll,27,"['bruteforcing', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'lowest common ancestor', 'minimum spanning tree', 'tree']"
7140,714000,데이터 만들기 1,12,"['ad-hoc', 'constructive', ""dijkstra's"", 'floyd–warshall', 'graph theory']"
7141,714100,데이터 만들기 2,17,"['ad-hoc', 'bellman–ford', 'constructive', 'floyd–warshall', 'graph theory']"
7142,714200,데이터 만들기 3,12,"['ad-hoc', 'bellman–ford', 'constructive', 'floyd–warshall', 'graph theory']"
7143,714300,데이터 만들기 4,20,"['ad-hoc', 'constructive', ""dijkstra's"", 'floyd–warshall', 'graph theory']"
7144,714400,데이터 만들기 5,17,"['ad-hoc', 'bellman–ford', 'constructive', ""dijkstra's"", 'graph theory']"
7145,714500,데이터 만들기 6,20,"['ad-hoc', 'bellman–ford', 'constructive', ""dijkstra's"", 'graph theory']"
7146,714600,데이터 만들기 7,13,"['backtracking', 'constructive']"
7147,714700,데이터 만들기 8,17,['constructive']
7148,714800,Winter Roads,19,"['bruteforcing', 'graph theory', 'minimum spanning tree', 'offline queries']"
7149,714900,Can of Worms,23,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'strongly connected component', 'segment tree']"
7150,715000,Automatic Trading,0,[]
7151,715100,3D Printer,20,"['geometry', 'geometry; 3d']"
7152,715200,Flooding Fields,0,[]
7153,715300,Goat Ropes,22,"['duality', 'maximum flow', 'linear programming', 'minimum cost maximum flow']"
7154,715400,Job Postings,18,"['maximum flow', 'minimum cost maximum flow']"
7155,715500,Overlapping Maps,13,['mathematics']
7156,715600,Unreal Estate,0,[]
7157,715700,조건문,0,[]
7158,715800,유니폼 서브트리,0,[]
7159,715900,Pack,7,"['implementation', 'simulation']"
7160,716000,Puzzle of numbers,0,[]
7161,716100,Swimming pool,16,"['data structures', ""dijkstra's"", 'graph theory', 'graph traversal', 'priority queue']"
7162,716200,House construction,0,[]
7286,728600,Ancient Keyboard,4,['implementation']
7287,728700,등록,1,['implementation']
7288,728800,Changing Phone Numbers,16,"['data structures', 'offline queries']"
7289,728900,Entertainment,0,[]
7290,729000,Fortune at El Dorado,0,[]
7291,729100,Griddy Hobby,0,[]
7292,729200,Scrabble Scoring,8,['implementation']
7293,729300,Intercepting Missiles,18,"['bipartite matching', 'maximum flow', 'geometry']"
7294,729400,Joy of Mobile Routing,0,[]
7295,729500,IOI Photos,0,[]
7296,729600,Vice City,0,[]
7297,729700,Fixing Codes,0,[]
7298,729800,Wiping Words,0,[]
7299,729900,Food Cubes,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
7300,730000,Points,0,[]
7301,730100,ACM-Telecom,0,[]
7302,730200,Prince of Persia,0,[]
7303,730300,House Numbers,0,[]
7304,730400,Rotten Ropes,7,"['greedy', 'sorting']"
7305,730500,Optimal Keypad,0,[]
7306,730600,"Hey, Pay Day!",0,[]
7307,730700,Unfoldung,0,[]
7308,730800,A DP Problem,12,"['mathematics', 'parsing', 'string']"
7309,730900,Map Labeler,0,[]
7310,731000,Balanced Chemical Equations,0,[]
7311,731100,Grandpa's Other Estate,0,[]
7312,731200,Afshung Pizza Delivery,0,[]
7313,731300,Housing Complexes,0,[]
7314,731400,Spacecraft Malfunction,0,[]
7315,731500,Blue x Red = Bang,0,[]
7316,731600,JaWs,0,[]
7317,731700,Skew Binary,5,['mathematics']
7318,731800,Parencodings,8,"['data structures', 'stack']"
7319,731900,The Bermuda Triangle,0,[]
7320,732000,Deformed Wheel,0,[]
7321,732100,Illusive Chase,0,[]
7322,732200,Puzzle Out,0,[]
7323,732300,The Willy Memorial Program,0,[]
7324,732400,Parallel Expectations,0,[]
7325,732500,University Entrance Examination,0,[]
7326,732600,Number Steps,5,"['case work', 'implementation', 'mathematics']"
7327,732700,Puzzlestan,0,[]
7328,732800,Dynamic Declaration Language (DDL),0,[]
7329,732900,Color Tunnels,0,[]
7330,733000,Lazy Math Instructor,0,[]
7331,733100,Buggy Sat,0,[]
7332,733200,편의점 알바,21,"['bellman–ford', 'binary search', 'graph theory']"
7333,733300,Dolphin Pool,0,[]
7334,733400,3002 Rubbery,0,[]
7335,733500,(Your)((Term)((Project))),12,[]
7336,733600,Painting A Board,0,[]
7337,733700,Crossed Matchings,0,[]
7338,733800,Counting Rectangles,0,[]
7339,733900,An Old Stone Game,0,[]
7340,734000,Magazine Delivery,11,['dynamic programming']
7341,734100,Space Ant,0,[]
7342,734200,The Erythea Campaign,0,[]
7343,734300,달력 놀이,14,"['dynamic programming', 'game theory']"
7344,734400,나무 막대,14,"['greedy', 'sorting']"
7345,734500,다항식의 나머지 연산,8,"['bitmask', 'implementation', 'mathematics']"
7346,734600,유전자 함수,13,['dynamic programming']
7347,734700,플립과 시프트,8,['mathematics']
7348,734800,테이블 옮기기,8,['implementation']
7349,734900,Farmland,0,[]
7350,735000,정사각형 부수기,0,[]
7351,735100,What's In A Name?,0,[]
7352,735200,Sorting It All Out,14,"['breadth-first search', 'depth-first search', 'floyd–warshall', 'graph theory', 'graph traversal', 'topological sorting']"
7353,735300,Web Navigation,14,[]
7354,735400,트리의 순서,15,"['divide and conquer', 'dynamic programming', 'mathematics']"
7355,735500,Space Station Shielding,0,[]
7356,735600,Roads Scholar,0,[]
7357,735700,Robots,0,[]
7358,735800,Square Ice,12,"['implementation', 'simulation']"
7359,735900,The Worm Turns,6,"['implementation', 'simulation']"
7360,736000,Undercut,4,"['case work', 'implementation']"
7361,736100,Currency Exchange,5,"['arithmetic', 'mathematics']"
7362,736200,Picnic Planning,0,[]
7363,736300,Rational Approximation,0,[]
7364,736400,Checker's Check,0,[]
7365,736500,Ride My Bicycle,6,['sorting']
7366,736600,Counting Sheep,4,"['implementation', 'string']"
7367,736700,Sequence,6,"['bruteforcing', 'mathematics']"
7368,736800,Untidy Desktops,4,"['geometry', 'implementation']"
7369,736900,Maya Calendar,6,"['implementation', 'mathematics', 'string']"
7370,737000,Transportation,10,['bruteforcing']
7371,737100,John's trip,0,[]
7374,737400,Joseph,7,['precomputation']
7375,737500,Cipher,0,[]
7377,737700,Word Encoding,17,"['binary search', 'dynamic programming', 'string']"
7378,737800,Watchdog,6,"['bruteforcing', 'geometry', 'implementation', 'pythagoras theorem']"
7379,737900,Taxi Cab Scheme,0,[]
7380,738000,Pseudo-random Numbers,0,[]
7381,738100,Card Game Cheater,0,[]
7382,738200,Investment,0,[]
7383,738300,Pipes,0,[]
7384,738400,SETI,18,"['gaussian elimination', 'linear algebra', 'mathematics']"
7385,738500,Minimax Triangulation,17,"['dynamic programming', 'geometry']"
7386,738600,Ancient Cipher,5,"['implementation', 'sorting', 'string']"
7387,738700,Box,7,"['bruteforcing', 'case work', 'mathematics']"
7388,738800,Chandelier,0,[]
7389,738900,Document Indexing,0,[]
7390,739000,Easy Trading,6,['implementation']
7391,739100,Find the Border,0,[]
7392,739200,Gunman,0,[]
7393,739300,Irrelevant Elements,0,[]
7394,739400,Joke with Turtles,0,[]
7395,739500,Kingdom of Magic,0,[]
7396,739600,Lattice Animals,14,"['bruteforcing', 'geometry', 'implementation', 'precomputation']"
7397,739700,Alternative Scale of Notation,7,"['arbitrary precision / big integers', 'mathematics', 'number theory']"
7398,739800,Bring Them There,0,[]
7399,739900,Code Formatting,10,"['parsing', 'string']"
7400,740000,Data Mining,0,[]
7401,740100,Entropy,0,[]
7402,740200,Farmer Bill’s Problem,0,[]
7403,740300,Game,16,['game theory']
7404,740400,Hypertransmission,0,[]
7405,740500,Illumination,0,[]
7406,740600,Jurassic Remains,14,['bruteforcing']
7407,740700,King’s Quest,0,[]
7408,740800,Amusing Numbers,13,"['ad-hoc', 'mathematics']"
7409,740900,Bricks,0,[]
7410,741000,Cricket Field,0,[]
7411,741100,Decoding Task,4,"['arithmetic', 'mathematics', 'string']"
7412,741200,Evacuation Plan,0,[]
7413,741300,Folding,0,[]
7414,741400,Ghost Busters,0,[]
7415,741500,Heroes Of Might And Magic,0,[]
7416,741600,Inlay Cutters,0,[]
7417,741700,Team them up!,0,[]
7418,741800,Brackets sequence,0,[]
7419,741900,Cable master,8,['binary search']
7420,742000,맹독 방벽,16,"['convex hull', 'geometry']"
7421,742100,Chemical reactions,0,[]
7422,742200,Statistical trouble,0,[]
7423,742300,Library,0,[]
7424,742400,숫자 쌍,19,"['backtracking', 'implementation']"
7425,742500,Flip Game,8,['bruteforcing']
7426,742600,Buffer Manager,0,[]
7427,742700,Triathlon,0,[]
7428,742800,Domino Puzzle,18,"['bruteforcing', 'case work', 'eulerian path / circuit', 'graph theory']"
7429,742900,Binary Search,0,[]
7430,743000,Frontier,0,[]
7431,743100,Garland,0,[]
7432,743200,디스크 트리,13,"['data structures', 'string', 'tree', 'trie']"
7433,743300,Divisibility,12,['dynamic programming']
7434,743400,Loan,0,[]
7435,743500,Expression,0,[]
7436,743600,Computer Dialogue,0,[]
7437,743700,Lock Manager,0,[]
7438,743800,Dictionary,0,[]
7439,743900,Highways,13,"['graph theory', 'minimum spanning tree']"
7440,744000,Advertisement,0,[]
7441,744100,False coin,8,"['bruteforcing', 'implementation']"
7442,744200,Rating,0,[]
7443,744300,Fence,17,"['calculus', 'geometry', 'mathematics']"
7444,744400,Parliament,13,"['greedy', 'mathematics']"
7445,744500,Defragment,0,[]
7446,744600,The dog task,0,[]
7447,744700,Spell checker,6,"['implementation', 'string']"
7448,744800,Gangsters,12,['dynamic programming']
7449,744900,The mysterious X network,0,[]
7450,745000,Bin Packing,11,"['greedy', 'sorting']"
7452,745200,Buy or Build,0,[]
7453,745300,합이 0인 네 정수,14,"['binary search', 'meet in the middle', 'sorting', 'two-pointer']"
7459,745900,Angry Teacher,0,[]
7460,746000,Beth Tableaux,0,[]
7461,746100,Collecting Bugs,13,"['dynamic programming', 'mathematics', 'probability theory']"
7462,746200,Drawing Windows,0,[]
7463,746300,Ellipse,19,"['geometry', 'mathematics']"
7464,746400,Fool’s Day,0,[]
7465,746500,Graveyard Design,12,['two-pointer']
7466,746600,젖과 꿀의 땅,5,"['geometry', 'mathematics', 'pythagoras theorem']"
7467,746700,Incredible! Impossible!,0,[]
7468,746800,Jackpot,0,[]
7469,746900,K번째 수,19,"['binary search', 'data structures', 'merge sort tree', 'segment tree', 'sorting']"
7470,747000,Artinals,0,[]
7471,747100,Banal Tickets,0,[]
7472,747200,Crankshaft,0,[]
7473,747300,Destroying The Graph,0,[]
7474,747400,"Experiment ""X"": Explosions Expected",0,[]
7475,747500,Factoring a Polynomial,12,['mathematics']
7476,747600,최대 공통 증가 수열,15,['dynamic programming']
7477,747700,Highways,4,['greedy']
7478,747800,Invariant Polynomials,0,[]
7479,747900,Jogging,0,[]
7480,748000,Key Insertion,19,"['splay tree', 'tree']"
7481,748100,ATM놀이,8,['mathematics']
7482,748200,상자 만들기,4,['mathematics']
7483,748300,Weird sort,15,"['greedy', 'sorting']"
7484,748400,Bowling,6,"['implementation', 'simulation']"
7485,748500,Exam,0,[]
7486,748600,Platforms,0,[]
7487,748700,The Very Greatest Common Divisor,6,"['arbitrary precision / big integers', 'euclidean algorithm', 'mathematics', 'number theory']"
7488,748800,앵그리 라바,0,[]
7489,748900,팩토리얼,4,"['arbitrary precision / big integers', 'mathematics']"
7490,749000,0 만들기,11,"['backtracking', 'bruteforcing', 'implementation', 'string']"
7491,749100,Lucky Controller,0,[]
7492,749200,Bukazoids,0,[]
7493,749300,Collisions,16,"['ad-hoc', 'data structures', 'segment tree']"
7494,749400,Dancers,0,[]
7495,749500,Embassy,0,[]
7496,749600,Dictionary of Obscene Words,0,[]
7497,749700,Greatest Product,14,"['dynamic programming', 'greedy', 'recursion']"
7498,749800,Fractal Cake,0,[]
7499,749900,Hexaroman Numbers,0,[]
7500,750000,Beam in Tunnel,0,[]
7501,750100,Key,20,"['mathematics', 'miller–rabin', 'number theory', 'primality test']"
7502,750200,Game on Chessboard,0,[]
7503,750300,Dart Challenge,11,[]
7504,750400,Online Shopping,0,[]
7505,750500,Playground Hideout,0,[]
7506,750600,Rain on your Parade,0,[]
7507,750700,올림픽 게임,9,[]
7508,750800,Filthy Rich,0,[]
7509,750900,Robotic Invasion,0,[]
7510,751000,고급 수학,3,"['geometry', 'mathematics', 'pythagoras theorem']"
7511,751100,소셜 네트워킹 어플리케이션,11,"['data structures', 'disjoint set', 'graph theory']"
7512,751200,연속하는 소수의 합,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes', 'sliding window']"
7513,751300,준살 프로그래밍 대회,5,"['implementation', 'string']"
7514,751400,Palindromes,0,[]
7515,751500,Prehistoric Operating Systems,7,['dynamic programming']
7516,751600,알렉산드리아의 디오판토스,14,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
7517,751700,Tudoku,18,"['backtracking', 'dancing links', ""knuth's x""]"
7518,751800,Traveling Queen Problem,0,[]
7519,751900,Mine Map,0,[]
7520,752000,Knights of the Round Table,0,[]
7522,752200,Relocation,0,[]
7523,752300,Gauß,4,"['arithmetic', 'mathematics']"
7524,752400,Kick-Tipp,0,[]
7525,752500,Number Tricks,14,"['mathematics', 'number theory', 'primality test']"
7526,752600,Citystar,0,[]
7527,752700,Escape,0,[]
7528,752800,Holiday Gifts,0,[]
7529,752900,Soccer,0,[]
7530,753000,Stamps,8,[]
7531,753100,A Knight’s Journey,0,[]
7532,753200,Dart Scoring,7,"['implementation', 'simulation']"
7533,753300,Pimp My Ride,0,[]
7534,753400,Scavenger Hunt,10,"['data structures', 'graph theory', 'graph traversal', 'set / map by hashing']"
7535,753500,A Bug’s Life,14,"['graph theory', 'graph traversal']"
7536,753600,Jamie's Contact Groups,0,[]
7537,753700,Acid Text,18,"['data structures', 'set / map by hashing', 'implementation', 'parsing', 'string', 'set / map by trees']"
7538,753800,Incomplete chess boards,12,"['ad-hoc', 'mathematics']"
7539,753900,Military Recruit,13,"['floyd–warshall', 'graph theory']"
7540,754000,Strategies,6,"['greedy', 'implementation', 'simulation', 'sorting']"
7541,754100,StuPId,6,"['arithmetic', 'bruteforcing', 'mathematics']"
7542,754200,Forest Fires,0,[]
7543,754300,Pia’s Party,0,[]
7544,754400,Castle Walls,0,[]
7545,754500,DNA Laboratory,0,[]
7546,754600,소수의 주기,8,"['implementation', 'mathematics']"
7547,754700,Heavy Transportation,12,"['data structures', 'disjoint set']"
7548,754800,Dory’s Phonebook,0,[]
7549,754900,Yeehaa!,10,"['geometry', 'mathematics']"
7550,755000,Magic Trick,8,"['implementation', 'parsing', 'simulation', 'string']"
7551,755100,Formula Racing,0,[]
7552,755200,Ancient Plates,0,[]
7553,755300,Box Art,0,[]
7554,755400,Brainman,6,"['implementation', 'sorting']"
7555,755500,Friends,0,[]
7556,755600,Manhattan 2025,9,"['geometry', 'geometry; 3d', 'implementation']"
7557,755700,Mayan Dates,0,[]
7558,755800,제곱잉여,13,"['mathematics', 'number theory', 'primality test']"
7559,755900,Regetni,0,[]
7560,756000,Cocktails,0,[]
7561,756100,크래머의 공식,11,"['linear algebra', 'mathematics']"
7562,756200,나이트의 이동,10,"['breadth-first search', 'graph theory', 'graph traversal']"
7563,756300,Rat Attack,10,['bruteforcing']
7564,756400,Automatic Poetry,0,[]
7565,756500,Ranking List,0,[]
7566,756600,Ship Journey,0,[]
7567,756700,그릇,4,"['implementation', 'string']"
7568,756800,덩치,6,"['bruteforcing', 'implementation']"
7569,756900,토마토,11,"['breadth-first search', 'graph theory', 'graph traversal']"
7570,757000,줄 세우기,13,"['dynamic programming', 'greedy']"
7571,757100,점 모으기,10,"['mathematics', 'sorting']"
7572,757200,간지(干支),4,"['arithmetic', 'implementation', 'mathematics']"
7573,757300,고기잡이,12,['bruteforcing']
7574,757400,개구리,19,"['data structures', 'graph theory', 'graph traversal', 'segment tree', 'sweeping']"
7575,757500,바이러스,16,"['knuth–morris–pratt', 'string']"
7576,757600,토마토,11,"['breadth-first search', 'graph theory', 'graph traversal']"
7577,757700,탐사,21,"['bellman–ford', 'floyd–warshall', 'graph theory']"
7578,757800,공장,16,"['data structures', 'segment tree']"
7579,757900,앱,13,"['dynamic programming', 'knapsack']"
7580,758000,Team Selection,0,[]
7581,758100,Cuboids,3,"['arithmetic', 'mathematics']"
7582,758200,On the Bus,4,"['implementation', 'simulation']"
7583,758300,Jumbled Words,4,"['implementation', 'string']"
7584,758400,Noughts & Crosses,5,"['implementation', 'simulation']"
7585,758500,Brackets,7,"['data structures', 'parsing', 'stack', 'string']"
7586,758600,Untied Airlines,5,"['data structures', 'set / map by hashing']"
7587,758700,Anagrams,7,"['sorting', 'string']"
7588,758800,Amicable,11,"['implementation', 'mathematics']"
7589,758900,Balanced Change,8,"['bruteforcing', 'parsing', 'string']"
7590,759000,Expressions,0,[]
7591,759100,Circles,0,[]
7592,759200,Stars,0,[]
7593,759300,Missing Letters,0,[]
7594,759400,Jury Compromise,0,[]
7595,759500,Triangles,3,['implementation']
7596,759600,MP3 Songs,6,['sorting']
7597,759700,Tennis,5,"['implementation', 'simulation']"
7598,759800,Bookings,4,['implementation']
7599,759900,Library Codes,4,['implementation']
7600,760000,문자가 몇갤까,4,"['implementation', 'string']"
7601,760100,Outfits,4,['implementation']
7602,760200,Exercise,5,['implementation']
7603,760300,Queen Kingdom,0,[]
7604,760400,Reconstruction Trees,14,['tree']
7605,760500,Traffic Engineering,0,[]
7606,760600,The Race,0,[]
7607,760700,리스트 계산기,24,"['implementation', 'parsing', 'string']"
7608,760800,Bargain or No Bargain,0,[]
7609,760900,Vote-Value Disparity 1,8,"['constructive', 'heuristics']"
7610,761000,Synchronization,24,"['euler tour technique', 'link/cut tree', 'tree']"
7611,761100,Watching,20,"['binary search', 'dynamic programming']"
7612,761200,SSSP,0,[]
7613,761300,보이 스카우트,23,"['convex hull trick', 'convex hull', 'dynamic programming', 'geometry']"
7614,761400,Parity,0,[]
7615,761500,해싱,21,[]
7616,761600,교실로 가는 길,19,['maximum flow']
7617,761700,Company,0,[]
7618,761800,트리 유사도,22,['dynamic programming']
7619,761900,음식값,17,[]
7620,762000,편집 거리,16,"['dynamic programming', 'string']"
7621,762100,Fish Catch,0,[]
7622,762200,The (Bayesian) Hound and the Hare,0,[]
7623,762300,무한 게임,21,"['mathematics', 'number theory']"
7624,762400,Minesweeper,0,[]
7625,762500,Space Boomerang,0,[]
7626,762600,직사각형,20,"['value / coordinate compression', 'data structures', 'segment tree', 'sweeping']"
7627,762700,스패닝 트리,22,"['data structures', 'disjoint set', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
7628,762800,Another Rock-Paper-Scissors Problem,11,['mathematics']
7629,762900,Ball Painting,15,"['combinatorics', 'mathematics']"
7630,763000,City Driving,21,"['lowest common ancestor', 'tree']"
7631,763100,Drunken Walk,20,['dynamic programming']
7632,763200,Empty Triangles,21,"['geometry', 'graph theory']"
7633,763300,Fighting for Triangles,19,['game theory']
7634,763400,Guessing Game,18,"['bellman–ford', 'graph theory']"
7635,763500,Hidden Code,12,"['bruteforcing', 'implementation', 'string']"
7636,763600,Identity Checker,19,"['bruteforcing', 'data structures', 'stack']"
7637,763700,AAAAHH! Overbooked!,5,"['implementation', 'parsing', 'string']"
7638,763800,Betting Sets,9,"['greedy', 'mathematics', 'probability theory']"
7639,763900,Counting Pixels,11,['mathematics']
7640,764000,Matryoshka Dolls,7,"['data structures', 'greedy', 'set / map by hashing', 'sorting']"
7641,764100,Equilateral Dominoes,0,[]
7642,764200,Four Gate Push,6,['bruteforcing']
7643,764300,Game Rigging,0,[]
7644,764400,Highway Construction,18,"['depth-first search', 'graph theory', 'graph traversal', 'lowest common ancestor', 'tree']"
7645,764500,A Reasonable Ranking,0,[]
7646,764600,Burns’ Rods,0,[]
7648,764800,"Matryoshka Dolls, Again",19,[]
7649,764900,Energy Collection,0,[]
7650,765000,Futurama,0,[]
7651,765100,G-Avoiding Sequence,25,[]
7652,765200,Bonsai,0,[]
7653,765300,Fruit Bowl,0,[]
7654,765400,Number Game,12,"['game theory', 'mathematics']"
7655,765500,Leap Frog,0,[]
7656,765600,만능 오라클,6,"['parsing', 'string']"
7657,765700,Rectangles,17,"['dynamic programming', 'sorting']"
7658,765800,Rectangles Too!,20,[]
7659,765900,Rubik 2^3,17,"['breadth-first search', 'bidirectional search', 'graph theory', 'graph traversal', 'implementation']"
7660,766000,Apocalyptic Alignment,0,[]
7661,766100,Boundless Boxes,0,[]
7662,766200,이중 우선순위 큐,12,"['data structures', 'priority queue', 'set / map by trees']"
7663,766300,Dreadful Deadlines,0,[]
7664,766400,Earthquake Emendations,0,[]
7665,766500,Folded Fixtures,0,[]
7666,766600,Globulous Gumdrops,0,[]
7667,766700,Honed Hops,0,[]
7668,766800,Divisibility,9,"['mathematics', 'string']"
7669,766900,Go,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
7670,767000,Game Dice,0,[]
7671,767100,Baking Cakes,15,['dynamic programming']
7672,767200,Pool,0,[]
7673,767300,Jogger,16,['graph theory']
7674,767400,Censorship,0,[]
7675,767500,Change,0,[]
7676,767600,Saruman’s army,10,"['greedy', 'sorting']"
7677,767700,Fibonacci,14,"['exponentiation by squaring', 'mathematics', 'number theory']"
7678,767800,Football,15,"['sliding window', 'tree']"
7679,767900,Robot,17,[]
7680,768000,Spam,11,"['dynamic programming', 'string']"
7681,768100,Sudoku,22,"['backtracking', 'dancing links', ""knuth's x"", 'parsing', 'string']"
7682,768200,틱택토,11,"['backtracking', 'implementation']"
7683,768300,Scrabble,6,"['implementation', 'string']"
7684,768400,Convex area,23,"['convex hull', 'geometry', 'geometry; 3d']"
7685,768500,Nim,13,"['game theory', 'sprague–grundy theorem']"
7686,768600,Dropping tests,14,"['binary search', 'greedy', 'parametric search']"
7687,768700,지구 직육면체설,19,"['case work', 'geometry', 'geometry; 3d', 'implementation', 'mathematics', 'pythagoras theorem']"
7688,768800,Colored stones,0,[]
7689,768900,RSI,0,[]
7690,769000,Do it!,0,[]
7691,769100,Cake Cutting,0,[]
7692,769200,Election,0,[]
7693,769300,Nash Equilibrium,0,[]
7694,769400,Triangle,13,"['geometry', 'mathematics', 'number theory', ""pick's theorem""]"
7695,769500,Brackets,11,['dynamic programming']
7696,769600,반복하지 않는 수,7,"['bruteforcing', 'implementation']"
7697,769700,Planet Hunting,0,[]
7718,771800,2D Matrix,0,[]
7719,771900,Purify,20,[]
7720,772000,Vigener Cipher,0,[]
7721,772100,Hiring the crew,0,[]
7722,772200,Real Fun,19,[]
7723,772300,Cypher,0,[]
7724,772400,One way roads,0,[]
7725,772500,Voting,0,[]
7726,772600,개꿀잼,22,[]
7727,772700,Byephone,25,"['divide and conquer', ""hirschberg's""]"
7728,772800,Painting patter,0,[]
7729,772900,Tree Game,20,"['dynamic programming', 'dynamic programming on trees', 'game theory', 'tree']"
7730,773000,Necklace,0,[]
7731,773100,Neighbours,0,[]
7732,773200,Downtown,0,[]
7733,773300,Book-case,0,[]
7734,773400,Vista 0,8,"['bruteforcing', 'combinatorics', 'mathematics', 'travelling salesman problem']"
7735,773500,Duopoly,0,[]
7736,773600,Stock Exchange,0,[]
7737,773700,삼각분할,20,"['combinatorics', 'data structures', 'exponentiation by squaring', 'mathematics', 'number theory', 'primality test', 'segment tree']"
7738,773800,Collision of asteroids,0,[]
7739,773900,Cards,0,[]
7740,774000,Ugly lines,0,[]
7741,774100,Cars,18,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
7742,774200,Railway,17,"['lowest common ancestor', 'tree']"
7743,774300,Triangles,0,[]
7744,774400,Cakes,17,"['greedy', 'sorting']"
7745,774500,Coloring maps,0,[]
7746,774600,Reverse numbers,0,[]
7747,774700,Three Bit Computer,12,['ad-hoc']
7748,774800,Encoding,0,[]
7749,774900,Cell phone tunes,0,[]
7750,775000,Three Bit Computer Strikes Back,0,[]
7751,775100,Coloured leaves,0,[]
7760,776000,Cocktail,0,[]
7761,776100,Increasing subsequences,0,[]
7762,776200,Map Generator,0,[]
7763,776300,Map Generator returns (MG-II),0,[]
7764,776400,Trigonometric optimization,0,[]
7765,776500,Supersquare,20,"['ad-hoc', 'mathematics', 'precomputation']"
7766,776600,Pseudographical recognizer,0,[]
7767,776700,“Roman” corridor,0,[]
7768,776800,Parabolic teleports,0,[]
7769,776900,Magic pyramid,0,[]
7770,777000,아즈텍 피라미드,4,['mathematics']
7771,777100,배틀쉽,13,['constructive']
7772,777200,구조 이성질체,21,"['dynamic programming', 'mathematics']"
7773,777300,Deepest Station,0,[]
7774,777400,콘센트,8,"['greedy', 'sorting']"
7775,777500,최종 순위,13,"['constructive', 'greedy', 'mathematics']"
7776,777600,Grid,0,[]
7777,777700,병원,22,"['dominator tree', 'maximum flow', 'graph theory', 'tree']"
7778,777800,Intelligent Design,23,"['bruteforcing', 'implementation', 'parsing', 'string']"
7779,777900,Juggle with Criteria,20,"['ad-hoc', 'bruteforcing', 'precomputation']"
7780,778000,Kingdom Subdivision,0,[]
7781,778100,Log Analysis,0,[]
7782,778200,Alien,3,"['bruteforcing', 'implementation']"
7783,778300,B-행렬,19,"['dynamic programming', 'prefix sum', 'two-pointer']"
7784,778400,서로 다른 숫자,20,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory']"
7785,778500,회사에 있는 사람,6,"['data structures', 'set / map by hashing']"
7786,778600,합 찾기,14,['mathematics']
7787,778700,"빨간 칩, 초록 칩",17,"['game theory', 'sprague–grundy theorem']"
7788,778800,복도,19,"['geometry', 'graph theory', 'minimum spanning tree', 'parametric search']"
7789,778900,텔레프라임,4,"['mathematics', 'number theory', 'primality test']"
7790,779000,Joke,4,['string']
7791,779100,KBTU party,20,[]
7792,779200,Superstitious Skylab Tower,0,[]
7793,779300,Panda Land 5: Panda Programming Language,0,[]
7794,779400,Almost Clear,0,[]
7795,779500,먹을 것인가 먹힐 것인가,8,"['binary search', 'sorting', 'two-pointer']"
7796,779600,Indomie,13,"['dynamic programming', 'mathematics']"
7797,779700,In Queries,13,"['data structures', 'implementation', 'segment tree', 'simulation']"
7798,779800,Hotel,5,"['implementation', 'simulation']"
7799,779900,Walaweh,17,"['implementation', 'recursion', 'string']"
7800,780000,The Chosen Sub Matrix,7,"['bruteforcing', 'data structures', 'set / map by hashing', 'implementation', 'sorting', 'set / map by trees']"
7801,780100,Avoiding Financial Nightmare,7,['binary search']
7802,780200,No Pause Telegraph,9,"['greedy', 'implementation', 'string']"
7803,780300,"Burger, French Fries, Soft Drink",6,"['combinatorics', 'mathematics', 'string']"
7804,780400,Taxi!,0,[]
7805,780500,Minimum Swap,5,['sorting']
7806,780600,GCD!,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
7807,780700,Playing With Domino,0,[]
7808,780800,Email from The Professor,8,['sorting']
7809,780900,The Adventure in Panda Land Part I: Panda Number,0,[]
7810,781000,Jakarta Traffic Jam,0,[]
7811,781100,Sultan's Land,0,[]
7812,781200,중앙 트리,16,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
7822,782200,Worst Locations,0,[]
7823,782300,Counting BST,0,[]
7824,782400,Playing With Stones,0,[]
7825,782500,Arm Wrestling Tournament,0,[]
7826,782600,Lightning Energy Report,0,[]
7827,782700,Transitive Closure,10,"['depth-first search', 'graph theory', 'graph traversal']"
7828,782800,더해,0,[]
7829,782900,Serial Numbers,0,[]
7830,783000,Romantic Date,6,['greedy']
7831,783100,Fire Drill,17,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
7839,783900,Pizza schedule,0,[]
7840,784000,Texture Tile,0,[]
7841,784100,Count Squares,0,[]
7842,784200,Road Accident,0,[]
7843,784300,Terrarium,0,[]
7844,784400,Sudoku Checker,8,['implementation']
7845,784500,ACM Computer Factory,0,[]
7846,784600,ACM Rank Table,7,['sorting']
7847,784700,Sales Report,7,"['data structures', 'set / map by hashing', 'implementation', 'set / map by trees']"
7848,784800,Random Gap,7,"['implementation', 'simulation']"
7849,784900,Radio Coverage,0,[]
7850,785000,Circle Drawing,0,[]
7851,785100,Harder Sokoban Problem,16,"['breadth-first search', 'graph theory', 'graph traversal']"
7852,785200,Nearest number - 2,11,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
7853,785300,Advanced ASCII Cubes,11,['implementation']
7854,785400,Water pipe,0,[]
7855,785500,"One is good, but two is better",0,[]
7856,785600,Beach cut,0,[]
7857,785700,Simple prefix compression,4,"['bruteforcing', 'implementation', 'string']"
7858,785800,Tetris Alphabet,14,"['depth-first search', 'graph theory', 'graph traversal', 'topological sorting']"
7859,785900,Network Saboteur,10,['recursion']
7860,786000,Burned Calendar,0,[]
7861,786100,Longest Ordered Subsequence,9,['dynamic programming']
7862,786200,Falling cards,0,[]
7863,786300,Very Simple Problem,5,[]
7864,786400,Binary Witch,9,"['data structures', 'dynamic programming', 'set / map by hashing', 'implementation', 'simulation', 'set / map by trees']"
7865,786500,Fool Game,0,[]
7866,786600,Spreadsheet,0,[]
7867,786700,PreQueL,0,[]
7868,786800,해밍 수열,11,"['bruteforcing', 'mathematics', 'number theory', 'sorting']"
7869,786900,두 원,14,"['case work', 'geometry', 'mathematics']"
7870,787000,Accountant notes,24,"['aho-corasick', 'data structures', 'dynamic programming', 'hashing', 'implementation', 'string', 'tree', 'trie']"
7871,787100,Better and faster!,0,[]
7872,787200,Cave,18,"['data structures', 'deque', 'divide and conquer', 'implementation', 'segment tree', 'simulation', 'stack']"
7873,787300,Decision,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
7874,787400,Everybody may get lost in space,0,[]
7875,787500,(False) faces,28,"['linear algebra', 'mathematics']"
7876,787600,Garlands,0,[]
7877,787700,Hypervisor MacrOS,0,[]
7878,787800,Islands,16,"['binary search', 'data structures', 'disjoint set', 'sorting', 'sweeping']"
7879,787900,Jack’s socks,22,"['articulation points and bridges', 'graph theory']"
7880,788000,Knowledge for the masses,0,[]
7881,788100,YAPTCHA,12,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
7882,788200,Skyscrapers,13,[]
7883,788300,Business Cards,17,"['mathematics', 'number theory']"
7884,788400,Museum,0,[]
7885,788500,Morphing is fun,0,[]
7886,788600,Tower,0,[]
7887,788700,Suffix reconstruction,0,[]
7888,788800,두 교수,22,"['data structures', 'graph theory', 'greedy', 'priority queue', 'sorting']"
7889,788900,힙 세기,0,[]
7890,789000,가까운 점 찾기,25,"['delaunay triangulation', 'geometry', 'voronoi diagram']"
7891,789100,Can you add this?,2,"['arithmetic', 'implementation', 'mathematics']"
7892,789200,Johnny and the Quadratic Equation,20,"['backtracking', 'case work', 'mathematics', 'number theory']"
7893,789300,Vase collection,0,[]
7894,789400,큰 수,13,['mathematics']
7895,789500,Prison rearrangement,0,[]
7896,789600,Sightseeing tour,0,[]
7897,789700,A number game,0,[]
7898,789800,Euro Efficiency,14,[]
7899,789900,Markov Trains,0,[]
7900,790000,Hansel and Grethel,10,"['geometry', 'mathematics']"
7901,790100,Floors,11,[]
7902,790200,The Picnic,0,[]
7903,790300,Pearls,9,['dynamic programming']
7904,790400,허프만 트리,0,[]
7905,790500,Input,11,"['bruteforcing', 'case work', 'geometry', 'implementation', 'mathematics']"
7906,790600,Arithmetic Rectangle,22,[]
7907,790700,Bytean Road Race,23,"['graph theory', 'planar graph', 'topological sorting']"
7908,790800,Will It Stop?,9,['mathematics']
7909,790900,Ants,22,['mathematics']
7910,791000,Gophers,20,"['data structures', 'segment tree']"
7911,791100,Laundry,17,"['data structures', 'greedy', 'set / map by trees']"
7912,791200,Bits Generator,0,[]
7913,791300,Afternoon Tea,15,['mathematics']
7914,791400,Intelligence Quotient,19,"['bipartite matching', 'maximum flow', 'max-flow min-cut theorem']"
7915,791500,Cave,17,"['dynamic programming', 'dynamic programming on trees', 'mathematics', 'number theory', 'tree']"
7916,791600,Cross Spider,16,[]
7917,791700,Potrójne drzewa,0,[]
7918,791800,Triangulacja,0,[]
7919,791900,Strażak,21,"['backtracking', 'depth-first search', 'graph theory', 'graph traversal']"
7920,792000,Słoneczna wyspa,0,[]
7921,792100,Dziadkowie,6,"['implementation', 'mathematics']"
7922,792200,Ciasteczkowy potwór,13,['mathematics']
7923,792300,Spacer,0,[]
7924,792400,Suma kontrolna,0,[]
7925,792500,Wąż,0,[]
7926,792600,Chciwi rolnicy,0,[]
7927,792700,ADOM,0,[]
7928,792800,Artefakt,0,[]
7929,792900,Bardzo brudny łańcuch,18,"['string', 'suffix array and lcp array']"
7930,793000,Ciekawy Książę,0,[]
7931,793100,Dzień Szachisty,0,[]
7932,793200,Egzotyczny układ mechaniczny,0,[]
7933,793300,Fiołkowe puzzle,0,[]
7934,793400,Goździki,0,[]
7935,793500,Historia bawełny,14,"['combinatorics', 'dynamic programming', 'mathematics']"
7936,793600,N의 존재,24,"['discrete logarithm', 'mathematics', 'number theory']"
7937,793700,Jaka data?,0,[]
7938,793800,Mniam mniam,21,"['inclusion and exclusion', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
7939,793900,Sygnał,0,[]
7940,794000,Armaty,0,[]
7941,794100,Sortowanie,17,"['data structures', 'segment tree']"
7942,794200,Piąty wymiar,0,[]
7943,794300,Tetris,21,"['bitmask', 'case work', 'dynamic programming', 'dynamic programming using bitfield', 'exponentiation by squaring', 'mathematics']"
7944,794400,Autostrady,0,[]
7945,794500,Hurtownia czekolady,0,[]
7946,794600,Supermarket,6,['sorting']
7947,794700,Koncert,3,"['arithmetic', 'implementation', 'mathematics']"
7948,794800,Smok,15,"['greedy', 'sorting']"
7949,794900,Cebula,18,"['convex hull', 'geometry']"
7950,795000,Szaszłyki,0,[]
7951,795100,Radio,0,[]
7952,795200,Jaskinia,0,[]
7953,795300,Skarb,14,"['breadth-first search', 'graph theory', 'graph traversal']"
7954,795400,Liczby Erdösa,17,"['dynamic programming', 'graph theory', 'offline queries', 'parsing', 'string']"
7955,795500,Popisowa samoobrona,0,[]
7956,795600,Liczby piwne,8,"['ad-hoc', 'arbitrary precision / big integers', 'mathematics']"
7957,795700,Cash Dispenser,0,[]
7958,795800,Points,0,[]
7959,795900,Toy Cars,0,[]
7960,796000,Piggy Banks,0,[]
7961,796100,Knights,0,[]
7962,796200,A Journey to Mars,16,[]
7963,796300,Bank Notes,20,[]
7964,796400,Fibonacci Sums,23,"['implementation', 'mathematics', 'number theory']"
7965,796500,Dicing,21,[]
7966,796600,Template,21,[]
7967,796700,Balance,9,"['backtracking', 'bruteforcing']"
7968,796800,Special Forces Manoeuvres,0,[]
7970,797000,Double-row,0,[]
7971,797100,The Bus,18,"['value / coordinate compression', 'data structures', 'segment tree']"
7972,797200,Mirror Trap,0,[]
7973,797300,Dextrogyrate Camel,22,[]
7974,797400,Vending Machine,0,[]
7975,797500,버스 여행,19,[]
7976,797600,수열,14,"['dynamic programming', 'greedy']"
7977,797700,크리스 마틴,13,"['constructive', 'greedy']"
7978,797800,Evaluation of an Expression,0,[]
7979,797900,Formula One,25,['ad-hoc']
7980,798000,Save the Dinosaurs,24,[]
7981,798100,장비를 정지합니다,19,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
7982,798200,순열 그래프의 연결성 판별,15,['ad-hoc']
7983,798300,내일 할거야,11,"['greedy', 'sorting']"
7984,798400,두더지 잡기,21,['dynamic programming']
7987,798700,Spies,21,"['graph theory', 'greedy', 'topological sorting']"
7989,798900,The Bridge,12,"['greedy', 'mathematics', 'sorting']"
7990,799000,Gates,0,[]
7992,799200,Passage,0,[]
7993,799300,후르츠 치킨,21,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'topological sorting', 'tree']"
7994,799400,The Islands,19,[]
7995,799500,C-algae,24,"['data structures', 'graph theory', 'hashing', 'set / map by hashing', 'mathematics']"
7996,799600,Maximal Orders of Permutations,0,[]
7997,799700,Sequences without Stammers,24,['ad-hoc']
7998,799800,Chocolate,15,['dynamic programming']
7999,799900,Numerals of Przesmyks,19,"['arbitrary precision / big integers', 'dynamic programming', 'implementation', 'string']"
8000,800000,Printed-Circuit Boards,0,[]
8001,800100,Smugglers,0,[]
8002,800200,Mastermind II,8,[]
8003,800300,Motorways,22,[]
8004,800400,Trinomial,16,['mathematics']
8005,800500,Tiles,0,[]
8006,800600,Connections,17,"['data structures', ""dijkstra's"", 'graph theory']"
8007,800700,Treasure,0,[]
8008,800800,Sums,19,"[""dijkstra's"", 'graph theory', 'mathematics', 'number theory']"
8009,800900,Holiday Costing,8,"['implementation', 'mathematics']"
8010,801000,Shuffle,0,[]
8011,801100,Railways,0,[]
8012,801200,한동이는 영업사원!,16,"['lowest common ancestor', 'tree']"
8013,801300,Superknight,0,[]
8014,801400,Island,0,[]
8015,801500,Castle,0,[]
8016,801600,Insulator,6,"['greedy', 'implementation', 'mathematics', 'sorting']"
8017,801700,Parcel,15,"['data structures', 'disjoint set', 'sorting']"
8018,801800,Counting-Out Rhyme,0,[]
8019,801900,Resort,0,[]
8020,802000,Protocols,14,"['arbitrary precision / big integers', 'dynamic programming']"
8021,802100,Minuses,0,[]
8022,802200,Skiers,0,[]
8023,802300,Balance,0,[]
8024,802400,B-Smooth Numbers,0,[]
8025,802500,Brackets,0,[]
8026,802600,Pionek,0,[]
8027,802700,Antiprime Numbers,13,"['mathematics', 'number theory', 'precomputation']"
8028,802800,Green Game,0,[]
8029,802900,Density Map,6,[]
8030,803000,Intervals,10,[]
8031,803100,Weaker Goldbach,15,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
8032,803200,Peaceful Comission,0,[]
8033,803300,Island,0,[]
8034,803400,Ants and the Ladybug,0,[]
8035,803500,Travel Plan (Small),0,[]
8036,803600,Wandering Flea Trainers,0,[]
8037,803700,Necklaces,0,[]
8038,803800,City Tour,0,[]
8039,803900,Bank,0,[]
8040,804000,Goldmine,18,"['data structures', 'segment tree', 'sweeping']"
8041,804100,Chain,0,[]
8042,804200,Where to Build a Brewery?,14,"['bruteforcing', 'implementation']"
8043,804300,Stripes,0,[]
8044,804400,Viruses,0,[]
8045,804500,Signatures,0,[]
8046,804600,Automorphisms,0,[]
8047,804700,Triple-Arm Crane,0,[]
8048,804800,Code,15,"['combinatorics', 'dynamic programming', 'mathematics', 'tree']"
8049,804900,The Labyrinth of Wells,0,[]
8050,805000,Lollobrigida,10,['greedy']
8051,805100,P-Broken-Line,0,[]
8052,805200,Agents,0,[]
8053,805300,Repetitions,17,"['binary search', 'knuth–morris–pratt', 'string']"
8054,805400,Promotion,0,[]
8055,805500,Polygons,0,[]
8056,805600,Musketeers,0,[]
8057,805700,Empty Cuboids,0,[]
8058,805800,Rockets,0,[]
8059,805900,Speleology,0,[]
8060,806000,Sleepwalker,0,[]
8061,806100,Bitmap,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
8062,806200,Ice rink,0,[]
8063,806300,Three-Coloring of Binary Trees,0,[]
8064,806400,Store-Keeper,21,[]
8065,806500,Map,0,[]
8066,806600,Altars,0,[]
8067,806700,Primitivus,0,[]
8068,806800,Water,16,"['breadth-first search', 'data structures', ""dijkstra's"", 'graph theory', 'graph traversal', 'priority queue']"
8069,806900,AB-words,0,[]
8070,807000,Painter's Studio,0,[]
8071,807100,One-sequence,11,"['ad-hoc', 'constructive', 'mathematics']"
8072,807200,Polygon,0,[]
8073,807300,Road Net,7,"['bruteforcing', 'graph theory']"
8074,807400,How to Pack Containers?,0,[]
8075,807500,Word Equations,15,"['arbitrary precision / big integers', 'breadth-first search', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'precomputation', 'string']"
8076,807600,Window,20,[]
8077,807700,Frogman,12,['dynamic programming']
8078,807800,Assembler Circuits,0,[]
8079,807900,ATMs,0,[]
8080,808000,Chase,0,[]
8081,808100,The Lightest Language,24,[]
8082,808200,Flat Broken Lines,0,[]
8083,808300,Rectangles,20,[]
8084,808400,The Number of Symmetrical Choices,20,"['data structures', 'dynamic programming', 'graph theory', 'meet in the middle', 'string', 'tree', 'trie']"
8085,808500,Jumps,12,[]
8086,808600,Cheap Travels,0,[]
8087,808700,XOR Gates,12,['dynamic programming']
8088,808800,Airports,14,"['constructive', 'data structures', 'graph theory', 'greedy', 'priority queue']"
8089,808900,Addon,0,[]
8090,809000,Genotypes,0,[]
8091,809100,Petrol,0,[]
8092,809200,Recursive Ant,0,[]
8093,809300,Credibility of Witnesses,0,[]
8094,809400,Canoes,9,['greedy']
8095,809500,The Number of N-k-special Sets,12,"['arbitrary precision / big integers', 'dynamic programming']"
8096,809600,Monochromatic Triangles,17,"['combinatorics', 'mathematics']"
8097,809700,Ali Baba,0,[]
8098,809800,Lecture Halls Reservation,11,"['dynamic programming', 'sorting']"
8099,809900,Messengers,0,[]
8100,810000,Containers,0,[]
8101,810100,Rods,14,"['binary search', 'mathematics']"
8102,810200,Castle,0,[]
8103,810300,Rooks,18,"['data structures', 'greedy', 'priority queue']"
8104,810400,Fibonacci Words,0,[]
8105,810500,Gambling,0,[]
8106,810600,Agents,0,[]
8107,810700,Boxes,0,[]
8108,810800,Knights,0,[]
8109,810900,Word Equalizing,19,"['0-1 bfs', 'data structures', ""dijkstra's"", 'graph theory', 'hashing', 'tree', 'trie']"
8110,811000,Trees,10,['implementation']
8111,811100,0과 1,16,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics']"
8112,811200,0과 1 - 2,17,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics']"
8113,811300,Disk Optimization,0,[]
8114,811400,Palindromes,14,"['dynamic programming', 'implementation']"
8115,811500,The Right-Turn Drivers' Club,14,"[""dijkstra's"", 'graph theory']"
8116,811600,Mudstock Bis,0,[]
8117,811700,Triangles,6,"['bruteforcing', 'geometry', 'greedy', 'sorting']"
8118,811800,Board Covering,17,"['bipartite matching', 'maximum flow']"
8119,811900,Polygon,0,[]
8120,812000,Coding of Permutations,15,"['binary search', 'data structures', 'segment tree']"
8121,812100,Step Traversing a Tree,17,"['constructive', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
8122,812200,Chute,0,[]
8123,812300,The Concatenation of Words,0,[]
8124,812400,Job Scheduling,17,['sorting']
8125,812500,Professor Szu,21,"['graph theory', 'strongly connected component', 'topological sorting']"
8126,812600,Warehouse,19,['greedy']
8127,812700,Schools,18,"['maximum flow', 'minimum cost maximum flow']"
8128,812800,Subway,23,[]
8129,812900,The Invasion,17,"['dynamic programming', 'geometry', 'sweeping', 'two-pointer']"
8130,813000,The Postman,20,"['eulerian path / circuit', 'graph theory']"
8131,813100,Ploughing,23,"['dynamic programming', 'greedy', 'two-pointer']"
8132,813200,Dancing in Circles,0,[]
8133,813300,Aesthetic Text,21,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
8134,813400,Crystals,23,"['combinatorics', 'dynamic programming', 'linear algebra', 'mathematics']"
8135,813500,Teddies,0,[]
8136,813600,Palindromes,20,"['knuth–morris–pratt', 'string']"
8137,813700,Sophie,18,"['bruteforcing', 'graph theory']"
8138,813800,Tourist Attractions,20,"['bitmask', ""dijkstra's"", 'graph theory', 'travelling salesman problem']"
8140,814000,Trees,26,[]
8141,814100,Axes of Symmetry,22,"['geometry', 'knuth–morris–pratt', ""manacher's"", 'string']"
8142,814200,Ridges and Valleys,13,"['depth-first search', 'graph theory', 'graph traversal']"
8143,814300,The Flood,19,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'sweeping']"
8144,814400,Rock Garden,22,['mathematics']
8145,814500,Megalopolis,19,"['data structures', 'heavy-light decomposition', 'segment tree', 'tree']"
8146,814600,Tetris Attack,22,"['data structures', 'greedy', 'stack']"
8147,814700,Railway,0,[]
8148,814800,Gas Pipelines,0,[]
8149,814900,Weights,19,"['binary search', 'greedy', 'parametric search']"
8150,815000,Driving Exam,20,"['data structures', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'segment tree', 'two-pointer']"
8151,815100,Building Blocks,0,[]
8152,815200,Quaternary Balance,0,[]
8153,815300,Toll,0,[]
8154,815400,Building blocks,0,[]
8155,815500,Postering,16,"['data structures', 'divide and conquer', 'segment tree', 'stack']"
8156,815600,Robinson,0,[]
8157,815700,Mirror trap,0,[]
8158,815800,Blockade,21,"['articulation points and bridges', 'graph theory']"
8159,815900,BBB,19,"['data structures', 'greedy', 'segment tree', 'sparse table']"
8160,816000,Trains,19,['hashing']
8161,816100,Mafia,20,"['breadth-first search', 'graph theory', 'graph traversal']"
8162,816200,The Great Escape,0,[]
8163,816300,Lights,0,[]
8164,816400,Plot purchase,0,[]
8165,816500,Subdivision of Kingdom,0,[]
8166,816600,Triangles,18,"['geometry', 'linear algebra', 'mathematics', 'prefix sum', 'sorting']"
8167,816700,Permutation,0,[]
8168,816800,Station,0,[]
8169,816900,소화기 설치,24,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'tree']"
8170,817000,Pebbles,21,[]
8171,817100,Algorithm Speedup,25,[]
8172,817200,Elephants,20,"['greedy', 'permutation cycle decomposition']"
8173,817300,Fire Brigade,24,"['case work', 'data structures', 'segment tree', 'sweeping']"
8174,817400,Isles in a Triangular Grid,0,[]
8175,817500,The Walk of Bytie-boy,20,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
8176,817600,Ticket Inspector,18,['dynamic programming']
8177,817700,Ice Skates,22,"['data structures', ""hall's theorem"", 'segment tree']"
8178,817800,Hexer,19,[]
8179,817900,Words 2,0,[]
8180,818000,Words,0,[]
8181,818100,Arrays,15,[]
8182,818200,Island,24,"['convex hull', 'geometry', 'greedy']"
8183,818300,The Code,0,[]
8184,818400,Guilds,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
8185,818500,Railway,23,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'segment tree']"
8186,818600,Beads,19,"['hashing', 'rabin–karp', 'string']"
8187,818700,Divine Divisor,0,[]
8188,818800,Intelligence Test,15,['binary search']
8189,818900,Antisymmetry,18,"[""manacher's"", 'string']"
8190,819000,Hamsters,21,"['dynamic programming', 'exponentiation by squaring', 'graph theory', 'knuth–morris–pratt', 'mathematics', 'string', 'suffix array and lcp array']"
8191,819100,Blocks,22,['two-pointer']
8192,819200,Sheep,20,"['dynamic programming', 'geometry']"
8193,819300,킹세종,19,"['ad-hoc', 'graph theory', 'graph traversal', 'greedy']"
8194,819400,Monotonicity,19,[]
8195,819500,Monotonicity 2,21,"['data structures', 'dynamic programming', 'segment tree']"
8196,819600,The Minima Game,16,"['dynamic programming', 'game theory', 'greedy']"
8197,819700,Lamp,26,"['data structures', 'segment tree']"
8198,819800,Frog,17,"['data structures', 'sparse table', 'two-pointer']"
8199,819900,Ones,0,[]
8200,820000,Bridges,21,"['binary search', 'eulerian path / circuit', 'maximum flow', 'graph theory', 'parametric search']"
8201,820100,Pilots,17,"['data structures', 'deque']"
8202,820200,Conspiracy,22,"['graph theory', 'mathematics']"
8203,820300,Lollipop,19,"['ad-hoc', 'mathematics']"
8204,820400,Lightning Conductor,20,"['binary search', 'divide and conquer']"
8205,820500,Shift,20,"['ad-hoc', 'constructive', 'mathematics']"
8206,820600,Plot,24,"['binary search', 'geometry', 'randomization']"
8207,820700,Strongbox,0,[]
8208,820800,Difference,18,"['dynamic programming', 'greedy']"
8209,820900,Garbage,18,"['eulerian path / circuit', 'graph theory']"
8210,821000,Tree Rotations 2,22,"['data structures', 'segment tree', 'smaller to larger technique']"
8211,821100,Tree Rotations,21,"['data structures', 'segment tree', 'smaller to larger technique', 'tree']"
8212,821200,Temperature,20,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
8213,821300,Dynamite,22,"['binary search', 'dynamic programming', 'dynamic programming on trees', 'tree']"
8214,821400,Party,19,"['constructive', 'graph theory']"
8215,821500,Inspection,0,[]
8216,821600,Periodicity,23,"['greedy', 'knuth–morris–pratt', 'string']"
8217,821700,유성,22,"['binary search', 'data structures', 'parallel binary search', 'segment tree']"
8218,821800,Sticks,18,"['ad-hoc', 'data structures', 'sorting', 'set / map by trees']"
8219,821900,Programming Contest,19,['maximum flow']
8220,822000,Festival,22,"['floyd–warshall', 'graph theory', 'strongly connected component']"
8221,822100,Letters,16,"['data structures', 'greedy', 'segment tree']"
8222,822200,Distance,21,"['mathematics', 'number theory']"
8223,822300,Rendezvous,20,"['lowest common ancestor', 'tree']"
8224,822400,Well,20,"['binary search', 'dynamic programming', 'parametric search', 'slope trick']"
8225,822500,Tour de Byteotia,18,"['constructive', 'data structures', 'disjoint set', 'graph theory']"
8226,822600,Vouchers,17,['mathematics']
8227,822700,Cloakroom,22,"['dynamic programming', 'knapsack', 'offline queries']"
8228,822800,A Horrible Poem,21,"['string', 'suffix array and lcp array']"
8229,822900,Fibonacci Representation,17,"['greedy', 'mathematics']"
8230,823000,Squarks,17,"['bruteforcing', 'data structures', 'mathematics', 'sorting', 'set / map by trees']"
8231,823100,Salaries,21,"['greedy', 'tree']"
8232,823200,Leveling Ground,24,"['mathematics', 'number theory']"
8233,823300,Minimalist Security,20,"['depth-first search', 'graph theory', 'graph traversal']"
8234,823400,Warehouse Store,18,"['data structures', 'greedy', 'segment tree with lazy propagation', 'segment tree', 'set / map by trees']"
8235,823500,Prefixuffix,24,"['hashing', ""manacher's"", 'string']"
8236,823600,Price List,25,"[""dijkstra's"", 'graph theory']"
8237,823700,Tapestries,27,['geometry']
8238,823800,Multidrink,23,"['dynamic programming', 'dynamic programming on trees', 'tree']"
8239,823900,Taxis,19,"['greedy', 'sorting']"
8240,824000,Take-out,18,"['data structures', 'prefix sum', 'stack']"
8241,824100,Walk,21,"['data structures', 'graph theory', 'set / map by hashing']"
8242,824200,Inspector,24,"['binary search', 'greedy', 'implementation', 'simulation']"
8243,824300,Triumphal arch,19,"['binary search', 'dynamic programming', 'dynamic programming on trees', 'tree']"
8244,824400,Tales of seafaring,16,"['breadth-first search', 'graph theory', 'graph traversal', 'offline queries']"
8245,824500,Obraz,5,"['implementation', 'string']"
8246,824600,Stół,4,['mathematics']
8247,824700,Mecze,11,['sorting']
8248,824800,Wojna,15,"['game theory', 'greedy']"
8249,824900,Dookoła świata,20,"[""dijkstra's"", 'graph theory']"
8250,825000,Malowanie,21,"['value / coordinate compression', 'data structures', 'prefix sum', 'segment tree', 'sweeping']"
8251,825100,Bandżo,19,"['value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
8252,825200,Renowacja dróg,22,"['maximum flow', 'hungarian', 'minimum cost maximum flow']"
8253,825300,Nożyczki,25,"['data structures', 'geometry', 'mathematics', 'sweeping', 'set / map by trees']"
8254,825400,Tanie linie,21,[]
8255,825500,Wypożyczalnia nart,0,[]
8256,825600,Zima,0,[]
8257,825700,Dwójkowy zbijak,0,[]
8258,825800,Fosa,0,[]
8259,825900,Korniki,0,[]
8260,826000,Pająk,0,[]
8261,826100,Niekolejne,6,['mathematics']
8262,826200,Dwa torty,0,[]
8263,826300,Inwazja kosmitów,0,[]
8264,826400,Kręgi w zbożu,22,[]
8265,826500,Plecak,0,[]
8266,826600,Podatek,19,[]
8267,826700,Sad,0,[]
8268,826800,Tasowanie,0,[]
8269,826900,Transformacje,0,[]
8270,827000,Tulips,4,[]
8271,827100,Rooks,6,"['bipartite matching', 'constructive', 'greedy']"
8272,827200,Unlucky,13,['mathematics']
8273,827300,Climbing,10,"['ad-hoc', 'greedy', 'implementation', 'two-pointer']"
8274,827400,Journeys,22,"['data structures', ""dijkstra's"", 'graph theory', 'segment tree']"
8275,827500,Pedestrian Crossing,0,[]
8276,827600,Fuel,0,[]
8277,827700,Plotter,0,[]
8278,827800,Declining Sequences,0,[]
8279,827900,Double Factorial,12,"['arbitrary precision / big integers', 'mathematics', 'number theory']"
8280,828000,Trails,0,[]
8281,828100,Vacation,0,[]
8282,828200,Automorphisms,21,"['tree', 'tree isomorphism']"
8283,828300,Kangaroos,24,"['data structures', ""mo's"", 'offline queries', 'segment tree']"
8284,828400,Laser Pool,0,[]
8285,828500,The Shortest Period,0,[]
8286,828600,Road Network 2,16,"['constructive', 'degree sequence', 'graph theory', 'tree']"
8287,828700,Computational Biology,19,"['graph theory', 'hashing', 'string']"
8288,828800,Byteland Worldbeat Publishers,24,[]
8289,828900,Exam,21,[]
8290,829000,Computational Geometry,12,"['constructive', 'geometry']"
8291,829100,Coprime Numbers,19,"['inclusion and exclusion', 'mathematics', 'number theory']"
8292,829200,Telescope,22,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'greedy']"
8293,829300,Prime prime power,20,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
8294,829400,Hard Choice,20,[]
8295,829500,Rectangles,4,"['arithmetic', 'bruteforcing', 'mathematics']"
8296,829600,Orienteering,8,['implementation']
8297,829700,Mushrooms,8,['greedy']
8298,829800,Coins,14,"['data structures', 'prefix sum', 'set / map by trees']"
8299,829900,Fragments,0,[]
8300,830000,Squared Words,13,"['dynamic programming', 'string']"
8301,830100,Evacuation,0,[]
8302,830200,Map,16,"['dynamic programming', 'sorting']"
8303,830300,The Goat,0,[]
8304,830400,Map 2,17,"['dynamic programming', 'sorting']"
8305,830500,Termites,25,[]
8306,830600,Bytie's Display,0,[]
8307,830700,Byton Tree,0,[]
8308,830800,Firm,19,[]
8309,830900,Planning the Roadworks,0,[]
8310,831000,Riddle,22,"['2-sat', 'graph theory', 'strongly connected component']"
8311,831100,Variable Subsequences,14,['dynamic programming']
8312,831200,Rectangles 2,9,"['combinatorics', 'mathematics']"
8313,831300,Sweets,21,"['data structures', 'meet in the middle', 'segment tree', 'set / map by trees']"
8314,831400,Acyclic Decomposition,16,"['ad-hoc', 'graph theory', 'graph traversal', 'topological sorting']"
8315,831500,Divisors,0,[]
8316,831600,Byteball Match,19,[]
8317,831700,Army Training,23,[]
8318,831800,Blindfold Nim,0,[]
8319,831900,Termites 2,22,[]
8320,832000,직사각형을 만드는 방법,4,"['implementation', 'mathematics']"
8321,832100,Tables,5,"['greedy', 'sorting']"
8322,832200,"(K,N)-나이트",16,"['case work', 'implementation', 'mathematics', 'number theory']"
8323,832300,Dice,15,"['dynamic programming', 'mathematics']"
8324,832400,Pawn,0,[]
8325,832500,Drilling,0,[]
8326,832600,The Way to Bytemountain,0,[]
8327,832700,Stamps,0,[]
8328,832800,Byteantean Towns,0,[]
8329,832900,Circular Game,0,[]
8330,833000,순열,18,"['data structures', 'greedy', 'segment tree with lazy propagation', 'segment tree']"
8331,833100,Quasi-template,0,[]
8332,833200,Cakes,0,[]
8333,833300,Diamond,0,[]
8334,833400,Cards,0,[]
8335,833500,Fishes,0,[]
8336,833600,Chess,15,[]
8337,833700,Rectangles 2,13,['mathematics']
8338,833800,Type Two de Bruijn Sequences,0,[]
8339,833900,Fibonacci Machine,20,"['data structures', 'segment tree with lazy propagation', 'linear algebra', 'mathematics', 'segment tree']"
8340,834000,Colouring,8,[]
8341,834100,Programming Contest,20,"['bitmask', 'bruteforcing', 'dynamic programming', 'dynamic programming using bitfield', 'greedy', 'square root decomposition']"
8342,834200,Permutations,13,"['ad-hoc', 'case work', 'mathematics']"
8343,834300,Watchmen,0,[]
8344,834400,Tram,0,[]
8345,834500,A Cat on a Keyboard,5,"['implementation', 'string']"
8346,834600,Logarithmic Paprika,9,['mathematics']
8347,834700,Bug,12,"[""dijkstra's"", 'graph theory']"
8348,834800,Paper Clips,0,[]
8349,834900,Diagonals,0,[]
8350,835000,Studies,0,[]
8351,835100,Mosaicism,7,"['bitmask', 'mathematics']"
8352,835200,Turns,18,"['string', 'suffix array and lcp array']"
8353,835300,Cliquers,23,['mathematics']
8354,835400,Journey,0,[]
8355,835500,Questions,0,[]
8356,835600,Chessboard,0,[]
8357,835700,Cliquers Strike Back,0,[]
8358,835800,Safe,0,[]
8359,835900,Dragon Milkdrinker,0,[]
8360,836000,Potato,0,[]
8361,836100,Near 2,0,[]
8362,836200,Near,7,['sorting']
8363,836300,Balloons,19,['mathematics']
8364,836400,Idempotent Functions,16,"['combinatorics', 'mathematics']"
8365,836500,Reconstruction of Byteland,0,[]
8366,836600,Return of the Cliquers,0,[]
8367,836700,Electricity,0,[]
8368,836800,Computation of a Road Network Plan,0,[]
8369,836900,Enumeration of Road Network Plans,0,[]
8370,837000,Plane,1,"['arithmetic', 'mathematics']"
8371,837100,Dyslexia,3,"['implementation', 'string']"
8372,837200,Conference - Rectification,0,[]
8373,837300,Conference,0,[]
8374,837400,Encyclopedia,10,['greedy']
8375,837500,Sheets,0,[]
8376,837600,Improvisation,0,[]
8377,837700,Sport Clubs,0,[]
8378,837800,Buses,0,[]
8379,837900,Clouds,0,[]
8380,838000,Video-Poker,0,[]
8381,838100,Brackets,17,['dynamic programming']
8382,838200,Subsets,23,"['fast fourier transform', 'mathematics']"
8383,838300,Almost Conjugates,0,[]
8384,838400,Cubes,0,[]
8385,838500,ROT13,9,"['binary search', 'value / coordinate compression', 'data structures', 'set / map by hashing', 'sorting', 'string']"
8386,838600,Barricades,19,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
8387,838700,Dyslexia,3,"['implementation', 'string']"
8388,838800,Inversions,16,['dynamic programming']
8389,838900,Speed Limits,0,[]
8390,839000,Straight Lines 2,0,[]
8391,839100,Microchips,0,[]
8392,839200,Sunsets,0,[]
8393,839300,합,1,"['implementation', 'mathematics']"
8394,839400,악수,8,"['dynamic programming', 'mathematics']"
8395,839500,Segments,0,[]
8396,839600,Sawmills,0,[]
8397,839700,Byteland Lottery,13,"['combinatorics', 'mathematics', 'number theory']"
8398,839800,Worms,0,[]
8399,839900,Farmer's Field,0,[]
8400,840000,Crayfish,0,[]
8401,840100,Words,0,[]
8402,840200,Travel Agency,20,"['maximum flow', 'max-flow min-cut theorem']"
8403,840300,Ant,0,[]
8404,840400,Straight Lines,0,[]
8405,840500,The Temple,0,[]
8406,840600,피보나치 단어,26,"['case work', 'mathematics']"
8407,840700,Professor Laugh's Numbers,15,"['mathematics', 'number theory']"
8408,840800,Polygons,20,"['geometry', 'sorting']"
8409,840900,Strong-box,0,[]
8410,841000,Meeting,14,"['dynamic programming', 'mathematics']"
8411,841100,Motorways,17,[]
8412,841200,The Game,0,[]
8413,841300,Contour Lines,0,[]
8414,841400,Tetris,0,[]
8415,841500,Rooks,20,"['gaussian elimination', 'graph theory', 'linear algebra', 'mathematics']"
8416,841600,Czy umiesz potęgować?,5,"['mathematics', 'number theory']"
8417,841700,Jasio,5,"['implementation', 'string']"
8418,841800,Biblioteka,0,[]
8419,841900,Wielomian,7,['mathematics']
8420,842000,Linie autobusowe,0,[]
8421,842100,Suma,12,"['mathematics', 'number theory']"
8422,842200,Autostrady,0,[]
8423,842300,Liczby cykliczne,15,"['mathematics', 'number theory']"
8424,842400,Formuły,0,[]
8425,842500,Jan,0,[]
8426,842600,Kosmiczna budowa,0,[]
8427,842700,Pudełka,0,[]
8428,842800,Dziurawa szachownica,0,[]
8429,842900,Drogi,0,[]
8430,843000,Superkomputer,0,[]
8431,843100,Bilard,0,[]
8432,843200,Dźwigi,0,[]
8433,843300,Usługi kurierskie,0,[]
8434,843400,Wielomian,0,[]
8435,843500,Wygaszacz ekranu,0,[]
8436,843600,Kamil,4,"['arithmetic', 'combinatorics', 'implementation', 'mathematics', 'string']"
8437,843700,Julka,1,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
8438,843800,Dyzio,9,['recursion']
8439,843900,Jasiek,14,"['ad-hoc', 'geometry', 'area of a polygon']"
8440,844000,Bajtocka Agencja Informacyjna,0,[]
8441,844100,Nawiasy,17,"['data structures', 'segment tree']"
8442,844200,Zbrodnia na Piccadilly Circus,9,"['bruteforcing', 'implementation', 'prefix sum', 'sorting']"
8443,844300,Superliczby w permutacji,0,[]
8444,844400,Tomki,0,[]
8445,844500,Tańce gordyjskie Krzyśków,0,[]
8446,844600,Rączy jelonek,14,"['arbitrary precision / big integers', 'breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'precomputation']"
8447,844700,Kostka,0,[]
8448,844800,Wczasy,14,"['geometry', 'geometry; 3d', 'implementation', 'mathematics']"
8449,844900,Czekolada,0,[]
8450,845000,Ninja,0,[]
8451,845100,Wieczór kawalerski,0,[]
8452,845200,그래프와 쿼리,20,"['breadth-first search', 'graph theory', 'graph traversal', 'offline queries']"
8453,845300,Plan budowy autostrad,21,[]
8454,845400,Rysunek,0,[]
8455,845500,Wychowanie fizyczne,0,[]
8456,845600,Obława,0,[]
8457,845700,Prefikso-sufiksy,19,"['data structures', 'segment tree', 'string', 'suffix array and lcp array']"
8458,845800,Roboty binarne,21,[]
8459,845900,Gruntowny przekręt,19,[]
8460,846000,Tramwaje,21,"['dynamic programming', 'greedy']"
8461,846100,Gra w dzielniki,20,"['dynamic programming', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
8462,846200,배열의 힘,19,"[""mo's"", 'offline queries']"
8463,846300,Zagadka,0,[]
8464,846400,Non-Squarefree Numbers,21,"['binary search', 'inclusion and exclusion', 'mathematics', 'number theory']"
8465,846500,Peaks,22,"['data structures', 'offline queries', 'persistent segment tree', 'segment tree', 'smaller to larger technique', 'set / map by trees']"
8466,846600,Creative Accounting,14,[]
8467,846700,Keyboard,19,[]
8468,846800,Garden,21,"['data structures', 'set / map by hashing', 'square root decomposition']"
8469,846900,Matchings,20,[]
8470,847000,Life of the Party,22,[]
8471,847100,Party,24,[]
8472,847200,Vacation,23,"['maximum flow', 'minimum cost maximum flow']"
8473,847300,Monopoly,21,[]
8474,847400,Brackets,15,"['parsing', 'string']"
8475,847500,Tower,21,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
8476,847600,Highways,20,[]
8477,847700,Palindromic Equivalence,23,"['bit set', ""manacher's"", 'string']"
8478,847800,Chessboard,14,[]
8479,847900,Godzilla,16,"['graph theory', 'greedy', 'sorting']"
8480,848000,Excursion,21,"['convex hull trick', 'dynamic programming']"
8481,848100,Generator,23,"['ad-hoc', 'arbitrary precision / big integers', 'bitmask', 'case work', 'combinatorics', 'constructive', 'divide and conquer', 'dynamic programming', 'exponentiation by squaring', 'graph theory', 'graph traversal', 'implementation', 'mathematics', 'number theory', 'parsing', 'precomputation', 'primality test', 'sieve of eratosthenes', 'string']"
8482,848200,Express Delivery,0,[]
8483,848300,Earthquake,22,"['extended euclidean algorithm', 'mathematics', 'number theory']"
8484,848400,Trójkąty,14,"['ad-hoc', 'bruteforcing', 'geometry', 'mathematics']"
8485,848500,BARMAN,0,[]
8486,848600,Cykl nieparzysty,0,[]
8487,848700,Satelity,0,[]
8488,848800,Ciąg,0,[]
8489,848900,Listonosze,0,[]
8490,849000,Skoczki,0,[]
8491,849100,Modernizacja autostrady,0,[]
8492,849200,Taniec,0,[]
8493,849300,Bajtori,0,[]
8494,849400,Drzewa,0,[]
8495,849500,Światłowody,0,[]
8496,849600,Godzilla,27,"['binary search', 'data structures', 'disjoint set', 'divide and conquer', 'graph theory', 'offline queries', 'parallel binary search', 'strongly connected component']"
8497,849700,Mapa,0,[]
8499,849900,Mechagodzilla,0,[]
8500,850000,Wesołe miasteczko,0,[]
8501,850100,Zamknąć Godzillę!,22,[]
8502,850200,Genomy,0,[]
8503,850300,Nieokiełzane drzewo,0,[]
8504,850400,Przedziały,0,[]
8505,850500,Komputery trzybitowe,0,[]
8506,850600,Leonardo's Numbers,21,"['berlekamp–massey', 'exponentiation by squaring', 'mathematics']"
8507,850700,Pejntbrasz,0,[]
8508,850800,Komputery Trzybitowe kontratakują,0,[]
8509,850900,Proste,0,[]
8510,851000,Żaglówka,0,[]
8511,851100,Wędrówki górskie,0,[]
8512,851200,Mapa,0,[]
8513,851300,Wirusy,0,[]
8514,851400,Biuro,0,[]
8515,851500,Klocki,0,[]
8516,851600,Klocki powracają,0,[]
8517,851700,Zbiory,0,[]
8518,851800,Klocki reaktywacja,0,[]
8519,851900,Walkie-talkie,0,[]
8520,852000,Approximation,0,[]
8521,852100,General Bytor,0,[]
8522,852200,Hyperclock,0,[]
8523,852300,Dice,12,"['combinatorics', 'mathematics']"
8524,852400,Mapy,0,[]
8525,852500,Cylinders,0,[]
8526,852600,Races,0,[]
8527,852700,Divers,0,[]
8528,852800,Plan zajęć,0,[]
8529,852900,NumberEater,7,"['data structures', 'set / map by hashing', 'sorting', 'set / map by trees']"
8530,853000,Ritual,0,[]
8531,853100,The Lost Fraction,14,[]
8532,853200,Excursion,0,[]
8533,853300,Zachody Słońca 2,0,[]
8534,853400,Żarłacz bitowy,0,[]
8535,853500,Guessing Game,16,"['binary search', 'bipartite graph', 'value / coordinate compression', 'data structures', 'disjoint set', 'graph theory', 'graph traversal']"
8536,853600,땅콩의 개수,0,[]
8537,853700,Imiona mrówek,4,['string']
8538,853800,Bałagan i Stonki,5,"['data structures', 'set / map by hashing', 'string']"
8539,853900,LinkNet,10,"['sorting', 'sweeping']"
8540,854000,Wrocławskie ZOO,0,[]
8541,854100,Trikontenerowiec,13,"['data structures', 'greedy', 'priority queue']"
8542,854200,Żuki,0,[]
8543,854300,Superszybkie wyścigi w kółko,0,[]
8544,854400,Megawirus,7,"['arithmetic', 'bitmask', 'mathematics']"
8545,854500,Zadanie próbne,1,"['implementation', 'string']"
8546,854600,Szyfr,5,"['arithmetic', 'mathematics']"
8547,854700,Patyki,11,"['data structures', 'greedy', 'priority queue', 'set / map by trees']"
8548,854800,Tarasy,12,"['prefix sum', 'two-pointer']"
8549,854900,Autostrady,12,"['graph theory', 'minimum spanning tree']"
8550,855000,Turniej,14,"['data structures', 'graph theory', 'priority queue', 'topological sorting']"
8551,855100,Blokada,19,"['maximum flow', 'max-flow min-cut theorem']"
8552,855200,Gra Fibonacziego,0,[]
8553,855300,Korekcja błędów,13,['dynamic programming']
8554,855400,Widoczność,0,[]
8555,855500,Logo,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'implementation']"
8556,855600,Pająki,0,[]
8557,855700,Sojusz,18,['bipartite matching']
8558,855800,Silnia,2,"['arithmetic', 'mathematics']"
8559,855900,Potęga,4,"['mathematics', 'string']"
8560,856000,Waga binarna,6,"['mathematics', 'sorting']"
8561,856100,Restauracje,13,"[""dijkstra's"", 'graph theory']"
8562,856200,Rozkłady dwójkowe,14,"['arbitrary precision / big integers', 'mathematics', 'recursion']"
8563,856300,Dwubarwne wieże Hanoi,10,"['arbitrary precision / big integers', 'mathematics']"
8564,856400,Inwestycja,12,"['combinatorics', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'mathematics', 'tree']"
8565,856500,Ustawiony turniej,0,[]
8566,856600,Wycieczka,0,[]
8567,856700,Wiejski listonosz,0,[]
8568,856800,Skoczki,0,[]
8570,857000,Nawiasy,11,"['data structures', 'stack']"
8571,857100,Apteka,19,[]
8572,857200,Dwa słowa,0,[]
8573,857300,Podróżnik,0,[]
8574,857400,Ratownik,3,"['geometry', 'mathematics', 'pythagoras theorem']"
8575,857500,Śpiew,7,"['greedy', 'mathematics']"
8576,857600,Przyciski,10,"['data structures', 'set / map by hashing']"
8577,857700,Skrzaty,0,[]
8578,857800,Wiersz,0,[]
8579,857900,Gumka do mazania,0,[]
8580,858000,Lampy,0,[]
8581,858100,Pieczątki,0,[]
8582,858200,Park,6,"['dynamic programming', 'implementation']"
8583,858300,Skracalne liczby pierwsze,13,"['backtracking', 'mathematics', 'number theory', 'primality test']"
8584,858400,Urzędnicy,13,"['ad-hoc', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'greedy', 'tree']"
8585,858500,Wyścig,0,[]
8586,858600,Zapałki,8,"['bruteforcing', 'dynamic programming', 'prefix sum']"
8587,858700,Monety,9,"['combinatorics', 'mathematics', 'sorting']"
8588,858800,Obwarzanki,0,[]
8589,858900,Tort,15,"['binary search', 'parametric search', 'sorting', 'two-pointer']"
8590,859000,Bracia,0,[]
8591,859100,Tamy,0,[]
8592,859200,Tygrysy,0,[]
8593,859300,Porachunki,0,[]
8594,859400,Program,8,"['data structures', 'stack']"
8595,859500,히든 넘버,5,"['parsing', 'string']"
8596,859600,Wąż,12,"['breadth-first search', 'graph theory', 'graph traversal']"
8597,859700,Wieżyczki,14,['prefix sum']
8598,859800,Zając,10,"['breadth-first search', 'graph theory', 'graph traversal']"
8599,859900,Kupiec,14,['prefix sum']
8600,860000,Pociąg,0,[]
8601,860100,Warsztaty,0,[]
8602,860200,Chochlik,13,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
8603,860300,Kosmiczny pościg,0,[]
8604,860400,Kwadrat magiczny,0,[]
8605,860500,Waga,0,[]
8606,860600,Klasy,0,[]
8607,860700,Naszyjniki,0,[]
8608,860800,Run Bajtocja,7,"['arbitrary precision / big integers', 'euclidean algorithm', 'mathematics', 'number theory']"
8609,860900,Statystyki,0,[]
8610,861000,Szyfr,4,"['implementation', 'string']"
8611,861100,팰린드롬 숫자,6,"['implementation', 'mathematics']"
8612,861200,Domek z kart,0,[]
8613,861300,Kalendarze,10,"['binary search', 'prefix sum']"
8614,861400,Pocztówka,8,"['combinatorics', 'mathematics']"
8615,861500,Mur,0,[]
8616,861600,Aquapark,0,[]
8617,861700,Klocki,12,"['dynamic programming', 'knapsack']"
8618,861800,Taśma,8,"['ad-hoc', 'bruteforcing', 'data structures', 'set / map by hashing']"
8619,861900,Autobus,0,[]
8620,862000,Hurtownia,5,"['data structures', 'set / map by hashing', 'implementation']"
8621,862100,Magazyny,0,[]
8622,862200,Reakcje chemiczne,0,[]
8623,862300,Zdjęcia,0,[]
8624,862400,Lista,4,['mathematics']
8625,862500,Minimalna liczba,6,"['mathematics', 'pigeonhole principle']"
8626,862600,Statki kosmiczne,11,"['binary search', 'two-pointer']"
8627,862700,Żabka Bajtozja,9,"['breadth-first search', 'depth-first search', 'geometry', 'graph theory', 'graph traversal']"
8628,862800,Ostatnie cyfry,11,"['mathematics', 'number theory', 'precomputation']"
8629,862900,Centrala telefoniczna,0,[]
8630,863000,Ciąg,14,"['dynamic programming', 'mathematics']"
8631,863100,Żołnierze,10,"['combinatorics', 'data structures', 'set / map by hashing', 'mathematics', 'sorting']"
8632,863200,Byteland,17,"['data structures', 'disjoint set', 'graph theory', 'lowest common ancestor', 'minimum spanning tree', 'tree']"
8633,863300,Sortowanie biżuterii,6,"['sorting', 'string']"
8634,863400,Sumujący Jaś,7,"['arbitrary precision / big integers', 'implementation']"
8635,863500,Zliczacz liter,4,"['implementation', 'string']"
8636,863600,Bankiet,9,['permutation cycle decomposition']
8637,863700,Bierki,8,['binary search']
8638,863800,Zwycięzcy,4,['implementation']
8639,863900,Bitocja,13,"['floyd–warshall', 'graph theory']"
8640,864000,Diamentowy szyfr,13,"['arbitrary precision / big integers', 'constructive', 'mathematics']"
8641,864100,Sklep,8,"['value / coordinate compression', 'data structures', 'set / map by hashing']"
8642,864200,Kwadrat,9,"['mathematics', 'number theory']"
8643,864300,Loteria,10,['dynamic programming']
8644,864400,Jednoręki bandyta,0,[]
8645,864500,Strajk,0,[]
8646,864600,Karty,26,"['ad-hoc', 'data structures', 'stack']"
8647,864700,Panorama Bajhattanu,0,[]
8648,864800,Genom,0,[]
8649,864900,Iloczyn,0,[]
8650,865000,Konduktorzy,0,[]
8651,865100,Mutacje,0,[]
8652,865200,Podatki,0,[]
8653,865300,Raper,24,[]
8654,865400,Działka,0,[]
8655,865500,Filary,0,[]
8656,865600,Kryształ,0,[]
8657,865700,Mrówki,0,[]
8658,865800,Liczba,3,"['bruteforcing', 'mathematics', 'number theory']"
8659,865900,Samochody,5,"['implementation', 'prefix sum']"
8660,866000,Sumy i różnice,4,['mathematics']
8661,866100,Stopki,3,"['arithmetic', 'mathematics']"
8662,866200,Szuflady,6,['greedy']
8663,866300,Konik polny,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
8664,866400,Kwadrat,6,"['case work', 'geometry']"
8665,866500,Odległość,10,['prefix sum']
8666,866600,Zakład,6,"['greedy', 'sorting']"
8667,866700,Gwoździe,7,"['data structures', 'sorting', 'set / map by trees', 'two-pointer']"
8668,866800,Konik polny 2,4,['mathematics']
8669,866900,Las,4,"['data structures', 'set / map by hashing', 'implementation']"
8670,867000,Przegrody,5,"['ad-hoc', 'implementation']"
8671,867100,Długa taśma,4,"['ad-hoc', 'implementation', 'mathematics']"
8672,867200,Drabina,8,['dynamic programming']
8673,867300,Krany,7,"['prefix sum', 'sorting']"
8674,867400,Tabliczka,2,['mathematics']
8675,867500,Dwie wieże,7,['prefix sum']
8676,867600,Figury,4,['bruteforcing']
8677,867700,Miasta,8,['dynamic programming']
8678,867800,Zbiór,3,"['arithmetic', 'mathematics', 'number theory']"
8679,867900,Odważniki,11,"['binary search', 'prefix sum', 'sorting']"
8680,868000,Drzewko,7,"['bitmask', 'mathematics', 'tree']"
8681,868100,Dzieci,10,"['depth-first search', 'graph theory', 'graph traversal', 'permutation cycle decomposition']"
8682,868200,Wesoła małpka,7,"['euclidean algorithm', 'mathematics', 'number theory']"
8683,868300,Budowla,0,[]
8684,868400,Losy,10,['dynamic programming']
8685,868500,Zapałki,10,"['dynamic programming', 'sorting']"
8686,868600,Banki,12,"['mathematics', 'number theory']"
8687,868700,Pasy Ruchu,9,"['0-1 bfs', 'breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
8688,868800,Wycinek,0,[]
8689,868900,Gra,8,['dynamic programming']
8690,869000,Grzybki,14,"['binary search', 'implementation', 'mathematics', 'prefix sum', 'sorting', 'sweeping']"
8691,869100,Radiotelegraf,0,[]
8692,869200,Sadzenie bulw,8,"['greedy', 'mathematics', 'sorting']"
8693,869300,Hodowla,11,['prefix sum']
8694,869400,Szklanki,0,[]
8695,869500,Pociąg,0,[]
8696,869600,Chińczyk,0,[]
8697,869700,Drzewa,0,[]
8698,869800,Halloween,0,[]
8699,869900,Podciągi arytmetyczne,0,[]
8700,870000,Operacje,0,[]
8701,870100,Robot,0,[]
8702,870200,Drogi ekspresowe,0,[]
8703,870300,Obława,19,"['data structures', 'prefix sum', 'priority queue', 'segment tree']"
8704,870400,Trójmiasto,0,[]
8705,870500,Punkty,0,[]
8706,870600,Wrogie Państwa,0,[]
8707,870700,Dolary i Euro,0,[]
8708,870800,Sprężyny,0,[]
8709,870900,Zmaksymalizowany podzbiór,0,[]
8710,871000,Koszykarz,2,"['arithmetic', 'mathematics']"
8711,871100,Odchudzanie,4,['implementation']
8712,871200,Wężyk,4,['implementation']
8713,871300,Znak działania,4,"['arithmetic', 'case work', 'implementation', 'mathematics']"
8714,871400,Monety,3,['implementation']
8715,871500,Permutacja,4,['implementation']
8716,871600,Pole,4,"['geometry', 'mathematics']"
8717,871700,Taśma,5,"['implementation', 'prefix sum']"
8718,871800,Bałwanek,2,"['implementation', 'mathematics']"
8719,871900,Piłeczka,3,"['implementation', 'mathematics', 'simulation']"
8720,872000,Manipulacja rankingu,4,[]
8721,872100,Wykreślanka,3,['implementation']
8722,872200,Kratki,5,"['arithmetic', 'mathematics']"
8723,872300,Patyki,2,"['arithmetic', 'geometry', 'mathematics', 'pythagoras theorem']"
8724,872400,Pinezki,4,['implementation']
8725,872500,Szachy,3,['implementation']
8726,872600,Dziewczynki,6,['two-pointer']
8727,872700,Farby,4,"['implementation', 'mathematics']"
8728,872800,Grusze i jabłonie,4,[]
8729,872900,Siłownia,10,"['euclidean algorithm', 'mathematics', 'number theory']"
8730,873000,Kostki domina,12,"['ad-hoc', 'constructive', 'data structures', 'eulerian path / circuit', 'graph theory', 'set / map by hashing', 'sorting']"
8731,873100,Sznurki,5,['greedy']
8732,873200,Tablica,11,"['ad-hoc', 'prefix sum']"
8733,873300,Wieża,8,"['binary search', 'offline queries']"
8734,873400,Akwarium,8,"['implementation', 'simulation', 'sorting']"
8735,873500,Obwody,5,"['greedy', 'sorting']"
8736,873600,Wieża 2,9,['binary search']
8737,873700,Karty,7,"['data structures', 'deque', 'linked list']"
8738,873800,Rolki papieru,7,"['mathematics', 'sorting']"
8739,873900,Domino,0,[]
8740,874000,Las,12,"['binary search', 'graph theory', 'graph traversal', 'parametric search']"
8741,874100,이진수 합,4,"['implementation', 'mathematics']"
8742,874200,Przyjęcie,15,['mathematics']
8743,874300,Turniej,4,['mathematics']
8744,874400,Wykres,5,['implementation']
8745,874500,Cykl,0,[]
8746,874600,Śmieszny konkurs informatyczny,0,[]
8747,874700,Zegary,0,[]
8748,874800,ABC,0,[]
8749,874900,Ciężkie klocki,0,[]
8750,875000,Najdłuższe rosnące podciągi,0,[]
8751,875100,Guziki,0,[]
8752,875200,Pokoje,0,[]
8753,875300,Przyjazne punkty,0,[]
8754,875400,Kupiec,0,[]
8755,875500,Materiały Wybuchowe,0,[]
8756,875600,Dziwna planeta,0,[]
8757,875700,Bubu,12,"[""dijkstra's"", 'graph theory']"
8758,875800,Myszka,0,[]
8759,875900,Najdłuższy Wspólny Rosnący,0,[]
8760,876000,Schronisko,2,"['arithmetic', 'mathematics']"
8761,876100,Metro,6,"['greedy', 'implementation']"
8762,876200,Brakujące cyfry,6,"['bruteforcing', 'mathematics', 'string']"
8763,876300,Berek,0,[]
8764,876400,Kontynent,0,[]
8765,876500,Slajdy,0,[]
8766,876600,Przewody,0,[]
8767,876700,Marsz Pierwszości,0,[]
8768,876800,Posłańcy,0,[]
8769,876900,Podsłowa,0,[]
8770,877000,Zaginanie papieru,0,[]
8771,877100,Kieszonkowe,5,"['arithmetic', 'mathematics']"
8772,877200,Szyfr Cezara,4,"['implementation', 'string']"
8773,877300,Szlaczek,7,"['ad-hoc', 'mathematics']"
8774,877400,Kurs,9,"['data structures', 'stack']"
8775,877500,Przeprawa,0,[]
8776,877600,Strażnice,0,[]
8777,877700,Podzielność,0,[]
8778,877800,Zagroda,11,[]
8779,877900,Rywalizacja,0,[]
8780,878000,Sejf,0,[]
8781,878100,Handel,22,"['circulation', 'maximum flow']"
8782,878200,Eurozwrotnica,10,"['data structures', 'greedy', 'implementation', 'queue', 'simulation']"
8783,878300,Architektura niezależna,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
8784,878400,Pamięć doskonała,8,"['arithmetic', 'constructive', 'mathematics']"
8785,878500,Dlaczego oni śpiewają?,16,['geometry']
8786,878600,Dalsze kłopoty z ogrodem,9,['greedy']
8787,878700,Paweł i Gaweł,0,[]
8788,878800,Trasy,0,[]
8789,878900,Poezja z gwiazdką,17,"['binary search', 'data structures', 'sorting', 'string', 'tree', 'trie']"
8790,879000,Paweł i Gaweł 2,0,[]
8791,879100,Bukiety,0,[]
8792,879200,Podgatunki,0,[]
8793,879300,Sylwester,5,"['ad-hoc', 'arithmetic', 'mathematics']"
8794,879400,Poniedziałki,3,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
8795,879500,Karaoke,7,['string']
8796,879600,Indiana Jones wśród zombie,10,"['breadth-first search', 'graph theory', 'graph traversal']"
8797,879700,Konkotenacja,9,"['dynamic programming', 'string']"
8798,879800,Mosty,13,"['graph theory', 'greedy', 'topological sorting']"
8799,879900,Zapytania,0,[]
8800,880000,Indiana Jones wśród zombie 2,0,[]
8801,880100,Domino,0,[]
8802,880200,Pługi,0,[]
8803,880300,Nigdy nie mów nigdy,0,[]
8804,880400,Palindromy,5,"['ad-hoc', 'string']"
8805,880500,Konduktor,5,"['implementation', 'mathematics']"
8806,880600,Papier kamień nożyczki,3,"['arithmetic', 'mathematics']"
8807,880700,Przedziały,9,['sweeping']
8808,880800,Malowane liczby,8,"['mathematics', 'number theory']"
8809,880900,Mistrzostwa,0,[]
8810,881000,Studnia,9,[]
8811,881100,Inwestycje,0,[]
8812,881200,Jaś Robaczek,18,"['data structures', 'lowest common ancestor', 'sparse table', 'tree']"
8813,881300,Proste separujące,0,[]
8814,881400,Słownik,15,"['breadth-first search', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'string', 'set / map by trees']"
8815,881500,Test,3,"['arithmetic', 'mathematics', 'string']"
8816,881600,Klasa,6,"['combinatorics', 'mathematics']"
8817,881700,Rozgrywka,7,"['game theory', 'mathematics']"
8818,881800,Deski,4,['mathematics']
8819,881900,Wlazł kotek na płotek,7,"['bruteforcing', 'euclidean algorithm', 'mathematics', 'number theory']"
8820,882000,Fabryka butów,6,['prefix sum']
8821,882100,Cegły,0,[]
8822,882200,Turniej,13,[]
8823,882300,Ułamki,0,[]
8824,882400,Wycieczka,0,[]
8825,882500,Sieć Wi-Fi,0,[]
8826,882600,Spacer,4,"['implementation', 'simulation']"
8827,882700,Bukmacherzy,5,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
8828,882800,Ciastka,11,"['prefix sum', 'sorting']"
8829,882900,Muzeum,0,[]
8830,883000,Awans,0,[]
8831,883100,Program,0,[]
8832,883200,Reszty,0,[]
8833,883300,Manewry,0,[]
8834,883400,Kolejka,16,"['data structures', 'segment tree']"
8835,883500,Mnożenie,0,[]
8836,883600,Złodziejki,4,"['arithmetic', 'implementation', 'mathematics']"
8837,883700,Sprawdziany,0,[]
8838,883800,Portal Kombat,12,"['data structures', 'greedy', 'priority queue', 'stack']"
8839,883900,Zbyszek,0,[]
8840,884000,Chomik,0,[]
8841,884100,Zgadywanka,6,['mathematics']
8842,884200,Paski,17,"['combinatorics', 'divide and conquer', 'mathematics']"
8843,884300,Dostawa,0,[]
8844,884400,Ilotrzyny,17,"['data structures', 'inclusion and exclusion', 'mathematics', 'segment tree']"
8845,884500,Gra,0,[]
8846,884600,Wymiana żarówki,4,"['mathematics', 'number theory']"
8847,884700,Kłopoty z ogrodem,8,['two-pointer']
8848,884800,Puzzle,10,"['bruteforcing', 'constructive', 'graph theory']"
8849,884900,Eksperyment,14,"['graph theory', 'topological sorting']"
8850,885000,Witraż,13,"['combinatorics', 'data structures', 'euclidean algorithm', 'geometry', 'set / map by hashing', 'mathematics', 'number theory', 'sorting']"
8851,885100,Zalew,14,"['binary search', 'depth-first search', 'graph theory', 'graph traversal']"
8852,885200,Kaktus,0,[]
8853,885300,Magiczny prostokąt,0,[]
8854,885400,Baner,18,"['dynamic programming', 'string']"
8855,885500,Formuła,0,[]
8856,885600,Moda na zwycięstwo,0,[]
8857,885700,Kodowanie,8,['dynamic programming']
8858,885800,Bankier,13,"['data structures', 'priority queue', 'stack']"
8859,885900,Górnicy,14,"['depth-first search', 'graph theory', 'graph traversal', 'two-pointer']"
8860,886000,Hossa,0,[]
8861,886100,ASK,10,"['constructive', 'greedy']"
8862,886200,Wzorzec,0,[]
8863,886300,Jesienna wycieczka,0,[]
8864,886400,Podobne miasta,0,[]
8865,886500,Prawie jak LCS,0,[]
8866,886600,Wizy,0,[]
8867,886700,POlitycy,0,[]
8868,886800,Tekstowe,0,[]
8869,886900,System zapisów,0,[]
8870,887000,Zadanie próbne,9,"['arithmetic', 'mathematics', 'precomputation']"
8871,887100,Zadanie próbne 2,1,"['arithmetic', 'mathematics']"
8872,887200,빌라봉,19,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'greedy', 'tree']"
8873,887300,미술 시간,0,['heuristics']
8874,887400,웜뱃,25,"['data structures', 'dynamic programming', 'knuth optimization', 'segment tree', 'square root decomposition']"
8875,887500,장난감 정리 로봇,20,"['binary search', 'data structures', 'greedy', 'parametric search', 'priority queue']"
8876,887600,바자와 샤자,21,"['data structures', 'multidimensional segment tree', 'segment tree']"
8877,887700,Self-Assembly,18,"['floyd–warshall', 'graph theory']"
8878,887800,"Hey, Better Bettor",26,"['calculus', 'combinatorics', 'mathematics']"
8879,887900,Surely You Congest,20,"[""dijkstra's"", 'maximum flow', 'graph theory']"
8880,888000,인수,19,"['backtracking', 'mathematics', 'number theory']"
8881,888100,Harvard,25,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'implementation', 'parsing', 'string']"
8882,888200,Low Power,17,"['binary search', 'greedy', 'sorting']"
8883,888300,종이 지도,29,"['ad-hoc', 'geometry', 'implementation', 'sorting']"
8884,888400,마트료시카,20,['dynamic programming']
8885,888500,Pirate Chest,23,"['data structures', 'stack']"
8886,888600,오염 해결책,20,['geometry']
8887,888700,Up a Tree,26,['bruteforcing']
8888,888800,Accelerator,0,[]
8889,888900,등고선 지도,19,"['value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
8890,889000,Critical 3-Path,19,['dynamic programming']
8891,889100,점 숫자,7,"['bruteforcing', 'implementation', 'mathematics']"
8892,889200,팰린드롬,6,"['bruteforcing', 'string']"
8893,889300,Pandora,12,"['geometry', 'implementation']"
8894,889400,Pattern Lock,13,['backtracking']
8895,889500,막대 배치,15,"['combinatorics', 'dynamic programming', 'mathematics']"
8896,889600,가위 바위 보,7,"['implementation', 'simulation']"
8897,889700,Slicing Tree,21,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'stack', 'tree']"
8898,889800,스포츠 전문 채널 GSK,23,['bipartite matching']
8899,889900,Square Annulus,20,[]
8900,890000,Block Compaction,15,"['dynamic programming', 'implementation']"
8901,890100,화학 제품,10,['bruteforcing']
8902,890200,색상의 길이,18,['dynamic programming']
8903,890300,장비,17,"['bitmask', 'bruteforcing', 'case work']"
8904,890400,가구 공장,20,['maximum flow']
8905,890500,리트,13,"['backtracking', 'bruteforcing']"
8906,890600,랩탑,0,[]
8907,890700,네온 사인,17,"['combinatorics', 'mathematics']"
8908,890800,Pizza Delivery,20,['dynamic programming']
8909,890900,Soju,17,"['data structures', 'priority queue', 'sorting', 'sweeping']"
8910,891000,Traveling Spiders,0,[]
8911,891100,거북이,8,"['implementation', 'simulation']"
8912,891200,Sales,4,['implementation']
8913,891300,문자열 뽑기,13,"['bruteforcing', 'dynamic programming']"
8914,891400,Password,11,"['implementation', 'string']"
8915,891500,Mines,0,[]
8916,891600,이진 검색 트리,16,"['combinatorics', 'mathematics', 'tree']"
8917,891700,Tour Belt,0,[]
8918,891800,String Phone,0,[]
8919,891900,Installations,0,[]
8920,892000,음식점 개업,0,[]
8921,892100,KTX 열차 기지,21,[]
8922,892200,두찌 수열,7,"['implementation', 'simulation']"
8923,892300,The Lord of the Rings,0,[]
8924,892400,Airport,0,[]
8925,892500,GC-비율,20,"['binary search', 'data structures', 'segment tree']"
8926,892600,점프,0,[]
8927,892700,Squares,19,"['convex hull', 'geometry', 'rotating calipers']"
8928,892800,Sizeof,0,[]
8929,892900,Kingdom,0,[]
8930,893000,Cellular Network,17,"['dynamic programming', 'greedy', 'sorting']"
8931,893100,Jinhan,20,"['2-sat', 'depth-first search', 'graph theory', 'graph traversal', 'strongly connected component']"
8932,893200,7종 경기,3,"['arithmetic', 'implementation', 'mathematics']"
8933,893300,MCS,8,"['data structures', 'set / map by hashing', 'sliding window']"
8934,893400,Homing,0,[]
8935,893500,Cycle,0,[]
8936,893600,Archery,0,[]
8937,893700,Processor,0,[]
8938,893800,Salesmen,0,[]
8939,893900,Hubble Space Telescope,0,[]
8940,894000,Metal,0,[]
8941,894100,Molar mass,5,"['implementation', 'parsing', 'string']"
8942,894200,Network,0,[]
8943,894300,PHONE,9,"['case work', 'data structures', 'disjoint set', 'geometry', 'implementation']"
8944,894400,이진 검색 트리 2,17,"['combinatorics', 'mathematics', 'tree']"
8945,894500,Meteor,0,[]
8946,894600,Signals,0,[]
8947,894700,Puzzle,0,[]
8948,894800,Turtle Graphics,0,[]
8949,894900,대충 더해,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
8950,895000,Grid Panel,0,[]
8951,895100,Travel,0,[]
8952,895200,Roommate,0,[]
8953,895300,Gas,0,[]
8954,895400,Tree,0,[]
8955,895500,Period,0,[]
8956,895600,Fire Tower,0,[]
8957,895700,Log Jumping,0,[]
8958,895800,OX퀴즈,4,"['implementation', 'string']"
8959,895900,Stuttering Strings,8,['backtracking']
8960,896000,PushPush,0,[]
8961,896100,Seminar Room,0,[]
8962,896200,Cannon’s Move,0,[]
8963,896300,Bond,0,[]
8964,896400,Roof,0,[]
8965,896500,Circular Sequence,4,"['bruteforcing', 'string']"
8966,896600,Symmetry,0,[]
8967,896700,Circle Dance,0,[]
8968,896800,Graceful Prime Decomposition,0,[]
8969,896900,Wire Connection,0,[]
8970,897000,Fair Share,0,[]
8971,897100,Depth Order,0,[]
8972,897200,미친 아두이노,12,"['implementation', 'simulation']"
8973,897300,수학 공책,9,[]
8974,897400,희주의 수학시험,5,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
8975,897500,PJESMA,6,"['data structures', 'set / map by hashing', 'string', 'set / map by trees']"
8976,897600,LAGNO,7,"['bruteforcing', 'implementation', 'simulation']"
8977,897700,DISPLEJ,6,"['arithmetic', 'implementation', 'mathematics']"
8978,897800,VLAK,6,"['implementation', 'simulation', 'string']"
8979,897900,올림픽,6,"['implementation', 'sorting']"
8980,898000,택배,14,"['greedy', 'sorting']"
8981,898100,입력숫자,11,['implementation']
8982,898200,수족관 1,13,"['implementation', 'simulation']"
8983,898300,사냥꾼,12,"['binary search', 'sorting']"
8984,898400,막대기,16,"['value / coordinate compression', 'dynamic programming', 'sorting']"
8985,898500,수족관 2,19,"['data structures', 'divide and conquer', 'segment tree']"
8986,898600,전봇대,16,['ternary search']
8987,898700,수족관 3,23,"['data structures', 'divide and conquer', 'greedy', 'segment tree with lazy propagation', 'segment tree', 'tree']"
8988,898800,Old bill,0,[]
8989,898900,시계,9,"['implementation', 'mathematics', 'simulation', 'sorting']"
8990,899000,Pocket Ball,0,[]
8991,899100,People like people,0,[]
8992,899200,집기 게임,19,"['maximum flow', 'geometry', 'line segment intersection check', 'minimum cost maximum flow']"
8993,899300,ChonSu,0,[]
8994,899400,Cycle Game,0,[]
8995,899500,Intelligent Robots,0,[]
8996,899600,Digital Onion,0,[]
8997,899700,The K-League,13,['implementation']
8998,899800,A Lazy Worker,0,[]
8999,899900,Work at a library is tough,0,[]
9000,900000,Moving Pegs,0,[]
9001,900100,Rectangle Coloring,11,"['breadth-first search', 'data structures', 'depth-first search', 'disjoint set', 'geometry', 'graph theory', 'graph traversal']"
9002,900200,Match Maker,20,"['graph theory', 'stable marriage problem']"
9003,900300,Taekwondo,0,[]
9004,900400,Lost Lists,0,[]
9006,900600,다리,16,['mathematics']
9007,900700,카누 선수,13,"['binary search', 'meet in the middle', 'sorting']"
9008,900800,Castle,19,"['depth-first search', 'graph theory', 'graph traversal', 'sorting', 'sweeping']"
9009,900900,피보나치,10,"['greedy', 'mathematics']"
9010,901000,Möbius Strip,13,['mathematics']
9011,901100,순서,11,"['constructive', 'implementation']"
9012,901200,괄호,7,"['data structures', 'stack', 'string']"
9013,901300,Parents,21,"['dynamic programming', 'dynamic programming on trees', 'smaller to larger technique', 'tree']"
9014,901400,PCB,21,"['ad-hoc', 'binary search']"
9015,901500,정사각형,14,"['bruteforcing', 'data structures', 'geometry', 'set / map by trees']"
9016,901600,Castles,0,[]
9017,901700,크로스 컨트리,7,['implementation']
9018,901800,Cube of a Graph,0,[]
9019,901900,DSLR,12,"['breadth-first search', 'graph theory', 'graph traversal']"
9020,902000,골드바흐의 추측,9,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
9021,902100,숫자 퍼즐,24,"['case work', 'constructive', 'implementation', 'mathematics']"
9022,902200,Stains,18,"['convex hull trick', 'dynamic programming', 'sorting']"
9023,902300,연습시즌,14,"['dynamic programming', 'implementation']"
9024,902400,두 수의 합,11,"['binary search', 'sorting', 'two-pointer']"
9025,902500,Widest Path,13,"['breadth-first search', 'data structures', ""dijkstra's"", 'disjoint set', 'graph theory', 'graph traversal', 'parametric search']"
9026,902600,Three Pin Bowling,0,[]
9027,902700,Stadium,12,"['ad-hoc', 'constructive']"
9028,902800,Iris (비밀번호),13,"['implementation', 'string']"
9029,902900,정육면체,14,['dynamic programming']
9030,903000,Bridge,0,[]
9031,903100,Message Broadcasting,0,[]
9032,903200,울타리,0,[]
9033,903300,Sewerage Planning,0,[]
9034,903400,순위,18,"['value / coordinate compression', 'data structures', 'segment tree']"
9035,903500,Detective Conan,0,[]
9036,903600,Pennant race,0,[]
9037,903700,The candy war,6,"['implementation', 'simulation']"
9038,903800,Display,5,"['implementation', 'string']"
9039,903900,노선도,0,[]
9040,904000,Maze,0,[]
9041,904100,Cube,0,[]
9042,904200,Shoe-print,0,[]
9043,904300,Delivery,0,[]
9044,904400,Conference Table,0,[]
9045,904500,Golf Courses,0,[]
9046,904600,복호화,4,"['implementation', 'string']"
9047,904700,6174,5,"['implementation', 'simulation']"
9048,904800,수위 아저씨의 고민,8,"['bruteforcing', 'greedy']"
9049,904900,Electric Network,0,[]
9050,905000,L-Shape Covering,0,[]
9051,905100,Rubik’s Cube,0,[]
9052,905200,Delivery,0,[]
9053,905300,Homework,15,"['bitmask', 'bruteforcing', 'dynamic programming', 'dynamic programming using bitfield']"
9054,905400,나일강,0,[]
9055,905500,Pile of Cubes,0,[]
9056,905600,Letter Bank,4,"['implementation', 'string']"
9057,905700,ACM-UCPC,10,"['implementation', 'sorting']"
9058,905800,Maximum Detour,0,[]
9059,905900,Servicing Clients,0,[]
9060,906000,감시체계,0,[]
9061,906100,두 직사각형,13,['sorting']
9062,906200,랜덤게임,0,[]
9063,906300,대지,3,"['geometry', 'implementation', 'mathematics']"
9064,906400,War Game,0,[]
9065,906500,Fence Watch,0,[]
9066,906600,금고,16,['mathematics']
9067,906700,馬,0,[]
9068,906800,Tree Labeling,0,[]
9069,906900,치킨집 배치,0,[]
9070,907000,장보기,4,"['arithmetic', 'implementation', 'mathematics']"
9071,907100,KTX,0,[]
9072,907200,Wiring Cost,0,[]
9073,907300,말이 안되는 명대사,0,[]
9074,907400,쇠줄 곧게 펴기,0,[]
9075,907500,Missile Protector,0,[]
9076,907600,점수 집계,4,"['implementation', 'sorting']"
9077,907700,지뢰제거,14,"['bruteforcing', 'data structures', 'prefix sum', 'segment tree']"
9078,907800,정렬,14,"['constructive', 'mathematics', 'sorting']"
9079,907900,동전 게임,9,"['bitmask', 'bruteforcing']"
9080,908000,PC방 요금,11,"['case work', 'implementation', 'mathematics', 'simulation']"
9081,908100,단어 맞추기,10,"['combinatorics', 'implementation', 'mathematics', 'string']"
9082,908200,지뢰찾기,11,"['ad-hoc', 'dynamic programming', 'greedy', 'mathematics']"
9083,908300,셔틀버스,0,[]
9084,908400,동전,11,"['dynamic programming', 'knapsack']"
9085,908500,더하기,3,"['arithmetic', 'implementation', 'mathematics']"
9086,908600,문자열,1,"['implementation', 'string']"
9087,908700,단어 찾기,0,[]
9088,908800,게임,0,[]
9089,908900,줄다리기,0,[]
9090,909000,역기 정렬하기,0,[]
9091,909100,소수 판정,0,[]
9092,909200,테이블 정리,0,[]
9093,909300,단어 뒤집기,5,"['implementation', 'string']"
9094,909400,수학적 호기심,3,"['bruteforcing', 'mathematics']"
9095,909500,"1, 2, 3 더하기",8,['dynamic programming']
9096,909600,Tiling Up Blocks,0,[]
9097,909700,Quad Trees,11,"['divide and conquer', 'recursion']"
9098,909800,The Suspects,12,"['data structures', 'disjoint set', 'graph theory']"
9114,911400,킹과 폰,13,"['implementation', 'simulation']"
9115,911500,Frobenius,11,"['dynamic programming', 'knapsack', 'mathematics']"
9116,911600,Mineshaft,0,[]
9117,911700,Colour Sequence,7,"['greedy', 'string']"
9118,911800,Projects,12,['dynamic programming']
9119,911900,Booksort,15,['meet in the middle']
9120,912000,Oulipo,16,"['knuth–morris–pratt', 'string']"
9121,912100,Lucky Light,0,[]
9122,912200,Sightseeing,0,[]
9123,912300,Word Ladder,15,"['floyd–warshall', 'graph theory']"
9124,912400,Bonus Word,0,[]
9125,912500,Contest,0,[]
9126,912600,Cycling,20,[]
9127,912700,Escape,0,[]
9128,912800,피곤한 외판원,0,[]
9129,912900,Space,0,[]
9130,913000,Herbert,0,[]
9131,913100,"Oh, Those Achin' Feet",0,[]
9134,913400,Komunikace,14,"['graph theory', 'implementation', 'minimum spanning tree']"
9135,913500,Směrnice,10,"['case work', 'data structures', 'set / map by hashing', 'implementation', 'simulation', 'string']"
9136,913600,Number That Count,0,[]
9137,913700,Matematické cvičení,7,"['arbitrary precision / big integers', 'arithmetic', 'mathematics', 'number theory', 'string']"
9138,913800,Červotoči,6,"['implementation', 'string']"
9139,913900,Algebra,15,"['data structures', 'mathematics', 'segment tree']"
9140,914000,Přeprava materiálu,11,"[""dijkstra's"", 'graph theory']"
9141,914100,Dámy,14,['ad-hoc']
9142,914200,Nástěnky,0,[]
9143,914300,Zpětné inženýrství,8,['mathematics']
9144,914400,Gnome,0,[]
9145,914500,Herci,0,[]
9146,914600,Linie,12,"['bruteforcing', 'geometry']"
9147,914700,Počítáme ponorky,0,[]
9148,914800,Rozejděte se!,17,['backtracking']
9149,914900,Pražská spojka,0,[]
9150,915000,Tokeny,0,[]
9151,915100,Starship Hakodate-maru,4,"['bruteforcing', 'mathematics']"
9152,915200,e-Market,0,[]
9153,915300,Fishnet,14,[]
9154,915400,77377,0,[]
9155,915500,Beehives,0,[]
9156,915600,"Young, Poor and Busy",0,[]
9157,915700,Nim,16,"['dynamic programming', 'game theory', 'sprague–grundy theorem']"
9158,915800,Super Star,21,"['geometry', 'geometry; 3d', 'heuristics', 'minimum enclosing circle']"
9159,915900,What is the air speed velocity...,5,"['arithmetic', 'implementation', 'mathematics']"
9160,916000,The Brave Sir Robin’s cAsE cOrReCtOr,4,"['implementation', 'string']"
9161,916100,Sir Bedavere’s Bogus Division Solutions,3,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
9162,916200,One...Two...Five!,10,"['backtracking', 'bruteforcing', 'data structures', 'set / map by hashing']"
9163,916300,Taunt Exposure Estimation,0,[]
9164,916400,Ye Holy Hand Grenades!,0,[]
9165,916500,Nested Shrubbery Boxes,0,[]
9166,916600,And Now For Something Completely Different!,0,[]
9167,916700,도발 봇,16,"['implementation', 'parsing', 'recursion', 'string']"
9168,916800,No Left Turns,13,"['breadth-first search', 'graph theory', 'graph traversal']"
9169,916900,나는 9999번 문제를 풀 수 있다,19,"['maximum flow', 'max-flow min-cut theorem']"
9170,917000,Single Digit Adder,8,[]
9171,917100,Job Scheduling by Open Bidding,11,['knapsack']
9172,917200,Consecutive Digits in a Rational Number,6,"['arithmetic', 'implementation', 'mathematics', 'number theory']"
9173,917300,Constant Irritation,0,[]
9174,917400,If only I could think Linearly...,0,[]
9175,917500,Who needs 8 Queens when you can have N?,18,"['case work', 'constructive']"
9176,917600,메르센 합성수,12,"['mathematics', 'number theory', 'precomputation', 'primality test']"
9177,917700,단어 섞기,12,"['dynamic programming', 'graph theory', 'graph traversal']"
9178,917800,Jill’s Tour Paths,11,"['backtracking', 'graph theory', 'sorting']"
9179,917900,"Boundaries on ""A New Kind of Science""",10,"['implementation', 'simulation']"
9180,918000,Rate of Return,0,[]
9181,918100,A Card Trick,0,[]
9182,918200,Biorhythms,4,"['bruteforcing', 'mathematics', 'number theory']"
9183,918300,Gone Fishing,12,['dynamic programming']
9184,918400,신나는 함수 실행,9,"['dynamic programming', 'recursion']"
9185,918500,Unscrambling Images,0,[]
9186,918600,The Same Game,12,"['implementation', 'simulation']"
9187,918700,Square Cipher,11,"['implementation', 'string']"
9188,918800,String Matching,7,"['bruteforcing', 'string']"
9189,918900,Triangle War,16,"['dynamic programming', 'game theory', 'implementation']"
9196,919600,정수 직사각형,6,"['bruteforcing', 'precomputation', 'sorting']"
9198,919800,Hierarchical Democracy,10,"['divide and conquer', 'parsing', 'sorting', 'string']"
9202,920200,Boggle,16,"['backtracking', 'bruteforcing', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'string', 'tree', 'trie']"
9203,920300,호텔 예약,13,"['dynamic programming', 'greedy', 'parsing', 'sorting', 'string']"
9204,920400,체스,10,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'mathematics']"
9205,920500,맥주 마시면서 걸어가기,10,"['breadth-first search', 'graph theory', 'graph traversal']"
9206,920600,나무 말고 꽃,18,"['calculus', 'mathematics', 'numerical analysis']"
9207,920700,페그 솔리테어,12,"['backtracking', 'bruteforcing', 'implementation']"
9208,920800,링월드,23,"['data structures', 'greedy', ""hall's theorem""]"
9209,920900,The King of the North,20,"['maximum flow', 'max-flow min-cut theorem']"
9210,921000,복권 표,0,[]
9211,921100,타이밍,0,[]
9212,921200,트라이앵글,22,"['geometry', 'geometry; 3d']"
9213,921300,꽤 좋은 수,14,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
9214,921400,첫 번째 항,5,"['implementation', 'string']"
9215,921500,신나는 분수 계산,7,"['arbitrary precision / big integers', 'euclidean algorithm', 'implementation', 'mathematics', 'number theory', 'parsing', 'string']"
9216,921600,The Queen's English,0,[]
9217,921700,Powerbase Format,0,[]
9218,921800,Jumble Match,0,[]
9219,921900,Road Trip,0,[]
9220,922000,Bafﬂed!,0,[]
9221,922100,A Voting Protocol,0,[]
9222,922200,Family Trees,0,[]
9223,922300,The Jury is out,19,['dynamic programming']
9224,922400,Box Toppling,0,[]
9225,922500,Superstitious Helicopter Pilots,0,[]
9226,922600,도깨비말,4,"['implementation', 'string']"
9227,922700,W**h y**r mouth out with s**p,5,"['implementation', 'simulation', 'string']"
9228,922800,Check Digits,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
9229,922900,단어 사다리,5,"['implementation', 'string']"
9230,923000,TAXI ROUTES,8,"['combinatorics', 'dynamic programming', 'mathematics']"
9231,923100,URNS,0,[]
9232,923200,Crossword Puzzle Clue Numbering,0,[]
9233,923300,"Molecules, Molecules",14,"['bruteforcing', 'implementation']"
9234,923400,"Molecules, Molecules 2",19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'maximum flow']"
9235,923500,Fragment reassembly,0,[]
9236,923600,고급 레스토랑,0,[]
9237,923700,이장님 초대,6,"['greedy', 'sorting']"
9238,923800,당근 볶기,18,"['data structures', 'greedy', 'priority queue']"
9239,923900,스티브 잡숭,7,"['bruteforcing', 'mathematics']"
9240,924000,로버트 후드,18,"['convex hull', 'geometry', 'rotating calipers']"
9241,924100,바이러스 복제,11,"['greedy', 'implementation', 'string']"
9242,924200,폭탄 해체,7,"['implementation', 'parsing', 'string']"
9243,924300,파일 완전 삭제,4,['string']
9244,924400,핀볼,22,"['data structures', 'geometry', 'segment tree', 'sweeping', 'set / map by trees']"
9245,924500,댄스,0,[]
9246,924600,다트판,14,"['calculus', 'mathematics', 'probability theory']"
9247,924700,절벽 걷기,0,[]
9248,924800,Suffix Array,18,"['string', 'suffix array and lcp array']"
9249,924900,최장 공통 부분 문자열,18,"['hashing', 'rabin–karp', 'string', 'suffix array and lcp array']"
9250,925000,문자열 집합 판별,19,"['aho-corasick', 'data structures', 'string', 'tree', 'trie']"
9251,925100,LCS,11,"['dynamic programming', 'string']"
9252,925200,LCS 2,12,['dynamic programming']
9253,925300,스페셜 저지,4,"['string', 'implementation']"
9254,925400,역행렬,14,"['gaussian elimination', 'linear algebra', 'mathematics']"
9255,925500,The Friend of My Enemy is My Enemy,6,"['graph theory', 'implementation']"
9256,925600,"Call Me Back, Please!",0,[]
9257,925700,Suspicious Orders,0,[]
9258,925800,Code Breakers,0,[]
9259,925900,Privacy Loss,11,['dynamic programming']
9260,926000,E-Mail Snooping,5,"['implementation', 'parsing', 'string']"
9263,926300,Russian Dolls,10,"['greedy', 'sorting']"
9264,926400,Intercity,20,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal']"
9265,926500,Count,6,[]
9266,926600,체스 게임,20,"['breadth-first search', 'game theory', 'graph theory', 'graph traversal', 'implementation']"
9267,926700,A+B,21,"['extended euclidean algorithm', 'mathematics', 'number theory']"
9268,926800,Dragon Pattern,22,"['dynamic programming', 'exponentiation by squaring', 'knuth–morris–pratt', 'mathematics', 'string']"
9269,926900,Points,11,['dynamic programming']
9270,927000,Red John Game,18,"['ad-hoc', 'mathematics']"
9271,927100,Influence,0,[]
9272,927200,상근이의 아이디어,8,"['mathematics', 'number theory']"
9273,927300,정제헌을 팔자!,9,"['bruteforcing', 'mathematics', 'number theory']"
9274,927400,종이 지도,0,[]
9275,927500,토끼와 상근,18,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
9276,927600,채소 보호,18,"['convex hull', 'geometry', 'implementation']"
9277,927700,꽃병,0,[]
9278,927800,절망적인 줄,12,"['combinatorics', 'dynamic programming', 'mathematics']"
9279,927900,얼어붙은 스프링쿨러,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
9280,928000,False Sense of Security,0,[]
9281,928100,전차,0,[]
9282,928200,Splot,27,"['case work', 'dynamic programming', 'implementation', 'parsing', 'string']"
9283,928300,"보드 게임 ""트리""",0,[]
9284,928400,Adriatic,23,"['dynamic programming', 'prefix sum', 'recursion']"
9285,928500,Watering - 1,5,"['ad-hoc', 'constructive']"
9286,928600,Gradabase,3,['implementation']
9287,928700,Jenga,5,[]
9288,928800,More Dice,3,"['bruteforcing', 'implementation', 'mathematics', 'simulation']"
9289,928900,Morse Code,6,[]
9290,929000,틱택토 이기기,7,"['bruteforcing', 'implementation']"
9291,929100,스도쿠 채점,7,['implementation']
9292,929200,Robot In A Room,0,[]
9293,929300,모험을 떠나자,0,[]
9294,929400,Even More Dice,9,[]
9295,929500,주사위,3,"['arithmetic', 'implementation', 'mathematics']"
9296,929600,Grading Exams,4,"['implementation', 'string']"
9297,929700,Reducing Improper Fractions,3,"['arithmetic', 'mathematics']"
9298,929800,Ant Entrapment,3,"['geometry', 'mathematics']"
9299,929900,Math Tutoring,3,"['calculus', 'implementation', 'mathematics']"
9300,930000,Where’s the Rainbow,6,"['geometry', 'mathematics']"
9301,930100,Painting Party,5,['implementation']
9302,930200,Back and Forth,11,"['implementation', 'simulation']"
9303,930300,Hoo’s Afraid of the Big Bad Wolf?,13,"[""dijkstra's"", 'graph theory']"
9304,930400,Canyon Crossing,12,"['geometry', 'graph theory', 'graph traversal']"
9305,930500,Yahtzee,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'implementation']"
9306,930600,Practice: Roll Call,4,['implementation']
9307,930700,Geometric Inflation,9,"['arithmetic', 'mathematics']"
9308,930800,Public Transit,0,[]
9309,930900,Password Validation,7,"['implementation', 'string']"
9310,931000,Arithmetic and Geometric Sums,3,"['arithmetic', 'implementation', 'mathematics']"
9311,931100,Robot in a Maze,8,"['breadth-first search', 'graph theory', 'graph traversal']"
9312,931200,Triangular Matrices,10,"['data structures', 'implementation', 'stack']"
9313,931300,Integer Flipping,4,"['implementation', 'mathematics']"
9314,931400,Property Lines,0,[]
9315,931500,Lifeboat Balancing,0,[]
9316,931600,Hello Judge,2,['implementation']
9317,931700,Monitor DPI,3,"['implementation', 'mathematics']"
9318,931800,위성 사진,17,"['value / coordinate compression', 'data structures', 'segment tree', 'sweeping']"
9319,931900,도청 장치,9,['implementation']
9320,932000,금고 열기,13,"['combinatorics', 'mathematics']"
9321,932100,Dreaded Alternating Game,0,[]
9322,932200,철벽 보안 알고리즘,6,"['data structures', 'set / map by hashing', 'string']"
9323,932300,무임승차,17,[]
9324,932400,진짜 메시지,6,"['implementation', 'parsing', 'string']"
9325,932500,얼마?,3,"['arithmetic', 'mathematics']"
9326,932600,MI6,11,"['mathematics', 'number theory', 'primality test']"
9327,932700,용량 확보,15,"['dynamic programming', 'knapsack']"
9328,932800,열쇠,15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
9329,932900,패스트 푸드 상금,5,"['bruteforcing', 'greedy', 'implementation', 'simulation']"
9330,933000,Seven Kingdoms,19,"['2-sat', 'graph theory', 'strongly connected component']"
9331,933100,Institute of Advanced Category Manipulation,18,"['bruteforcing', 'geometry', 'geometry; 3d']"
9332,933200,Digital Content Protection,14,"['data structures', 'tree', 'set / map by trees']"
9333,933300,돈 갚기,9,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
9334,933400,IQ 테스트,17,"['berlekamp–massey', 'linear algebra', 'mathematics']"
9335,933500,소셜 광고,9,['bruteforcing']
9336,933600,아스키 아트 표,11,['implementation']
9337,933700,Flood-It,12,"['bruteforcing', 'graph theory', 'graph traversal', 'greedy']"
9338,933800,Chemicals Monitoring,0,[]
9339,933900,마라토너,5,['implementation']
9340,934000,Network Planning,0,[]
9341,934100,ZZ,19,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
9342,934200,염색체,8,"['regular expression', 'string']"
9343,934300,랜덤 걷기,15,"['combinatorics', ""fermat's little theorem"", 'mathematics', 'modular multiplicative inverse', 'number theory']"
9344,934400,도로,13,"['graph theory', 'minimum spanning tree']"
9345,934500,디지털 비디오 디스크(DVDs),18,"['data structures', 'segment tree']"
9346,934600,영화관,0,[]
9347,934700,울타리,13,"['0-1 bfs', 'breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
9348,934800,Magic Graphs,0,[]
9349,934900,Fegla and the Bed Bugs,4,['mathematics']
9350,935000,Do Not Disturb!,0,[]
9351,935100,Casino,10,['string']
9352,935200,Fundraised,0,[]
9353,935300,You Shall Not Pass!!,0,[]
9354,935400,It Is Cold,0,[]
9355,935500,Passwords,0,[]
9356,935600,Skill,13,"['combinatorics', 'dynamic programming', 'mathematics']"
9357,935700,Eligibility,7,"['data structures', 'set / map by trees']"
9358,935800,순열 접기 게임,5,"['implementation', 'simulation']"
9359,935900,서로소,15,"['inclusion and exclusion', 'mathematics', 'number theory']"
9360,936000,윔블던,0,[]
9361,936100,Manhattan Sort,13,['sorting']
9362,936200,Cipher,0,[]
9363,936300,큰 나눗셈,12,"['mathematics', 'number theory']"
9364,936400,Calculator,10,[]
9365,936500,Crank,10,"['breadth-first search', 'graph theory', 'graph traversal']"
9366,936600,삼각형 분류,3,"['arithmetic', 'case work', 'implementation', 'mathematics']"
9367,936700,관리 난항,9,"['implementation', 'simulation']"
9368,936800,매수,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
9369,936900,암호 깨기,13,['implementation']
9370,937000,미확인 도착지,14,"[""dijkstra's"", 'graph theory']"
9371,937100,인코딩 좌표,16,"['exponentiation by squaring', 'implementation', 'mathematics', 'modular multiplicative inverse', 'number theory']"
9372,937200,상근이의 여행,7,"['graph theory', 'tree']"
9373,937300,복도 뚫기,19,"['geometry', 'graph theory', 'minimum spanning tree']"
9374,937400,감시 카메라,20,"['binary search', 'geometry', 'line segment intersection check', 'area of a polygon']"
9375,937500,패션왕 신해빈,8,"['combinatorics', 'data structures', 'set / map by hashing', 'mathematics']"
9376,937600,탈옥,17,"['0-1 bfs', 'breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
9377,937700,String LD,4,"['bruteforcing', 'implementation', 'simulation', 'string']"
9378,937800,Painting,0,[]
9379,937900,Another Brick in the Wall,11,"['bruteforcing', 'implementation', 'simulation']"
9380,938000,Blast the Enemy!,0,[]
9381,938100,deltree,0,[]
9382,938200,Solar Eclipse,0,[]
9383,938300,Hurry Plotter,0,[]
9384,938400,ACM Coalition,0,[]
9385,938500,Fruit Weights,0,[]
9386,938600,Royal Gems,0,[]
9387,938700,Gholam’s Simple Game,4,"['implementation', 'simulation']"
9388,938800,Arbiter Login,5,"['case work', 'implementation', 'string']"
9389,938900,Drop7,12,"['implementation', 'simulation']"
9390,939000,Seven Segment Counter,0,[]
9391,939100,Bus Shuttle,0,[]
9392,939200,Conditional Statements,0,[]
9393,939300,Genome Evolution,13,[]
9394,939400,World Cup Nominations,0,[]
9395,939500,Killbots,0,[]
9396,939600,Indisputable Right,0,[]
9397,939700,The Mayo Empire,0,[]
9398,939800,A Password Policy Requirement,4,"['bruteforcing', 'string']"
9399,939900,Best Friends,7,"['case work', 'mathematics']"
9400,940000,Calculate the Fence Needed,7,['implementation']
9401,940100,Diamonds,0,[]
9402,940200,The Avaricious ISP,0,[]
9403,940300,Border Conflict,0,[]
9404,940400,Goguryeo and the Crown Prince,0,[]
9405,940500,Array Game,0,[]
9406,940600,Tracking Robots,0,[]
9407,940700,ACM Revenge,0,[]
9411,941100,실수 계산,13,"['arbitrary precision / big integers', 'implementation']"
9413,941300,제주도 관광,19,"['maximum flow', 'minimum cost maximum flow']"
9414,941400,프로그래밍 대회 전용 부지,7,"['greedy', 'sorting']"
9417,941700,최대 GCD,7,"['bruteforcing', 'euclidean algorithm', 'mathematics', 'number theory']"
9421,942100,소수상근수,10,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
9423,942300,레슬링 팀 선발,14,"['bit set', 'dynamic programming', 'knapsack']"
9426,942600,중앙값 측정,16,"['data structures', 'segment tree']"
9427,942700,Drop Zone,0,[]
9428,942800,Effective Infection Time,0,[]
9429,942900,Outpost Navigation,0,[]
9430,943000,Multikill,0,[]
9431,943100,Virology,0,[]
9432,943200,Worst Case Scenario,0,[]
9433,943300,Zombie Invasion,4,"['implementation', 'simulation']"
9434,943400,Zombdar,8,"['parsing', 'string']"
9435,943500,Welcome Party,0,[]
9436,943600,Round Robin,8,"['implementation', 'simulation']"
9437,943700,사라진 페이지 찾기,4,"['arithmetic', 'mathematics']"
9438,943800,Probability Paradox,20,"['gaussian elimination', 'linear algebra', 'mathematics', 'probability theory']"
9439,943900,Letter Cubes,0,[]
9440,944000,숫자 더하기,8,"['greedy', 'sorting']"
9441,944100,Cash Cow,14,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
9442,944200,Sort Me,7,"['sorting', 'string']"
9443,944300,Arrangement of Contest,3,"['implementation', 'string']"
9444,944400,Ballot Analyzing Device,6,"['arithmetic', 'mathematics']"
9445,944500,Correcting Curiosity,0,[]
9446,944600,아이템 제작,16,"[""dijkstra's"", 'graph theory']"
9447,944700,Energy Tycoon,6,['greedy']
9448,944800,Flight Boarding Optimization,0,[]
9449,944900,Garage,4,"['arithmetic', 'geometry', 'mathematics']"
9450,945000,Heavy Chain Clusterization,0,[]
9451,945100,Intellectual Property,0,[]
9452,945200,J,18,"['parsing', 'string']"
9453,945300,학생의 수,18,[]
9454,945400,Lonely Mountain,0,[]
9455,945500,박스,5,['implementation']
9456,945600,Buckets,0,[]
9457,945700,기하학문양,14,['dynamic programming']
9458,945800,Golf Field,0,[]
9459,945900,International Event,0,[]
9460,946000,메탈,15,"['binary search', 'parametric search', 'sorting']"
9461,946100,파도반 수열,8,"['dynamic programming', 'mathematics']"
9462,946200,Passwords,0,[]
9463,946300,순열 그래프,16,"['data structures', 'segment tree']"
9464,946400,직사각형 집합,15,"['greedy', 'mathematics']"
9465,946500,스티커,10,['dynamic programming']
9466,946600,텀 프로젝트,13,"['depth-first search', 'graph theory', 'graph traversal']"
9467,946700,문자열 경로,0,[]
9468,946800,Islands in the Data Stream,6,['implementation']
9469,946900,폰 노이만,3,"['arithmetic', 'mathematics']"
9470,947000,Strahler 순서,13,"['graph theory', 'topological sorting']"
9471,947100,피사노 주기,7,"['mathematics', 'number theory']"
9472,947200,알고리즘 기말고사,13,"['combinatorics', 'inclusion and exclusion', 'mathematics']"
9473,947300,Chomp,14,"['dynamic programming', 'game theory']"
9474,947400,삼각 분할과 삼각형,16,"['constructive', 'geometry', 'implementation', 'mathematics']"
9475,947500,파스칼 제곱,17,"['combinatorics', 'linear algebra', 'mathematics']"
9476,947600,Contraband,0,[]
9477,947700,아름다운 강산,18,"['bruteforcing', 'case work', 'mathematics', 'number theory', 'prefix sum', 'primality test', 'sieve of eratosthenes']"
9478,947800,Nested 팰린드롬,0,[]
9479,947900,Ping!,7,['greedy']
9480,948000,Electric Car Rally,0,[]
9481,948100,Skyscrapers,0,[]
9482,948200,가까운 만유인력,23,"['data structures', 'geometry']"
9483,948300,Tandem Repeats,22,"['string', 'suffix array and lcp array']"
9484,948400,"최대삼각형, 최소삼각형",23,"['geometry', 'sweeping']"
9485,948500,It Takes a Village,0,[]
9486,948600,이름 남기기,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
9487,948700,Cut the Cake,0,[]
9488,948800,The n Days of Christmas,5,['mathematics']
9489,948900,사촌,12,"['data structures', 'tree']"
9490,949000,Decimal Representation,10,"['mathematics', 'number theory']"
9491,949100,Politics,8,['sorting']
9492,949200,Perfect Shuffle,5,['implementation']
9493,949300,"길면 기차, 기차는 빨라, 빠른 것은 비행기",3,"['arithmetic', 'mathematics']"
9494,949400,Text Roll,5,"['implementation', 'string']"
9495,949500,바둑,22,['bipartite matching']
9496,949600,조 나누기,18,['bipartite matching']
9497,949700,피라미드 수열,18,"['euclidean algorithm', 'mathematics', 'number theory']"
9498,949800,시험 성적,1,['implementation']
9499,949900,보물 상자,0,[]
9500,950000,아름다운 직사각형,0,[]
9501,950100,꿍의 우주여행,3,"['arithmetic', 'implementation', 'mathematics']"
9502,950200,Bones’s Battery,15,"['binary search', 'floyd–warshall', 'graph theory']"
9503,950300,Crusher’s Code,19,"['combinatorics', 'dynamic programming', 'mathematics']"
9504,950400,Delta Quadrant,0,[]
9505,950500,엔터프라이즈호 탈출,12,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
9506,950600,약수들의 합,5,"['mathematics', 'number theory']"
9507,950700,Generations of Tribbles,8,['dynamic programming']
9508,950800,Holodeck Hacking,20,"['dynamic programming', 'mathematics']"
9509,950900,Interstellar Trade,0,[]
9510,951000,Janeway’s Journey,0,[]
9511,951100,Klingon Warfare,0,[]
9512,951200,Languages,6,"['implementation', 'parsing', 'string']"
9513,951300,Mass Production,21,"['maximum flow', 'minimum cost maximum flow']"
9514,951400,카드 게임,16,"['bitmask', 'dynamic programming', 'game theory', 'knapsack']"
9515,951500,지우기 게임,0,[]
9516,951600,아름다운 홀수 배열,0,[]
9517,951700,아이 러브 크로아티아,3,"['implementation', 'simulation']"
9518,951800,로마 카톨릭 미사,8,"['bruteforcing', 'implementation', 'mathematics']"
9519,951900,졸려,10,"['implementation', 'simulation', 'string']"
9520,952000,NP-hard,17,['dynamic programming']
9521,952100,색칠 공부,19,"['combinatorics', 'dynamic programming', 'graph theory', 'graph traversal', 'mathematics']"
9522,952200,직선 게임,22,['bipartite matching']
9523,952300,Arithmetic with Morse,7,"['data structures', 'stack', 'string']"
9524,952400,Beautiful Yekaterinburg,0,['implementation']
9525,952500,룩 배치하기,18,['bipartite matching']
9526,952600,꿍글리쉬,22,[]
9527,952700,1의 개수 세기,14,"['bitmask', 'mathematics', 'prefix sum']"
9528,952800,Disjoint water supply,16,"['dynamic programming', 'graph theory']"
9529,952900,11 (십 일),19,"['combinatorics', 'dynamic programming', 'mathematics', 'number theory']"
9530,953000,Football,10,"['greedy', 'sorting']"
9531,953100,Go up the Ultras,0,[]
9532,953200,Hide and seek,0,[]
9533,953300,Inverting Huffman,15,['greedy']
9534,953400,Join two kingdoms,20,"['binary search', 'data structures', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'euler tour technique', 'graph theory', 'graph traversal', 'segment tree with lazy propagation', 'segment tree', 'tree', 'two-pointer']"
9535,953500,Rubik's Rectangle,24,"['ad-hoc', 'constructive', 'implementation']"
9536,953600,여우는 어떻게 울지?,7,"['parsing', 'string']"
9537,953700,잘생긴 GCD,19,"['data structures', 'mathematics', 'number theory']"
9538,953800,Subway,19,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'parsing', 'string']"
9539,953900,Escape,25,"['data structures', 'disjoint set', 'greedy', 'priority queue', 'tree']"
9540,954000,Draughts,10,"['backtracking', 'depth-first search', 'graph theory', 'graph traversal']"
9541,954100,역사 시간,28,"['binary search', 'data structures', 'greedy', 'segment tree']"
9542,954200,Chain & Co.,18,[]
9543,954300,Crane,15,['constructive']
9544,954400,Captain Obvious and the Rabbit-Man,22,['mathematics']
9545,954500,폭탄 받아라,16,"['constructive', 'depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
9546,954600,3000번 버스,4,"['arithmetic', 'mathematics']"
9547,954700,대통령 선거,8,['implementation']
9548,954800,무제,20,"['data structures', 'rope', 'splay tree', 'string', 'tree']"
9549,954900,암호화된 비밀번호,10,"['sliding window', 'string']"
9550,955000,아이들은 사탕을 좋아해,3,"['arithmetic', 'mathematics']"
9551,955100,바꾸기 놀이,0,[]
9552,955200,잠금 패턴,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
9553,955300,양궁,11,"['geometry', 'linearity of expectation', 'mathematics', 'probability theory']"
9554,955400,섬 연결하기,0,[]
9555,955500,대회 장소 준비,9,['implementation']
9556,955600,수학 숙제,17,"['exponentiation by squaring', 'mathematics', 'number theory']"
9557,955700,Arabic and English,5,[]
9558,955800,Between the Mountains,4,"['bruteforcing', 'implementation']"
9559,955900,Circleland,9,"['case work', 'prefix sum']"
9560,956000,Dice on a Board,0,[]
9561,956100,Error,0,[]
9562,956200,Fence,0,[]
9563,956300,Go,0,[]
9564,956400,Homework,0,[]
9565,956500,Identify the Number,0,[]
9566,956600,Joy of the Cylinder Game,0,[]
9567,956700,Empty Stalls,13,[]
9568,956800,Line of Sight,15,"['geometry', 'sorting']"
9569,956900,No Change,17,"['binary search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
9570,957000,Farmer John has no Large Brown Cow,15,"['combinatorics', 'data structures', 'implementation', 'mathematics', 'set / map by trees']"
9571,957100,Crowded Cows,16,"['data structures', 'segment tree', 'set / map by trees', 'two-pointer']"
9572,957200,Pogo-Cow,16,['dynamic programming']
9573,957300,Combination Lock,9,['bruteforcing']
9574,957400,Goldilocks and the N Cows,10,"['value / coordinate compression', 'prefix sum', 'sorting']"
9575,957500,행운의 수,7,"['bruteforcing', 'data structures', 'set / map by hashing', 'mathematics', 'sorting']"
9576,957600,책 나눠주기,14,"['bipartite matching', 'greedy']"
9577,957700,토렌트,17,['bipartite matching']
9579,957900,ASCII Puzzle,20,['implementation']
9580,958000,Bonus Cards,15,"['combinatorics', 'dynamic programming', 'mathematics']"
9581,958100,Cactus Automorphisms,26,"['cactus', 'graph theory', 'hashing', 'tree', 'tree isomorphism']"
9582,958200,Dictionary,26,"['directed minimum spanning tree', 'graph theory']"
9583,958300,Easy Geometry,25,['geometry']
9584,958400,Fraud Busters,4,"['implementation', 'string']"
9585,958500,Green Energy,20,"['geometry', 'mathematics']"
9586,958600,Hack Protection,19,[]
9587,958700,Join the Conversation,17,"['dynamic programming', 'parsing', 'string']"
9588,958800,Kabaleo Lite,18,['case work']
9589,958900,Mixing Colours,23,['dynamic programming']
9590,959000,It Can Be Arranged,19,['maximum flow']
9591,959100,Shopping Malls,14,"[""dijkstra's"", 'graph theory']"
9592,959200,Decoding the Hallway,18,[]
9593,959300,Joe is learning to speak,0,[]
9594,959400,Odd and Even Zeroes,17,"['mathematics', 'number theory']"
9595,959500,VivoParc,0,[]
9596,959600,바이너리 트리,13,['dynamic programming']
9597,959700,Trending Topic,13,['prefix sum']
9598,959800,Cleaning the Hallway,24,"['calculus', 'case work', 'geometry', ""green's theorem"", 'mathematics']"
9599,959900,Equal Sum Sets,11,"['backtracking', 'bitmask', 'bruteforcing', 'dynamic programming']"
9600,960000,The Last Ant,9,"['implementation', 'simulation']"
9601,960100,Count the Regions,15,"['breadth-first search', 'value / coordinate compression', 'depth-first search', 'graph theory', 'graph traversal']"
9602,960200,Clock Hands,0,[]
9603,960300,Dragon’s Cruller,0,[]
9604,960400,Directional Resemblance,25,"['geometry', 'geometry; 3d']"
9605,960500,Longest Chain,22,"['binary search', 'data structures', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'parametric search', 'set / map by trees']"
9606,960600,Don’t Burst the Balloon,21,"['geometry', 'geometry; 3d']"
9607,960700,Hidden Tree,0,[]
9608,960800,C(O|W|A*RD*|S)* CROSSWORD Puzzle,0,[]
9609,960900,PSU Campuses,7,[]
9610,961000,사분면,3,"['implementation', 'mathematics']"
9611,961100,Vicinity,4,"['bruteforcing', 'geometry', 'pythagoras theorem']"
9612,961200,Maximum Word Frequency,7,"['data structures', 'set / map by hashing', 'sorting', 'string']"
9613,961300,GCD 합,7,"['euclidean algorithm', 'mathematics', 'number theory']"
9614,961400,잠금 패턴과 스패닝 트리,16,"['gaussian elimination', 'linear algebra', 'mathematics']"
9615,961500,Teaching Hazard,0,[]
9616,961600,홀수 정사각형,15,"['combinatorics', 'mathematics']"
9617,961700,SSD,0,[]
9618,961800,Airport Sort,0,[]
9619,961900,박스,0,[]
9620,962000,Meeting Room Arrangement,9,"['greedy', 'sorting']"
9621,962100,팰린드롬 여행,0,[]
9622,962200,Cabin Baggage,3,['implementation']
9623,962300,부분 수열의 길이,17,"['binary search', 'value / coordinate compression', 'data structures', 'prefix sum', 'segment tree']"
9624,962400,Safari Park,0,[]
9625,962500,BABBA,6,['dynamic programming']
9626,962600,크로스워드 퍼즐,6,['implementation']
9627,962700,문장,7,"['bruteforcing', 'implementation', 'precomputation', 'string']"
9628,962800,KOLINJE,13,['mathematics']
9629,962900,두 정수의 거리,19,['dynamic programming']
9630,963000,TV 송신기,24,"['data structures', 'geometry', 'stack']"
9631,963100,The Alphabet Sticker,7,"['combinatorics', 'mathematics', 'string']"
9632,963200,Swyper Keyboard,0,[]
9633,963300,Increasing Shortest Path,19,"['dynamic programming', 'offline queries']"
9634,963400,Cup of Cowards,0,[]
9635,963500,Balloons Colors,3,['implementation']
9636,963600,NASSA’s Robot,4,['greedy']
9637,963700,The Stones Game,0,[]
9638,963800,Super Ants,0,[]
9639,963900,Omar Loves Candies,10,['prefix sum']
9640,964000,Modified LCS,0,[]
9641,964100,Mario Kart,0,[]
9642,964200,Omar’s Bug,14,[]
9643,964300,Absurdistan Roads,0,[]
9644,964400,Battle for Silver,13,['ad-hoc']
9645,964500,Card Trick,16,"['dynamic programming', 'mathematics', 'probability theory']"
9646,964600,다이어그램과 태블로,12,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
9647,964700,Exponential Towers,22,"['mathematics', 'number theory']"
9648,964800,First Date,8,"['case work', 'implementation', 'mathematics']"
9649,964900,Grachten,6,"['geometry', 'mathematics']"
9650,965000,Highway of the Future,0,[]
9651,965100,Infix to Prefix,0,[]
9652,965200,Jingle Balls,16,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'parsing', 'stack', 'string', 'tree']"
9653,965300,스타워즈 로고,1,['implementation']
9654,965400,나부 함대 데이터,1,['implementation']
9655,965500,돌 게임,6,"['dynamic programming', 'game theory', 'mathematics']"
9656,965600,돌 게임 2,6,"['dynamic programming', 'game theory']"
9657,965700,돌 게임 3,8,"['dynamic programming', 'game theory']"
9658,965800,돌 게임 4,9,"['dynamic programming', 'game theory']"
9659,965900,돌 게임 5,8,['game theory']
9660,966000,돌 게임 6,11,['game theory']
9661,966100,돌 게임 7,13,"['game theory', 'mathematics']"
9662,966200,돌 게임 8,19,"['dynamic programming', 'game theory']"
9663,966300,N-Queen,12,"['backtracking', 'bruteforcing']"
9664,966400,NASLJEDSTVO,3,"['arithmetic', 'bruteforcing', 'mathematics']"
9665,966500,GMO,10,"['bruteforcing', 'dynamic programming']"
9666,966600,SUMO,18,"['binary search', 'bipartite graph', 'data structures', 'disjoint set', 'graph theory']"
9667,966700,GUMA,18,"['inclusion and exclusion', 'mathematics', 'number theory']"
9668,966800,ČOKOLADE,18,['mathematics']
9669,966900,UTRKA,21,"['data structures', 'floyd–warshall', 'graph theory', 'sparse table']"
9670,967000,Movie,5,['geometry']
9671,967100,SMS Poll,0,[]
9672,967200,Traitor,0,[]
9673,967300,Intelligent Traffic Surveillance,0,[]
9674,967400,BitTorrent,0,[]
9675,967500,2D-Solar System,0,[]
9676,967600,Bowling Ball,0,[]
9677,967700,LED에 전원 같은 걸 끼얹기,0,[]
9678,967800,Mixed Flight Plans,0,[]
9679,967900,Sweeping Robot,0,[]
9680,968000,Wedding Hall,0,[]
9681,968100,Suitcases,0,[]
9682,968200,The Motorway,22,[]
9683,968300,Bytehattan,23,[]
9684,968400,The Carpenter,24,[]
9685,968500,Demonstrations,19,[]
9686,968600,The Exam,14,['greedy']
9687,968700,Speed Cameras,0,[]
9688,968800,Marbles,0,[]
9689,968900,The Hero,0,[]
9690,969000,Genetic Engineering,0,[]
9691,969100,Janosik,8,"['arithmetic', 'mathematics', 'number theory']"
9692,969200,Blankets,0,[]
9693,969300,시파르,7,"['mathematics', 'number theory']"
9694,969400,무엇을 아느냐가 아니라 누구를 아느냐가 문제다,13,"[""dijkstra's"", 'graph theory']"
9695,969500,Filter And Perform,0,[]
9696,969600,Show Me The Operators,11,"['arithmetic', 'case work', 'data structures', 'deque', 'implementation', 'mathematics', 'parsing', 'string']"
9697,969700,THE SULTAN'S CHAPATI,10,"['implementation', 'sorting']"
9698,969800,SAHUR & IMSA’,3,"['arithmetic', 'implementation', 'mathematics']"
9699,969900,RICE SACK,3,['implementation']
9700,970000,RAINFOREST CANOPY,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
9701,970100,EVEN POSITIVE CLOSURE SUM,15,"['combinatorics', 'dynamic programming', 'mathematics']"
9702,970200,LIS,15,['longest increasing sequence in o(n log n)']
9703,970300,Anti-Arithmetic Permutation,4,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
9704,970400,Longest Balanced Sub-Sequence,0,[]
9705,970500,CHARITY BOOTH RENTAL,8,"['combinatorics', 'dynamic programming', 'mathematics']"
9706,970600,FIND THE MARBLES,11,"['bruteforcing', 'geometry']"
9707,970700,Supercap Travels,0,[]
9708,970800,Charles Babbage's Difference Engine,5,"['implementation', 'mathematics', 'simulation']"
9709,970900,Lights,0,[]
9710,971000,Rooks,12,"['greedy', 'sorting']"
9711,971100,피보나치,8,"['dynamic programming', 'mathematics']"
9712,971200,Prefix Free Subsets,0,[]
9713,971300,Sum of Odd Sequence,3,"['arithmetic', 'mathematics']"
9714,971400,Spiral,9,"['case work', 'implementation', 'mathematics']"
9715,971500,면적 구하기,7,"['geometry', 'geometry; 3d', 'implementation', 'mathematics']"
9716,971600,Table,12,"['ad-hoc', 'sorting']"
9717,971700,Huge Knight,16,"['ad-hoc', 'breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'set / map by trees']"
9718,971800,Matrix Transformation,12,"['ad-hoc', 'greedy', 'mathematics']"
9719,971900,Bi‐coloring,11,"['bipartite graph', 'graph theory', 'graph traversal']"
9720,972000,Sorting,0,[]
9722,972200,Qurban 2011,0,[]
9723,972300,Right Triangle,3,"['arithmetic', 'geometry', 'mathematics', 'pythagoras theorem']"
9724,972400,Perfect Cube,3,['mathematics']
9725,972500,Mod-3 Permutation,10,"['ad-hoc', 'greedy']"
9726,972600,Negative Binary,12,[]
9727,972700,Mini Sudoku X,6,['implementation']
9728,972800,Pair Sum,7,"['binary search', 'data structures', 'set / map by hashing', 'two-pointer']"
9729,972900,XOR,0,[]
9730,973000,Sequence Merging,10,['greedy']
9731,973100,Recurrence,21,"['combinatorics', 'mathematics']"
9732,973200,Division Game,18,"['game theory', 'sprague–grundy theorem']"
9733,973300,꿀벌,6,"['data structures', 'set / map by hashing', 'implementation', 'string']"
9734,973400,순환 소수,10,"['euclidean algorithm', 'mathematics', 'number theory', 'parsing', 'string']"
9735,973500,삼차 방정식 풀기,17,"['mathematics', 'numerical analysis']"
9736,973600,정이면체군,12,['mathematics']
9737,973700,Area Between Outer Hull and Inner Hull,0,[]
9738,973800,Sharkovski’s Ordering,0,[]
9739,973900,M M Detour,0,[]
9740,974000,More Fun in Bicol,0,[]
9741,974100,Interior Lattice Points,0,[]
9742,974200,순열,8,['backtracking']
9743,974300,방정식 부수기,0,[]
9753,975300,짝 곱,9,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
9763,976300,마을의 친밀도,9,['bruteforcing']
9764,976400,서로 다른 자연수의 합,10,['dynamic programming']
9765,976500,여섯 방정식,11,"['euclidean algorithm', 'mathematics', 'number theory']"
9798,979800,Cartesian Tree,16,"['data structures', 'recursion', 'segment tree', 'tree']"
9799,979900,Strange Graph,19,"['eulerian path / circuit', 'graph theory', 'graph traversal']"
9800,980000,Patience,0,[]
9801,980100,Commuter train,0,[]
9802,980200,Self-Replicating Numbers,0,[]
9803,980300,Magic Multiplying Machine,12,['dynamic programming']
9804,980400,Intuitionistic Logic,0,[]
9805,980500,Pyramids,8,"['arbitrary precision / big integers', 'geometry', 'geometry; 3d', 'implementation', 'mathematics']"
9806,980600,The King,0,[]
9813,981300,Computing,14,"['arithmetic', 'bruteforcing', 'mathematics']"
9814,981400,Coding of Permutations,0,[]
9815,981500,Cabric Number Problem,6,"['implementation', 'simulation']"
9816,981600,Number of Locks,7,"['backtracking', 'bitmask', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'precomputation']"
9817,981700,Necklace of Beads,19,"[""burnside's lemma"", 'combinatorics', 'mathematics']"
9818,981800,Quantity of White Mice,0,[]
9819,981900,Color Change of Go Game Pieces,7,"['arbitrary precision / big integers', 'bitmask', 'exponentiation by squaring', 'implementation', 'mathematics', 'simulation']"
9820,982000,Placement of Keys,0,[]
9821,982100,Selecting the Optimal Teaching Fiends,0,[]
9822,982200,Global Warming,8,['sorting']
9823,982300,Trucking Diesel,0,[]
9824,982400,Ferries,0,[]
9825,982500,MODSUM,10,"['bruteforcing', 'dynamic programming', 'mathematics', 'number theory']"
9826,982600,Pancake,14,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal', 'precomputation']"
9827,982700,Forensic,0,[]
9828,982800,Walking,0,[]
9829,982900,Change,9,"['greedy', 'mathematics', 'number theory']"
9830,983000,Paint,7,"['greedy', 'sorting']"
9831,983100,Tour,0,[]
9832,983200,TUTOR,0,[]
9833,983300,Sequence,0,[]
9834,983400,Card,7,"['data structures', 'deque', 'implementation', 'simulation']"
9835,983500,BESTP,8,"['implementation', 'parsing', 'string']"
9836,983600,Sailing,0,[]
9837,983700,Weather,0,[]
9838,983800,XMAS,3,['implementation']
9839,983900,Invest,0,[]
9840,984000,Lazycat,13,"['breadth-first search', 'graph theory', 'graph traversal', 'travelling salesman problem']"
9841,984100,Cipher,0,[]
9842,984200,Prime,7,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
9843,984300,LVM,7,"['data structures', 'implementation', 'stack']"
9844,984400,Gecko,7,['dynamic programming']
9845,984500,Housing,9,['dynamic programming']
9846,984600,Rank,0,[]
9847,984700,4SUM,10,['bruteforcing']
9848,984800,Gift,3,['implementation']
9849,984900,Rect,4,"['geometry', 'mathematics']"
9850,985000,Cipher,4,['bruteforcing']
9851,985100,Hole,0,[]
9852,985200,Jawbreak,0,[]
9853,985300,Street,0,[]
9854,985400,Battleships,0,[]
9855,985500,Cuckoo for Hashing,7,['implementation']
9856,985600,Playing Fair with Cryptography,11,"['implementation', 'string']"
9857,985700,Rent-A-Pixel,0,[]
9858,985800,Stampede!,0,[]
9859,985900,Super Phyllis,12,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by trees']"
9860,986000,Tree Lighting,0,[]
9861,986100,The Urge to Merge,0,[]
9862,986200,Xenospeak,0,[]
9863,986300,Calling All Programmers,6,"['data structures', 'implementation', 'queue']"
9864,986400,Rocky,0,[]
9865,986500,Undercut,0,[]
9866,986600,Vacation Planning,15,"[""dijkstra's"", 'graph theory', 'graph traversal']"
9867,986700,Optimal Milking,19,"['data structures', 'divide and conquer', 'segment tree']"
9868,986800,The Bessie Shuffle,18,"['data structures', 'sparse table']"
9869,986900,Milk Scheduling,13,"['data structures', 'greedy', 'priority queue', 'sorting']"
9870,987000,Vacation Planning,12,"['floyd–warshall', 'graph theory']"
9871,987100,The Bessie Shuffle,16,"['exponentiation by squaring', 'mathematics']"
9872,987200,Record Keeping,8,"['data structures', 'set / map by hashing', 'sorting', 'string']"
9873,987300,Cow Baseball,8,"['binary search', 'bruteforcing', 'sorting']"
9874,987400,Wormholes,14,"['backtracking', 'bruteforcing', 'graph theory', 'graph traversal']"
9875,987500,Cow Curling,19,"['convex hull', 'geometry', 'point in convex polygon check']"
9876,987600,Building a Ski Course,18,"['dynamic programming', 'prefix sum']"
9877,987700,Ski Course Rating,20,"['binary search', 'data structures', 'disjoint set', 'parallel binary search']"
9878,987800,Bessie Slows Down,11,"['data structures', 'implementation', 'mathematics', 'priority queue', 'sorting']"
9879,987900,Cross Country Skiing,13,"['binary search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal', 'minimum spanning tree']"
9880,988000,Recording the Moolympics,12,"['dynamic programming', 'greedy', 'sorting']"
9881,988100,Ski Course Design,6,"['bruteforcing', 'sweeping']"
9882,988200,Balanced Teams,8,['backtracking']
9883,988300,Morton Numbers,4,"['implementation', 'mathematics', 'string']"
9884,988400,Euclid,4,"['euclidean algorithm', 'implementation', 'mathematics', 'number theory']"
9885,988500,Claws,12,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
9886,988600,E-Casino,10,[]
9887,988700,Genome,12,['dynamic programming']
9888,988800,Fludtown,0,[]
9889,988900,Heng,0,[]
9890,989000,Matrix,10,['greedy']
9891,989100,Rect,5,"['case work', 'geometry', 'implementation']"
9892,989200,Width,0,[]
9893,989300,Paths,11,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
9894,989400,Pair,0,[]
9895,989500,Word,0,[]
9896,989600,Gray,4,[]
9897,989700,Lamp,4,"['bruteforcing', 'data structures', 'set / map by hashing', 'implementation', 'simulation', 'string']"
9898,989800,Domino,15,"['bitmask', 'dynamic programming']"
9899,989900,Train,11,"['breadth-first search', 'graph theory', 'graph traversal']"
9900,990000,Small,0,[]
9901,990100,RNA,0,[]
9907,990700,ID,3,"['arithmetic', 'implementation', 'mathematics']"
9908,990800,Carpet,6,"['bruteforcing', 'implementation']"
9909,990900,Cellular,10,"['bitmask', 'bruteforcing', 'implementation']"
9910,991000,Progress,10,['bruteforcing']
9911,991100,ERP,14,"[""dijkstra's"", 'graph theory', 'implementation']"
9912,991200,Lexical,9,"['combinatorics', 'mathematics']"
9913,991300,Max,4,['implementation']
9914,991400,Kansas,9,"['implementation', 'simulation']"
9915,991500,Cars,9,"['implementation', 'simulation']"
9916,991600,Zeros,4,"['arbitrary precision / big integers', 'arithmetic', 'implementation', 'mathematics']"
9917,991700,Rank,10,"['depth-first search', 'graph theory', 'graph traversal']"
9918,991800,Cube,15,"['bruteforcing', 'case work', 'depth-first search', 'geometry', 'geometry; 3d', 'graph theory', 'graph traversal', 'implementation']"
9919,991900,Route,6,['implementation']
9920,992000,Image,9,"['divide and conquer', 'recursion']"
9921,992100,Coin,10,['dynamic programming']
9922,992200,Magic,0,[]
9923,992300,Triple,0,[]
9932,993200,미스테리,0,[]
9933,993300,민균이의 비밀번호,5,"['data structures', 'set / map by hashing', 'implementation', 'string']"
9934,993400,완전 이진 트리,10,"['recursion', 'tree']"
9935,993500,문자열 폭발,12,"['data structures', 'stack', 'string']"
9936,993600,체스로 도미노를 타자,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
9937,993700,직선으로 만드는 삼각형,15,"['combinatorics', 'mathematics']"
9938,993800,방 청소,18,"['data structures', 'disjoint set']"
9939,993900,Bowling Score Assistant,0,[]
9940,994000,Spectrum,14,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
9941,994100,One Move from Towers of Hanoi,11,['recursion']
9942,994200,하노이의 네 탑,13,"['dynamic programming', 'mathematics']"
9943,994300,Light Switches,0,[]
9944,994400,NxM 보드 완주하기,13,"['backtracking', 'implementation']"
9945,994500,Centroid of Point Masses,3,"['arithmetic', 'mathematics']"
9946,994600,단어 퍼즐,5,"['sorting', 'string']"
9947,994700,Coin tossing,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
9948,994800,Have you had your birthday yet?,5,[]
9949,994900,Hide those Letters,4,"['implementation', 'string']"
9950,995000,Rectangles,3,"['arithmetic', 'implementation', 'mathematics']"
9951,995100,Word Extraction,7,[]
9952,995200,Bree's pantry,8,"['data structures', 'deque', 'sorting']"
9953,995300,Paula's search,6,"['binary search', 'implementation']"
9954,995400,Cedric's Cypher,4,"['implementation', 'string']"
9955,995500,Recycling,8,[]
9956,995600,Reversing Words,8,['string']
9957,995700,Word Crosses,0,[]
9958,995800,All Squares,12,"['geometry', 'mathematics']"
9959,995900,Dominosa,0,[]
9960,996000,Digit Sums,19,['dynamic programming']
9961,996100,Stamps,0,[]
9962,996200,Assimilation,0,[]
9971,997100,The Hardest Problem Ever,4,"['implementation', 'string']"
9972,997200,Rubik’s Cube Solver,16,"['case work', 'implementation', 'simulation']"
9973,997300,Polar Explorer,7,"['geometry', 'mathematics']"
9974,997400,Door Man,12,"['case work', 'eulerian path / circuit', 'graph theory', 'parsing', 'string']"
9975,997500,The Umbrella Problem: 2054,0,[]
9976,997600,"Blue Gene, Jr.",11,"['implementation', 'recursion', 'string']"
9977,997700,Byte Me!,9,"['implementation', 'simulation']"
9978,997800,World’s Worst Bus Schedule,8,"['implementation', 'parsing', 'simulation', 'string']"
9979,997900,Does This Make Me Look Fat?,6,"['implementation', 'parsing', 'sorting', 'string']"
9980,998000,Manifest Destiny,0,[]
9981,998100,Treasure Hunters,7,"['bitmask', 'bruteforcing', 'implementation', 'simulation']"
9982,998200,Frogger's For Dinner,5,"['implementation', 'simulation']"
9983,998300,더 푸르게,13,"['backtracking', 'bruteforcing', 'implementation']"
9984,998400,Get Out 'Da Way!,0,[]
9985,998500,Missing Piece 2001,19,"['bruteforcing', 'data structures', 'meet in the middle', 'set / map by trees']"
9986,998600,Asteroids!,11,"['breadth-first search', 'graph theory', 'graph traversal']"
9987,998700,포켓몬 마스터,0,[]
9988,998800,Roadblock,13,"[""dijkstra's"", 'graph theory']"
9989,998900,Cow Decathlon,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
9990,999000,Airplane Boarding,25,"['splay tree', 'tree']"
9991,999100,Auto-Complete,12,"['binary search', 'sorting', 'string']"
9992,999200,비밀 메시지,14,['dynamic programming']
9993,999300,Mirror Field,10,"['bruteforcing', 'graph theory']"
9994,999400,Secret Code,13,"['bruteforcing', 'divide and conquer', 'dynamic programming', 'recursion', 'string']"
9995,999500,HM과 TM,0,[]
9996,999600,한국이 그리울 땐 서버에 접속하지,8,"['regular expression', 'string']"
9997,999700,폰트,13,"['bitmask', 'bruteforcing', 'recursion']"
9998,999800,블록 쌓기,13,"['binary search', 'ternary search']"
9999,999900,구구,0,[]
10000,1000000,원 영역,17,"['data structures', 'disjoint set', 'geometry', 'sorting', 'stack', 'sweeping']"
10001,1000100,Hash,17,"['exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'meet in the middle', 'modular multiplicative inverse', 'number theory']"
10003,1000300,Tower Defense Game,18,"['graph theory', 'graph traversal']"
10004,1000400,Bytecomputer,17,['dynamic programming']
10005,1000500,Maze,25,"['constructive', 'geometry']"
10006,1000600,Colorful Chain,15,"['sliding window', 'two-pointer']"
10007,1000700,레이저,20,"['dynamic programming', 'geometry', 'prefix sum', 'sweeping']"
10008,1000800,Polarization,23,"['센트로이드', 'graph theory', 'knapsack', 'mathematics', 'tree']"
10009,1000900,Loteria 2,0,[]
10010,1001000,Bajtokrąg,21,"['binary search', 'two-pointer']"
10011,1001100,Zadanie Eulera,0,[]
10012,1001200,Kamyki,14,"['constructive', 'game theory', 'mathematics', 'number theory']"
10013,1001300,Graf planarny,0,[]
10014,1001400,Traveling Saga Problem,24,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'segment tree', 'tree']"
10015,1001500,Śnieżyca,21,"['data structures', 'segment tree', 'set / map by trees']"
10016,1001600,Świetliki,18,['ternary search']
10017,1001700,Tester wioseł,25,"['2-sat', 'graph theory', 'strongly connected component', 'two-pointer']"
10018,1001800,The Lazy Cow,19,"['data structures', 'segment tree', 'sweeping']"
10019,1001900,Sabotage,17,"['binary search', 'dynamic programming', 'parametric search', 'prefix sum']"
10020,1002000,Counting Friends,18,['graph theory']
10021,1002100,Watering the Fields,13,"['graph theory', 'minimum spanning tree']"
10022,1002200,The Lazy Cow,12,['prefix sum']
10023,1002300,Mooo Moo,11,"['dynamic programming', 'knapsack']"
10024,1002400,Reordering the Cows,8,"['implementation', 'permutation cycle decomposition']"
10025,1002500,게으른 백곰,8,"['sliding window', 'two-pointer']"
10026,1002600,적록색약,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
10027,1002700,CSS,22,"['parsing', 'string']"
10028,1002800,HISTOGRAMI,21,"['data structures', 'dynamic programming', 'segment tree']"
10029,1002900,MOSTOVI,23,"['data structures', 'segment tree', 'set / map by trees']"
10030,1003000,Fair Photography,0,[]
10031,1003100,Cow Optics,23,"['case work', 'data structures', 'graph theory', 'graph traversal', 'implementation', 'segment tree']"
10032,1003200,Code Breaking,26,[]
10033,1003300,Fair Photography,16,"['binary search', 'prefix sum']"
10034,1003400,Odometer,18,['dynamic programming']
10035,1003500,Odometer,10,['bruteforcing']
10036,1003600,Fair Photography,15,"['prefix sum', 'sorting', 'two-pointer']"
10037,1003700,Decorating the Pastures,14,"['breadth-first search', 'bipartite graph', 'depth-first search', 'graph theory', 'graph traversal']"
10038,1003800,Dueling GPSs,16,"[""dijkstra's"", 'graph theory']"
10039,1003900,평균 점수,2,"['arithmetic', 'mathematics']"
10040,1004000,투표,4,"['implementation', 'simulation']"
10041,1004100,관광,5,"['arithmetic', 'case work', 'mathematics']"
10042,1004200,部活のスケジュール表 (Schedule),12,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
10043,1004300,タクシー (Taxis),17,"['data structures', ""dijkstra's"", 'graph theory', 'priority queue']"
10044,1004400,小籠包 (Xiao Long Bao),20,['dynamic programming']
10045,1004500,JOI 紋章 (JOI Emblem),12,"['bruteforcing', 'implementation']"
10046,1004600,IOI 饅頭 (IOI Manju),15,['dynamic programming']
10047,1004700,バームクーヘン (Baumkuchen),17,"['binary search', 'two-pointer']"
10048,1004800,フクロモモンガ (Sugar Glider),21,"[""dijkstra's"", 'graph theory']"
10049,1004900,切り取り線 (Cutting),26,"['data structures', 'disjoint set', 'euler characteristic (χ=v-e+f)', 'geometry', 'segment tree with lazy propagation', 'segment tree']"
10050,1005000,블록,25,"['ad-hoc', 'constructive']"
10051,1005100,Buffed Buffet,22,[]
10052,1005200,Crane Balancing,22,"['geometry', 'mathematics', 'physics', 'area of a polygon']"
10053,1005300,필승 전략,20,['dynamic programming']
10054,1005400,Maze Reduction,24,[]
10055,1005500,Messenger,23,"['binary search', 'geometry']"
10056,1005600,Metal Processing Plant,25,"['2-sat', 'binary search', 'data structures', 'disjoint set', 'graph theory', 'strongly connected component']"
10057,1005700,Pachinko,26,"['gaussian elimination', 'linear algebra', 'mathematics']"
10058,1005800,센서 네트워크,26,"['bipartite matching', 'geometry']"
10059,1005900,Skiing,0,[]
10060,1006000,감시 카메라,21,"['data structures', 'greedy', 'sparse table']"
10061,1006100,Wire Crossing,0,[]
10062,1006200,은기의 DNA 분자,25,[]
10063,1006300,KOSTA,24,[]
10064,1006400,GRAD,25,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree', 'tree decomposition']"
10065,1006500,KRAVE,22,[]
10066,1006600,팰린드롬,23,"['data structures', ""manacher's"", 'palindrome tree', 'string', 'suffix array and lcp array', 'tree']"
10067,1006700,수열 나누기,21,"['convex hull trick', 'dynamic programming']"
10068,1006800,구슬이 서말이라도 꿰어야 보배,23,"['dynamic programming', 'dynamic programming on trees', 'tree']"
10069,1006900,Rail,24,"['ad-hoc', 'sorting']"
10070,1007000,벽,21,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
10071,1007100,Game,20,"['data structures', 'disjoint set', 'graph theory', 'greedy']"
10072,1007200,곤돌라 - 곤돌라 수열 확인,13,"['case work', 'implementation']"
10073,1007300,곤돌라 - 교체 수열,15,['constructive']
10074,1007400,곤돌라 - 교체 수열의 개수 세기,17,"['combinatorics', 'exponentiation by squaring', 'mathematics']"
10075,1007500,친구,26,['greedy']
10076,1007600,휴가,24,"['data structures', 'divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'persistent segment tree', 'segment tree']"
10077,1007700,Orchard,0,[]
10078,1007800,Sightseeing,0,[]
10079,1007900,CATS,0,[]
10080,1008000,Obelisk,0,[]
10081,1008100,Big Circle,19,"['divide and conquer', 'sweeping']"
10082,1008200,Fuleco and Brazil ant,11,[]
10083,1008300,Strategy,15,"['mathematics', 'number theory']"
10084,1008400,Mascot Song,0,[]
10085,1008500,Tickets,0,[]
10086,1008600,Andres Iniesta,0,[]
10087,1008700,Orbit,18,"['binary search', 'geometry', 'mathematics']"
10088,1008800,XOR,0,[]
10089,1008900,Profit,21,"['data structures', 'depth-first search', 'euler tour technique', 'graph theory', 'graph traversal', 'segment tree with lazy propagation', 'segment tree', 'tree']"
10090,1009000,Counting Inversions,16,"['data structures', 'divide and conquer', 'segment tree', 'sorting']"
10091,1009100,Cyclic Marathon,0,[]
10092,1009200,Decreasing Sequences of Points,0,[]
10093,1009300,숫자,4,['implementation']
10094,1009400,Computer Network,16,"['ad-hoc', 'breadth-first search', 'differential cryptanalysis', 'graph theory', 'graph traversal']"
10095,1009500,Cop and Robber,0,[]
10096,1009600,세 친구,13,"['ad-hoc', 'string']"
10097,1009700,수열,23,[]
10098,1009800,양분,26,['geometry']
10099,1009900,Portals,18,"['breadth-first search', 'graph theory', 'graph traversal']"
10100,1010000,Senior Postmen,19,"['eulerian path / circuit', 'graph theory']"
10101,1010100,삼각형 외우기,2,"['geometry', 'implementation']"
10102,1010200,개표,3,['string']
10103,1010300,주사위 게임,3,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
10104,1010400,Party Invitation,4,"['data structures', 'implementation', 'linked list', 'simulation']"
10105,1010500,Assigning Partners,5,"['data structures', 'set / map by hashing', 'implementation', 'string']"
10106,1010600,The Geneva Confection,8,"['data structures', 'stack']"
10107,1010700,Tinted Glass Window,0,[]
10108,1010800,Lazy Fox,0,[]
10109,1010900,Troyangles,12,['dynamic programming']
10110,1011000,King Gruff,17,"['binary search', ""dijkstra's"", 'graph theory', 'offline queries', 'prefix sum']"
10111,1011100,Werewolf,0,[]
10112,1011200,Where’s That Fuel?,9,"['greedy', 'sorting']"
10113,1011300,Early Exam Evacuation,0,[]
10114,1011400,Gates,0,[]
10116,1011600,The Forest of Fangorn,21,['geometry']
10117,1011700,Question,21,"['ad-hoc', 'mathematics']"
10118,1011800,007,19,[]
10119,1011900,Cake,20,"['data structures', 'segment tree']"
10120,1012000,The Wall,26,"[""dijkstra's"", 'dual graph', 'graph theory', 'greedy', 'planar graph']"
10121,1012100,Salad Bar,18,"['data structures', 'segment tree', 'stack']"
10122,1012200,Hotels,17,"['combinatorics', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'tree']"
10123,1012300,Bricks,20,"['case work', 'constructive', 'greedy']"
10124,1012400,Couriers,20,"['data structures', 'randomization', 'segment tree']"
10125,1012500,Snake,0,[]
10126,1012600,Cards,21,"['data structures', 'segment tree']"
10127,1012700,criminals,19,"['ad-hoc', 'dynamic programming']"
10128,1012800,Supercomputer,25,"['convex hull trick', 'greedy', 'mathematics', 'tree']"
10129,1012900,작은 새,20,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
10130,1013000,Rally,23,"['data structures', 'graph theory', 'segment tree', 'sweeping', 'topological sorting']"
10131,1013100,FarmCraft,19,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'sorting', 'tree']"
10132,1013200,Around the world,21,"['greedy', 'two-pointer']"
10133,1013300,Ant colony,17,"['binary search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
10134,1013400,Tourism,25,"['backtracking', 'bitmask', 'depth-first search', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal']"
10135,1013500,Solar lamps,26,"['data structures', 'divide and conquer', 'segment tree']"
10136,1013600,Solar Panels,21,"['mathematics', 'number theory']"
10137,1013700,Freight,20,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
10138,1013800,Kuglarz,17,[]
10139,1013900,Lustra,6,['sorting']
10140,1014000,Bohater,0,[]
10141,1014100,Pakowanie,0,[]
10142,1014200,Drużyny,25,"['data structures', 'divide and conquer', 'dynamic programming', 'segment tree']"
10143,1014300,Parking,0,[]
10144,1014400,Ciągi,0,[]
10145,1014500,Fiolki,0,[]
10146,1014600,Muzeum,24,[]
10147,1014700,Plemiona,0,[]
10148,1014800,Bazarek,0,[]
10149,1014900,Budowa,0,[]
10150,1015000,Gra w podwajanie,0,[]
10151,1015100,Królestwo,0,[]
10152,1015200,Matryca,0,[]
10153,1015300,Wykładzina,0,[]
10154,1015400,Zadanie,0,[]
10155,1015500,Żarówki,0,[]
10156,1015600,과자,2,"['arithmetic', 'mathematics']"
10157,1015700,자리배정,7,['implementation']
10158,1015800,개미,7,"['ad-hoc', 'arithmetic', 'mathematics']"
10159,1015900,저울,12,"['floyd–warshall', 'graph theory', 'graph traversal']"
10160,1016000,암호,15,['dynamic programming']
10161,1016100,톨게이트,0,[]
10162,1016200,전자레인지,3,"['greedy', 'implementation', 'mathematics']"
10163,1016300,색종이,5,['implementation']
10164,1016400,격자상의 경로,9,"['combinatorics', 'dynamic programming', 'mathematics']"
10165,1016500,버스 노선,16,"['greedy', 'sorting', 'sweeping']"
10166,1016600,관중석,10,"['euclidean algorithm', 'mathematics', 'number theory']"
10167,1016700,금광,21,"['value / coordinate compression', 'data structures', 'segment tree', 'sweeping']"
10168,1016800,파발마,21,"['convex hull trick', 'dynamic programming']"
10169,1016900,안전한 비상연락망,22,"['data structures', 'disjoint set', 'graph theory', 'heavy-light decomposition', 'segment tree with lazy propagation', 'lowest common ancestor', 'minimum spanning tree', 'segment tree', 'tree']"
10170,1017000,NFC West vs North,1,['implementation']
10171,1017100,고양이,1,['implementation']
10172,1017200,개,1,['implementation']
10173,1017300,니모를 찾아서,4,['string']
10174,1017400,팰린드롬,4,"['implementation', 'string']"
10175,1017500,Dominant Species,5,['implementation']
10176,1017600,Opposite Words,5,"['implementation', 'string']"
10177,1017700,Magic Squares,5,[]
10178,1017800,할로윈의 사탕,3,"['arithmetic', 'mathematics']"
10179,1017900,쿠폰,3,"['arithmetic', 'implementation', 'mathematics']"
10180,1018000,Ship Selection,3,"['arithmetic', 'mathematics']"
10181,1018100,Federation Favorites,5,['mathematics']
10182,1018200,AcidBase,5,"['implementation', 'mathematics']"
10183,1018300,Snake2,8,[]
10193,1019300,Word Swap,4,['string']
10194,1019400,Aligned Calender,6,['implementation']
10195,1019500,Underwater Trip,0,[]
10196,1019600,Minion Walk,9,"['graph theory', 'graph traversal']"
10197,1019700,Word Ladder,11,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'string']"
10198,1019800,Crossing River,12,[]
10199,1019900,Shark Tour,0,[]
10200,1020000,Jam Factory,12,[]
10201,1020100,The Minions Build a Brick Wall,0,[]
10202,1020200,Longest Subsequence,4,"['implementation', 'string']"
10203,1020300,Count Vowels,4,['string']
10204,1020400,Neighborhoods in Graphs,8,"['breadth-first search', 'depth-first search', 'floyd–warshall', 'graph theory', 'graph traversal', 'parsing', 'string']"
10205,1020500,헤라클레스와 히드라,3,"['implementation', 'string']"
10206,1020600,Odysseus and the Sirens,0,[]
10207,1020700,Heracles and the Stables of Augeas,13,"['dynamic programming', 'geometry']"
10208,1020800,Milo of Croton and the Calf,0,[]
10209,1020900,Theseus and the Minotaur,7,"['data structures', 'stack']"
10210,1021000,The Trojan Horse,11,"['depth-first search', 'graph theory', 'graph traversal']"
10211,1021100,Maximum Subarray,7,"['bruteforcing', 'dynamic programming', 'prefix sum']"
10212,1021200,Mystery,0,[]
10213,1021300,XH Company,20,"['convex hull trick', 'convex hull', 'geometry']"
10214,1021400,Baseball,3,['implementation']
10215,1021500,Colored Bead Works,17,"['bitmask', 'bruteforcing', 'case work', 'dynamic programming', 'dynamic programming using bitfield', 'implementation', 'mathematics', 'probability theory']"
10216,1021600,Count Circle Groups,11,"['data structures', 'disjoint set', 'geometry', 'graph theory', 'graph traversal']"
10217,1021700,KCM Travel,16,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
10218,1021800,Maze,16,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
10219,1021900,Meats On The Grill,5,"['ad-hoc', 'constructive', 'implementation']"
10220,1022000,Self Representing Seq,17,"['ad-hoc', 'mathematics']"
10221,1022100,Test Data Analysis,21,"['case work', 'dynamic programming', 'prefix sum']"
10222,1022200,Tons Of Damage,19,"['combinatorics', 'mathematics']"
10223,1022300,Fertilizing,21,"['data structures', 'greedy', 'segment tree with lazy propagation', 'mathematics', 'segment tree']"
10224,1022400,Watering,22,"['bruteforcing', 'geometry', 'line segment intersection check']"
10225,1022500,Cluedo,7,"['implementation', 'two-pointer']"
10226,1022600,Hotter Colder,0,[]
10227,1022700,삶의 질,18,"['binary search', 'parametric search', 'prefix sum']"
10228,1022800,Memory,5,['implementation']
10229,1022900,Traffic Congestion,13,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
10230,1023000,Maze 1,3,"['ad-hoc', 'constructive']"
10231,1023100,Languages,22,"['ad-hoc', 'hashing', 'heuristics', 'mathematics', 'statistics']"
10232,1023200,Saveit,24,"['ad-hoc', 'graph theory', 'graph traversal', 'tree']"
10240,1024000,Banjo,0,[]
10241,1024100,Cheats,0,[]
10242,1024200,Diplomacy,14,"['bruteforcing', 'floyd–warshall', 'graph theory', 'graph traversal']"
10243,1024300,Fantastic Problem,23,"['data structures', 'mathematics', 'number theory', 'primality test', 'segment tree', 'sieve of eratosthenes']"
10244,1024400,최대공약수들,16,"['euclidean algorithm', 'mathematics', 'number theory']"
10245,1024500,Gold Bandits,18,"['backtracking', 'bruteforcing', ""dijkstra's"", 'graph theory']"
10246,1024600,부동산 경매,11,"['bruteforcing', 'mathematics']"
10247,1024700,Reconnaissance,15,['ternary search']
10248,1024800,Super Mario 169,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'implementation', 'travelling salesman problem']"
10249,1024900,Two Knight’s Poem,14,"['graph theory', 'graph traversal']"
10250,1025000,ACM 호텔,4,"['arithmetic', 'implementation', 'mathematics']"
10251,1025100,운전 면허 시험,16,['dynamic programming']
10252,1025200,그리드 그래프,9,"['ad-hoc', 'constructive']"
10253,1025300,헨리,11,"['implementation', 'mathematics']"
10254,1025400,고속도로,19,"['convex hull', 'geometry', 'rotating calipers']"
10255,1025500,교차점,17,"['case work', 'geometry', 'line segment intersection check']"
10256,1025600,돌연변이,19,"['aho-corasick', 'data structures', 'string', 'tree', 'trie']"
10257,1025700,얼룩,21,"['bruteforcing', 'case work', 'dynamic programming']"
10258,1025800,스위치 배열,15,"['ad-hoc', 'mathematics']"
10259,1025900,Amanda Lounges,15,"['depth-first search', 'graph theory', 'graph traversal']"
10260,1026000,Basin City Surveillance,23,[]
10261,1026100,Catalan Square,6,"['arbitrary precision / big integers', 'combinatorics', 'mathematics']"
10262,1026200,주사위 게임,4,"['arithmetic', 'implementation', 'mathematics', 'probability theory']"
10263,1026300,Opening Ceremony,9,"['binary search', 'greedy']"
10264,1026400,Particle Swapping,22,"['binary search', 'data structures', 'disjoint set', 'graph theory', 'lowest common ancestor', 'minimum spanning tree', 'parallel binary search', 'tree']"
10265,1026500,MT,17,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'knapsack', 'strongly connected component']"
10266,1026600,시계 사진들,16,"['knuth–morris–pratt', 'string']"
10267,1026700,사각형은 몇 개?,19,['geometry']
10268,1026800,Road Work,20,"['case work', 'dynamic programming']"
10269,1026900,Train Passengers,5,"['implementation', 'simulation']"
10270,1027000,Algebraic Teamwork,4,"['combinatorics', 'mathematics']"
10271,1027100,Beam me out!,12,[]
10272,1027200,현상금 사냥꾼 김정은,16,['dynamic programming']
10273,1027300,고대 동굴 탐사,15,"['dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'topological sorting', 'tree']"
10274,1027400,Equator,11,[]
10275,1027500,골드 러시,5,"['implementation', 'mathematics']"
10276,1027600,Jewelry Exhibition,17,['bipartite matching']
10277,1027700,JuQueen,19,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
10278,1027800,Laser Cutting,0,[]
10279,1027900,부분 수열이 아님,18,['dynamic programming']
10280,1028000,Pizza voting,5,"['greedy', 'mathematics']"
10281,1028100,Choosing Ice Cream,12,"['implementation', 'mathematics', 'probability theory', 'simulation']"
10282,1028200,해킹,12,"[""dijkstra's"", 'graph theory']"
10283,1028300,Floor Painting,0,[]
10284,1028400,Lift Problems,12,['dynamic programming']
10285,1028500,Pawns,0,[]
10286,1028600,Runway Planning,5,"['arithmetic', 'mathematics']"
10287,1028700,Spy Network,20,"['euclidean algorithm', 'graph theory', 'mathematics', 'number theory', 'strongly connected component', 'topological sorting']"
10288,1028800,Talent Selection,0,[]
10289,1028900,Train Station Tunnel,0,[]
10290,1029000,Word Search,13,"['bruteforcing', 'case work', 'implementation']"
10291,1029100,Ribbon,8,"['euclidean algorithm', 'mathematics', 'number theory']"
10292,1029200,Man in the Middle,16,"['articulation points and bridges', 'graph theory']"
10293,1029300,Ranks in groups,18,"['data structures', 'disjoint set', 'smaller to larger technique', 'set / map by trees']"
10294,1029400,Shops,12,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
10295,1029500,Hiking,10,"[""dijkstra's"", 'graph theory']"
10296,1029600,IceBucketChallenge,6,"['binary search', 'implementation', 'mathematics']"
10297,1029700,ผู้เฒ่าเต่า,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
10298,1029800,Tigger,10,['dynamic programming']
10299,1029900,아미노산,0,[]
10300,1030000,Goldbach Partition,10,[]
10301,1030100,Cookie Farm,0,[]
10302,1030200,การแบ่งพื้นที่แบบบันไดวน,10,[]
10303,1030300,Headshot,6,['mathematics']
10304,1030400,Golden Khon Kaen,0,[]
10305,1030500,Maximal Sum,0,[]
10306,1030600,Radix 32,0,[]
10307,1030700,Van Gogh,0,[]
10308,1030800,Two’s Network,0,[]
10309,1030900,Kolonie,0,[]
10310,1031000,Most,0,[]
10311,1031100,Stavitel,12,['greedy']
10312,1031200,Lodê,3,"['mathematics', 'number theory']"
10313,1031300,Direct Visibility,0,[]
10314,1031400,Karel the Robot,0,[]
10315,1031500,More or Less Accurate,0,[]
10316,1031600,Self-Intersecting Path,0,[]
10317,1031700,Lengthy Traveling Salesman,0,[]
10318,1031800,Picture Validator,0,[]
10319,1031900,좀비 아포칼립스,21,['maximum flow']
10320,1032000,Button Bashing,9,"['breadth-first search', 'graph theory', 'graph traversal']"
10321,1032100,요새 건설,20,"['convex hull', 'geometry', 'ternary search', 'two-pointer']"
10322,1032200,Dropping Directions,0,[]
10323,1032300,Excellent Engineers,19,"['data structures', 'segment tree']"
10324,1032400,Floating Formation,20,"['breadth-first search', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'greedy', 'segment tree with lazy propagation', 'segment tree', 'tree']"
10325,1032500,Growling Gears,11,['mathematics']
10326,1032600,Highway Hassle,0,[]
10327,1032700,피보나치 문제해결전략,18,"['extended euclidean algorithm', 'mathematics', 'number theory']"
10328,1032800,Jury Jeopardy,7,"['graph theory', 'implementation', 'simulation']"
10329,1032900,Key to Knowledge,19,"['bidirectional search', 'bruteforcing', 'data structures', 'graph theory', 'meet in the middle', 'set / map by trees']"
10330,1033000,비트 문자열 재배열하기,12,"['breadth-first search', 'bitmask', 'bit set', 'graph theory', 'graph traversal']"
10331,1033100,Miscalculation,9,"['mathematics', 'parsing', 'string']"
10332,1033200,Shopping,10,"['greedy', 'sorting', 'sweeping']"
10333,1033300,Space Golf,16,"['calculus', 'geometry', 'mathematics', 'physics']"
10334,1033400,Automotive Navigation,19,['implementation']
10335,1033500,There is No Alternative,17,"['articulation points and bridges', 'bruteforcing', 'graph theory', 'minimum spanning tree']"
10336,1033600,Flipping Parentheses,19,"['data structures', 'segment tree']"
10337,1033700,Cornering at Poles,24,[]
10338,1033800,Sweet War,22,[]
10339,1033900,Exhibition,26,[]
10340,1034000,L∞ Jumps,0,[]
10341,1034100,(More) Multiplication,0,[]
10342,1034200,Fun House,7,"['implementation', 'simulation']"
10343,1034300,Lexicography,12,"['combinatorics', 'mathematics', 'string']"
10344,1034400,The Leprechaun Hunt,0,[]
10345,1034500,Word Cloud,0,[]
10346,1034600,The Maze Makers,0,[]
10347,1034700,Reverse Rot,4,[]
10348,1034800,Shrine Maintenance,0,[]
10349,1034900,Wet Tiles,0,[]
10350,1035000,은행,26,"['ad-hoc', 'mathematics', 'prefix sum']"
10351,1035100,Circle of digits,0,[]
10352,1035200,UFO,0,[]
10353,1035300,Frame,6,"['case work', 'mathematics', 'number theory']"
10354,1035400,Points,0,[]
10355,1035500,Most Influential Pumpkin,23,[]
10356,1035600,Grammar,15,['dynamic programming']
10357,1035700,Triples,10,"['bruteforcing', 'mathematics', 'number theory', 'two-pointer']"
10358,1035800,Multi-Machine Scheduling of Two Applications,0,[]
10359,1035900,Strange Antennas,0,[]
10360,1036000,The Mountain of Gold?,14,"['bellman–ford', 'graph theory']"
10361,1036100,Sequence,17,"['combinatorics', 'dynamic programming', 'mathematics']"
10362,1036200,Turtle Graphics,5,"['implementation', 'simulation']"
10363,1036300,Circle and Marble,0,[]
10364,1036400,Group of Strangers,20,"['inclusion and exclusion', 'mathematics']"
10365,1036500,Pantun Grader,0,[]
10366,1036600,Hari Merdeka,0,[]
10367,1036700,Túnel de Rata,0,[]
10368,1036800,Best Position,0,[]
10369,1036900,Spokes Wheel,0,[]
10370,1037000,Ball,18,"['combinatorics', 'mathematics']"
10371,1037100,Irrigation Lines,18,['bipartite matching']
10372,1037200,Alarm Clock,5,"['bruteforcing', 'implementation']"
10373,1037300,Buffcraft,11,"['bruteforcing', 'prefix sum', 'sorting']"
10374,1037400,Combinator Expression,0,[]
10375,1037500,Digits,12,['greedy']
10376,1037600,Expression,0,[]
10377,1037700,Fragmentation,22,['dynamic programming']
10378,1037800,Grave,8,['geometry']
10379,1037900,Hiking in the Hills,17,"['data structures', 'geometry', 'graph theory', 'priority queue']"
10380,1038000,Instruction,15,"['bit set', 'implementation', 'simulation', 'tree']"
10381,1038100,Joy of Flight,12,"['constructive', 'geometry', 'mathematics']"
10382,1038200,Kebab House,18,['dynamic programming']
10383,1038300,The Cost of Moving,4,"['sorting', 'string']"
10384,1038400,팬그램,6,"['implementation', 'string']"
10385,1038500,This Too Shall Pass,0,[]
10386,1038600,\(\text{Con}+\cfrac{\text{tin}}{\text{ued}+\cfrac{\text{Frac}}{\text{tions}}}\),14,"['arithmetic', 'mathematics']"
10387,1038700,A Cure for the Common Code,0,[]
10388,1038800,Domiyahtzee!,0,[]
10389,1038900,Generalized Roman Numerals,0,[]
10390,1039000,Inspectors,0,[]
10391,1039100,Path of Least Persistence,0,[]
10392,1039200,Speed Skills,0,[]
10393,1039300,Time Warp,0,[]
10394,1039400,"Watch, Man!",0,[]
10395,1039500,Automated Checking Machine,3,['implementation']
10396,1039600,Black and white stones,14,"['dynamic programming', 'greedy']"
10397,1039700,Counting substhreengs,10,"['dynamic programming', 'mathematics', 'parsing', 'string']"
10398,1039800,Dividing the names,21,[]
10399,1039900,Even distribution,17,[]
10400,1040000,Fence the vegetables,0,[]
10401,1040100,Galaxy collision,15,"['depth-first search', 'graph theory', 'graph traversal']"
10402,1040200,Help cupid,8,"['greedy', 'sorting']"
10403,1040300,Intrepid climber,12,[]
10404,1040400,Journey through the kingdom,0,[]
10405,1040500,Knights of the Round Table,0,[]
10406,1040600,The fellowship of the ring,3,['implementation']
10407,1040700,2 타워,8,"['mathematics', 'number theory']"
10408,1040800,The return of the King,5,"['implementation', 'string']"
10409,1040900,서버,3,"['arithmetic', 'implementation', 'mathematics']"
10410,1041000,Eligibility,4,['implementation']
10411,1041100,Plane Ticket Pricing,13,['dynamic programming']
10412,1041200,Facility Locations,14,"['data structures', 'disjoint set']"
10413,1041300,반복되는 부분 문자열,19,"['string', 'suffix array and lcp array']"
10414,1041400,Landline Telephone Network,17,"['graph theory', 'minimum spanning tree']"
10415,1041500,Aquarium Tank,17,"['binary search', 'geometry']"
10416,1041600,Restaurant Ratings,13,"['combinatorics', 'mathematics']"
10417,1041700,Locked Treasure,12,"['combinatorics', 'dynamic programming', 'mathematics']"
10418,1041800,Yet Satisfiability Again!,11,"['bitmask', 'bruteforcing']"
10419,1041900,지각,3,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
10420,1042000,기념일 1,5,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
10421,1042100,수식 완성하기,11,"['backtracking', 'bruteforcing']"
10422,1042200,괄호,13,"['combinatorics', 'dynamic programming', 'mathematics']"
10423,1042300,전기가 부족해,14,"['graph theory', 'minimum spanning tree']"
10424,1042400,알고리즘 기말고사,9,['implementation']
10425,1042500,피보나치 인버스,10,"['arbitrary precision / big integers', 'binary search']"
10426,1042600,기념일 2,5,['implementation']
10427,1042700,빚,11,"['greedy', 'prefix sum', 'sorting']"
10428,1042800,마법의 약,16,"['combinatorics', 'dynamic programming', 'mathematics']"
10429,1042900,QUENTO,12,"['depth-first search', 'graph theory', 'graph traversal', 'implementation']"
10430,1043000,나머지,1,"['implementation', 'arithmetic', 'mathematics']"
10431,1043100,줄세우기,6,"['implementation', 'simulation']"
10432,1043200,데이터 스트림의 섬,7,"['bruteforcing', 'data structures', 'stack']"
10433,1043300,부동소수점 형식 변환,0,[]
10434,1043400,행복한 소수,9,"['implementation', 'mathematics', 'number theory', 'primality test', 'simulation']"
10435,1043500,만칼라,18,"['ad-hoc', 'backtracking', 'constructive']"
10436,1043600,무한 유리수 트리,12,"['mathematics', 'tree']"
10437,1043700,자라나는 직교 나선,11,"['ad-hoc', 'mathematics']"
10438,1043800,페리 수열의 합,19,"['euler totient function', 'mathematics', 'number theory']"
10439,1043900,여왕님의 테라스,15,"['dynamic programming', 'geometry']"
10440,1044000,The Binary Search Efficiency Doubter,13,['mathematics']
10441,1044100,Preorder Traversals,10,[]
10442,1044200,Rank Order,8,['sorting']
10443,1044300,Mokia,21,"['data structures', 'divide and conquer', 'segment tree']"
10444,1044400,Anagram Pyramids,0,[]
10445,1044500,Groundwater Reserves,0,[]
10446,1044600,Algorist Club,27,"['graph theory', 'mathematics']"
10447,1044700,Deduction,0,[]
10448,1044800,유레카 이론,5,"['bruteforcing', 'mathematics']"
10449,1044900,Exploration,0,[]
10450,1045000,Marbles,0,[]
10451,1045100,순열 사이클,8,['permutation cycle decomposition']
10452,1045200,Road Repair,0,[]
10453,1045300,문자열 변환,10,['ad-hoc']
10454,1045400,세 네모,19,"['backtracking', 'binary search']"
10455,1045500,Torus,0,[]
10456,1045600,Travel Card,15,[]
10457,1045700,Two Yachts,0,[]
10458,1045800,How Does Your Garden Grow?,0,[]
10459,1045900,Compressed Words?,6,"['implementation', 'parsing', 'string']"
10460,1046000,Java vs. Scheme Smackdown,12,"['bruteforcing', 'implementation', 'mathematics', 'parsing', 'string']"
10461,1046100,Time Travel,0,[]
10462,1046200,Matryoshka Dolls,16,"['dynamic programming', 'sorting']"
10463,1046300,Repel,0,[]
10464,1046400,XOR,12,['mathematics']
10465,1046500,Rolling Encryption,8,"['implementation', 'string']"
10466,1046600,Mailing Origami,22,"['convex hull', 'geometry', 'rotating calipers']"
10467,1046700,Line Sweep,0,[]
10468,1046800,숫자뽑기게임,17,['dynamic programming']
10469,1046900,사이 나쁜 여왕들,6,['implementation']
10470,1047000,빨강 검정 징검다리,22,[]
10471,1047100,공간을 만들어 봅시다,4,['bruteforcing']
10472,1047200,십자뒤집기,10,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
10473,1047300,인간 대포,14,"[""dijkstra's"", 'graph theory']"
10474,1047400,분수좋아해?,3,"['arithmetic', 'mathematics']"
10475,1047500,모기 넌 내꺼야,18,"['bruteforcing', 'geometry']"
10476,1047600,좁은 미술전시관,11,['dynamic programming']
10477,1047700,경운기,12,"['bruteforcing', 'mathematics']"
10478,1047800,단위,13,"['floyd–warshall', 'graph theory', 'graph traversal']"
10479,1047900,따르릉 따르릉,18,['geometry']
10480,1048000,Oddities,3,"['arithmetic', 'implementation', 'mathematics']"
10481,1048100,Ternarian Weights,8,[]
10482,1048200,Goldbach’s Conjecture,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
10483,1048300,Shotcube,22,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
10484,1048400,Erratic Ants,9,"['graph theory', 'graph traversal']"
10485,1048500,Plotting Polynomials,14,"['combinatorics', 'mathematics']"
10486,1048600,Trapezoid Walkway,11,[]
10487,1048700,4 thought,8,"['backtracking', 'bruteforcing', 'implementation']"
10488,1048800,Biggest Slice,15,[]
10489,1048900,Even Up Solitaire,7,"['data structures', 'stack']"
10490,1049000,Island Buses,14,"['graph theory', 'graph traversal']"
10491,1049100,Quite a problem,4,"['parsing', 'string']"
10492,1049200,Multi-touch gesture classification,17,[]
10493,1049300,Stacking Curvy Blocks,15,[]
10494,1049400,Unicycle counting,6,[]
10495,1049500,Choosing Numbers,7,"['bruteforcing', 'euclidean algorithm', 'mathematics', 'number theory', 'sorting']"
10496,1049600,Loopy transit,10,[]
10497,1049700,Hitting the Targets,5,"['geometry', 'implementation']"
10498,1049800,Texas Summers,11,[]
10499,1049900,Out of context,22,[]
10500,1050000,Maze movement,15,[]
10501,1050100,Ragged Right,4,"['implementation', 'string']"
10502,1050200,Parades,23,"['bitmask', 'dynamic programming', 'tree']"
10503,1050300,Mountainous landscape,23,[]
10504,1050400,덧셈,13,"['bruteforcing', 'mathematics']"
10505,1050500,Wheels,15,"['depth-first search', 'graph theory', 'graph traversal', 'implementation']"
10506,1050600,Can’t stop playing,21,['dynamic programming']
10507,1050700,Vocabulary,19,['dynamic programming']
10508,1050800,Virus synthesis,0,[]
10509,1050900,Good morning!,8,"['bruteforcing', 'implementation']"
10510,1051000,Bricks,16,"['greedy', 'mathematics']"
10511,1051100,Pork barrel,22,[]
10512,1051200,The Imp,21,"['dynamic programming', 'greedy', 'sorting']"
10513,1051300,외계 침략자,22,"['dynamic programming', 'sorting']"
10514,1051400,A Walk Together,0,[]
10515,1051500,Refueling Stops,10,"['greedy', 'implementation', 'simulation']"
10516,1051600,Check Amount Validation,0,[]
10517,1051700,Radar Coverage,13,"['case work', 'geometry', 'minimum enclosing circle']"
10518,1051800,Around the Track,25,"['floyd–warshall', 'geometry', 'graph theory', 'line segment intersection check']"
10519,1051900,Biking Duck,21,"['geometry', 'implementation', 'ternary search']"
10520,1052000,Cent Savings,14,"['dynamic programming', 'prefix sum']"
10521,1052100,Digi Comp II,17,"['graph theory', 'topological sorting']"
10522,1052200,Euclidean TSP,12,['ternary search']
10523,1052300,직선 찾기,16,"['geometry', 'randomization']"
10524,1052400,Gathering,18,[]
10525,1052500,Hyacinth,16,"['depth-first search', 'graph theory', 'graph traversal', 'greedy', 'tree']"
10526,1052600,왜판원 순회,20,"['bidirectional search', 'bitmask', 'graph theory', 'meet in the middle']"
10527,1052700,Judging Troubles,7,"['data structures', 'set / map by hashing', 'implementation', 'sorting']"
10528,1052800,Knapsack Collection,19,"['implementation', 'simulation']"
10529,1052900,GREAT + SWERC = PORTO,11,"['backtracking', 'bruteforcing', 'mathematics', 'string']"
10530,1053000,Flowery Trails,14,"[""dijkstra's"", 'graph theory', 'graph traversal']"
10531,1053100,Golf Bot,20,"['fast fourier transform', 'mathematics']"
10532,1053200,Book Club,18,['bipartite matching']
10533,1053300,Ricochet Robots,18,"['breadth-first search', 'graph theory', 'graph traversal']"
10534,1053400,락페스티벌,20,"['data structures', 'disjoint set', 'sweeping']"
10535,1053500,Playing with Geometry,0,[]
10536,1053600,Money Transfers,0,[]
10537,1053700,The Safe Secret,19,"['bruteforcing', 'dynamic programming']"
10538,1053800,빅 픽쳐,20,"['aho-corasick', 'data structures', 'hashing', 'knuth–morris–pratt', 'string', 'tree', 'trie']"
10539,1053900,수빈이와 수열,4,"['arithmetic', 'mathematics']"
10540,1054000,KLOPKA,4,"['geometry', 'implementation']"
10541,1054100,싸리와 버드의 피라미드,15,"['implementation', 'mathematics', 'prefix sum']"
10542,1054200,마피아 게임,18,"['ad-hoc', 'depth-first search', 'graph theory', 'graph traversal']"
10543,1054300,ZABAVA,14,"['dynamic programming', 'mathematics']"
10544,1054400,KAMP,20,"['dynamic programming', 'dynamic programming on trees', 'tree']"
10545,1054500,뚜기뚜기메뚜기,5,"['implementation', 'string']"
10546,1054600,배부른 마라토너,7,"['data structures', 'set / map by hashing']"
10547,1054700,STUDENTSKO,12,['dynamic programming']
10548,1054800,BOB,18,"['combinatorics', 'data structures', 'dynamic programming', 'mathematics', 'stack']"
10549,1054900,ŠUMA,0,[]
10550,1055000,NORMA,24,[]
10551,1055100,STROJOPIS,4,"['implementation', 'string']"
10552,1055200,DOM,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
10553,1055300,SILUETA,9,"['implementation', 'sweeping']"
10554,1055400,COCI,19,[]
10555,1055500,STOGOVI,17,"['data structures', 'lowest common ancestor', 'stack', 'tree']"
10556,1055600,KAMIONI,22,"['binary search', 'square root decomposition']"
10557,1055700,Runes,9,"['parsing', 'string']"
10558,1055800,Alchemy,0,[]
10559,1055900,Containment,0,[]
10560,1056000,Function,0,[]
10561,1056100,언덕수,17,['dynamic programming']
10562,1056200,나이트,21,"['berlekamp–massey', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics']"
10563,1056300,정수 게임,16,"['dynamic programming', 'game theory']"
10564,1056400,팔굽혀펴기,14,['dynamic programming']
10565,1056500,Salary Inequity,19,"['data structures', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
10566,1056600,도장 도장,24,[]
10567,1056700,Towers,19,['backtracking']
10568,1056800,Wormholes,12,"['floyd–warshall', 'graph theory']"
10569,1056900,다면체,3,"['arithmetic', 'euler characteristic (χ=v-e+f)', 'geometry', 'mathematics']"
10570,1057000,Favorite Number,5,"['implementation', 'sorting']"
10571,1057100,다이아몬드,10,['dynamic programming']
10572,1057200,Gold Leaf,0,[]
10573,1057300,증가하는 수,12,['dynamic programming']
10574,1057400,Ranked Choice,0,[]
10575,1057500,Top 25,0,[]
10576,1057600,Wrench,0,[]
10589,1058900,마법의 체스판,12,"['ad-hoc', 'constructive', 'mathematics']"
10590,1059000,Burrito King,13,"['greedy', 'mathematics']"
10591,1059100,Cactus Generator,25,"['cactus', 'data structures', 'disjoint set', 'eulerian path / circuit', 'graph theory', 'implementation', 'parsing', 'string']"
10592,1059200,Damage Assessment,0,[]
10593,1059300,Epic Win!,18,"['ad-hoc', 'constructive']"
10594,1059400,Filter,7,"['bitmask', 'bit set', 'implementation']"
10595,1059500,Hidden Maze,0,[]
10596,1059600,Improvements,19,[]
10597,1059700,순열장난,10,['backtracking']
10598,1059800,Knockout Racing,5,"['implementation', 'mathematics']"
10599,1059900,페르시아의 왕들,3,"['arithmetic', 'implementation', 'mathematics']"
10600,1060000,Web Colors,5,[]
10601,1060100,Ideal Scoreboard,0,[]
10602,1060200,Elevators,0,[]
10603,1060300,Antennas,0,[]
10604,1060400,Working Hours,6,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
10605,1060500,드래곤 죽이기,17,"['graph theory', 'graph traversal', 'greedy']"
10606,1060600,Toll,0,[]
10607,1060700,Robot Race,0,[]
10608,1060800,Bus,0,[]
10609,1060900,Line Fiting,0,[]
10610,1061000,30,7,"['greedy', 'mathematics', 'number theory', 'sorting', 'string']"
10611,1061100,PŠENICA,11,[]
10612,1061200,PRIPREME,13,['greedy']
10613,1061300,MRAVI,13,"['breadth-first search', 'binary search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
10614,1061400,SABOR,0,[]
10615,1061500,STANOVI,22,[]
10616,1061600,Bulletproof Car Testing,0,[]
10617,1061700,Magnetos,0,[]
10618,1061800,Ambiguous Encodings,0,[]
10619,1061900,The One Dollar Gambler,0,[]
10620,1062000,Urdu orthography verification,0,[]
10621,1062100,Web Service Dependencies,0,[]
10622,1062200,A Population of Rabbits,0,[]
10623,1062300,Breadth-First Search by Foxpower,17,"['breadth-first search', 'graph theory', 'graph traversal', 'lowest common ancestor', 'tree']"
10624,1062400,Cube Coloring,13,['prefix sum']
10625,1062500,Decoding Ancient Messages,0,[]
10626,1062600,LR,16,"['bruteforcing', 'depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'greedy', 'parsing', 'recursion', 'string']"
10627,1062700,Parentheses,19,['greedy']
10628,1062800,Polygon Guards,0,[]
10629,1062900,Proportional Representation,26,[]
10630,1063000,RLE Replacement,15,"['bruteforcing', 'case work', 'implementation', 'string']"
10631,1063100,Tokyo Olympics Center,0,[]
10632,1063200,Unfair Game,21,"['case work', 'game theory', 'sprague–grundy theorem']"
10633,1063300,Everlasting Zero,14,"['breadth-first search', 'depth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
10634,1063400,Integer in Integer,0,[]
10635,1063500,Iyasugigappa,0,[]
10636,1063600,Medical Inspection,0,[]
10637,1063700,Minimum Spanning Tree,22,"['data structures', 'disjoint set', 'graph theory', 'heavy-light decomposition', 'lowest common ancestor', 'minimum spanning tree', 'segment tree', 'tree']"
10638,1063800,Point Distance,21,"['fast fourier transform', 'mathematics']"
10639,1063900,Revenge of Minimum Cost Flow,0,[]
10640,1064000,Rings,15,"['geometry', 'geometry; 3d']"
10641,1064100,The J-th Number,23,"['binary search', 'value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'parallel binary search', 'persistent segment tree', 'segment tree']"
10642,1064200,Tree Reconstruction,0,[]
10643,1064300,FUNGHI,4,"['bruteforcing', 'implementation']"
10644,1064400,ZMIJA,8,[]
10645,1064500,TRAKTOR,8,[]
10646,1064600,ZGODAN,15,[]
10647,1064700,JABUKE,16,"['binary search', 'implementation']"
10648,1064800,DIVLJAK,0,[]
10649,1064900,프리스비,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'greedy']"
10650,1065000,Marathon,18,"['data structures', 'segment tree']"
10651,1065100,Cow Jog,16,['longest increasing sequence in o(n log n)']
10652,1065200,Piggy Back,13,"['breadth-first search', 'graph theory', 'graph traversal']"
10653,1065300,마라톤 2,12,['dynamic programming']
10654,1065400,Cow Jog,10,"['data structures', 'implementation', 'stack']"
10655,1065500,마라톤 1,8,"['bruteforcing', 'geometry', 'implementation']"
10656,1065600,십자말풀이,7,"['implementation', 'sorting']"
10657,1065700,Cow Jog,6,"['data structures', 'stack']"
10658,1065800,Learning by Example,14,"['case work', 'mathematics', 'sorting', 'sweeping']"
10659,1065900,Dictionary,13,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'string', 'topological sorting']"
10660,1066000,Texas hold 'em,0,[]
10661,1066100,Median Tree,14,"['data structures', 'disjoint set', 'graph theory', 'minimum spanning tree']"
10662,1066200,Billiard,23,[]
10663,1066300,Stack Maze,21,['dynamic programming']
10664,1066400,Counting 1's,22,[]
10665,1066500,Ancient Commemorative Monolith,0,[]
10666,1066600,Magical Bridges,22,[]
10667,1066700,Hashigo Sama,26,[]
10668,1066800,Ancient Scrolls,21,[]
10669,1066900,Cow Rectangles,19,"['data structures', 'segment tree', 'sweeping']"
10670,1067000,Moovie Mooving,18,"['binary search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
10671,1067100,Grass Cownoisseur,20,"['dynamic programming', 'graph theory', 'strongly connected component', 'topological sorting']"
10672,1067200,Stampede,15,"['data structures', 'priority queue', 'sweeping', 'set / map by trees']"
10673,1067300,Cow Routing,14,"[""dijkstra's"", 'graph theory']"
10674,1067400,Meeting Time,13,['dynamic programming']
10675,1067500,Cow Routing,4,['implementation']
10676,1067600,Cow Routing II,10,"['implementation', 'meet in the middle']"
10677,1067700,It's All About the Base,11,"['binary search', 'mathematics', 'number theory']"
10678,1067800,Meeting Time,8,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'recursion', 'sorting']"
10679,1067900,Broken Audio Signal,11,"['case work', 'greedy']"
10680,1068000,Restore Calculation,13,"['dynamic programming', 'mathematics']"
10681,1068100,SIRO Challenge,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'floyd–warshall', 'graph theory']"
10682,1068200,Everlasting -One-,17,"['data structures', 'disjoint set', 'graph theory']"
10683,1068300,Putter,0,[]
10684,1068400,Shipura,0,[]
10685,1068500,Floating Islands,22,[]
10686,1068600,Venn Diagram,0,[]
10687,1068700,Overwriting Game,0,[]
10688,1068800,Magical Switches,0,[]
10689,1068900,Hamza,6,"['data structures', 'set / map by hashing', 'set / map by trees']"
10690,1069000,Compo,0,[]
10691,1069100,Fegla,0,[]
10692,1069200,Hamzawy,0,[]
10693,1069300,Abdelrahman,3,"['arithmetic', 'implementation', 'mathematics']"
10694,1069400,Fouad,0,[]
10695,1069500,Dalia,3,"['implementation', 'mathematics']"
10696,1069600,Prof. Ossama,7,"['arbitrary precision / big integers', 'mathematics']"
10697,1069700,Nicole,0,[]
10698,1069800,Ahmed Aly,3,"['arithmetic', 'implementation', 'mathematics']"
10699,1069900,오늘 날짜,1,['implementation']
10700,1070000,Arctic Polar Explorer,18,['sorting']
10701,1070100,PAPRIKA,5,"['implementation', 'simulation']"
10702,1070200,NIKO,10,"['ad-hoc', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
10703,1070300,유성,9,['implementation']
10704,1070400,KRATKI,15,"['ad-hoc', 'constructive', 'mathematics']"
10705,1070500,NEO,19,"['data structures', 'stack']"
10706,1070600,WTF,0,[]
10707,1070700,수도요금,3,"['arithmetic', 'mathematics']"
10708,1070800,크리스마스 파티,4,['implementation']
10709,1070900,기상캐스터,6,"['implementation', 'simulation']"
10710,1071000,실크로드,11,['dynamic programming']
10711,1071100,모래성,14,"['breadth-first search', 'graph theory', 'graph traversal']"
10712,1071200,財宝,17,"['data structures', 'deque', 'meet in the middle', 'sorting', 'two-pointer']"
10713,1071300,기차 여행,11,['prefix sum']
10714,1071400,케이크 자르기 2,14,['dynamic programming']
10715,1071500,JOI 공원,15,"[""dijkstra's"", 'graph theory', 'greedy']"
10716,1071600,코딩 대회,23,"['binary search', 'dynamic programming', 'dynamic programming on trees', 'parametric search', 'tree']"
10717,1071700,성벽,21,"['data structures', 'segment tree']"
10718,1071800,We love kriii,1,['implementation']
10719,1071900,Baekjoon Database Management System,12,['dynamic programming']
10720,1072000,Revenge of the ants 1,21,"['mathematics', 'prefix sum']"
10721,1072100,Revenge of the ants 2,23,"['knuth–morris–pratt', 'mathematics', 'string']"
10722,1072200,Binary Mobile Tree,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
10723,1072300,판게아 1,13,"['graph theory', 'minimum spanning tree']"
10724,1072400,판게아 2,26,"['divide and conquer', 'graph theory', 'link/cut tree', 'minimum spanning tree', 'tree']"
10725,1072500,빛의 왕과 거울의 미로 1,13,"['bruteforcing', 'implementation']"
10726,1072600,빛의 왕과 거울의 미로 2,25,"['dynamic programming', 'dynamic programming using connection profile']"
10727,1072700,룩과 구슬,25,"['circulation', 'maximum flow', 'minimum cost maximum flow']"
10728,1072800,XOR삼형제 1,10,"['ad-hoc', 'bitmask', 'bruteforcing', 'constructive']"
10729,1072900,업적의 노예 1,17,"['combinatorics', 'dynamic programming', 'mathematics', 'number theory', 'sliding window']"
10730,1073000,업적의 노예 2,21,"['exponentiation by squaring', 'kitamasa', 'mathematics']"
10731,1073100,업적의 노예 3,14,"['combinatorics', 'dynamic programming', 'mathematics']"
10732,1073200,소방차게임,0,[]
10733,1073300,\(I\)교신자 1,9,"['bruteforcing', 'data structures', 'stack']"
10734,1073400,\(I\)교신자 2,25,"['combinatorics', 'dynamic programming', 'mathematics']"
10735,1073500,\(I\)교신자 3,26,"['combinatorics', 'dynamic programming', 'mathematics']"
10736,1073600,XOR삼형제 2,15,"['ad-hoc', 'constructive']"
10737,1073700,It has the same Suffix Array,20,"['string', 'suffix array and lcp array']"
10738,1073800,TETA,6,['implementation']
10739,1073900,KRIZA,10,[]
10740,1074000,ACM,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
10741,1074100,JANJE,19,[]
10742,1074200,PROSJEK,16,"['binary search', 'parametric search', 'prefix sum']"
10743,1074300,POLICE,0,[]
10744,1074400,Cow Hopscotch,22,"['data structures', 'dynamic programming', 'segment tree']"
10745,1074500,Censoring,22,"['aho-corasick', 'data structures', 'dynamic programming', 'stack', 'string', 'tree', 'trie']"
10746,1074600,Fencing the Herd,23,"['binary search', 'convex hull', 'geometry', 'square root decomposition']"
10747,1074700,Censoring,18,"['knuth–morris–pratt', 'string']"
10748,1074800,Cow Hopscotch,10,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
10749,1074900,Superbull,14,"['graph theory', 'minimum spanning tree']"
10750,1075000,Censoring,11,"['data structures', 'stack', 'string']"
10751,1075100,COW,8,"['combinatorics', 'mathematics', 'prefix sum']"
10752,1075200,Cow Hopscotch,9,"['bruteforcing', 'dynamic programming']"
10753,1075300,ČVENK,22,"['greedy', 'tree']"
10754,1075400,KOVANICE,15,[]
10755,1075500,컴퓨터실,23,[]
10756,1075600,편식,22,"['binary search', 'convex hull', 'geometry', 'parametric search', 'two-pointer']"
10757,1075700,큰 수 A+B,1,"['implementation', 'arbitrary precision / big integers', 'arithmetic', 'mathematics']"
10759,1075900,팰린드롬 경로 3,18,['dynamic programming']
10760,1076000,Trapped in the Haybales,20,"['data structures', 'sweeping', 'set / map by trees']"
10761,1076100,Bessie Goes Moo,12,"['bruteforcing', 'mathematics']"
10762,1076200,Trapped in the Haybales,16,['two-pointer']
10763,1076300,Bessie's Birthday Buffet,15,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
10764,1076400,Moocryption,6,['bruteforcing']
10765,1076500,Bessie Gets Even,7,"['combinatorics', 'mathematics']"
10766,1076600,Trapped in the Haybales,8,"['bruteforcing', 'implementation', 'simulation', 'two-pointer']"
10767,1076700,Palindromic Paths,12,"['backtracking', 'bruteforcing', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'meet in the middle', 'string']"
10768,1076800,특별한 날,2,['implementation']
10769,1076900,행복한지 슬픈지,5,"['parsing', 'string']"
10770,1077000,Rövarspråket,6,"['implementation', 'string']"
10771,1077100,Wait Time,8,"['data structures', 'implementation', 'simulation', 'set / map by trees']"
10772,1077200,π-day,11,['dynamic programming']
10773,1077300,제로,7,"['data structures', 'implementation', 'stack']"
10774,1077400,저지,7,"['greedy', 'implementation']"
10775,1077500,공항,14,"['data structures', 'disjoint set', 'greedy']"
10776,1077600,제국,15,"[""dijkstra's"", 'graph theory']"
10777,1077700,허니버터칩,18,['dynamic programming']
10778,1077800,Bowling,0,[]
10779,1077900,Editor,22,[]
10780,1078000,Network,19,[]
10781,1078100,File Paths,0,[]
10782,1078200,Hacker,19,"['data structures', 'deque', 'greedy', 'prefix sum', 'segment tree']"
10783,1078300,Tug of War,0,[]
10784,1078400,Amalgamated Artichokes,5,[]
10785,1078500,Asteroids,25,"['convex hull', 'geometry', 'line segment intersection check', 'point in convex polygon check', 'ternary search']"
10786,1078600,Catering,19,"['maximum flow', 'minimum cost maximum flow']"
10787,1078700,Cutting Cheese,17,"['binary search', 'calculus', 'geometry', 'geometry; 3d', 'mathematics']"
10788,1078800,Evolution in Parallel,23,"['dynamic programming', 'greedy', 'string']"
10789,1078900,가상 키보드 입력,18,"['breadth-first search', 'graph theory', 'graph traversal']"
10790,1079000,달리기,26,['mathematics']
10791,1079100,Qanat,22,['mathematics']
10792,1079200,Ship Traffic,16,"['mathematics', 'sorting']"
10793,1079300,Tile Cutting,21,"['data structures', 'fast fourier transform', 'mathematics', 'segment tree']"
10794,1079400,Tours,26,"['depth-first search', 'graph theory', 'graph traversal', 'randomization']"
10795,1079500,Window,0,[]
10796,1079600,Window Manager,23,['implementation']
10797,1079700,10부제,2,['implementation']
10798,1079800,세로읽기,5,"['implementation', 'string']"
10799,1079900,쇠막대기,9,"['data structures', 'stack']"
10800,1080000,컬러볼,13,"['implementation', 'prefix sum', 'sorting']"
10801,1080100,카드게임,4,['implementation']
10802,1080200,369 게임,20,"['dynamic programming', 'mathematics']"
10803,1080300,정사각형 만들기,18,"['dynamic programming', 'greedy']"
10804,1080400,카드 역배치,4,"['implementation', 'simulation']"
10805,1080500,L 모양의 종이 자르기,17,['dynamic programming']
10806,1080600,공중도시,22,"['articulation points and bridges', 'biconnected component', 'graph theory', 'tree']"
10807,1080700,개수 세기,1,['implementation']
10808,1080800,알파벳 개수,2,"['implementation', 'string']"
10809,1080900,알파벳 찾기,1,"['implementation', 'string']"
10810,1081000,공 넣기,4,"['implementation', 'simulation']"
10811,1081100,바구니 뒤집기,4,"['implementation', 'simulation']"
10812,1081200,바구니 순서 바꾸기,4,"['implementation', 'simulation']"
10813,1081300,공 바꾸기,4,"['implementation', 'simulation']"
10814,1081400,나이순 정렬,6,['sorting']
10815,1081500,숫자 카드,6,"['binary search', 'data structures', 'sorting']"
10816,1081600,숫자 카드 2,7,"['binary search', 'data structures', 'set / map by hashing', 'sorting']"
10817,1081700,세 수,3,"['implementation', 'sorting']"
10818,1081800,"최소, 최대",3,"['implementation', 'mathematics']"
10819,1081900,차이를 최대로,9,"['backtracking', 'bruteforcing']"
10820,1082000,문자열 분석,4,"['implementation', 'string']"
10821,1082100,정수의 개수,4,"['parsing', 'string']"
10822,1082200,더하기,4,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
10823,1082300,더하기 2,5,"['arithmetic', 'mathematics', 'parsing', 'string']"
10824,1082400,네 수,3,"['arithmetic', 'implementation', 'mathematics', 'string']"
10825,1082500,국영수,7,['sorting']
10826,1082600,피보나치 수 4,6,"['arbitrary precision / big integers', 'dynamic programming']"
10827,1082700,a^b,11,"['arbitrary precision / big integers', 'implementation']"
10828,1082800,스택,7,"['data structures', 'stack']"
10829,1082900,이진수 변환,4,['implementation']
10830,1083000,행렬 제곱,12,"['divide and conquer', 'exponentiation by squaring', 'linear algebra', 'mathematics']"
10831,1083100,오늘은 코딩하고 싶은 날,0,[]
10833,1083300,사과,3,"['arithmetic', 'mathematics']"
10834,1083400,벨트,4,"['arithmetic', 'implementation', 'mathematics']"
10835,1083500,카드게임,11,['dynamic programming']
10836,1083600,여왕벌,12,"['implementation', 'simulation']"
10837,1083700,동전 게임,8,"['ad-hoc', 'mathematics']"
10838,1083800,트리,15,"['lowest common ancestor', 'tree']"
10839,1083900,미술관,19,"['convex hull', 'geometry']"
10840,1084000,구간 성분,15,['hashing']
10841,1084100,매트,23,"['dynamic programming', 'sweeping']"
10842,1084200,여왕벌,26,"['divide and conquer', 'implementation']"
10843,1084300,가위 바위 보,0,[]
10844,1084400,쉬운 계단 수,10,['dynamic programming']
10845,1084500,큐,7,"['data structures', 'queue']"
10846,1084600,발리의 조각상,20,['dynamic programming']
10847,1084700,자카르타의 마천루,22,"[""dijkstra's"", 'graph theory']"
10848,1084800,팔렘방의 다리,23,"['data structures', 'greedy', 'priority queue', 'sorting']"
10849,1084900,A Journey to Greece,18,"['bitmask', ""dijkstra's"", 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'travelling salesman problem']"
10850,1085000,Bounty Hunter II,18,['bipartite matching']
10851,1085100,Cake,13,"['arbitrary precision / big integers', 'geometry', 'mathematics', 'parametric search', 'area of a polygon']"
10852,1085200,Carpets,14,['backtracking']
10853,1085300,Change of Scenery,15,"[""dijkstra's"", 'graph theory']"
10854,1085400,Divisions,21,"['mathematics', 'miller–rabin', 'number theory', 'pollard rho', 'primality test']"
10855,1085500,Extreme Sort,4,['implementation']
10856,1085600,Legacy Code,10,"['graph theory', 'graph traversal']"
10857,1085700,Milling machines,8,['implementation']
10858,1085800,Souvenirs,13,"['dynamic programming', 'knapsack']"
10859,1085900,뒤집어진 소수,9,"['implementation', 'mathematics', 'number theory', 'primality test']"
10860,1086000,Ruka,23,"['data structures', 'segment tree']"
10861,1086100,Žarulje,23,"['combinatorics', 'mathematics']"
10862,1086200,DOSTAVA,25,"['data structures', 'segment tree']"
10863,1086300,NAFTA,21,"['breadth-first search', 'depth-first search', 'divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'graph theory', 'graph traversal', 'prefix sum']"
10864,1086400,친구,4,['implementation']
10865,1086500,친구 친구,3,['implementation']
10866,1086600,덱,7,"['data structures', 'deque']"
10867,1086700,중복 빼고 정렬하기,6,['sorting']
10868,1086800,최솟값,15,"['segment tree', 'sparse table', 'data structures']"
10869,1086900,사칙연산,1,"['implementation', 'arithmetic', 'mathematics']"
10870,1087000,피보나치 수 5,4,"['implementation', 'mathematics']"
10871,1087100,X보다 작은 수,1,['implementation']
10872,1087200,팩토리얼,1,"['implementation', 'mathematics', 'combinatorics']"
10873,1087300,Interactive Interception,21,"['binary search', 'heuristics']"
10874,1087400,이교수님의 시험,4,['implementation']
10875,1087500,뱀,16,"['implementation', 'simulation']"
10876,1087600,사전 조사,0,[]
10877,1087700,Bulb,18,"['ad-hoc', 'graph theory', 'implementation']"
10878,1087800,How many binary sequences?,15,"['backtracking', 'bitmask', 'bruteforcing', 'recursion']"
10879,1087900,Speak your mind!,12,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
10880,1088000,내가 어디를 거쳐갔더라?,22,"['articulation points and bridges', 'biconnected component', 'graph theory']"
10881,1088100,프로도의 선물 포장,12,"['bruteforcing', 'implementation']"
10882,1088200,International meeting,7,"['arithmetic', 'implementation', 'mathematics']"
10883,1088300,분할,18,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation', 'set / map by trees']"
10884,1088400,The festival must go on,19,"['binary search', 'dynamic programming', 'dynamic programming on trees', 'greedy', 'tree']"
10885,1088500,수열의 장인,15,"['greedy', 'mathematics']"
10886,1088600,0 = not cute / 1 = cute,3,"['arithmetic', 'implementation', 'mathematics']"
10887,1088700,일도양단!,13,[]
10888,1088800,두 섬간의 이동,14,"['data structures', 'disjoint set', 'mathematics']"
10889,1088900,Ancient symbol,0,[]
10890,1089000,Block stacker,22,"['dynamic programming', 'knapsack']"
10891,1089100,Cactus? Not cactus?,18,"['articulation points and bridges', 'biconnected component', 'cactus', 'graph theory']"
10892,1089200,Divide into triangle,7,"['constructive', 'geometry', 'greedy']"
10893,1089300,Evaluation,22,[]
10894,1089400,Following Flow,18,"['dynamic programming', 'gaussian elimination', 'graph theory', 'linear algebra', 'mathematics']"
10895,1089500,Great Pow!,8,"['mathematics', 'number theory']"
10896,1089600,Hexagon travel,19,"['combinatorics', 'dynamic programming', 'mathematics', 'prefix sum']"
10897,1089700,Inherited disease,7,[]
10898,1089800,Jogging,19,['geometry']
10899,1089900,King of penalty,9,['greedy']
10900,1090000,Lonely mdic,25,"['calculus', 'boolean operations on geometric objects', 'geometry', ""green's theorem"", 'mathematics', 'sorting']"
10901,1090100,Make superpalindrome!,17,"['case work', 'divide and conquer', 'string']"
10902,1090200,Penalty calculation,3,"['arithmetic', 'implementation', 'mathematics']"
10903,1090300,Wall construction,16,"['convex hull', 'geometry']"
10905,1090500,Actual visible points,19,[]
10906,1090600,N-orthotope,10,[]
10907,1090700,On grid,18,[]
10908,1090800,Phibonacci,22,"['exponentiation by squaring', 'mathematics', 'number theory']"
10909,1090900,Quaternion inverse,19,"['exponentiation by squaring', 'mathematics', 'modular multiplicative inverse', 'number theory']"
10910,1091000,Random signals,26,['geometry']
10911,1091100,Solve another chuck,22,"['ad-hoc', 'constructive']"
10912,1091200,The last wizard,26,"['combinatorics', 'linearity of expectation', 'mathematics', 'probability theory']"
10913,1091300,Uniting,15,[]
10914,1091400,"Veni, vidi, vici",6,"['implementation', 'string']"
10915,1091500,Wiring,12,"['mathematics', 'number theory']"
10916,1091600,Xtreme gcd sum,22,"['mathematics', 'number theory']"
10917,1091700,Your life,10,"['breadth-first search', 'graph theory', 'graph traversal']"
10918,1091800,Zu,0,[]
10919,1091900,선물상자,18,"['dynamic programming', 'greedy']"
10920,1092000,Scales,21,"['backtracking', 'precomputation']"
10921,1092100,팀들,24,"['binary search', 'data structures', 'greedy', 'merge sort tree', 'persistent segment tree', 'segment tree', 'sorting', 'stack']"
10922,1092200,말,20,"['data structures', 'segment tree', 'set / map by trees']"
10923,1092300,정렬하기,16,"['ad-hoc', 'constructive', 'permutation cycle decomposition']"
10924,1092400,정렬하기 2,21,"['parametric search', 'permutation cycle decomposition']"
10925,1092500,Towns,26,"['ad-hoc', 'graph theory', 'boyer–moore majority vote', 'tree']"
10926,1092600,??!,1,['implementation']
10927,1092700,MD5,0,"['string', 'implementation']"
10928,1092800,SHA-1,0,"['string', 'implementation']"
10929,1092900,SHA-224,0,"['string', 'implementation']"
10930,1093000,SHA-256,0,"['string', 'implementation']"
10931,1093100,SHA-384,0,"['string', 'implementation']"
10932,1093200,SHA-512,0,"['string', 'implementation']"
10933,1093300,RIPEMD-160,0,"['string', 'implementation']"
10934,1093400,SHA,0,"['string', 'implementation']"
10935,1093500,BASE64 인코딩,0,"['string', 'implementation']"
10936,1093600,BASE64 디코딩,0,"['string', 'implementation']"
10937,1093700,두부 모판 자르기,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
10938,1093800,BASE32 인코딩,0,"['string', 'implementation']"
10939,1093900,BASE32 디코딩,0,"['string', 'implementation']"
10940,1094000,BASE16 인코딩,0,"['string', 'implementation']"
10941,1094100,BASE16 디코딩,0,"['string', 'implementation']"
10942,1094200,팰린드롬?,12,['dynamic programming']
10943,1094300,랜덤 게임~,0,[]
10944,1094400,랜덤 게임~~,0,[]
10945,1094500,랜덤 게임~~~,0,[]
10946,1094600,랜덤 게임~~~~,0,[]
10947,1094700,로또,0,[]
10948,1094800,Daily 로또,0,[]
10949,1094900,숫자 야구 5,0,[]
10950,1095000,A+B - 3,1,"['implementation', 'arithmetic', 'mathematics']"
10951,1095100,A+B - 4,1,"['implementation', 'arithmetic', 'mathematics']"
10952,1095200,A+B - 5,1,"['implementation', 'arithmetic', 'mathematics']"
10953,1095300,A+B - 6,3,"['arithmetic', 'mathematics', 'parsing', 'string']"
10954,1095400,테트리스 2,19,"['case work', 'dynamic programming']"
10955,1095500,Potemkin cycle,23,"['현 그래프', 'graph theory']"
10956,1095600,Calvinball championship,15,[]
10957,1095700,Pipes,21,"['articulation points and bridges', 'data structures', 'disjoint set', 'graph theory']"
10958,1095800,Ice Hockey World Championship,15,"['binary search', 'meet in the middle']"
10959,1095900,Nuclearia,22,"['case work', 'dynamic programming', 'implementation']"
10960,1096000,"Calvinball championship, again 1",6,"['bruteforcing', 'constructive', 'graph theory', 'precomputation']"
10961,1096100,School canteen,18,"['exponentiation by squaring', 'linear algebra', 'mathematics']"
10962,1096200,"Calvinball championship, again 2",10,"['backtracking', 'bruteforcing', 'constructive', 'graph theory', 'precomputation']"
10963,1096300,"Calvinball championship, again 3",11,"['backtracking', 'graph theory']"
10964,1096400,"Calvinball championship, again 4",12,"['backtracking', 'graph theory', 'graph traversal']"
10965,1096500,"Calvinball championship, again 5",12,"['ad-hoc', 'backtracking', 'constructive', 'graph theory']"
10966,1096600,"Calvinball championship, again 6",0,[]
10967,1096700,"Calvinball championship, again 7",0,[]
10968,1096800,"Calvinball championship, again 8",0,[]
10969,1096900,"Calvinball championship, again 9",0,[]
10970,1097000,"Calvinball championship, again 10",12,"['backtracking', 'breadth-first search', 'bipartite graph', 'depth-first search', 'graph theory', 'graph traversal']"
10971,1097100,외판원 순회 2,9,"['backtracking', 'bruteforcing', 'travelling salesman problem']"
10972,1097200,다음 순열,8,"['combinatorics', 'mathematics']"
10973,1097300,이전 순열,8,"['combinatorics', 'implementation', 'mathematics']"
10974,1097400,모든 순열,8,"['backtracking', 'bruteforcing']"
10975,1097500,데크 소트 2,11,"['greedy', 'implementation', 'sorting']"
10976,1097600,피난,17,['maximum flow']
10977,1097700,음식 조합 세기,16,[]
10978,1097800,기숙사 재배정,14,"['combinatorics', 'dynamic programming', 'mathematics']"
10979,1097900,가넷이나 버는게 낫지 않아요?,17,"['data structures', ""dijkstra's"", 'graph theory', 'priority queue']"
10980,1098000,SIMPLE ARITHMETICS,10,[]
10981,1098100,HEADING TO WORLD FINALS,7,['sorting']
10982,1098200,행운쿠키 제작소,16,"['dynamic programming', 'knapsack']"
10983,1098300,히기카드,18,[]
10984,1098400,내 학점을 구해줘,3,"['arithmetic', 'implementation', 'mathematics']"
10985,1098500,사냥꾼,13,"['geometry', 'mathematics']"
10986,1098600,나머지 합,13,"['mathematics', 'prefix sum']"
10987,1098700,모음의 개수,3,"['implementation', 'string']"
10988,1098800,팰린드롬인지 확인하기,4,"['implementation', 'string']"
10989,1098900,수 정렬하기 3,5,['sorting']
10990,1099000,별 찍기 - 15,3,['implementation']
10991,1099100,별 찍기 - 16,3,['implementation']
10992,1099200,별 찍기 - 17,3,['implementation']
10993,1099300,별 찍기 - 18,12,"['implementation', 'recursion']"
10994,1099400,별 찍기 - 19,7,"['implementation', 'recursion']"
10995,1099500,별 찍기 - 20,3,['implementation']
10996,1099600,별 찍기 - 21,4,['implementation']
10997,1099700,별 찍기 - 22,9,"['implementation', 'recursion']"
10998,1099800,A×B,1,"['implementation', 'arithmetic', 'mathematics']"
10999,1099900,구간 합 구하기 2,17,"['segment tree', 'segment tree with lazy propagation', 'data structures']"
11000,1100000,강의실 배정,11,"['data structures', 'greedy', 'priority queue', 'sorting']"
11001,1100100,김치,20,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming']"
11002,1100200,까마귀,27,['geometry']
11003,1100300,최솟값 찾기,15,"['data structures', 'deque', 'priority queue']"
11004,1100400,K번째 수,6,['sorting']
11005,1100500,진법 변환 2,5,"['implementation', 'mathematics']"
11006,1100600,남욱이의 닭장,3,"['arithmetic', 'mathematics']"
11007,1100700,Inverse Move-to-Front Transform,4,"['implementation', 'string']"
11008,1100800,복붙의 달인,6,"['implementation', 'string']"
11009,1100900,Drinks,8,"['mathematics', 'probability theory']"
11010,1101000,Explosive Materials,14,"['bipartite graph', 'dynamic programming', 'graph theory', 'graph traversal', 'knapsack']"
11011,1101100,Forged Answers,16,"['bruteforcing', 'greedy']"
11012,1101200,Egg,19,"['data structures', 'offline queries', 'persistent segment tree', 'segment tree', 'sweeping']"
11013,1101300,The Missing Permutation,0,[]
11014,1101400,컨닝 2,19,['bipartite matching']
11015,1101500,Spring 2005: Arriving at USC,6,"['implementation', 'string']"
11016,1101600,Fall 2005: Summer on the Beach,18,"['calculus', 'geometry', 'geometry; 3d', 'mathematics']"
11017,1101700,Spring 2006: Midterm Elections,10,"['case work', 'greedy']"
11018,1101800,Fall 2006: 100 Years of Engineering,4,['physics']
11019,1101900,Spring 2007: Final Exams,12,"['dynamic programming', 'knapsack']"
11020,1102000,Fall 2007: The Programming Contest Programming Contest,12,"['bruteforcing', 'geometry']"
11021,1102100,A+B - 7,1,"['implementation', 'arithmetic', 'mathematics']"
11022,1102200,A+B - 8,1,"['implementation', 'arithmetic', 'mathematics']"
11023,1102300,더하기 3,3,"['arithmetic', 'implementation', 'mathematics']"
11024,1102400,더하기 4,3,"['arithmetic', 'mathematics']"
11025,1102500,요세푸스 문제 3,16,"['dynamic programming', 'mathematics']"
11026,1102600,BIẾN ĐỔI CẶP SỐ,15,"['euclidean algorithm', 'mathematics', 'number theory']"
11027,1102700,교환,0,[]
11028,1102800,UỐN VUÔNG,18,"['mathematics', 'number theory']"
11029,1102900,ĐỘI MŨ,6,[]
11030,1103000,SUPER HATS,19,"['euler totient function', 'exponentiation by squaring', 'mathematics', 'number theory']"
11031,1103100,GIẢI THƯỞNG,11,"['arbitrary precision / big integers', 'dynamic programming']"
11032,1103200,ĐƯỜNG RỒNG,0,[]
11033,1103300,TÁO CHUỐI,0,[]
11034,1103400,캥거루 세마리2,3,"['greedy', 'mathematics']"
11035,1103500,SÀNG,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
11036,1103600,ĐẾM,0,[]
11037,1103700,중복 없는 수,12,"['backtracking', 'binary search', 'bruteforcing', 'sorting']"
11038,1103800,Entrance Examination,5,"['implementation', 'sorting']"
11039,1103900,Short Phrase,7,['implementation']
11040,1104000,ICPC Calculator,14,"['data structures', 'implementation', 'recursion', 'stack']"
11041,1104100,500-yen Saving,18,['dynamic programming']
11042,1104200,Deadlock Detection,0,[]
11043,1104300,Bridge Construction Planning,0,[]
11044,1104400,Complex Paper Folding,0,[]
11045,1104500,Development of Small Flying Robots,0,[]
11046,1104600,팰린드롬??,16,"[""manacher's"", 'string']"
11047,1104700,동전 0,7,['greedy']
11048,1104800,이동하기,9,['dynamic programming']
11049,1104900,행렬 곱셈 순서,13,['dynamic programming']
11050,1105000,이항 계수 1,5,"['combinatorics', 'implementation', 'mathematics']"
11051,1105100,이항 계수 2,8,"['combinatorics', 'dynamic programming', 'mathematics']"
11052,1105200,카드 구매하기,10,['dynamic programming']
11053,1105300,가장 긴 증가하는 부분 수열,9,['dynamic programming']
11054,1105400,가장 긴 바이토닉 부분 수열,12,['dynamic programming']
11055,1105500,가장 큰 증가 부분 수열,9,['dynamic programming']
11056,1105600,두 부분 문자열,12,['dynamic programming']
11057,1105700,오르막 수,10,['dynamic programming']
11058,1105800,크리보드,11,['dynamic programming']
11059,1105900,크리 문자열,5,"['bruteforcing', 'prefix sum']"
11060,1106000,점프 점프,9,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
11061,1106100,Awkward Group,19,"['data structures', 'disjoint set']"
11062,1106200,카드 게임,13,"['dynamic programming', 'game theory']"
11063,1106300,Consecutive Ordering,17,[]
11064,1106400,Diameter,23,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'parametric search', 'tree']"
11065,1106500,Grid Aliens,21,"['maximum flow', 'max-flow min-cut theorem']"
11066,1106600,파일 합치기,13,['dynamic programming']
11067,1106700,모노톤길,11,"['implementation', 'sorting']"
11068,1106800,회문인 수,6,"['bruteforcing', 'mathematics']"
11069,1106900,Particle,20,"['chinese remainder theorem', 'extended euclidean algorithm', 'mathematics', 'number theory']"
11070,1107000,피타고라스 기댓값,5,"['implementation', 'mathematics']"
11071,1107100,Shelob’s Lair,25,"['duality', 'geometry', 'graph theory', 'graph traversal', 'line segment intersection check']"
11072,1107200,Football,0,[]
11073,1107300,Folding Code,0,[]
11074,1107400,Painting Floors,0,[]
11075,1107500,Who Do You Think You Are?,24,"['implementation', 'tree']"
11076,1107600,Talking Money,13,"['case work', 'implementation', 'string']"
11077,1107700,Selling Numbers,0,[]
11078,1107800,Banking,4,['implementation']
11079,1107900,Diana and the Golden Apples,0,[]
11080,1108000,Almost an Anagram,7,"['case work', 'string']"
11081,1108100,Rings of Saturn,0,[]
11082,1108200,소수를 분수로,10,"['implementation', 'mathematics', 'parsing', 'string']"
11083,1108300,Resistance Is (Not) Futile!,0,[]
11084,1108400,나이트의 염탐,14,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
11085,1108500,군사 이동,13,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
11086,1108600,All about that base,7,['implementation']
11087,1108700,Bobby’s Bet,9,"['dynamic programming', 'mathematics', 'probability theory']"
11088,1108800,Cantina of Babel,14,"['graph theory', 'graph traversal']"
11089,1108900,Circuit Counting,13,"['dynamic programming', 'knapsack']"
11090,1109000,Cutting Brownies,19,['greedy']
11091,1109100,알파벳 전부 쓰기,4,"['implementation', 'string']"
11092,1109200,Safe Passage,16,"['bitmask', ""dijkstra's"", 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'greedy']"
11093,1109300,Secret Message,5,"['implementation', 'string']"
11094,1109400,꿍 가라사대,4,"['implementation', 'string']"
11095,1109500,Torn To Pieces,9,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing']"
11096,1109600,UnDetected,18,"['data structures', 'disjoint set', 'geometry']"
11097,1109700,도시 계획,18,"['floyd–warshall', 'graph theory', 'strongly connected component']"
11098,1109800,첼시를 도와줘!,4,"['implementation', 'string']"
11099,1109900,Virus,0,[]
11100,1110000,Frogger,15,[]
11101,1110100,꿍의 여친 만들기,8,"['data structures', 'set / map by hashing', 'parsing', 'string']"
11102,1110200,Party,18,['maximum flow']
11103,1110300,Save the computer!,0,[]
11104,1110400,Fridge of Your Dreams,4,"['implementation', 'mathematics']"
11105,1110500,Scorched Earth,0,[]
11106,1110600,Free Willy,0,[]
11107,1110700,Vampire,9,"['dynamic programming', 'mathematics', 'probability theory']"
11108,1110800,TV 전쟁,13,"['dynamic programming', 'greedy', 'sorting']"
11109,1110900,괴짜 교수,3,"['arithmetic', 'mathematics']"
11110,1111000,Tree of Pain,0,[]
11111,1111100,두부장수 장홍준 2,19,"['maximum flow', 'minimum cost maximum flow']"
11112,1111200,Eight puzzle,15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
11113,1111300,The Traveling Orienteerer,4,"['geometry', 'implementation', 'mathematics', 'pythagoras theorem']"
11114,1111400,Paper,0,[]
11115,1111500,The Still Embarrassed Cryptographer,11,"['mathematics', 'number theory', 'string']"
11116,1111600,교통량,6,['bruteforcing']
11117,1111700,Letter Cookies,4,"['implementation', 'string']"
11118,1111800,Bicycle puzzle,15,"['combinatorics', 'dynamic programming', 'mathematics']"
11119,1111900,Geometry Darts,12,['geometry']
11120,1112000,Box Betting,13,"['binary search', 'mathematics', 'probability theory']"
11121,1112100,Communication Channels,2,"['implementation', 'string']"
11122,1112200,Train Tickets,21,"['maximum flow', 'minimum cost maximum flow']"
11123,1112300,양 한마리... 양 두마리...,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
11124,1112400,Rubiks Cube,0,[]
11125,1112500,Marble Madness,7,['mathematics']
11126,1112600,Robberies,0,[]
11127,1112700,Robotic Encryption,0,[]
11128,1112800,Guarding the Border,0,[]
11129,1112900,Beehive Epidemic,0,[]
11130,1113000,Mobile Gaming,0,[]
11131,1113100,Balancing Weights,3,"['arithmetic', 'implementation', 'mathematics']"
11132,1113200,Ambulance Antics,0,[]
11133,1113300,Nurikabe,11,[]
11134,1113400,쿠키애호가,3,"['arithmetic', 'mathematics']"
11135,1113500,Typing monkey,15,"['implementation', 'string']"
11136,1113600,The Diligent Cryptographer,0,[]
11137,1113700,Combat Odds,10,"['dynamic programming', 'mathematics']"
11138,1113800,Soundex,0,[]
11139,1113900,Sheep Frenzy,0,[]
11140,1114000,LOL,8,"['case work', 'implementation', 'string']"
11141,1114100,Treasure Hunt,0,[]
11142,1114200,Cross Country Race,7,['mathematics']
11143,1114300,Beads,15,"['data structures', 'segment tree']"
11144,1114400,Sleeping at Work,12,['dynamic programming']
11145,1114500,Is it a Number?,4,"['arbitrary precision / big integers', 'parsing', 'string']"
11146,1114600,Proud Penguin,0,[]
11147,1114700,Travelling Tom,12,"['floyd–warshall', 'graph theory']"
11148,1114800,Boss Rush,20,['bipartite matching']
11149,1114900,Decode the Message,5,"['implementation', 'string']"
11150,1115000,Troublesome Tools,0,[]
11151,1115100,Civilization,8,"['bitmask', 'bruteforcing']"
11152,1115200,Inverse Divisor Sums,14,"['backtracking', 'mathematics', 'number theory', 'sorting']"
11153,1115300,Longest Common Path,16,"[""dijkstra's"", 'graph theory']"
11154,1115400,Birthday Party,8,"['combinatorics', 'graph theory', 'mathematics', 'probability theory']"
11155,1115500,Holey Road,0,[]
11156,1115600,Candy Store,0,[]
11157,1115700,Rotating Penguin Maze,0,[]
11158,1115800,Angry Grammar Nazi,4,['string']
11159,1115900,Neurotic Network,11,"['dynamic programming', 'dynamic programming on trees', 'tree']"
11160,1116000,Special Services,0,[]
11161,1116100,Negative People in Da House,3,"['arithmetic', 'implementation', 'mathematics']"
11162,1116200,Ruben Spawns,0,[]
11163,1116300,Kings on a Chessboard,21,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
11164,1116400,Traveling Cellsperson,5,[]
11165,1116500,Dimensions,0,[]
11166,1116600,Space Travel,0,[]
11167,1116700,C.S.I.: P15,0,[]
11168,1116800,Abandon Ship,9,"['data structures', 'set / map by hashing', 'implementation', 'simulation']"
11169,1116900,Battle Sheep,0,[]
11170,1117000,0의 개수,5,"['bruteforcing', 'implementation', 'mathematics']"
11171,1117100,Dad’s Card Trick,14,['ad-hoc']
11172,1117200,Election,6,"['bruteforcing', 'implementation']"
11173,1117300,Fired,0,[]
11174,1117400,GG NO RE OMG CHEATZ,0,[]
11175,1117500,Herding Sheep,0,[]
11176,1117600,In the Shower,3,['implementation']
11177,1117700,Join My Team,26,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'stable marriage problem']"
11178,1117800,Krusty’s Burger,0,[]
11179,1117900,2진수 뒤집기,4,"['implementation', 'mathematics', 'string']"
11180,1118000,Paintball,17,['bipartite matching']
11181,1118100,Base-2 Palindromes,11,"['combinatorics', 'mathematics', 'precomputation']"
11182,1118200,Kindergarten Excursion,10,['sweeping']
11183,1118300,Coast Length,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
11184,1118400,Icons in the Toolbar,8,[]
11185,1118500,Getting Rid of Coins,11,['greedy']
11186,1118600,Spam Filter,0,[]
11187,1118700,Birds on a Wire,7,"['case work', 'greedy', 'mathematics', 'sorting']"
11188,1118800,Lifting Walls,9,"['bruteforcing', 'geometry']"
11189,1118900,Toilet Seat,5,['implementation']
11190,1119000,Pub-lic Good,10,"['breadth-first search', 'graph theory', 'graph traversal']"
11191,1119100,Xor Maximization,18,"['gaussian elimination', 'linear algebra', 'mathematics']"
11192,1119200,Restaurant Orders,14,['dynamic programming']
11193,1119300,Three Digits,11,['mathematics']
11194,1119400,Car Game,11,['string']
11195,1119500,Peragrams,4,"['ad-hoc', 'string']"
11196,1119600,Vacuum Tubes,11,[]
11197,1119700,Chicken Joggers,14,[]
11198,1119800,Hogwarts,0,[]
11199,1119900,Bank Queue,12,"['data structures', 'greedy', 'priority queue']"
11200,1120000,Forest Highway,0,[]
11201,1120100,FreeCell,0,[]
11202,1120200,Flag Quiz,8,['string']
11203,1120300,Numbers On a Tree,6,"['mathematics', 'tree']"
11204,1120400,Absurdistan Roads II,0,[]
11205,1120500,Cow Crane,10,['ad-hoc']
11206,1120600,Tomosynthesis,0,[]
11207,1120700,Pizza Problems,0,[]
11208,1120800,Falling Mugs,0,[]
11209,1120900,Intercept,0,[]
11210,1121000,Radar,0,[]
11211,1121100,Count von Walken’s Fence,11,['mathematics']
11212,1121200,Proteins,0,[]
11213,1121300,Black Friday,3,['implementation']
11214,1121400,Absurdistan Roads III,13,"['data structures', 'graph theory', 'topological sorting', 'set / map by trees']"
11215,1121500,Xortris,0,[]
11216,1121600,Shibuya Crossing,18,"['dynamic programming', 'graph theory', 'topological sorting']"
11217,1121700,Spock,21,"['bruteforcing', 'greedy']"
11218,1121800,A1 Paper,9,"['ad-hoc', 'geometry', 'mathematics']"
11219,1121900,Odd Binomial Coefficients,18,"['combinatorics', 'divide and conquer', 'mathematics']"
11220,1122000,The Addition Game,0,[]
11221,1122100,Area of Effect,0,[]
11222,1122200,Canyon Mapping,0,[]
11223,1122300,Magic Checkerboard,18,[]
11224,1122400,Extensive Or,0,[]
11225,1122500,Primal Partitions,0,[]
11226,1122600,Sand Art,0,[]
11227,1122700,String Stretching,0,[]
11228,1122800,Vending Machine,0,[]
11229,1122900,Rainbow Zamboni,0,[]
11230,1123000,Zig Zag Nametag,0,[]
11231,1123100,Word Ladder,0,[]
11232,1123200,Shuffles,11,['mathematics']
11233,1123300,Stained Carpet,0,[]
11234,1123400,Marble Madness,0,[]
11235,1123500,Polling,6,"['data structures', 'set / map by hashing', 'sorting', 'string', 'set / map by trees']"
11236,1123600,Carrot,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
11237,1123700,Exam,0,[]
11238,1123800,Fibo,15,"['exponentiation by squaring', 'mathematics']"
11239,1123900,FindWords,18,"['data structures', 'hashing', 'string', 'tree', 'trie']"
11240,1124000,Flower,14,"['data structures', 'disjoint set', 'greedy']"
11241,1124100,Hive,0,[]
11242,1124200,Lineage,0,[]
11243,1124300,OPS,10,[]
11244,1124400,Pink,12,"['data structures', 'set / map by hashing', 'string']"
11245,1124500,Song,13,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
11246,1124600,VeryEasy,0,[]
11247,1124700,Atomic Computer,0,[]
11248,1124800,Bond Tour,0,[]
11249,1124900,Chasing,0,[]
11250,1125000,Design A Tree,0,[]
11251,1125100,Romance of The Three Kingdom,0,[]
11252,1125200,Finding something,0,[]
11253,1125300,Goods Market,0,[]
11254,1125400,Hydraulic Arm,7,"['data structures', 'stack']"
11255,1125500,ITAI Virus,8,"['graph theory', 'implementation']"
11256,1125600,사탕,6,"['greedy', 'sorting']"
11257,1125700,IT Passport Examination,2,"['arithmetic', 'implementation', 'mathematics']"
11258,1125800,Thai Lottery Checking,3,"['arithmetic', 'implementation', 'mathematics', 'string']"
11259,1125900,Travel of alphabets,9,"['breadth-first search', 'bruteforcing', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'sorting']"
11260,1126000,Cell Counting,6,['implementation']
11261,1126100,Hunger Games,11,"['dynamic programming', 'knapsack']"
11262,1126200,Minions’ Master,3,"['arbitrary precision / big integers', 'arithmetic', 'implementation', 'mathematics']"
11263,1126300,PIN Code Possibilities,8,['bruteforcing']
11264,1126400,Logical Functions: AND-OR,4,"['implementation', 'simulation']"
11265,1126500,끝나지 않는 파티,11,"['floyd–warshall', 'graph theory']"
11266,1126600,단절점,17,"['articulation points and bridges', 'graph theory']"
11267,1126700,Adjoin the Networks,14,[]
11268,1126800,Bell Ringing,18,[]
11269,1126900,Cryptographer’s Conundrum,4,"['implementation', 'string']"
11270,1127000,Disastrous Downtime,7,[]
11271,1127100,Entertainment Box,10,"['data structures', 'greedy', 'set / map by trees']"
11272,1127200,Floppy Music,0,[]
11273,1127300,Goblin Garden Guards,15,['data structures']
11274,1127400,Hero Power,0,[]
11275,1127500,iCar,0,[]
11276,1127600,Just a Quiz,0,[]
11277,1127700,2-SAT - 1,10,"['backtracking', 'bruteforcing']"
11278,1127800,2-SAT - 2,10,['bruteforcing']
11279,1127900,최대 힙,9,"['data structures', 'priority queue']"
11280,1128000,2-SAT - 3,17,"['2-sat', 'graph theory', 'strongly connected component']"
11281,1128100,2-SAT - 4,18,"['2-sat', 'graph theory', 'strongly connected component']"
11282,1128200,한글,2,['implementation']
11283,1128300,한글 2,2,"['implementation', 'parsing', 'string', 'utf-8 inputs']"
11284,1128400,초성 중성 종성,4,"['parsing', 'string', 'utf-8 inputs']"
11285,1128500,초성 중성 종성 2,5,[]
11286,1128600,절댓값 힙,10,"['data structures', 'priority queue']"
11287,1128700,Margaret’s Minute Minute Manipulation,5,"['arithmetic', 'implementation', 'mathematics']"
11288,1128800,Ethel’s Encryption,5,"['implementation', 'mathematics', 'string']"
11289,1128900,Boolean Postfix,7,[]
11290,1129000,Wonowon,5,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
11291,1129100,Alicia’s Afternoon Amble,15,[]
11292,1129200,키 큰 사람,6,"['implementation', 'sorting']"
11293,1129300,Password,5,"['implementation', 'string']"
11294,1129400,Numbers,5,[]
11295,1129500,Exercising,3,"['arithmetic', 'implementation', 'mathematics']"
11296,1129600,가격,4,"['arithmetic', 'implementation', 'mathematics']"
11297,1129700,Cypher,4,"['implementation', 'simulation', 'string']"
11298,1129800,Graphs,6,['implementation']
11299,1129900,Contest,9,['sorting']
11300,1130000,Black Jack,0,[]
11301,1130100,Markleft,0,[]
11302,1130200,Koch,0,[]
11303,1130300,Frogs With Styles,0,[]
11304,1130400,SV Filters,0,[]
11305,1130500,Depacting,0,[]
11306,1130600,Mobile,0,[]
11307,1130700,String Game,15,"['game theory', 'string']"
11308,1130800,One-Way Roads,18,"['articulation points and bridges', 'graph theory']"
11309,1130900,파워!!달걀,16,['dynamic programming']
11310,1131000,Landlocked,12,"['0-1 bfs', 'breadth-first search', 'depth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
11311,1131100,Jug Hard,12,"['euclidean algorithm', 'extended euclidean algorithm', 'mathematics', 'number theory']"
11312,1131200,삼각 무늬 - 2,3,"['arithmetic', 'mathematics']"
11313,1131300,Best Buddies,9,"['data structures', 'set / map by hashing', 'sorting', 'set / map by trees']"
11314,1131400,Do Not Hex My Numbers!,0,[]
11315,1131500,Serves Me Right,0,[]
11316,1131600,Train of Threes,0,[]
11317,1131700,Roots! Really?,6,['mathematics']
11318,1131800,Dyeing Dice,0,[]
11319,1131900,Count Me In,4,"['implementation', 'string']"
11320,1132000,삼각 무늬 - 1,3,"['arithmetic', 'mathematics']"
11321,1132100,Addition Affliction,5,"['bruteforcing', 'implementation', 'parsing', 'string']"
11322,1132200,Numbers are Easy,6,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
11323,1132300,Solitaire,4,['implementation']
11324,1132400,Drawing,12,"['eulerian path / circuit', 'graph theory', 'graph traversal']"
11325,1132500,Batman Begins,0,[]
11326,1132600,Coverity Crossword,0,[]
11327,1132700,Polynomial Boundaries,5,"['implementation', 'mathematics']"
11328,1132800,Strfry,4,"['implementation', 'string']"
11329,1132900,Horn-Blowing,0,[]
11330,1133000,Implication,0,[]
11331,1133100,Bitcoin Profits,10,"['data structures', 'sorting', 'stack']"
11332,1133200,시간초과,8,"['case work', 'implementation']"
11333,1133300,4×n 타일링,14,['dynamic programming']
11334,1133400,Coin Turning Game,13,[]
11335,1133500,Solitaire,0,[]
11336,1133600,Matrix,0,[]
11337,1133700,Largest inscribed rectangle,5,"['geometry', 'mathematics']"
11338,1133800,XOR Sum,12,"['data structures', 'priority queue']"
11339,1133900,There is no place like 127.0.0.1,11,"['binary search', 'string']"
11340,1134000,Making the Grade?,4,"['bruteforcing', 'mathematics']"
11341,1134100,Eakspay igpay atinlay?,9,[]
11342,1134200,Frame by Frame,9,['implementation']
11343,1134300,Crushing Confections,5,['implementation']
11344,1134400,Waiting for Change,7,"['data structures', 'implementation', 'queue', 'simulation']"
11345,1134500,Cornell Party,7,"['data structures', 'set / map by hashing']"
11346,1134600,Cornell Party - Retry,6,"['data structures', 'set / map by hashing', 'sorting', 'string']"
11365,1136500,!밀비 급일,2,"['implementation', 'string']"
11366,1136600,"Tons of Orcs, no Fibbin’",8,"['exponentiation by squaring', 'implementation', 'mathematics']"
11367,1136700,Report Card Time,3,"['implementation', 'string']"
11368,1136800,A Serious Reading Problem,3,"['arithmetic', 'combinatorics', 'mathematics']"
11369,1136900,Safe Zone,0,[]
11370,1137000,Spawn of Ungoliant,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
11371,1137100,The Big Eye in the Sky,6,"['geometry', 'mathematics']"
11372,1137200,Gimli’s Gullet,0,[]
11373,1137300,Tools of the Trade,18,"['maximum flow', 'minimum cost maximum flow']"
11374,1137400,The Magic Word,0,[]
11375,1137500,열혈강호,17,['bipartite matching']
11376,1137600,열혈강호 2,17,['bipartite matching']
11377,1137700,열혈강호 3,18,"['bipartite matching', 'maximum flow']"
11378,1137800,열혈강호 4,18,"['bipartite matching', 'maximum flow']"
11379,1137900,Avoider,19,"['dynamic programming', 'precomputation']"
11380,1138000,Hole in the Wall,0,[]
11381,1138100,Sequences,0,[]
11382,1138200,꼬마 정민,1,"['implementation', 'arithmetic', 'mathematics']"
11383,1138300,뚊,5,"['implementation', 'string']"
11384,1138400,빨간 직사각형,22,[]
11385,1138500,씽크스몰,22,"['chinese remainder theorem', 'fast fourier transform', 'mathematics', 'number theory']"
11386,1138600,괄호 문자열,0,[]
11387,1138700,님 무기가 좀 나쁘시네여,8,"['implementation', 'mathematics']"
11388,1138800,달리는 게임,17,"['convex hull trick', 'dynamic programming', 'greedy', 'mathematics']"
11389,1138900,로봇 심판의 님 게임,0,[]
11390,1139000,맛있는 과자,14,"['combinatorics', 'dynamic programming', 'geometry', 'mathematics']"
11391,1139100,분배,13,[]
11392,1139200,색종이,29,"['calculus', 'case work', 'geometry', 'implementation', 'mathematics']"
11393,1139300,접미사 배열의 개수,0,[]
11394,1139400,최적의 능력 구성,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
11395,1139500,쿼터너리 컴퓨터,24,"['case work', 'mathematics']"
11396,1139600,통로 위의 개미,0,[]
11397,1139700,피보나미얼,23,"['mathematics', 'number theory']"
11398,1139800,흑백 이미지 찾기,25,"['fast fourier transform', 'hashing', 'mathematics']"
11399,1139900,ATM,7,"['greedy', 'sorting']"
11400,1140000,단절선,17,"['articulation points and bridges', 'depth-first search', 'graph theory', 'graph traversal']"
11401,1140100,이항 계수 3,15,"['combinatorics', 'exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'modular multiplicative inverse', 'number theory']"
11402,1140200,이항 계수 4,16,"['combinatorics', 'dynamic programming', 'lucas theorem', 'mathematics', 'number theory']"
11403,1140300,경로 찾기,10,"['floyd–warshall', 'graph theory', 'graph traversal']"
11404,1140400,플로이드,12,"['floyd–warshall', 'graph theory']"
11405,1140500,책 구매하기,18,"['maximum flow', 'minimum cost maximum flow']"
11406,1140600,책 구매하기 2,17,"['bipartite matching', 'maximum flow']"
11407,1140700,책 구매하기 3,18,"['maximum flow', 'minimum cost maximum flow']"
11408,1140800,열혈강호 5,18,"['maximum flow', 'minimum cost maximum flow']"
11409,1140900,열혈강호 6,18,"['maximum flow', 'minimum cost maximum flow']"
11410,1141000,칙칙폭폭,21,"['maximum flow', 'minimum cost maximum flow']"
11411,1141100,Equivalence,0,[]
11412,1141200,Tree of Almost Clean Money,0,[]
11413,1141300,Primes,0,[]
11414,1141400,LCM,15,"['euclidean algorithm', 'mathematics', 'number theory']"
11415,1141500,Taxies,0,[]
11416,1141600,Irrational Roots,8,['mathematics']
11417,1141700,Race,0,[]
11418,1141800,Railway Tickets,0,[]
11419,1141900,Olympic Parade,7,"['bitmask', 'sweeping']"
11420,1142000,Word by mouth,0,[]
11421,1142100,Dr Who’s Banquet,0,[]
11422,1142200,Bitris,17,"['data structures', 'mathematics', 'segment tree']"
11423,1142300,Primes,9,"['binary search', 'mathematics', 'number theory', 'prefix sum', 'primality test', 'sieve of eratosthenes']"
11424,1142400,Longest Prefix Match,0,[]
11425,1142500,Stripe,0,[]
11426,1142600,Maximal Number of Divisors,0,[]
11427,1142700,Miraculous Drug,0,[]
11428,1142800,Softville,0,[]
11429,1142900,Tree,0,[]
11430,1143000,VAN DINSKY,0,[]
11431,1143100,"Mr. Gorbachev, Tear Down This Wall!",4,['implementation']
11432,1143200,Candy Bombers,17,['bipartite matching']
11433,1143300,Currency Conversion,0,[]
11434,1143400,Ampelmännchen,3,"['arithmetic', 'greedy', 'mathematics']"
11435,1143500,Population Migration,0,[]
11436,1143600,Television Reception,0,[]
11437,1143700,LCA,13,"['lowest common ancestor', 'tree']"
11438,1143800,LCA 2,16,"['data structures', 'lowest common ancestor', 'sparse table', 'tree']"
11439,1143900,이항 계수 5,17,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
11440,1144000,피보나치 수의 제곱의 합,16,"['exponentiation by squaring', 'mathematics']"
11441,1144100,합 구하기,8,['prefix sum']
11442,1144200,홀수번째 피보나치 수의 합,14,"['exponentiation by squaring', 'mathematics']"
11443,1144300,짝수번째 피보나치 수의 합,14,"['exponentiation by squaring', 'mathematics']"
11444,1144400,피보나치 수 6,14,"['exponentiation by squaring', 'mathematics']"
11445,1144500,Cheating Knight,13,[]
11446,1144600,Chess Tournament,17,['knapsack']
11447,1144700,Colby’s Costly Collectibles,14,"['geometry', 'implementation', 'area of a polygon', 'simulation']"
11448,1144800,Ga,8,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
11449,1144900,Icelandic Motorclubs,13,['two-pointer']
11450,1145000,Manhattan Power Failure,0,[]
11451,1145100,팩맨,13,"['breadth-first search', 'graph theory', 'graph traversal']"
11452,1145200,Risk,19,"['dynamic programming', 'mathematics', 'probability theory']"
11453,1145300,Rummikub,5,['implementation']
11454,1145400,Song Titles,0,[]
11455,1145500,Tanks,0,[]
11456,1145600,Chasing the Cheetahs,0,[]
11457,1145700,Falcon Dive,0,[]
11458,1145800,The Fox and the Owl,0,[]
11459,1145900,Feeding the Herrings,20,['dynamic programming']
11460,1146000,Jumping Yoshi,0,[]
11461,1146100,Lunch Menu,0,[]
11462,1146200,The Owl and the Fox,6,"['binary search', 'bruteforcing', 'precomputation']"
11463,1146300,Plankton Food,0,[]
11464,1146400,Hacking the Screen,0,[]
11465,1146500,Visitors’ Train,0,[]
11466,1146600,Alex Origami Squares,3,"['case work', 'geometry', 'implementation', 'mathematics']"
11467,1146700,Black and White,13,['constructive']
11468,1146800,Concatenation,15,"['ad-hoc', 'implementation', 'string']"
11469,1146900,Distribution in Metagonia,17,"['ad-hoc', 'constructive', 'mathematics', 'number theory']"
11470,1147000,Easy Arithmetic,8,['greedy']
11471,1147100,Fygon,0,[]
11472,1147200,Graph,20,"['data structures', 'graph theory', 'greedy', 'priority queue', 'topological sorting']"
11473,1147300,Hash Code Hacker,13,['constructive']
11474,1147400,Insider’s Information,23,"['ad-hoc', 'graph theory', 'randomization', 'topological sorting']"
11475,1147500,Journey to the “The World’s Start”,19,"['binary search', 'data structures', 'dynamic programming', 'segment tree', 'set / map by trees']"
11476,1147600,Kingdom Trip,26,"['dynamic programming', 'geometry']"
11477,1147700,Lucky Chances,6,"['bruteforcing', 'implementation']"
11478,1147800,서로 다른 부분 문자열의 개수,8,"['data structures', 'set / map by hashing', 'string', 'set / map by trees']"
11479,1147900,서로 다른 부분 문자열의 개수 2,19,"['string', 'suffix array and lcp array']"
11480,1148000,Aqueduct Construction,0,[]
11481,1148100,Mountain Biking,11,"['calculus', 'mathematics', 'physics']"
11482,1148200,Conversation Log,10,"['data structures', 'set / map by hashing', 'implementation', 'sorting']"
11483,1148300,Slant Drilling,0,[]
11484,1148400,Rainfall,0,[]
11485,1148500,Physiognomy,0,[]
11486,1148600,Drink Responsibly,0,[]
11487,1148700,Sunlight,0,[]
11488,1148800,Nimionese,9,"['implementation', 'parsing', 'simulation', 'string']"
11489,1148900,Jelly Raid,0,[]
11490,1149000,Call a Cab,0,[]
11491,1149100,Telescope,0,[]
11492,1149200,Milestone Counter,0,[]
11493,1149300,동전 교환,20,"['maximum flow', 'minimum cost maximum flow']"
11494,1149400,Equilibrium State,0,[]
11495,1149500,격자 0 만들기,19,['maximum flow']
11496,1149600,Kernel,0,[]
11497,1149700,통나무 건너뛰기,10,"['greedy', 'sorting']"
11498,1149800,홀수 싸이클,20,"['breadth-first search', 'bipartite graph', 'constructive', 'depth-first search', 'graph theory', 'graph traversal', 'strongly connected component']"
11499,1149900,Path,19,"['convex hull', 'data structures', 'geometry', 'stack']"
11500,1150000,Polynomial,17,"['dynamic programming', 'mathematics', 'number theory']"
11501,1150100,주식,9,['greedy']
11502,1150200,세 개의 소수 문제,7,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
11503,1150300,Tree Edit,21,"['dynamic programming', 'dynamic programming on trees', 'tree']"
11504,1150400,돌려 돌려 돌림판!,5,"['bruteforcing', 'implementation', 'simulation']"
11505,1150500,구간 곱 구하기,15,"['segment tree', 'data structures']"
11506,1150600,占쏙옙,0,[]
11507,1150700,카드셋트,7,"['data structures', 'set / map by hashing', 'parsing', 'string']"
11508,1150800,2+1 세일,7,"['greedy', 'sorting']"
11509,1150900,풍선 맞추기,11,['greedy']
11510,1151000,TOPOVI,19,"['data structures', 'set / map by hashing', 'implementation']"
11511,1151100,RELATIVNOST,21,"['data structures', 'segment tree']"
11512,1151200,UZASTOPNI,21,"['bitmask', 'dynamic programming', 'dynamic programming on trees', 'tree']"
11513,1151300,Kinfolk,16,"['case work', 'implementation', 'lowest common ancestor', 'tree']"
11514,1151400,Refract Facts,11,"['binary search', 'mathematics', 'physics']"
11515,1151500,Poker,17,['implementation']
11516,1151600,Interpreter,21,"['implementation', 'parsing', 'string']"
11517,1151700,Positive Con Sequences,4,"['bruteforcing', 'case work', 'mathematics']"
11518,1151800,Morse,5,"['data structures', 'set / map by hashing', 'implementation', 'string']"
11519,1151900,Hounded by Indecision,0,[]
11520,1152000,And Then There Was 5,3,['implementation']
11521,1152100,Boggle,14,"['backtracking', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'string']"
11522,1152200,Sum Kind of Problem,3,"['arithmetic', 'implementation', 'mathematics']"
11523,1152300,Running Steps,12,"['combinatorics', 'mathematics']"
11524,1152400,Immortal Porpoises,14,"['exponentiation by squaring', 'mathematics']"
11525,1152500,Farey Sequence Length,15,"['euler totient function', 'mathematics', 'number theory', 'prefix sum']"
11526,1152600,A Rational Sequence,11,['mathematics']
11527,1152700,Robots,0,[]
11528,1152800,Compositions,11,"['dynamic programming', 'knapsack']"
11529,1152900,Brocard Point of a Triangle,19,"['binary search', 'geometry']"
11530,1153000,RATS,11,"['arbitrary precision / big integers', 'implementation', 'mathematics', 'simulation']"
11531,1153100,ACM 대회 채점,4,['implementation']
11532,1153200,The Agglomerator,0,[]
11533,1153300,Dance Recital,11,"['backtracking', 'recursion']"
11534,1153400,Hidden Password,6,"['data structures', 'implementation', 'simulation', 'stack', 'string']"
11535,1153500,Kitchen Measurements,16,"['breadth-first search', 'data structures', ""dijkstra's"", 'graph theory', 'graph traversal', 'set / map by hashing', 'set / map by trees']"
11536,1153600,줄 세우기,6,"['implementation', 'sorting', 'string']"
11537,1153700,Mosaic,0,[]
11538,1153800,Pyro Tubes,6,"['bitmask', 'bruteforcing', 'data structures', 'set / map by hashing', 'set / map by trees']"
11539,1153900,Word Clouds Revisited,0,[]
11540,1154000,Competition,8,['value / coordinate compression']
11541,1154100,At most twice,15,"['greedy', 'string']"
11542,1154200,Blood groups,21,"['maximum flow', 'minimum cost maximum flow']"
11543,1154300,Cake cut,18,['geometry']
11544,1154400,D as in Daedalus,4,[]
11545,1154500,Exposing corruption,0,[]
11546,1154600,Fence the vegetables fail,18,"['data structures', 'geometry', 'segment tree', 'sweeping']"
11547,1154700,Galactic taxes,18,[]
11548,1154800,Height map,12,[]
11549,1154900,Identifying tea,2,['implementation']
11550,1155000,Just a bit sorted,0,[]
11551,1155100,Keep it energized,18,[]
11552,1155200,Pyramid Base 2,22,"['data structures', 'segment tree with lazy propagation', 'parametric search', 'segment tree', 'sweeping']"
11553,1155300,Pyramid Base 3,26,"['data structures', 'segment tree', 'two-pointer']"
11554,1155400,Ultimate TTT,0,[]
11555,1155500,CLARKSON,21,"['data structures', 'dynamic programming', 'parametric search', 'segment tree', 'string', 'suffix array and lcp array']"
11556,1155600,RADIO,0,[]
11557,1155700,Yangjojang of The Year,4,"['implementation', 'sorting']"
11558,1155800,The Game of Death,7,"['graph theory', 'graph traversal', 'implementation', 'simulation']"
11559,1155900,Puyo Puyo,12,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
11560,1156000,다항식 게임,12,['dynamic programming']
11561,1156100,징검다리,8,"['binary search', 'mathematics']"
11562,1156200,백양로 브레이크,13,"['floyd–warshall', 'graph theory']"
11563,1156300,연돌이와 고잠녀,16,"['bruteforcing', 'geometry']"
11564,1156400,점프왕 최준민,6,"['case work', 'mathematics', 'number theory']"
11565,1156500,바이너리 게임,13,['ad-hoc']
11566,1156600,킥,7,['bruteforcing']
11567,1156700,선진이의 겨울 왕국,14,"['breadth-first search', 'graph theory', 'graph traversal']"
11568,1156800,민균이의 계략,9,"['dynamic programming', 'longest increasing sequence in o(n log n)']"
11569,1156900,신호등,16,"[""dijkstra's"", 'graph theory']"
11570,1157000,환상의 듀엣,16,['dynamic programming']
11571,1157100,분수를 소수로,11,"['implementation', 'mathematics']"
11572,1157200,확률 실험,16,"['geometry', 'two-pointer']"
11573,1157300,몬스터,14,"['combinatorics', 'dynamic programming', 'mathematics']"
11574,1157400,CYK의 너무너무 재밌는 그래프 만들기 놀이,15,"['combinatorics', 'dynamic programming', 'mathematics']"
11575,1157500,Affine Cipher,4,['string']
11576,1157600,Base Conversion,6,"['implementation', 'mathematics', 'number theory']"
11577,1157700,Condition of deep sleep,13,"['data structures', 'greedy', 'queue']"
11578,1157800,팀원 모집,11,"['bitmask', 'bruteforcing']"
11579,1157900,초차원전쟁 이나,9,"['arithmetic', 'linear algebra', 'mathematics']"
11580,1158000,Footprint,5,"['implementation', 'simulation']"
11581,1158100,구호물자,10,"['depth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
11582,1158200,치킨 TOP N,7,"['divide and conquer', 'sorting']"
11583,1158300,인경호의 징검다리,13,"['dynamic programming', 'greedy']"
11584,1158400,저 집합은 해로운 집합이다,14,"['mathematics', 'recursion']"
11585,1158500,속타는 저녁 메뉴,16,"['knuth–morris–pratt', 'string']"
11586,1158600,지영 공주님의 마법 거울,3,"['string', 'implementation']"
11587,1158700,MARKO,4,[]
11588,1158800,GEPPETTO,10,"['bit set', 'bruteforcing']"
11589,1158900,ARTUR,16,"['geometry', 'graph theory', 'topological sorting']"
11590,1159000,SAVEZ,18,"['data structures', 'hashing', 'tree', 'trie']"
11591,1159100,VUDU,18,"['data structures', 'divide and conquer', 'prefix sum', 'segment tree']"
11592,1159200,DRŽAVA,24,"['binary search', 'data structures', 'disjoint set', 'dynamic programming', 'geometry', 'graph theory', 'minimum spanning tree', 'voronoi diagram']"
11593,1159300,Airports,19,"['bipartite matching', 'floyd–warshall', 'graph theory']"
11594,1159400,Butterfly Effect,0,[]
11595,1159500,Classy,0,[]
11596,1159600,Triangle,4,"['geometry', 'pythagoras theorem']"
11597,1159700,Excellence,6,"['greedy', 'sorting']"
11598,1159800,Falling Blocks,23,"['case work', 'depth-first search', 'graph theory', 'graph traversal']"
11599,1159900,Racing Gems,17,"['binary search', 'geometry', 'longest increasing sequence in o(n log n)']"
11600,1160000,Hilbert Sort,14,"['divide and conquer', 'implementation']"
11601,1160100,Coverage,0,[]
11602,1160200,Olympics,20,[]
11603,1160300,Checkers,16,"['eulerian path / circuit', 'graph theory']"
11604,1160400,Millionaire,0,[]
11605,1160500,Magic Trick,4,['bruteforcing']
11606,1160600,Egg Drop,4,[]
11607,1160700,Grid,11,"['breadth-first search', 'graph theory', 'graph traversal']"
11608,1160800,Complexity,4,"['bruteforcing', 'implementation', 'sorting', 'string']"
11609,1160900,Class Time,6,"['sorting', 'string']"
11610,1161000,Surf,12,"['binary search', 'dynamic programming']"
11611,1161100,Blur,10,['implementation']
11612,1161200,Gears,12,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics']"
11613,1161300,ASCII Addition,11,"['implementation', 'string']"
11614,1161400,Book Borders,16,"['binary search', 'prefix sum']"
11615,1161500,Cow Confinement,28,"['data structures', 'geometry', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
11616,1161600,Digit Division,13,"['combinatorics', 'mathematics', 'number theory']"
11617,1161700,Export Estimate,20,"['data structures', 'disjoint set', 'graph theory', 'offline queries']"
11618,1161800,Frightful Formula,21,"['combinatorics', 'fast fourier transform', 'mathematics']"
11619,1161900,Greenhouse Growth,24,"['data structures', 'disjoint set', 'implementation', 'simulation', 'set / map by trees']"
11620,1162000,Hovering Hornet,17,"['case work', 'convex hull', 'geometry', 'geometry; 3d', 'implementation', 'mathematics', 'area of a polygon']"
11621,1162100,Ice Igloos,18,"['geometry', 'mathematics']"
11622,1162200,Juice Junctions,22,"['biconnected component', 'data structures', 'disjoint set', 'maximum flow', 'graph theory', 'max-flow min-cut theorem', 'tree']"
11623,1162300,Kernel Knights,16,"['graph theory', 'topological sorting']"
11624,1162400,Looping Labyrinth,26,"['breadth-first search', 'depth-first search', 'geometry', 'graph theory', 'graph traversal', 'linear algebra', 'mathematics', 'number theory']"
11625,1162500,Freight Train,16,[]
11626,1162600,Physical Music,15,"['data structures', 'segment tree']"
11627,1162700,Godzilla,0,[]
11628,1162800,Hotels,0,[]
11629,1162900,The King’s Walk,18,[]
11630,1163000,Map Colouring,0,[]
11631,1163100,Mario,21,[]
11632,1163200,Museum,0,[]
11633,1163300,Six Degrees,12,[]
11634,1163400,Tour de France,0,[]
11635,1163500,Wipe Your Whiteboards,17,"['extended euclidean algorithm', 'mathematics', 'number theory']"
11636,1163600,Stand on Zanzibar,4,"['implementation', 'mathematics']"
11637,1163700,인기 투표,6,['implementation']
11638,1163800,Flipping Cards,14,"['breadth-first search', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
11639,1163900,Amazing Race,0,[]
11640,1164000,Scaling Recipes,4,"['arithmetic', 'implementation', 'mathematics']"
11641,1164100,Space Junk,13,"['geometry', 'geometry; 3d', 'implementation', 'mathematics', 'ternary search']"
11642,1164200,Rubik’s Revenge in ... 2D!? 3D?,0,[]
11643,1164300,The Magical 3,11,['bruteforcing']
11644,1164400,Matrix Keypad,10,['ad-hoc']
11645,1164500,"I’ve Been Everywhere, Man",6,"['data structures', 'set / map by hashing', 'string']"
11646,1164600,Bundles of Joy,14,[]
11647,1164700,Checkers,18,[]
11648,1164800,지속,3,"['arithmetic', 'implementation', 'mathematics']"
11649,1164900,Xedni Drawkcab,6,['sorting']
11650,1165000,좌표 정렬하기,6,['sorting']
11651,1165100,좌표 정렬하기 2,6,['sorting']
11652,1165200,카드,7,"['data structures', 'set / map by hashing', 'sorting']"
11653,1165300,소인수분해,5,"['mathematics', 'number theory', 'primality test']"
11654,1165400,아스키 코드,1,['implementation']
11655,1165500,ROT13,5,"['implementation', 'string']"
11656,1165600,접미사 배열,7,"['sorting', 'string']"
11657,1165700,타임머신,12,"['bellman–ford', 'graph theory']"
11658,1165800,구간 합 구하기 3,16,"['data structures', 'multidimensional segment tree', 'prefix sum', 'segment tree']"
11659,1165900,구간 합 구하기 4,8,['prefix sum']
11660,1166000,구간 합 구하기 5,10,"['dynamic programming', 'prefix sum']"
11661,1166100,해의 개수,20,"['extended euclidean algorithm', 'mathematics', 'number theory']"
11662,1166200,민호와 강호,12,"['geometry', 'ternary search']"
11663,1166300,선분 위의 점,8,"['binary search', 'sorting']"
11664,1166400,선분과 점,11,"['geometry', 'geometry; 3d', 'mathematics', 'ternary search']"
11665,1166500,직육면체 교집합,5,"['geometry', 'geometry; 3d']"
11666,1166600,워크스테이션 배정,13,"['data structures', 'greedy', 'priority queue', 'sorting']"
11667,1166700,생산성 향상,23,"['dynamic programming', 'sorting']"
11668,1166800,파이프 청소,17,"['geometry', 'graph theory', 'graph traversal', 'line segment intersection check']"
11669,1166900,Debugging,18,['dynamic programming']
11670,1167000,초등 수학,17,['bipartite matching']
11671,1167100,Flight Plan Evaluation,23,[]
11672,1167200,Guessing Camels,20,"['data structures', 'segment tree']"
11673,1167300,Hole in One,19,"['bruteforcing', 'implementation', 'physics', 'simulation']"
11674,1167400,Identifying Map Tiles,7,"['implementation', 'mathematics']"
11675,1167500,Jumbled Communication,6,"['bitmask', 'bruteforcing', 'implementation']"
11676,1167600,Kitchen Combinatorics,14,"['bruteforcing', 'combinatorics', 'mathematics']"
11677,1167700,Promotions,18,"['graph theory', 'graph traversal', 'topological sorting']"
11678,1167800,Black Vienna,19,"['2-sat', 'graph theory', 'strongly connected component']"
11679,1167900,Canvas Painting,12,['greedy']
11680,1168000,Dice Cup,4,"['implementation', 'mathematics']"
11681,1168100,Wooden Signs,21,['dynamic programming']
11682,1168200,Landscaping,20,"['maximum flow', 'max-flow min-cut theorem']"
11683,1168300,Game of Cards,18,"['game theory', 'sprague–grundy theorem']"
11684,1168400,Sheldon Numbers,9,[]
11685,1168500,Text Processor,0,[]
11686,1168600,Saint John Festival,19,"['binary search', 'convex hull', 'geometry', 'point in convex polygon check']"
11687,1168700,팩토리얼 0의 개수,10,"['binary search', 'mathematics', 'number theory']"
11688,1168800,최소공배수 찾기,12,"['euclidean algorithm', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
11689,1168900,"GCD(n, k) = 1",15,"['euler totient function', 'mathematics', 'number theory']"
11690,1169000,"LCM(1, 2, ..., n)",13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
11691,1169100,"LCM(i, j)",21,"['mathematics', 'möbius inversion', 'number theory']"
11692,1169200,시그마 함수,13,"['mathematics', 'number theory']"
11693,1169300,n^m의 약수의 합,14,"['exponentiation by squaring', 'mathematics', 'modular multiplicative inverse', 'number theory']"
11694,1169400,님 게임,19,"['game theory', 'sprague–grundy theorem']"
11695,1169500,표 게임,17,"['game theory', 'sprague–grundy theorem']"
11696,1169600,Asynchronous Exceptions,0,[]
11697,1169700,AYBABTU,0,[]
11698,1169800,Billiards Sorting,0,[]
11699,1169900,Digit,0,[]
11700,1170000,Dungeon Creation,0,[]
11701,1170100,Longest Lane,22,"['case work', 'geometry', 'sorting']"
11702,1170200,PLAY in BASIC,0,[]
11703,1170300,Skyland,0,[]
11704,1170400,Three-way Branch,0,[]
11705,1170500,Tree Allocation,0,[]
11706,1170600,Balanced Paths,22,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'tree']"
11707,1170700,Card Game Strategy,0,[]
11708,1170800,Casino,25,[]
11709,1170900,Content Delivery,0,[]
11710,1171000,Cost Performance Flow,22,"['maximum flow', 'mathematics', 'minimum cost maximum flow']"
11711,1171100,ICPC Teams,20,"['combinatorics', 'value / coordinate compression', 'exponentiation by squaring', 'graph theory', 'graph traversal', 'inclusion and exclusion', 'mathematics', 'modular multiplicative inverse', 'number theory']"
11712,1171200,JAG-channel II,0,[]
11713,1171300,Kimagure Cleaner,0,[]
11714,1171400,Midpoint,26,"['fast fourier transform', 'geometry', 'implementation', 'mathematics']"
11715,1171500,New Game AI,28,"['ad-hoc', 'data structures', 'graph theory', 'graph traversal', 'implementation', 'segment tree']"
11716,1171600,Runner and Sniper,0,[]
11717,1171700,Wall Making Game,19,"['dynamic programming', 'game theory', 'sprague–grundy theorem']"
11718,1171800,그대로 출력하기,1,"['implementation', 'string']"
11719,1171900,그대로 출력하기 2,3,"['implementation', 'string']"
11720,1172000,숫자의 합,2,"['implementation', 'mathematics', 'string']"
11721,1172100,열 개씩 끊어 출력하기,3,"['string', 'implementation']"
11722,1172200,가장 긴 감소하는 부분 수열,9,['dynamic programming']
11723,1172300,집합,6,"['bitmask', 'implementation']"
11724,1172400,연결 요소의 개수,9,"['graph theory', 'graph traversal', 'breadth-first search', 'depth-first search']"
11725,1172500,트리의 부모 찾기,9,"['graph theory', 'graph traversal', 'tree', 'breadth-first search', 'depth-first search']"
11726,1172600,2×n 타일링,8,['dynamic programming']
11727,1172700,2×n 타일링 2,8,['dynamic programming']
11728,1172800,배열 합치기,6,"['sorting', 'two-pointer']"
11729,1172900,하노이 탑 이동 순서,10,['recursion']
11730,1173000,Watering - 6,9,"['case work', 'precomputation']"
11731,1173100,Watering - 7,10,[]
11732,1173200,Watering - 8,9,"['case work', 'precomputation']"
11733,1173300,Watering - 9,17,"['ad-hoc', 'implementation']"
11734,1173400,Watering - 10,8,"['ad-hoc', 'constructive', 'precomputation']"
11735,1173500,정산소,12,['mathematics']
11736,1173600,Binary vs Decimal,23,"['arbitrary precision / big integers', 'mathematics', 'number theory']"
11737,1173700,Cactus Jubilee,22,"['articulation points and bridges', 'cactus', 'graph theory']"
11738,1173800,Distance on Triangulation,25,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'graph theory', 'offline queries', 'tree']"
11739,1173900,Easy Problemset,6,"['implementation', 'simulation']"
11740,1174000,Froggy Ford,16,"[""dijkstra's"", 'geometry', 'graph theory']"
11741,1174100,Generators,15,"['mathematics', 'number theory']"
11742,1174200,Hypercube,24,"['geometry', 'geometry; hyperdimensional', 'implementation']"
11743,1174300,Iceberg Orders,25,"['ad-hoc', 'implementation']"
11744,1174400,Jump,18,['randomization']
11745,1174500,King’s Inspection,21,"['backtracking', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
11746,1174600,Landscape Improved,18,"['binary search', 'two-pointer']"
11747,1174700,수열,8,"['bruteforcing', 'implementation']"
11748,1174800,Squeeze the Cylinders,12,"['geometry', 'implementation']"
11749,1174900,형제 게임,17,"['game theory', 'graph theory']"
11750,1175000,Wall Clocks,19,"['greedy', 'implementation', 'sweeping']"
11751,1175100,Bringing Order to Disorder,19,"['backtracking', 'combinatorics', 'dynamic programming', 'mathematics', 'recursion', 'sorting']"
11752,1175200,Deadlock Detection,17,['binary search']
11753,1175300,알파카 문장,19,"['dynamic programming', 'string']"
11754,1175400,Rotating Cutter Bits,24,[]
11755,1175500,Routing a Marathon Race,23,"['backtracking', 'graph theory', 'graph traversal']"
11756,1175600,Post Office Investigation,23,"['dominator tree', 'tree']"
11757,1175700,Min-Max Distance Game,26,"['binary search', 'game theory', 'graph theory']"
11758,1175800,CCW,11,['geometry']
11759,1175900,Bottled-Up Feelings,3,"['arithmetic', 'bruteforcing', 'mathematics']"
11760,1176000,Mastering Mastermind,4,['string']
11761,1176100,Shuffling Along,10,"['implementation', 'simulation']"
11762,1176200,A Towering Problem,0,[]
11763,1176300,Being Solarly Systematic,0,[]
11764,1176400,Delete This!,17,['bruteforcing']
11765,1176500,KenKen You Do It?,0,[]
11766,1176600,Rings,13,"['dynamic programming', 'graph theory', 'graph traversal']"
11767,1176700,Squawk Virus,15,"['exponentiation by squaring', 'mathematics']"
11768,1176800,Transportation Delegation,20,['maximum flow']
11769,1176900,Tray Bien,13,['dynamic programming']
11770,1177000,Trick Shot,0,[]
11771,1177100,What’s on the Grille?,5,"['implementation', 'string']"
11772,1177200,POT,3,"['arithmetic', 'implementation', 'mathematics']"
11773,1177300,ESEJ,6,"['ad-hoc', 'constructive', 'randomization', 'string']"
11774,1177400,MOLEKULE,12,[]
11775,1177500,SLON,15,[]
11776,1177600,NEKAMELEONI,23,"['data structures', 'segment tree']"
11777,1177700,남욱이의 썩은 계란판,20,"['maximum flow', 'minimum cost maximum flow']"
11778,1177800,피보나치 수와 최대공약수,15,"['exponentiation by squaring', 'mathematics', 'number theory']"
11779,1177900,최소비용 구하기 2,13,"[""dijkstra's"", 'graph theory']"
11780,1178000,플로이드 2,14,"['floyd–warshall', 'graph theory']"
11781,1178100,퇴근 시간,15,"[""dijkstra's"", 'graph theory']"
11782,1178200,TILING,0,[]
11783,1178300,HAPPINESS,22,[]
11784,1178400,Hex Code,5,"['implementation', 'string']"
11785,1178500,Programming Contest Strategy,7,"['greedy', 'sorting']"
11786,1178600,Terrorists,21,[]
11787,1178700,Aquarium,13,[]
11788,1178800,Queue of Soldiers,0,[]
11789,1178900,Jumping Joey,0,[]
11790,1179000,Primorial vs LCM,19,"['binary search', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes', 'sorting']"
11791,1179100,Automatic Scholarship Calculation,13,"['implementation', 'prefix sum']"
11792,1179200,Tom and Jerry,14,"['calculus', 'mathematics']"
11793,1179300,Sunlight on a Tree,27,"['binary search', 'convex hull', 'data structures', 'geometry', 'heavy-light decomposition', 'implementation', 'segment tree', 'tree']"
11794,1179400,New Angry Bird Weapon,0,[]
11795,1179500,Donation Packaging,3,"['implementation', 'simulation']"
11796,1179600,수행평가 1,14,"['binary search', 'data structures', 'hashing', 'set / map by trees']"
11797,1179700,수행평가 2,20,"['data structures', 'dynamic programming', 'priority queue']"
11798,1179800,Stop Making Sense,21,"['convex hull', 'geometry', 'area of a polygon', 'two-pointer']"
11799,1179900,Game of Peace,14,[]
11800,1180000,Tawla,4,['implementation']
11801,1180100,Feast Coins,14,"['data structures', 'dynamic programming', 'knapsack', 'priority queue']"
11802,1180200,Wedding Selfie,0,[]
11803,1180300,Connect the Cells,0,[]
11804,1180400,Bike Sharing,0,[]
11805,1180500,Special Christmas Tree,10,[]
11806,1180600,Messed up Pictures,0,[]
11807,1180700,Equivalent Passwords,9,"['implementation', 'string']"
11808,1180800,마리오와 사악한 키노피오,22,"['dynamic programming', 'dynamic programming on trees', 'tree']"
11809,1180900,YODA,5,"['implementation', 'mathematics']"
11810,1181000,HAN,8,['implementation']
11811,1181100,데스스타,8,"['bitmask', 'mathematics']"
11812,1181200,K진 트리,13,"['lowest common ancestor', 'mathematics', 'tree']"
11813,1181300,GALAKSIJA,20,"['data structures', 'disjoint set', 'set / map by hashing', 'offline queries', 'smaller to larger technique', 'tree', 'set / map by trees']"
11814,1181400,ENDOR,20,"['ad-hoc', 'dynamic programming']"
11815,1181500,짝수? 홀수?,7,"['mathematics', 'number theory']"
11816,1181600,"8진수, 10진수, 16진수",4,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
11817,1181700,Robots and Oil Transportation System,17,[]
11818,1181800,Symmetry,0,[]
11819,1181900,The Shortest does not Mean the Simplest,10,"['arbitrary precision / big integers', 'divide and conquer', 'exponentiation by squaring', 'mathematics']"
11820,1182000,Watermelons of the Field of Wonder of the Fool's Land,0,[]
11821,1182100,Martian King,0,[]
11822,1182200,Document,5,"['greedy', 'implementation', 'simulation']"
11823,1182300,Frodo and the Monster,16,"['implementation', 'mathematics']"
11824,1182400,Cache,0,[]
11825,1182500,T9,0,[]
11826,1182600,Black-and-white Square,8,['implementation']
11827,1182700,King’s Walk,0,[]
11828,1182800,High Jump,0,[]
11829,1182900,Fans,0,[]
11830,1183000,Star triangles,10,"['value / coordinate compression', 'data structures', 'set / map by hashing', 'mathematics']"
11831,1183100,Hyper-minimum,0,[]
11832,1183200,Energetic turtle,0,[]
11833,1183300,돌 무게 재기,0,[]
11834,1183400,홀짝,13,"['arbitrary precision / big integers', 'binary search', 'implementation', 'mathematics']"
11835,1183500,Skyline,15,"['dynamic programming', 'greedy']"
11836,1183600,Collider,0,[]
11837,1183700,K-th path,0,[]
11838,1183800,New Year Train,0,[]
11839,1183900,Beautiful row,0,[]
11840,1184000,XOR,19,"['data structures', 'tree', 'trie']"
11841,1184100,Biochips,20,"['dynamic programming', 'dynamic programming on trees', 'tree']"
11842,1184200,Ants,18,"['ad-hoc', 'mathematics']"
11843,1184300,Monkey and Apple-trees,20,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
11844,1184400,Mountain Trek Route,0,[]
11845,1184500,Substrings,20,"['eulerian path / circuit', 'graph theory', 'hashing', 'rabin–karp', 'string']"
11846,1184600,Experiments with Gorlum,0,[]
11847,1184700,Riddick's Cube,0,[]
11848,1184800,Schools,20,"['data structures', 'greedy', 'priority queue']"
11849,1184900,Special graph,0,[]
11850,1185000,Crazy old lady,0,[]
11851,1185100,Luxury burrow,19,"['binary search', 'data structures', 'disjoint set', 'stack']"
11852,1185200,Round words,26,"['bit set', 'dynamic programming', 'string']"
11853,1185300,Trading,0,[]
11854,1185400,Divide and conquer,18,"['data structures', 'segment tree']"
11855,1185500,Bank,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
11856,1185600,Shymbulak,22,['graph theory']
11857,1185700,UFO,0,[]
11858,1185800,K blocks,21,"['data structures', 'dynamic programming', 'stack']"
11859,1185900,Marriage questions,0,[]
11860,1186000,Squares,0,[]
11861,1186100,Maximal Area,16,"['data structures', 'divide and conquer', 'segment tree', 'stack']"
11862,1186200,Table,13,['dynamic programming']
11863,1186300,Roads,0,[]
11864,1186400,Game,0,[]
11865,1186500,Rain Again,0,[]
11866,1186600,요세푸스 문제 0,6,"['data structures', 'implementation', 'queue']"
11867,1186700,박스 나누기 게임,9,"['dynamic programming', 'game theory', 'mathematics']"
11868,1186800,님 게임 2,17,"['game theory', 'sprague–grundy theorem']"
11869,1186900,님블,17,"['game theory', 'sprague–grundy theorem']"
11871,1187100,님 게임 홀짝,17,"['game theory', 'sprague–grundy theorem']"
11872,1187200,님 게임 나누기,18,"['game theory', 'sprague–grundy theorem']"
11873,1187300,최대 직사각형,18,"['data structures', 'stack']"
11874,1187400,ZAMKA,3,"['bruteforcing', 'mathematics']"
11875,1187500,MULTIGRAM,8,"['bruteforcing', 'string']"
11876,1187600,PERICA,13,"['combinatorics', 'mathematics', 'sorting']"
11877,1187700,홍수,13,"['constructive', 'greedy', 'mathematics']"
11878,1187800,OOP,23,"['data structures', 'euler tour technique', 'set / map by hashing', 'offline queries', 'string', 'tree', 'trie']"
11879,1187900,PODNIZOVI,26,[]
11880,1188000,개미,4,"['geometry', 'geometry; 3d', 'pythagoras theorem']"
11881,1188100,지우개,12,"['mathematics', 'prefix sum']"
11882,1188200,괄호 채우기,20,"['data structures', 'greedy', 'priority queue']"
11883,1188300,생일수 I,13,"['dynamic programming', 'greedy']"
11884,1188400,생일수 II,21,"['dynamic programming', 'mathematics']"
11895,1189500,속이기,8,['mathematics']
11896,1189600,다각형,5,"['geometry', 'mathematics']"
11897,1189700,간선 파괴,20,"['data structures', 'disjoint set', 'graph theory']"
11899,1189900,괄호 끼워넣기,8,"['data structures', 'stack', 'string']"
11900,1190000,차이 그래프,15,"[""dijkstra's"", 'graph theory']"
11903,1190300,팰린드롬 세기,24,[]
11904,1190400,쌍둥이 독수리,16,"['ad-hoc', 'mathematics']"
11905,1190500,없는 등수 찾기,22,"['dynamic programming', 'prefix sum']"
11906,1190600,돌 옮기기,17,"['implementation', 'knuth–morris–pratt', 'string']"
11907,1190700,오두막집,22,"['binary search', '센트로이드', 'centroid decomposition', 'divide and conquer', 'parametric search', 'tree']"
11908,1190800,카드,3,['implementation']
11909,1190900,배열 탈출,11,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
11910,1191000,경비원,21,[]
11912,1191200,격자 보존하기,14,"['combinatorics', 'greedy', 'mathematics', 'sorting']"
11913,1191300,Min-cost GCD,19,[]
11914,1191400,배낭 문제 준비하기,0,[]
11915,1191500,전선 연결하기,22,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'segment tree']"
11916,1191600,볼질,7,"['implementation', 'simulation']"
11917,1191700,이상한 수열,14,"['data structures', 'mathematics', 'set / map by trees']"
11918,1191800,정전,12,"['greedy', 'sorting', 'sweeping']"
11920,1192000,버블 정렬,18,"['data structures', 'priority queue']"
11921,1192100,0.1,0,"['implementation', 'arithmetic', 'mathematics']"
11922,1192200,BELA,4,['implementation']
11923,1192300,PUTOVANJE,5,"['bruteforcing', 'implementation']"
11924,1192400,PIANINO,14,"['ad-hoc', 'data structures', 'set / map by trees']"
11925,1192500,PAROVI,0,[]
11926,1192600,KRUMPIRKO,0,[]
11927,1192700,SAN,0,[]
11928,1192800,공기놀이,17,"['combinatorics', 'mathematics']"
11929,1192900,발렌타인 데이,0,[]
11930,1193000,Smallest Enclosing Sphere,21,"['geometry', 'geometry; 3d', 'heuristics', 'minimum enclosing circle']"
11931,1193100,수 정렬하기 4,6,['sorting']
11932,1193200,트리와 K번째 수,21,"['data structures', 'lowest common ancestor', 'persistent segment tree', 'segment tree', 'tree']"
11933,1193300,공장들,22,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'tree']"
11934,1193400,Fortune Telling 2,22,"['value / coordinate compression', 'data structures', 'merge sort tree', 'segment tree', 'sorting']"
11935,1193500,Space Pirate,30,[]
11936,1193600,이주 계획 세우기 1,16,['heuristics']
11937,1193700,이주 계획 세우기 2,19,['heuristics']
11938,1193800,이주 계획 세우기 3,20,[]
11939,1193900,이주 계획 세우기 4,20,[]
11940,1194000,이주 계획 세우기 5,20,[]
11941,1194100,핀볼,22,"['value / coordinate compression', 'data structures', 'dynamic programming', 'segment tree']"
11942,1194200,고려대는 사랑입니다,1,['implementation']
11943,1194300,파일 옮기기,2,"['implementation', 'mathematics']"
11944,1194400,NN,4,"['implementation', 'string']"
11945,1194500,뜨거운 붕어빵,2,"['implementation', 'string']"
11946,1194600,ACM-ICPC,7,"['implementation', 'sorting']"
11947,1194700,이런 반전이,7,['mathematics']
11948,1194800,과목선택,2,"['arithmetic', 'implementation', 'mathematics']"
11949,1194900,번호표 교환,4,"['implementation', 'simulation']"
11950,1195000,2016 IOI,8,"['bruteforcing', 'implementation']"
11951,1195100,JOI国のお散歩事情 (Walking in JOI Kingdom),15,"['dynamic programming', 'sorting']"
11952,1195200,좀비,14,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
11953,1195300,쇼핑,21,"['case work', 'dynamic programming']"
11954,1195400,NIZOVI,11,"['implementation', 'string']"
11955,1195500,PROZOR,8,"['bruteforcing', 'implementation']"
11956,1195600,OZLJEDA,15,['prefix sum']
11957,1195700,OTPOR,13,"['data structures', 'stack']"
11958,1195800,행복한 수,20,"['binary search', 'mathematics', 'number theory']"
11959,1195900,PROKLETNIK,23,"['value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'offline queries', 'segment tree']"
11960,1196000,Max Flow,19,"['dynamic programming', 'dynamic programming on trees', 'lowest common ancestor', 'prefix sum', 'tree']"
11961,1196100,High Card Low Card (Platinum),21,"['data structures', 'greedy', 'segment tree']"
11962,1196200,Counting Haybales,17,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
11963,1196300,High Card Low Card (Gold),12,"['greedy', 'sorting']"
11964,1196400,Fruit Feast,11,"['breadth-first search', 'graph theory', 'graph traversal']"
11965,1196500,Bessie's Dream,13,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
11966,1196600,2의 제곱인가?,3,['mathematics']
11967,1196700,불켜기,14,"['breadth-first search', 'graph theory', 'graph traversal']"
11968,1196800,High Card Wins,10,['greedy']
11969,1196900,Breed Counting,8,['prefix sum']
11970,1197000,Fence Painting,3,"['implementation', 'mathematics']"
11971,1197100,속도 위반,6,['implementation']
11972,1197200,Contaminated Milk,6,"['bruteforcing', 'implementation']"
11973,1197300,Angry Cows (Silver),10,['binary search']
11974,1197400,Subsequences Summing to Sevens,11,"['mathematics', 'prefix sum']"
11975,1197500,Build Gates,13,"['depth-first search', 'euler characteristic (χ=v-e+f)', 'geometry', 'graph theory', 'graph traversal']"
11976,1197600,Promotion Counting,6,"['arithmetic', 'mathematics']"
11977,1197700,Angry Cows (Bronze),9,"['binary search', 'bruteforcing', 'implementation', 'sorting']"
11978,1197800,Mowing the Field (Bronze),8,"['implementation', 'simulation']"
11979,1197900,Fort Moo,14,['prefix sum']
11980,1198000,Mowing the Field (Platinum),0,[]
11981,1198100,Lights Out (Platinum),0,[]
11982,1198200,Angry Cows (Gold),19,"['binary search', 'dynamic programming']"
11983,1198300,Radio Contact,15,['dynamic programming']
11984,1198400,Lights Out (Gold),15,"['dynamic programming', 'implementation', 'simulation']"
11985,1198500,오렌지 출하,11,['dynamic programming']
11986,1198600,スタンプラリー ２ (Collecting Stamps 2),14,"['dynamic programming', 'prefix sum']"
11987,1198700,鉄道運賃 (Train Fare),19,"['breadth-first search', 'graph theory', 'graph traversal']"
11988,1198800,縄張り (Territory),23,"['data structures', 'set / map by hashing', 'priority queue', 'sweeping']"
11989,1198900,단층,22,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
11990,1199000,Load Balancing (Platinum),20,"['binary search', 'data structures', 'segment tree', 'sweeping']"
11991,1199100,Fenced In (Platinum),19,"['graph theory', 'greedy', 'minimum spanning tree']"
11992,1199200,Circular Barn (Platinum),21,"['convex hull trick', 'divide and conquer', 'divide and conquer optimization', 'dynamic programming']"
11993,1199300,Circular Barn (Gold),17,['greedy']
11994,1199400,Circular Barn Revisited,16,['dynamic programming']
11995,1199500,Fenced In (Gold),14,"['graph theory', 'minimum spanning tree']"
11996,1199600,Circular Barn (Silver),12,['bruteforcing']
11997,1199700,Load Balancing (Silver),12,"['bruteforcing', 'value / coordinate compression', 'prefix sum']"
11998,1199800,Milk Pails (Silver),12,"['breadth-first search', 'graph theory', 'graph traversal']"
11999,1199900,Milk Pails (Bronze),6,"['bruteforcing', 'mathematics']"
12000,1200000,Circular Barn (Bronze),7,['bruteforcing']
12001,1200100,Load Balancing (Bronze),6,['bruteforcing']
12002,1200200,Field Reduction (Silver),13,"['backtracking', 'bruteforcing']"
12003,1200300,Diamond Collector (Silver),15,"['binary search', 'prefix sum']"
12004,1200400,Closing the Farm (Silver),12,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
12005,1200500,Diamond Collector (Bronze),6,"['bruteforcing', 'sorting']"
12006,1200600,Bull in a China Shop (Bronze),12,"['bruteforcing', 'implementation']"
12007,1200700,Field Reduction (Bronze),10,"['bruteforcing', 'geometry', 'mathematics', 'sorting']"
12008,1200800,262144,19,"['data structures', 'dynamic programming', 'sparse table']"
12009,1200900,중국 잡동사니 가게의 소 장식품 (Platinum),24,"['binary search', 'data structures', 'hashing', 'set / map by hashing', 'implementation', 'prefix sum', 'set / map by trees']"
12010,1201000,Landscaping,25,"['data structures', 'dynamic programming', 'priority queue', 'slope trick']"
12011,1201100,Splitting the Field,15,"['geometry', 'prefix sum', 'sweeping']"
12012,1201200,Closing the Farm (Gold),16,"['data structures', 'disjoint set', 'offline queries']"
12013,1201300,248 게임,15,['dynamic programming']
12014,1201400,주식,14,"['binary search', 'longest increasing sequence in o(n log n)']"
12015,1201500,가장 긴 증가하는 부분 수열 2,14,"['binary search', 'longest increasing sequence in o(n log n)']"
12016,1201600,라운드 로빈 스케줄러,18,"['data structures', 'offline queries', 'segment tree', 'sorting']"
12017,1201700,CIRCUS,24,"['data structures', ""dijkstra's"", 'graph theory', 'priority queue']"
12018,1201800,Yonsei TOTO,8,"['greedy', 'sorting']"
12019,1201900,동아리방 청소!,15,['dynamic programming']
12020,1202000,LU 분해,16,"['linear algebra', 'mathematics']"
12021,1202100,보물 찾기,9,['mathematics']
12022,1202200,짝,20,"['graph theory', 'stable marriage problem']"
12023,1202300,연세대학교 포인트 게임,22,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'dynamic programming', 'lowest common ancestor', 'tree']"
12024,1202400,사각형 찾기,14,"['combinatorics', 'graph theory', 'mathematics']"
12025,1202500,장난꾸러기 영훈,11,"['bitmask', 'mathematics']"
12026,1202600,BOJ 거리,10,['dynamic programming']
12033,1203300,김인천씨의 식료품가게 (Small),6,"['backtracking', 'bruteforcing', 'implementation']"
12034,1203400,김인천씨의 식료품가게 (Large),6,"['greedy', 'implementation']"
12035,1203500,Dance Around The Clock (Small),6,[]
12036,1203600,Dance Around The Clock (Large),9,[]
12037,1203700,Polynesiaglot (Small1),6,"['bruteforcing', 'dynamic programming', 'mathematics']"
12038,1203800,Polynesiaglot (Small2),8,"['combinatorics', 'dynamic programming', 'mathematics']"
12039,1203900,Polynesiaglot (Large),10,['dynamic programming']
12040,1204000,Password Security (Small1),7,['randomization']
12041,1204100,Password Security (Small2),15,[]
12042,1204200,Lazy Spelling Bee (Small),7,"['combinatorics', 'implementation', 'mathematics', 'string']"
12043,1204300,Lazy Spelling Bee (Large),7,"['combinatorics', 'mathematics', 'string']"
12044,1204400,Robot Rock Band (Small),4,['bruteforcing']
12045,1204500,Robot Rock Band (Large),13,"['data structures', 'set / map by hashing', 'meet in the middle', 'set / map by trees']"
12046,1204600,Not So Random (Small),8,"['bruteforcing', 'mathematics']"
12047,1204700,Not So Random (Large),12,"['dynamic programming', 'mathematics', 'probability theory']"
12048,1204800,Sums of Sums (Small),0,[]
12049,1204900,Sums of Sums (Large),18,[]
12050,1205000,Dynamic Grid (Small),9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
12051,1205100,Dynamic Grid (Large),9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
12052,1205200,gBalloon (Small),0,[]
12053,1205300,gBalloon (Large),0,[]
12054,1205400,IP Address Summarization (Small),8,"['data structures', 'tree', 'trie']"
12055,1205500,IP Address Summarization (Large),13,"['data structures', 'implementation', 'tree', 'trie']"
12056,1205600,Virtual Rabbit (Small),0,[]
12057,1205700,Virtual Rabbit (Large),0,[]
12058,1205800,gRanks (Small),9,"['implementation', 'sorting']"
12059,1205900,gRanks (Large),9,"['implementation', 'sorting']"
12060,1206000,gFiles (Small),6,"['bruteforcing', 'mathematics']"
12061,1206100,gFiles (Large),11,"['binary search', 'case work', 'mathematics', 'parametric search']"
12062,1206200,gGames (Small),0,[]
12063,1206300,gGames (Large),0,[]
12064,1206400,gMatrix (Small),0,[]
12065,1206500,gMatrix (Large),0,[]
12066,1206600,Travel (Small),13,"[""dijkstra's"", 'graph theory']"
12067,1206700,Travel (Large),15,"[""dijkstra's"", 'graph theory', 'offline queries']"
12068,1206800,gWheels (Small),8,"['bruteforcing', 'mathematics', 'number theory']"
12069,1206900,gWheels (Large),0,[]
12070,1207000,gNumbers (Small),13,"['dynamic programming', 'game theory', 'mathematics', 'number theory', 'primality test']"
12071,1207100,gNumbers (Large),17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'game theory', 'mathematics', 'number theory', 'primality test']"
12072,1207200,Albocede DNA (Small),0,[]
12073,1207300,Albocede DNA (Large),0,[]
12074,1207400,Googol String (Small),4,[]
12075,1207500,Googol String (Large),11,"['ad-hoc', 'constructive', 'mathematics', 'recursion']"
12076,1207600,gCube (Small),8,[]
12077,1207700,gCube (Large),9,['mathematics']
12078,1207800,gCampus (Small),0,[]
12079,1207900,gCampus (Large),0,[]
12080,1208000,gSnake (Small),0,[]
12081,1208100,gSnake (Large),0,[]
12082,1208200,Bad Horse (Small1),12,"['breadth-first search', 'bipartite graph', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'string']"
12083,1208300,Bad Horse (Small2),12,"['breadth-first search', 'bipartite graph', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'string']"
12084,1208400,Captain Hammer (Small),7,"['binary search', 'mathematics', 'physics']"
12085,1208500,Moist (Small1),5,['sorting']
12086,1208600,Moist (Small2),5,"['implementation', 'sorting', 'string']"
12087,1208700,첫 제출,0,[]
12088,1208800,마지막 제출,0,[]
12089,1208900,중간 제출,0,[]
12090,1209000,초성 변환,4,"['implementation', 'string']"
12091,1209100,이브이 진화 시키기,0,[]
12092,1209200,포켓몬 GO 진화,0,[]
12093,1209300,최댓값은 곧 페널티 감소,0,[]
12094,1209400,2048 (Hard),17,"['backtracking', 'bruteforcing', 'implementation', 'simulation']"
12095,1209500,가장 오래 걸리는 스도쿠,12,"['ad-hoc', 'constructive', 'precomputation']"
12096,1209600,,0,[]
12097,1209700,1과 2,0,[]
12098,1209800,눈치 게임,0,[]
12099,1209900,점심메뉴,12,"['binary search', 'sorting']"
12100,1210000,2048 (Easy),14,"['backtracking', 'bruteforcing', 'implementation', 'simulation']"
12101,1210100,"1, 2, 3 더하기 2",10,"['backtracking', 'bruteforcing']"
12102,1210200,종이 접기 2,14,['bruteforcing']
12103,1210300,짝합 수열,14,"['dynamic programming', 'prefix sum']"
12104,1210400,순환 순열,16,"['knuth–morris–pratt', 'string']"
12105,1210500,123456789 찾기,14,"['dynamic programming', 'string']"
12106,1210600,부분 문자열의 개수,19,"['dynamic programming', 'knuth–morris–pratt', 'string']"
12107,1210700,약수 지우기 게임 1,13,"['ad-hoc', 'game theory', 'mathematics']"
12108,1210800,약수 지우기 게임 2,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'game theory', 'sprague–grundy theorem']"
12109,1210900,Hindeks,6,"['implementation', 'sorting']"
12110,1211000,Telefoni,7,['greedy']
12111,1211100,Turnir,12,"['ad-hoc', 'mathematics', 'sorting']"
12112,1211200,Savrsen,12,"['mathematics', 'number theory']"
12113,1211300,Sirni,0,[]
12114,1211400,Gauss,0,[]
12115,1211500,Baza,5,"['bruteforcing', 'implementation']"
12116,1211600,Uzastopni,12,[]
12117,1211700,Costly Binary Search (Small),17,[]
12118,1211800,Costly Binary Search (Large),21,['dynamic programming']
12119,1211900,Campinatorics (Small),14,[]
12120,1212000,Campinatorics (Large),19,"['combinatorics', 'mathematics']"
12121,1212100,Pretty Good Proportion (Small),8,['bruteforcing']
12122,1212200,Pretty Good Proportion (Large),20,"['prefix sum', 'sorting']"
12123,1212300,Taking Over The World (Small),14,"[""dijkstra's"", 'graph theory', 'implementation']"
12124,1212400,Taking Over The World (Large),24,"['maximum flow', 'max-flow min-cut theorem']"
12125,1212500,Merlin QA (Small),14,"['ad-hoc', 'greedy']"
12126,1212600,Merlin QA (Large),25,"['ad-hoc', 'greedy']"
12127,1212700,Crane Truck (Small),0,[]
12128,1212800,Crane Truck (Large),0,[]
12129,1212900,Fairland (Small),0,[]
12130,1213000,Fairland (Large),0,[]
12131,1213100,Smoothing Window (Small),0,[]
12132,1213200,Smoothing Window (Large),0,[]
12133,1213300,Runaway Quail (Small),0,[]
12134,1213400,Runaway Quail (Large),0,[]
12135,1213500,Log Set (Small),0,[]
12136,1213600,Log Set (Large),0,[]
12137,1213700,River Flow (Small),0,[]
12138,1213800,River Flow (Large),0,[]
12139,1213900,Pegman (Small),8,"['implementation', 'simulation']"
12140,1214000,Pegman (Large),9,[]
12141,1214100,Kiddie Pool (Small),0,[]
12142,1214200,Kiddie Pool (Large),0,[]
12143,1214300,영어와 프랑스어 (Small),11,[]
12144,1214400,영어와 프랑스어 (Large),21,"['data structures', 'maximum flow', 'set / map by hashing', 'max-flow min-cut theorem', 'parsing', 'string']"
12145,1214500,Drum Decorator (Small),0,[]
12146,1214600,Drum Decorator (Large),21,"[""burnside's lemma"", 'case work', 'combinatorics', 'dynamic programming', 'mathematics']"
12147,1214700,Brattleship (Small),8,[]
12148,1214800,Brattleship (Large),9,"['game theory', 'mathematics']"
12149,1214900,Typewriter Monkey (Small),10,['bruteforcing']
12150,1215000,Typewriter Monkey (Large),15,"['combinatorics', 'linearity of expectation', 'mathematics', 'probability theory']"
12151,1215100,"Less Money, More Problems (Small)",10,[]
12152,1215200,"Less Money, More Problems (Large)",12,[]
12153,1215300,Counter Culture (Small),10,"['breadth-first search', 'graph theory', 'graph traversal']"
12154,1215400,Counter Culture (Large),14,[]
12155,1215500,Noisy Neighbors (Small),6,"['bruteforcing', 'implementation']"
12156,1215600,Noisy Neighbors (Large),14,"['case work', 'mathematics']"
12157,1215700,Hiking Deer (Small1),14,['ad-hoc']
12158,1215800,Hiking Deer (Small2),15,[]
12159,1215900,Hiking Deer (Large),18,[]
12160,1216000,Mushroom Monster (Small),9,[]
12161,1216100,Mushroom Monster (Large),10,['greedy']
12162,1216200,Haircut (Small),11,[]
12163,1216300,Haircut (Large),13,['parametric search']
12164,1216400,Logging (Small),17,"['geometry', 'two-pointer']"
12165,1216500,Logging (Large),19,"['geometry', 'two-pointer']"
12166,1216600,Standing Ovation (Small),4,[]
12167,1216700,Standing Ovation (Large),4,[]
12168,1216800,Infinite House of Pancakes (Small),8,[]
12169,1216900,Infinite House of Pancakes (Large),11,[]
12170,1217000,Dijkstra (Small),13,['mathematics']
12171,1217100,Dijkstra (Large),16,['mathematics']
12172,1217200,N-오미노 판 채우기 (Small),10,[]
12173,1217300,N-오미노 판 채우기 (Large),16,[]
12174,1217400,#include <Google I/O.h>,5,"['implementation', 'string']"
12175,1217500,Dreary Design (Small),7,"['bruteforcing', 'combinatorics', 'mathematics']"
12176,1217600,Dreary Design (Large1),9,"['combinatorics', 'mathematics']"
12177,1217700,Dreary Design (Large2),10,"['combinatorics', 'inclusion and exclusion', 'mathematics']"
12178,1217800,Power Levels (Small),5,"['bruteforcing', 'mathematics', 'precomputation']"
12179,1217900,Power Levels (Large),9,"['arbitrary precision / big integers', 'implementation', 'mathematics', 'simulation']"
12180,1218000,Googlander (Small),8,['dynamic programming']
12181,1218100,Googlander (Large),10,['dynamic programming']
12182,1218200,Cube IV (Small),11,['dynamic programming']
12183,1218300,Cube IV (Large),12,['dynamic programming']
12184,1218400,GBus count (Small),4,['implementation']
12185,1218500,GBus count (Large),4,['implementation']
12186,1218600,Sort a scrambled itinerary (Small),8,"['bruteforcing', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'string']"
12187,1218700,Sort a scrambled itinerary (Large),9,"['data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'string', 'set / map by trees']"
12188,1218800,Itz Chess (Small),9,"['bruteforcing', 'implementation', 'string']"
12189,1218900,Itz Chess (Large),9,"['bruteforcing', 'implementation', 'string']"
12190,1219000,Minesweeper (Small),11,"['graph theory', 'graph traversal']"
12191,1219100,Minesweeper (Large),11,"['graph theory', 'graph traversal']"
12192,1219200,Taking Metro (Small),15,"[""dijkstra's"", 'graph theory']"
12193,1219300,Taking Metro (Large),16,"[""dijkstra's"", 'graph theory']"
12194,1219400,Broken Calculator (Small),7,[]
12195,1219500,Broken Calculator (Large),12,['dynamic programming']
12196,1219600,Tetris (Small),0,[]
12197,1219700,Tetris (Large),14,"['implementation', 'simulation']"
12198,1219800,Password Attacker (Small),5,"['bruteforcing', 'combinatorics', 'mathematics']"
12199,1219900,Password Attacker (Large),12,"['combinatorics', 'dynamic programming', 'mathematics']"
12200,1220000,New Years Eve (Small),9,[]
12201,1220100,New Years Eve (Large),10,[]
12202,1220200,Card Game (Small),8,"['data structures', 'stack']"
12203,1220300,Card Game (Large),16,"['divide and conquer', 'dynamic programming']"
12204,1220400,Parentheses Order (Small),7,[]
12205,1220500,Parentheses Order (Large),15,['dynamic programming']
12206,1220600,Seven-segment Display (Small),11,[]
12207,1220700,Seven-segment Display (Large),12,"['bitmask', 'bruteforcing']"
12208,1220800,Super 2048 (Small),9,"['implementation', 'simulation']"
12209,1220900,Super 2048 (Large),9,"['implementation', 'simulation']"
12210,1221000,Addition (Small),0,[]
12211,1221100,Addition (Large),0,[]
12212,1221200,Cut Tiles (Small),12,[]
12213,1221300,Cut Tiles (Large),12,[]
12214,1221400,Checkerboard Matrix (Small),13,"['ad-hoc', 'mathematics']"
12215,1221500,Checkerboard Matrix (Large),0,[]
12216,1221600,Power Swapper (Small),0,[]
12217,1221700,Power Swapper (Large),0,[]
12218,1221800,Symmetric Trees (Small),21,"['hashing', 'tree', 'tree isomorphism']"
12219,1221900,Symmetric Trees (Large),21,"['hashing', 'tree', 'tree isomorphism']"
12220,1222000,Paradox Sort (Small),9,['bruteforcing']
12221,1222100,Paradox Sort (Large),22,"['depth-first search', 'graph theory', 'graph traversal', 'greedy', 'mathematics']"
12222,1222200,Allergy Testing (Small),21,['dynamic programming']
12223,1222300,Allergy Testing (Large),25,"['arbitrary precision / big integers', 'binary search', 'mathematics']"
12224,1222400,ARAM (Small),0,[]
12225,1222500,ARAM (Large),0,[]
12226,1222600,"Magical, Marvelous Tour (Small)",0,[]
12227,1222700,"Magical, Marvelous Tour (Large)",0,[]
12228,1222800,Last Hit (Small),17,['dynamic programming']
12229,1222900,Last Hit (Large),17,['dynamic programming']
12230,1223000,Crime House (Small),0,[]
12231,1223100,Crime House (Large),25,"['binary search', 'greedy']"
12232,1223200,Willow (Small),0,[]
12233,1223300,Willow (Large),0,[]
12234,1223400,Data Packing (Small),6,"['data structures', 'deque', 'greedy', 'implementation', 'sorting']"
12235,1223500,Data Packing (Large),7,"['greedy', 'implementation', 'sorting']"
12236,1223600,Up and Down (Small),8,"['bruteforcing', 'graph theory', 'graph traversal', 'greedy']"
12237,1223700,Up and Down (Large),11,"['dynamic programming', 'greedy', 'sorting']"
12238,1223800,Don't Break The Nile (Small),0,[]
12239,1223900,Don't Break The Nile (Large),0,[]
12240,1224000,Trie Sharding (Small),12,"['bruteforcing', 'data structures', 'set / map by hashing', 'sorting', 'string']"
12241,1224100,Trie Sharding (Large),23,"['combinatorics', 'data structures', 'mathematics', 'tree', 'trie']"
12242,1224200,Part Elf (Small),9,['mathematics']
12243,1224300,Part Elf (Large),9,['mathematics']
12244,1224400,Reordering Train Cars (Small),17,"['ad-hoc', 'combinatorics', 'implementation', 'mathematics']"
12245,1224500,Reordering Train Cars (Large),0,[]
12246,1224600,Enclosure (Small),0,[]
12247,1224700,Enclosure (Large),0,[]
12248,1224800,The Repeater (Small),0,[]
12249,1224900,The Repeater (Large),0,[]
12250,1225000,New Lottery Game (Small),3,"['bruteforcing', 'mathematics']"
12251,1225100,New Lottery Game (Large),16,"['bitmask', 'dynamic programming']"
12252,1225200,The Bored Traveling Salesman (Small),0,[]
12253,1225300,The Bored Traveling Salesman (Large),0,[]
12254,1225400,Charging Chaos (Small),9,"['bitmask', 'bruteforcing']"
12255,1225500,Charging Chaos (Large),12,"['backtracking', 'bitmask', 'bruteforcing', 'sorting']"
12256,1225600,Full Binary Tree (Small),14,"['dynamic programming', 'dynamic programming on trees', 'tree']"
12257,1225700,Full Binary Tree (Large),14,"['dynamic programming', 'dynamic programming on trees', 'tree']"
12259,1225900,Magic Trick (Small),6,['implementation']
12260,1226000,Cookie Clicker Alpha (Small),7,[]
12261,1226100,Cookie Clicker Alpha (Large),7,[]
12262,1226200,Minesweeper Master (Small),12,[]
12263,1226300,Minesweeper Master (Large),17,"['ad-hoc', 'case work', 'constructive']"
12264,1226400,Deceitful War (Small),14,['greedy']
12265,1226500,Deceitful War (Large),15,"['combinatorics', 'data structures', 'deque', 'game theory', 'greedy', 'mathematics', 'sorting']"
12266,1226600,Sudoku Checker (Small),7,['implementation']
12267,1226700,Sudoku Checker (Large),7,['implementation']
12268,1226800,Meet and party (Small),6,"['bruteforcing', 'geometry']"
12269,1226900,Meet and party (Large),15,"['binary search', 'geometry', 'prefix sum', 'sorting']"
12270,1227000,Hex (Small),13,[]
12271,1227100,Hex (Large),16,"['depth-first search', 'maximum flow', 'graph theory', 'graph traversal', 'implementation']"
12272,1227200,Dragon Maze (Small),13,"['breadth-first search', ""dijkstra's"", 'dynamic programming', 'graph theory', 'graph traversal']"
12273,1227300,Dragon Maze (Large),13,"['breadth-first search', ""dijkstra's"", 'dynamic programming', 'graph theory', 'graph traversal']"
12274,1227400,Ignore all my comments (Small),8,[]
12275,1227500,Ignore all my comments (Large),9,[]
12276,1227600,Read Phone Number (Small),8,"['implementation', 'parsing', 'string']"
12277,1227700,Read Phone Number (Large),8,"['implementation', 'parsing', 'string']"
12278,1227800,Rational Number Tree (Small),9,[]
12279,1227900,Rational Number Tree (Large),13,"['mathematics', 'tree']"
12280,1228000,Sorting (Small),6,"['implementation', 'sorting']"
12281,1228100,Sorting (Large),6,"['implementation', 'sorting']"
12282,1228200,Cross the maze (Small),12,[]
12283,1228300,Cross the maze (Large),12,[]
12284,1228400,Spaceship Defence (Small),13,[]
12285,1228500,Spaceship Defence (Large),14,"['data structures', ""dijkstra's"", 'graph theory', 'hashing', 'set / map by hashing']"
12286,1228600,해밀턴 회로,22,"['ad-hoc', 'constructive', 'graph theory', 'strongly connected component']"
12287,1228700,해밀턴 경로,16,"['constructive', 'graph theory']"
12288,1228800,Captain Hammer (Small),0,[]
12291,1229100,Graduation Requirements (Small),0,[]
12292,1229200,Graduation Requirements (Large),0,[]
12293,1229300,Drummer (Small),0,[]
12294,1229400,Drummer (Large),0,[]
12295,1229500,X Marks the Spot (Small),0,[]
12296,1229600,X Marks the Spot (Large),0,[]
12297,1229700,Can't Stop (Small),0,[]
12298,1229800,Can't Stop (Large),0,[]
12299,1229900,Let Me Tell You a Story (Small),0,[]
12300,1230000,Let Me Tell You a Story (Large),0,[]
12301,1230100,Cheaters (Small),0,[]
12302,1230200,Cheaters (Large),0,[]
12303,1230300,Rural Planning (Small),0,[]
12304,1230400,Rural Planning (Large),0,[]
12305,1230500,Are We Lost Yet? (Small),0,[]
12306,1230600,Are We Lost Yet? (Large),0,[]
12307,1230700,Observation Wheel (Small),0,[]
12308,1230800,Observation Wheel (Large),0,[]
12309,1230900,Ticket Swapping (Small),0,[]
12310,1231000,Ticket Swapping (Large),0,[]
12311,1231100,Many Prizes (Small),0,[]
12312,1231200,Many Prizes (Large),0,[]
12313,1231300,Erdős–Szekeres (Small),0,[]
12314,1231400,Erdős–Szekeres (Large),0,[]
12315,1231500,Multiplayer Pong (Small),24,"['arbitrary precision / big integers', 'case work', 'mathematics', 'number theory']"
12316,1231600,Multiplayer Pong (Large),24,"['arbitrary precision / big integers', 'case work', 'mathematics', 'number theory']"
12317,1231700,Consonants (Small),0,[]
12318,1231800,Consonants (Large),0,[]
12319,1231900,Pogo (Small),10,"['breadth-first search', 'constructive', 'graph theory', 'graph traversal', 'greedy']"
12320,1232000,Pogo (Large),12,"['constructive', 'geometry', 'greedy', 'mathematics']"
12321,1232100,The Great Wall (Small),0,[]
12322,1232200,The Great Wall (Large),0,[]
12323,1232300,Osmos (Small),0,[]
12324,1232400,Osmos (Large),0,[]
12325,1232500,Falling Diamonds (Small),0,[]
12326,1232600,Falling Diamonds (Large),0,[]
12327,1232700,Garbled Email (Small),0,[]
12328,1232800,Garbled Email (Large),0,[]
12329,1232900,Bullseye (Small),8,"['geometry', 'mathematics']"
12330,1233000,Bullseye (Large),11,"['arbitrary precision / big integers', 'binary search', 'geometry', 'mathematics', 'parametric search']"
12331,1233100,Manage your Energy (Small),6,['bruteforcing']
12332,1233200,Manage your Energy (Large),0,[]
12333,1233300,Good Luck (Small1),0,[]
12334,1233400,Good Luck (Small2),0,[]
12335,1233500,Tic-Tac-Toe-Tomek (Small),6,['implementation']
12336,1233600,Tic-Tac-Toe-Tomek (Large),7,['implementation']
12337,1233700,Lawnmower (Small),11,"['bitmask', 'bruteforcing', 'implementation']"
12338,1233800,Lawnmower (Large),11,"['ad-hoc', 'bruteforcing']"
12339,1233900,Fair and Square (Small),6,"['bruteforcing', 'mathematics', 'precomputation', 'string']"
12340,1234000,Fair and Square (Large1),11,['mathematics']
12341,1234100,Fair and Square (Large2),18,"['arbitrary precision / big integers', 'mathematics', 'precomputation']"
12342,1234200,Treasure (Small),0,[]
12343,1234300,Treasure (Large),22,"['depth-first search', 'graph theory', 'graph traversal', 'greedy', 'mathematics']"
12346,1234600,Captain Hammer (Small),0,[]
12349,1234900,Professor Normal (Small1),9,"['implementation', 'simulation']"
12350,1235000,Professor Normal (Small2),14,"['implementation', 'simulation']"
12351,1235100,Hedgemony (Small),3,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
12352,1235200,Hedgemony (Large),3,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
12353,1235300,Dr. Spaceman의 특별한 알고리즘,4,"['arithmetic', 'implementation', 'mathematics']"
12354,1235400,Ocean View (Small),6,"['bruteforcing', 'dynamic programming']"
12355,1235500,Ocean View (Large),9,"['dynamic programming', 'longest increasing sequence in o(n log n)']"
12356,1235600,Zombie Smash (Small),10,[]
12357,1235700,Zombie Smash (Large),17,[]
12358,1235800,Upstairs/Downstairs (Small),0,[]
12359,1235900,Upstairs/Downstairs (Large),0,[]
12360,1236000,Xeno-archaeology (Small),0,[]
12361,1236100,Xeno-archaeology (Large),0,[]
12362,1236200,Twirling Towards Freedom (Small),0,[]
12363,1236300,Twirling Towards Freedom (Large),0,[]
12364,1236400,Shifting Paths (Small),0,[]
12365,1236500,Shifting Paths (Large),0,[]
12366,1236600,Perfect Game (Small),5,"['implementation', 'sorting']"
12367,1236700,Perfect Game (Large),11,"['greedy', 'implementation', 'mathematics', 'probability theory', 'sorting']"
12368,1236800,Havannah (Small),0,[]
12369,1236900,Havannah (Large),0,[]
12370,1237000,Quality Food (Small),0,[]
12371,1237100,Quality Food (Large),0,[]
12372,1237200,Lost Password (Small),20,"['euler tour technique', 'greedy', 'tree']"
12373,1237300,Lost Password (Large),25,"['euler tour technique', 'graph theory', 'greedy', 'tree']"
12374,1237400,Swinging Wild (Small),0,[]
12375,1237500,Swinging Wild (Large),0,[]
12376,1237600,Aerobics (Small),16,"['randomization', 'sorting']"
12377,1237700,Aerobics (Large),19,"['geometry', 'randomization', 'sorting']"
12378,1237800,Mountain View (Small),0,[]
12379,1237900,Mountain View (Large),0,[]
12380,1238000,Descending in the Dark (Small),0,[]
12381,1238100,Descending in the Dark (Large),0,[]
12382,1238200,Diamond Inheritance (Small),8,['bruteforcing']
12383,1238300,Diamond Inheritance (Large),12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
12384,1238400,Out of Gas (Small),0,[]
12385,1238500,Out of Gas (Large),0,[]
12386,1238600,Box Factory (Small),0,[]
12387,1238700,Box Factory (Large),0,[]
12388,1238800,Safety in Numbers (Small),9,"['binary search', 'bruteforcing', 'parametric search']"
12389,1238900,Safety in Numbers (Large),10,"['binary search', 'parametric search']"
12390,1239000,"Tide Goes In, Tide Goes Out (Small)",0,[]
12391,1239100,"Tide Goes In, Tide Goes Out (Large)",0,[]
12392,1239200,Equal Sums (Small),11,['backtracking']
12393,1239300,Equal Sums (Large),19,"['data structures', 'set / map by hashing', 'mathematics', 'probability theory', 'randomization']"
12394,1239400,Password Problem (Small),5,"['bruteforcing', 'mathematics', 'probability theory']"
12395,1239500,Password Problem (Large),8,"['bruteforcing', 'mathematics', 'probability theory']"
12396,1239600,Kingdom Rush (Small),9,[]
12397,1239700,Kingdom Rush (Large),13,"['data structures', 'greedy', 'priority queue']"
12398,1239800,Cruise Control (Small),0,[]
12399,1239900,Cruise Control (Large),0,[]
12400,1240000,Speaking in Tongues (Small),5,"['ad-hoc', 'implementation', 'string']"
12401,1240100,Dancing With the Googlers (Small),10,[]
12402,1240200,Dancing With the Googlers (Large),10,"['greedy', 'mathematics', 'sorting']"
12403,1240300,Recycled Numbers (Small),9,[]
12404,1240400,Recycled Numbers (Large),9,[]
12405,1240500,Hall of Mirrors (Small),13,[]
12406,1240600,Hall of Mirrors (Large),18,[]
12407,1240700,Quake Live (Small1),7,[]
12408,1240800,Quake Live (Small2),7,[]
12409,1240900,Shoot the Target (Small1),7,"['bruteforcing', 'geometry', 'mathematics']"
12410,1241000,Shoot the Target (Small2),0,[]
12411,1241100,Bejeweled Befuddlement (Small1),0,[]
12412,1241200,Bejeweled Befuddlement (Small2),0,[]
12413,1241300,Technology Planning (Small1),0,[]
12414,1241400,Technology Planning (Small2),12,"['graph theory', 'topological sorting']"
12415,1241500,가로수 (Small),13,['greedy']
12416,1241600,가로수 (Large),16,"['binary search', 'greedy']"
12417,1241700,일조량 (Small),0,[]
12418,1241800,일조량 (Large),17,"['geometry', 'mathematics']"
12419,1241900,출근 전쟁 (Small),0,[]
12420,1242000,출근 전쟁 (Large),0,[]
12421,1242100,창문 깨기 (Small),0,[]
12422,1242200,창문 깨기 (Large),0,[]
12423,1242300,전장 (Small),18,"['maximum flow', 'minimum cost maximum flow']"
12424,1242400,전장 (Large),18,"['maximum flow', 'minimum cost maximum flow']"
12425,1242500,윷놀이 (Small),15,['implementation']
12426,1242600,윷놀이 (Large),21,"['dynamic programming', 'implementation']"
12427,1242700,박테리아 (Small),19,"['breadth-first search', 'bipartite matching', 'depth-first search', 'graph theory', 'graph traversal']"
12428,1242800,박테리아 (Large),19,"['breadth-first search', 'bipartite matching', 'depth-first search', 'maximum flow', 'graph theory', 'graph traversal']"
12429,1242900,생존자 (Small),11,"['bruteforcing', 'greedy', 'sorting']"
12430,1243000,생존자 (Large),16,"['dynamic programming', 'greedy', 'knapsack', 'sorting']"
12431,1243100,장터판 (Small),0,[]
12432,1243200,장터판 (Large),0,[]
12433,1243300,모자 쓴 아이들 (Small),16,"['combinatorics', 'dynamic programming', 'implementation', 'mathematics']"
12434,1243400,모자 쓴 아이들 (Large),0,[]
12435,1243500,한강 (Small),10,[]
12436,1243600,한강 (Large),0,[]
12437,1243700,새로운 달력 (Small),6,"['mathematics', 'number theory']"
12438,1243800,새로운 달력 (Large),11,"['constructive', 'mathematics', 'number theory']"
12439,1243900,계산식 복원 (Small),0,[]
12440,1244000,계산식 복원 (Large),0,[]
12441,1244100,약속장소 정하기 (Small),12,"[""dijkstra's"", 'floyd–warshall', 'graph theory']"
12442,1244200,약속장소 정하기 (Large),12,"[""dijkstra's"", 'graph theory']"
12443,1244300,アンテナ修復 (Small),0,[]
12444,1244400,アンテナ修復 (Large),0,[]
12445,1244500,バクテリアの増殖 (Small),13,"['arbitrary precision / big integers', 'exponentiation by squaring', 'mathematics']"
12446,1244600,バクテリアの増殖 (Large),21,"['dynamic programming', 'euler totient function', 'exponentiation by squaring', 'mathematics', 'number theory']"
12447,1244700,ワイルドカード (Small),14,"['bruteforcing', 'combinatorics', 'mathematics', 'regular expression', 'string']"
12448,1244800,ワイルドカード (Large),22,[]
12449,1244900,クローゼットルーム (Small),0,[]
12450,1245000,クローゼットルーム (Large),0,[]
12451,1245100,無限庭園 (Small),13,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
12452,1245200,無限庭園 (Large),0,[]
12453,1245300,カードシャッフル (Small),9,"['implementation', 'simulation']"
12454,1245400,カードシャッフル (Large),13,['mathematics']
12455,1245500,最高のコーヒー (Small),15,['greedy']
12456,1245600,모닝커피 (Large),16,"['data structures', 'greedy', 'priority queue']"
12457,1245700,ビット数 (Small),10,"['bitmask', 'bruteforcing', 'mathematics']"
12458,1245800,ビット数 (Large),14,"['dynamic programming', 'mathematics']"
12459,1245900,数珠繋ぎ (Small),0,[]
12460,1246000,数珠繋ぎ (Large),0,[]
12461,1246100,数の集合 (Small),0,[]
12462,1246200,数の集合 (Large),0,[]
12463,1246300,遊園地 (Small),0,[]
12464,1246400,遊園地 (Large),0,[]
12465,1246500,Runs (Small),21,[]
12466,1246600,Runs (Large),22,[]
12467,1246700,Rains Over Atlantis (Small),15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
12468,1246800,Rains Over Atlantis (Large),0,[]
12469,1246900,Program within a Program (Small),0,[]
12470,1247000,Program within a Program (Large),0,[]
12471,1247100,Ace in the Hole (Small),0,[]
12472,1247200,Ace in the Hole (Large),0,[]
12473,1247300,Google Royale (Small),0,[]
12474,1247400,Google Royale (Large),0,[]
12475,1247500,Irregular Cakes (Small),0,[]
12476,1247600,Irregular Cakes (Large),0,[]
12477,1247700,Dire Straights (Small),6,['bruteforcing']
12478,1247800,Dire Straights (Large),16,[]
12479,1247900,Perpetual Motion (Small),0,[]
12480,1248000,Perpetual Motion (Large),0,[]
12481,1248100,Mystery Square (Small),11,"['bitmask', 'bruteforcing', 'mathematics']"
12482,1248200,Mystery Square (Large),22,"['case work', 'mathematics', 'number theory']"
12483,1248300,Airport Walkways (Small),8,[]
12484,1248400,Airport Walkways (Large),11,[]
12485,1248500,Spinning Blade (Small),0,[]
12486,1248600,Spinning Blade (Large),0,[]
12487,1248700,Expensive Dinner (Small),9,[]
12488,1248800,Expensive Dinner (Large),16,[]
12489,1248900,A.I. War (Small),14,[]
12490,1249000,A.I. War (Large),18,[]
12491,1249100,Square Tiles (Small),7,"['bruteforcing', 'greedy']"
12492,1249200,Square Tiles (Large),8,['greedy']
12493,1249300,Space Emergency (Small),7,[]
12494,1249400,Space Emergency (Large),11,[]
12495,1249500,Perfect Harmony (Small),4,"['arithmetic', 'bruteforcing', 'mathematics', 'number theory']"
12496,1249600,Perfect Harmony (Large),19,"['euclidean algorithm', 'mathematics', 'number theory', 'pollard rho', 'primality test', 'sieve of eratosthenes']"
12497,1249700,RPI (Small),0,[]
12498,1249800,RPI (Large),0,[]
12499,1249900,Revenge of the Hot Dogs (Small),10,[]
12500,1250000,Revenge of the Hot Dogs (Large),12,"['binary search', 'greedy', 'mathematics', 'parametric search', 'sorting']"
12501,1250100,House of Kittens (Small),0,[]
12502,1250200,House of Kittens (Large),0,[]
12503,1250300,FreeCell Statistics (Small),6,"['case work', 'mathematics', 'number theory']"
12504,1250400,FreeCell Statistics (Large),8,"['case work', 'mathematics', 'number theory']"
12505,1250500,The Killer Word (Small),8,"['implementation', 'string']"
12506,1250600,The Killer Word (Large),16,[]
12507,1250700,Pseudominion (Small),0,[]
12508,1250800,Pseudominion (Large),0,[]
12509,1250900,Bot Trust (Small),5,['implementation']
12510,1251000,Bot Trust (Large),5,['implementation']
12511,1251100,Magicka (Small),6,"['data structures', 'implementation', 'simulation', 'stack', 'string']"
12512,1251200,Magicka (Large),7,"['bruteforcing', 'data structures', 'implementation', 'simulation', 'stack', 'string']"
12513,1251300,Candy Splitting (Small),6,"['bitmask', 'bruteforcing', 'mathematics']"
12514,1251400,Candy Splitting (Large),9,[]
12515,1251500,챔피언소트 (Small),17,"['combinatorics', 'mathematics']"
12516,1251600,챔피언소트 (Large),17,"['combinatorics', 'mathematics']"
12517,1251700,Centauri Prime (Small1),4,"['implementation', 'string']"
12518,1251800,Centauri Prime (Small2),4,"['implementation', 'parsing', 'string']"
12519,1251900,Music Collection (Small1),9,[]
12520,1252000,Music Collection (Small2),9,[]
12521,1252100,Irregular Expressions (Small),8,"['bruteforcing', 'string']"
12522,1252200,Irregular Expressions (Large),8,"['bruteforcing', 'string']"
12523,1252300,Twibet (Small),9,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
12524,1252400,Twibet (Large),9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
12525,1252500,Grid Escape,0,[]
12526,1252600,Parcel Posts,0,[]
12527,1252700,Sheepwalking,0,[]
12528,1252800,Music Collection (Small2),0,[]
12529,1252900,Extreme Escalator Pogo (Small),11,[]
12530,1253000,Extreme Escalator Pogo (Large),15,[]
12531,1253100,Vanishing Numbers (Small),7,"['arbitrary precision / big integers', 'implementation']"
12532,1253200,Vanishing Numbers (Large),8,"['arbitrary precision / big integers', 'implementation']"
12533,1253300,Battlefield (Small),11,"['eulerian path / circuit', 'graph theory', 'graph traversal']"
12534,1253400,Battlefield (Large),16,"['eulerian path / circuit', 'graph theory']"
12535,1253500,Radio Receiver (Small),8,[]
12536,1253600,Radio Receiver (Large),15,['parametric search']
12537,1253700,Closing the Loop (Small),6,"['greedy', 'sorting']"
12538,1253800,Closing the Loop (Large),9,[]
12539,1253900,Investing at the Market (Small),5,['bruteforcing']
12540,1254000,Investing at the Market (Large),5,['bruteforcing']
12541,1254100,Building a House (Small),6,[]
12542,1254200,Building a House (Large),8,['bruteforcing']
12543,1254300,Letter Stamper (Small),20,['dynamic programming']
12544,1254400,Letter Stamper (Large),22,['dynamic programming']
12545,1254500,City Tour (Small),0,[]
12546,1254600,City Tour (Large),0,[]
12547,1254700,Candy Store (Small),18,"['arithmetic', 'dynamic programming', 'greedy', 'mathematics']"
12548,1254800,Candy Store (Large),22,['greedy']
12549,1254900,Travel Plan (Small),0,[]
12550,1255000,Travel Plan (Large),0,[]
12551,1255100,Ninjutsu (Small),0,[]
12552,1255200,Ninjutsu (Large),0,[]
12553,1255300,The Paths of Yin Yang (Small),0,[]
12554,1255400,The Paths of Yin Yang (Large),0,[]
12555,1255500,De-RNG-ed (Small),0,[]
12556,1255600,De-RNG-ed (Large),0,[]
12557,1255700,Fence (Small),15,"['dynamic programming', 'greedy', 'mathematics', 'number theory']"
12558,1255800,Fence (Large),19,"[""dijkstra's"", 'graph theory', 'mathematics', 'number theory']"
12559,1255900,Hot Dog Proliferation (Small),0,[]
12560,1256000,Hot Dog Proliferation (Large),0,[]
12561,1256100,Different Sum (Small),16,"['backtracking', 'implementation']"
12562,1256200,Different Sum (Large),21,['dynamic programming']
12563,1256300,Elegant Diamond (Small),0,[]
12564,1256400,Elegant Diamond (Large),0,[]
12565,1256500,World Cup 2010 (Small),0,[]
12566,1256600,World Cup 2010 (Large),0,[]
12567,1256700,Bacteria (Small),9,[]
12568,1256800,Bacteria (Large),16,"['data structures', 'disjoint set', 'mathematics']"
12569,1256900,Grazing Google Goats (Small),0,[]
12570,1257000,Grazing Google Goats (Large),0,[]
12571,1257100,Rope Intranet (Small),3,"['bruteforcing', 'implementation']"
12572,1257200,Rope Intranet (Large),4,"['bruteforcing', 'implementation']"
12573,1257300,Load Testing (Small),10,[]
12574,1257400,Load Testing (Large),13,[]
12575,1257500,Making Chess Boards (Small),0,[]
12576,1257600,Making Chess Boards (Large),0,[]
12577,1257700,File Fix-it (Small),0,[]
12578,1257800,File Fix-it (Large),0,[]
12579,1257900,Picking Up Chicks (Small),9,[]
12580,1258000,Picking Up Chicks (Large),12,['greedy']
12581,1258100,Your Rank is Pure (Small),10,['dynamic programming']
12582,1258200,Your Rank is Pure (Large),18,"['combinatorics', 'dynamic programming', 'mathematics']"
12583,1258300,Rotate (Small),11,"['bruteforcing', 'implementation', 'simulation']"
12584,1258400,Rotate (Large),11,"['bruteforcing', 'implementation', 'simulation']"
12585,1258500,Make it Smooth (Small),0,[]
12586,1258600,Make it Smooth (Large),0,[]
12587,1258700,Number Game (Small),16,[]
12588,1258800,Number Game (Large),20,"['game theory', 'mathematics', 'number theory']"
12589,1258900,Snapper Chain (Small),6,"['bitmask', 'implementation', 'mathematics', 'simulation']"
12590,1259000,Snapper Chain (Large),7,"['bitmask', 'mathematics']"
12591,1259100,Fair Warning (Small),6,['mathematics']
12592,1259200,Fair Warning (Large),9,"['arbitrary precision / big integers', 'euclidean algorithm', 'mathematics', 'number theory']"
12593,1259300,Theme Park (Small),11,"['implementation', 'simulation']"
12594,1259400,Theme Park (Large),14,"['implementation', 'mathematics', 'simulation']"
12595,1259500,Odd Man Out (Small),5,[]
12596,1259600,Odd Man Out (Large),5,[]
12597,1259700,Get to Work (Small),7,"['greedy', 'implementation', 'sorting']"
12598,1259800,Get to Work (Large),7,"['greedy', 'implementation', 'sorting']"
12599,1259900,Qualification Round (Small),8,"['implementation', 'mathematics']"
12600,1260000,Qualification Round (Large),0,[]
12601,1260100,Polygraph (Small),11,['bruteforcing']
12602,1260200,Polygraph (Large),0,[]
12603,1260300,Store Credit (Small),4,['bruteforcing']
12604,1260400,Store Credit (Large),4,['bruteforcing']
12605,1260500,단어순서 뒤집기,5,"['data structures', 'parsing', 'stack', 'string']"
12606,1260600,Reverse Words (Large),4,"['implementation', 'parsing', 'string']"
12607,1260700,T9 Spelling (Small),5,"['implementation', 'string']"
12608,1260800,T9 Spelling (Large),5,"['implementation', 'string']"
12609,1260900,Year of More Code Jam (Small),17,"['bruteforcing', 'linearity of expectation', 'mathematics', 'probability theory']"
12610,1261000,Year of More Code Jam (Large),21,"['combinatorics', 'linearity of expectation', 'mathematics', 'probability theory']"
12611,1261100,Min Perimeter (Small),0,[]
12612,1261200,Min Perimeter (Large),0,[]
12613,1261300,Doubly-sorted Grid (Small),0,[]
12614,1261400,Doubly-sorted Grid (Large),0,[]
12615,1261500,Wi-fi Towers (Small),11,['bruteforcing']
12616,1261600,Wi-fi Towers (Large),20,['maximum flow']
12617,1261700,Marbles (Small),0,[]
12618,1261800,Marbles (Large),0,[]
12619,1261900,Lights (Small),0,[]
12620,1262000,Lights (Large),0,[]
12621,1262100,EZ-Sokoban (Small),13,"['breadth-first search', 'graph theory', 'graph traversal']"
12622,1262200,EZ-Sokoban (Large),15,"['breadth-first search', 'graph theory', 'graph traversal']"
12623,1262300,Alphabetomials (Small),0,[]
12624,1262400,Alphabetomials (Large),0,[]
12625,1262500,Football Team (Small),0,[]
12626,1262600,Football Team (Large),24,"['depth-first search', 'graph theory', 'graph traversal']"
12627,1262700,Interesting Ranges (Small),0,[]
12628,1262800,Interesting Ranges (Large),0,[]
12629,1262900,Crazy Rows (Small),7,[]
12630,1263000,Crazy Rows (Large),15,"['data structures', 'greedy', 'linked list']"
12631,1263100,A Digging Problem (Small),0,[]
12632,1263200,A Digging Problem (Large),0,[]
12633,1263300,Stock Charts (Small),13,[]
12634,1263400,Stock Charts (Large),19,['bipartite matching']
12635,1263500,Watering Plants (Small),0,[]
12636,1263600,Watering Plants (Large),0,[]
12637,1263700,All Your Base (Small),8,"['greedy', 'mathematics', 'number theory']"
12638,1263800,All Your Base (Large),8,"['greedy', 'mathematics', 'number theory', 'string']"
12639,1263900,Center of Mass (Small),9,"['geometry', 'linear algebra', 'mathematics', 'physics']"
12640,1264000,Center of Mass (Large),9,"['geometry', 'mathematics', 'physics', 'ternary search']"
12641,1264100,Bribe the Prisoners (Small),7,"['backtracking', 'bruteforcing']"
12642,1264200,Bribe the Prisoners (Large),15,"['dynamic programming', 'sorting']"
12643,1264300,Decision Tree (Small),13,"['parsing', 'string', 'tree']"
12644,1264400,Decision Tree (Large),13,"['parsing', 'string', 'tree']"
12645,1264500,The Next Number (Small),5,"['bruteforcing', 'greedy']"
12646,1264600,The Next Number (Large),11,"['greedy', 'implementation', 'string']"
12647,1264700,Square Math (Small),19,[]
12648,1264800,Square Math (Large),18,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal', 'implementation']"
12649,1264900,Multi-base happiness (Small),6,"['bruteforcing', 'implementation']"
12650,1265000,Multi-base happiness (Large),14,"['dynamic programming', 'precomputation']"
12651,1265100,Crossing the Road (Small),0,[]
12652,1265200,Crossing the Road (Large),0,[]
12653,1265300,Collecting Cards (Small),9,[]
12654,1265400,Collecting Cards (Large),15,"['combinatorics', 'dynamic programming', 'gaussian elimination', 'linear algebra', 'mathematics', 'probability theory']"
12655,1265500,Alien Language (Small),7,"['bruteforcing', 'parsing', 'string']"
12656,1265600,Alien Language (Large),10,"['bruteforcing', 'parsing', 'string']"
12657,1265700,Watersheds (Small),9,"['backtracking', 'breadth-first search', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
12658,1265800,Watersheds (Large),9,"['breadth-first search', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
12659,1265900,Welcome to Code Jam (Small),8,"['backtracking', 'bruteforcing', 'dynamic programming']"
12660,1266000,Welcome to Code Jam (Large),10,"['dynamic programming', 'string']"
12661,1266100,Juice (Small),11,[]
12662,1266200,Juice (Large),19,"['sliding window', 'ternary search']"
12663,1266300,Ping Pong Balls (Small),13,"['graph theory', 'graph traversal']"
12664,1266400,Ping Pong Balls (Large),22,"['linear algebra', 'mathematics']"
12665,1266500,Mine Layer (Small),17,['bruteforcing']
12666,1266600,Mine Layer (Large),23,[]
12667,1266700,Bridge Builders (Small),18,"['graph theory', 'minimum spanning tree']"
12668,1266800,Bridge Builders (Large),23,"['breadth-first search', 'graph theory', 'graph traversal', 'minimum spanning tree']"
12669,1266900,The Year of Code Jam (Small),21,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
12670,1267000,The Year of Code Jam (Large),25,"['maximum flow', 'max-flow min-cut theorem']"
12671,1267100,Scaled Triangle (Small),0,[]
12672,1267200,삼각형 변환 (Large),0,[]
12673,1267300,Painting a Fence (Small),0,[]
12674,1267400,Painting a Fence (Large),0,[]
12675,1267500,Rainbow Trees (Small),0,[]
12676,1267600,Rainbow Trees (Large),0,[]
12677,1267700,Bus Stops (Small),0,[]
12678,1267800,Bus Stops (Large),0,[]
12679,1267900,Mixing Bowls (Small),10,[]
12680,1268000,Mixing Bowls (Large),15,[]
12681,1268100,Code Sequence (Small),9,[]
12682,1268200,Code Sequence (Large),0,[]
12683,1268300,Test Passing Probability (Small),7,[]
12684,1268400,Test Passing Probability (Large),13,"['dynamic programming', 'greedy']"
12685,1268500,King (Small),19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'game theory', 'sprague–grundy theorem']"
12686,1268600,King (Large),0,[]
12687,1268700,What are Birds? (Small),13,[]
12688,1268800,What are Birds? (Large),14,"['ad-hoc', 'geometry']"
12689,1268900,Apocalypse Soon (Small),0,[]
12690,1269000,Apocalypse Soon (Large),0,[]
12691,1269100,Millionaire (Small),8,[]
12692,1269200,Millionaire (Large),18,"['dynamic programming', 'mathematics', 'probability theory']"
12693,1269300,Modern Art Plagiarism (Small),16,"['bruteforcing', 'graph theory', 'graph traversal', 'tree']"
12694,1269400,Modern Art Plagiarism (Large),23,[]
12695,1269500,How Big Are the Pockets? (Small),0,[]
12696,1269600,How Big Are the Pockets? (Large),0,[]
12697,1269700,Portal (Small),13,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
12698,1269800,Portal (Large),17,"['0-1 bfs', 'breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
12699,1269900,Igra,12,[]
12700,1270000,Poklon,18,"['ad-hoc', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'tree']"
12701,1270100,Endless Knight (Small),12,['dynamic programming']
12702,1270200,Endless Knight (Large),21,"['combinatorics', 'inclusion and exclusion', 'lucas theorem', 'mathematics', 'number theory']"
12703,1270300,Cheating a Boolean Tree (Small),10,[]
12704,1270400,Cheating a Boolean Tree (Large),14,[]
12705,1270500,Triangle Areas (Small),8,"['bruteforcing', 'constructive', 'geometry']"
12706,1270600,Triangle Areas (Large),12,"['constructive', 'geometry', 'mathematics', 'number theory']"
12707,1270700,Star Wars (Small),16,"['geometry', 'geometry; 3d', 'mathematics', 'ternary search']"
12708,1270800,Star Wars (Large),16,"['geometry', 'geometry; 3d', 'mathematics', 'ternary search']"
12709,1270900,PermRLE (Small),7,"['bruteforcing', 'string']"
12710,1271000,PermRLE (Large),17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
12711,1271100,Text Messaging Outrage (Small),6,"['bruteforcing', 'greedy']"
12712,1271200,Text Messaging Outrage (Large),7,"['greedy', 'sorting']"
12713,1271300,Ugly Numbers (Small),8,"['backtracking', 'bruteforcing', 'dynamic programming', 'mathematics']"
12714,1271400,Ugly Numbers (Large),15,"['dynamic programming', 'mathematics', 'number theory']"
12715,1271500,Increasing Speed Limits (Small),8,['dynamic programming']
12716,1271600,Increasing Speed Limits (Large),16,"['value / coordinate compression', 'data structures', 'dynamic programming', 'segment tree']"
12717,1271700,Crop Triangles (Small),6,['bruteforcing']
12718,1271800,Crop Triangles (Large),10,"['combinatorics', 'mathematics', 'number theory']"
12719,1271900,Number Sets (Small),10,"['implementation', 'mathematics', 'number theory', 'primality test']"
12720,1272000,Number Sets (Large),16,"['data structures', 'disjoint set', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
12721,1272100,Mousetrap (Small),8,[]
12722,1272200,Mousetrap (Large),17,"['data structures', 'dynamic programming', 'implementation', 'segment tree']"
12723,1272300,Minimum Scalar Product (Small),6,"['bruteforcing', 'greedy', 'mathematics', 'sorting']"
12724,1272400,Minimum Scalar Product (Large),7,"['greedy', 'sorting']"
12725,1272500,Milkshakes (Small),7,"['bitmask', 'bruteforcing']"
12726,1272600,Milkshakes (Large),10,[]
12727,1272700,Numbers (Small),12,"['arbitrary precision / big integers', 'mathematics', 'precomputation']"
12728,1272800,n제곱 계산,20,"['exponentiation by squaring', 'mathematics']"
12729,1272900,Saving the Universe (Small),8,"['bitmask', 'data structures', 'dynamic programming', 'greedy', 'set / map by hashing', 'string']"
12730,1273000,Saving the Universe (Large),9,"['bit set', 'data structures', 'dynamic programming', 'greedy', 'set / map by hashing', 'string']"
12731,1273100,열차 시간표(Small),11,"['data structures', 'greedy', 'implementation', 'priority queue', 'simulation', 'sorting']"
12732,1273200,열차 시간표(Large),11,"['data structures', 'greedy', 'implementation', 'priority queue', 'simulation', 'sorting']"
12733,1273300,Fly Swatter (Small),20,"['calculus', 'geometry', 'mathematics', 'probability theory']"
12734,1273400,Fly Swatter (Large),20,"['calculus', 'geometry', 'mathematics', 'probability theory']"
12735,1273500,Boat,23,"['combinatorics', 'dynamic programming', 'mathematics']"
12736,1273600,Fireworks,25,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'priority queue', 'slope trick', 'smaller to larger technique', 'tree']"
12738,1273800,가장 긴 증가하는 부분 수열 3,14,"['binary search', 'longest increasing sequence in o(n log n)']"
12739,1273900,돌림판 (Small),8,"['implementation', 'simulation']"
12740,1274000,돌림판 (Large),20,[]
12741,1274100,쓰담쓰담,16,"['data structures', 'segment tree']"
12742,1274200,혼합물 (Small),16,"['mathematics', 'ternary search']"
12743,1274300,혼합물 (Large),17,['ternary search']
12744,1274400,팬케이크 쌓기,13,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing']"
12745,1274500,Traffic (Small),17,"['lowest common ancestor', 'prefix sum', 'tree']"
12746,1274600,Traffic (Large),19,"['lowest common ancestor', 'prefix sum', 'tree']"
12747,1274700,색칠 공부 (Small),15,"['backtracking', 'bruteforcing', 'data structures', 'set / map by trees']"
12748,1274800,색칠 공부 (Large),25,"[""burnside's lemma"", 'combinatorics', 'mathematics']"
12749,1274900,Bosses,16,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal', 'tree']"
12750,1275000,Park,22,"['data structures', 'disjoint set', 'geometry', 'graph theory', 'offline queries']"
12751,1275100,Spiral,22,[]
12752,1275200,도시들,22,"['bitmask', ""dijkstra's"", 'graph theory']"
12753,1275300,Maze,0,[]
12754,1275400,스왑,24,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'greedy', 'tree']"
12755,1275500,수면 장애,6,"['bruteforcing', 'implementation', 'mathematics']"
12756,1275600,고급 여관,3,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
12757,1275700,전설의 JBNU,13,"['binary search', 'data structures', 'set / map by hashing']"
12758,1275800,천상용섬,15,"['dynamic programming', 'mathematics', 'number theory']"
12759,1275900,틱! 택! 토!,5,"['case work', 'implementation', 'simulation']"
12760,1276000,최후의 승자는 누구?,6,"['implementation', 'simulation', 'sorting']"
12761,1276100,돌다리,10,"['breadth-first search', 'graph theory', 'graph traversal']"
12762,1276200,롤러코스터,12,['dynamic programming']
12763,1276300,지각하면 안 돼,14,"['depth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
12764,1276400,싸지방에 간 준하,13,"['data structures', 'implementation', 'priority queue', 'simulation']"
12765,1276500,Balanced Diet,22,"['data structures', 'greedy', 'mathematics', 'priority queue']"
12766,1276600,지사 배정,21,"['graph theory', ""dijkstra's"", 'divide and conquer', 'dynamic programming', 'divide and conquer optimization', 'prefix sum']"
12767,1276700,Ceiling Function,15,"['data structures', 'set / map by hashing', 'tree']"
12768,1276800,Clock Breaking,20,[]
12769,1276900,영원한 젊음,19,[]
12770,1277000,Longest Rivers,25,"['data structures', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'greedy', 'priority queue', 'sweeping', 'tree']"
12771,1277100,Oil,21,"['geometry', 'sorting', 'sweeping']"
12772,1277200,Polygonal Puzzle,30,"['geometry', 'implementation']"
12773,1277300,Road Times,25,['linear programming']
12774,1277400,Spin Doctor,25,"['binary search', 'geometry']"
12775,1277500,String Theory,19,"['ad-hoc', 'dynamic programming', 'greedy']"
12776,1277600,Swap Space,17,['greedy']
12777,1277700,What Really Happened on Mars?,23,[]
12778,1277800,CTP공국으로 이민 가자,4,['implementation']
12779,1277900,상품 is 뭔들,8,"['euclidean algorithm', 'mathematics', 'number theory']"
12780,1278000,원피스,4,"['implementation', 'string']"
12781,1278100,PIZZA ALVOLOC,13,"['geometry', 'line segment intersection check']"
12782,1278200,비트 우정지수,7,"['greedy', 'mathematics']"
12783,1278300,곱셈 게임,14,"['dynamic programming', 'mathematics']"
12784,1278400,인하니카 공화국,13,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
12785,1278500,토쟁이의 등굣길,10,"['combinatorics', 'dynamic programming', 'mathematics']"
12786,1278600,INHA SUIT,12,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
12787,1278700,지금 밥이 문제냐,6,"['implementation', 'parsing', 'string']"
12788,1278800,제 2회 IUPC는 잘 개최될 수 있을까?,7,"['greedy', 'sorting']"
12789,1278900,도키도키 간식드리미,7,"['data structures', 'stack']"
12790,1279000,Mini Fantasy War,3,"['arithmetic', 'implementation', 'mathematics']"
12791,1279100,Starman,5,"['implementation', 'precomputation']"
12792,1279200,주작 주 주작,10,"['mathematics', 'number theory']"
12793,1279300,블록 게임,15,"['graph theory', 'graph traversal', 'implementation']"
12794,1279400,위대한 믹싱 가요제,22,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'implementation', 'string', 'suffix array and lcp array']"
12795,1279500,반평면 땅따먹기,21,"['convex hull trick', 'dynamic programming']"
12796,1279600,나의 행렬곱셈 답사기,10,"['ad-hoc', 'constructive', 'mathematics']"
12797,1279700,연금술,21,"['berlekamp–massey', 'dynamic programming', 'exponentiation by squaring', 'mathematics']"
12798,1279800,게나디는 머리가 좋습니다,21,"['data structures', 'multidimensional segment tree', 'prefix sum', 'segment tree']"
12799,1279900,Dijamant,22,[]
12800,1280000,Palinilap,22,[]
12801,1280100,중계 신호,24,"['binary search', 'convex hull', 'geometry']"
12802,1280200,Torrent,21,"['binary search', 'dynamic programming', 'dynamic programming on trees', 'tree']"
12803,1280300,Peter and the Textbook,9,"['binary search', 'bruteforcing', 'data structures', 'implementation', 'segment tree', 'simulation']"
12804,1280400,Gregory and Bank,11,['sorting']
12805,1280500,Name Generator,11,[]
12806,1280600,T-shirts,20,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'greedy']"
12807,1280700,Bridge testing,0,[]
12808,1280800,Binary String,0,[]
12809,1280900,Train in a Tunnel,8,['greedy']
12810,1281000,Beautiful Partition,0,[]
12811,1281100,Problem Preparation,0,[]
12812,1281200,Similar Subways,23,[]
12813,1281300,이진수 연산,4,['string']
12814,1281400,Hyperways,0,[]
12815,1281500,Dynamic memory allocation,21,[]
12816,1281600,Shades of the town,21,"['aho-corasick', 'data structures', 'tree', 'trie']"
12817,1281700,버스 노선,16,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
12818,1281800,Investigation,26,[]
12819,1281900,New Tree,0,[]
12820,1282000,Cubic Art,20,"['ad-hoc', 'data structures', 'implementation', 'segment tree']"
12821,1282100,Universities,0,[]
12822,1282200,Wall,19,['dynamic programming']
12823,1282300,Critical Projects,22,"['graph theory', 'topological sorting']"
12824,1282400,Connect Highways,0,[]
12825,1282500,Next Permutation,15,['ad-hoc']
12826,1282600,Game,0,[]
12827,1282700,Posters,26,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
12828,1282800,Sorting,16,"['data structures', 'dynamic programming', 'segment tree', 'sorting']"
12829,1282900,Mission,19,[]
12830,1283000,Newspapers,21,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'parametric search', 'tree']"
12831,1283100,An inexperienced slalomer,0,[]
12832,1283200,Tickets,0,[]
12833,1283300,XORXORXOR,5,"['bitmask', 'mathematics']"
12834,1283400,주간 미팅,12,"[""dijkstra's"", 'graph theory']"
12835,1283500,삼거리,14,['ad-hoc']
12836,1283600,가계부 (Easy),4,['implementation']
12837,1283700,가계부 (Hard),15,"['segment tree', 'data structures']"
12838,1283800,London Underground,0,[]
12839,1283900,카드 정리 2,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
12840,1284000,창용이의 시계,3,"['arithmetic', 'implementation', 'mathematics']"
12841,1284100,정보대 등산,8,[]
12842,1284200,튀김 소보루,9,"['bruteforcing', 'implementation']"
12843,1284300,복수전공,18,['bipartite matching']
12844,1284400,XOR,18,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
12845,1284500,모두의 마블,8,['greedy']
12846,1284600,무서운 아르바이트,16,"['data structures', 'divide and conquer', 'segment tree', 'stack']"
12847,1284700,꿀 아르바이트,7,"['prefix sum', 'sliding window']"
12848,1284800,막대기 게임,17,['game theory']
12849,1284900,본대 산책,10,"['dynamic programming', 'graph theory']"
12850,1285000,본대 산책2,15,"['exponentiation by squaring', 'graph theory', 'mathematics']"
12851,1285100,숨바꼭질 2,12,"['breadth-first search', 'graph theory', 'graph traversal']"
12852,1285200,1로 만들기 2,10,"['dynamic programming', 'graph theory', 'graph traversal']"
12853,1285300,Aurora Borealis,16,"['binary search', 'greedy', 'parametric search']"
12854,1285400,홍준이는 물리를 좋아해,13,['greedy']
12855,1285500,홍준이는 FFT를 좋아해,19,"['randomization', 'square root decomposition']"
12856,1285600,홍준이는 색칠을 좋아해,21,['square root decomposition']
12857,1285700,홍준이는 문자열을 좋아해,19,"['data structures', 'hashing', 'set / map by hashing', 'square root decomposition', 'string', 'two-pointer']"
12858,1285800,Range GCD,20,"['data structures', 'euclidean algorithm', 'segment tree with lazy propagation', 'mathematics', 'number theory', 'segment tree']"
12859,1285900,점프하는 민호,15,"['data structures', 'dynamic programming', 'set / map by hashing', 'mathematics', 'number theory']"
12860,1286000,나머지 게임,0,[]
12861,1286100,죄수에게 주는 뇌물,15,['dynamic programming']
12862,1286200,Love Triangles,19,"['combinatorics', 'graph theory', 'graph traversal', 'mathematics']"
12863,1286300,Clash of Snakes,12,"['case work', 'combinatorics', 'mathematics']"
12864,1286400,사서왕 준서,14,['dynamic programming']
12865,1286500,평범한 배낭,11,"['dynamic programming', 'knapsack']"
12866,1286600,피노키오,5,"['arithmetic', 'combinatorics', 'mathematics']"
12867,1286700,N차원 여행,9,"['value / coordinate compression', 'sorting']"
12868,1286800,문자열 찾기,0,[]
12869,1286900,뮤탈리스크,12,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
12870,1287000,뮤탈리스크 2,21,"['bit set', 'dynamic programming', 'mathematics', 'parametric search']"
12871,1287100,무한 문자열,6,"['implementation', 'mathematics', 'string']"
12872,1287200,플레이리스트,15,['dynamic programming']
12873,1287300,기념품,7,"['data structures', 'implementation', 'queue', 'simulation']"
12874,1287400,괄호 문자열 만들기,17,['dynamic programming']
12875,1287500,칙령,12,"['floyd–warshall', 'graph theory']"
12876,1287600,반평면 땅따먹기 2,23,"['convex hull trick', 'data structures', 'disjoint set', 'divide and conquer', 'dynamic programming', 'graph theory', 'offline dynamic connectivity', 'offline queries', 'segment tree']"
12877,1287700,먹이 사슬,17,"['data structures', 'disjoint set']"
12878,1287800,Blocks,13,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
12879,1287900,카드 세트,0,[]
12880,1288000,그래프 차이 최소,17,"['binary search', 'graph theory', 'strongly connected component', 'two-pointer']"
12881,1288100,Distance,0,[]
12882,1288200,Archaeological Research,0,[]
12883,1288300,Journey,0,[]
12884,1288400,A Lot of Games,17,"['case work', 'game theory']"
12885,1288500,Fox and Card Game,17,"['ad-hoc', 'game theory', 'greedy']"
12886,1288600,돌 그룹,12,"['breadth-first search', 'graph theory', 'graph traversal']"
12887,1288700,경로 게임,11,"['breadth-first search', 'game theory', 'graph theory', 'graph traversal']"
12888,1288800,완전 이진 트리 도로 네트워크,12,"['dynamic programming', 'graph theory', 'mathematics']"
12889,1288900,특별한 문자열,14,"['backtracking', 'string']"
12890,1289000,정수 찾기,19,"['backtracking', 'dynamic programming', 'greedy']"
12891,1289100,DNA 비밀번호,8,"['sliding window', 'string']"
12892,1289200,생일 선물,12,"['sorting', 'two-pointer']"
12893,1289300,적의 적,12,"['bipartite graph', 'data structures', 'disjoint set', 'graph theory', 'graph traversal']"
12894,1289400,Equivalent Strings,18,['divide and conquer']
12895,1289500,화려한 마을,18,"['bitmask', 'data structures', 'segment tree with lazy propagation', 'segment tree']"
12896,1289600,스크루지 민호,14,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
12897,1289700,Candy,9,['mathematics']
12898,1289800,Selling RNA Strands,23,"['data structures', 'offline queries', 'segment tree', 'string', 'tree', 'trie']"
12899,1289900,데이터 구조,17,"['data structures', 'segment tree']"
12900,1290000,Cheating a Boolean Tree,15,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
12901,1290100,Number Sets,14,[]
12902,1290200,Alice and Bob,13,"['euclidean algorithm', 'mathematics', 'number theory']"
12903,1290300,공 색칠하기,13,"['combinatorics', 'mathematics']"
12904,1290400,A와 B,11,"['greedy', 'implementation', 'string']"
12905,1290500,거짓말쟁이,0,[]
12906,1290600,새로운 하노이 탑,13,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing']"
12907,1290700,동물원,11,"['combinatorics', 'mathematics']"
12908,1290800,텔레포트 3,11,"['backtracking', 'bruteforcing', 'graph theory']"
12909,1290900,그래프 만들기,15,['dynamic programming']
12910,1291000,사탕 나눠주기,8,"['combinatorics', 'mathematics']"
12911,1291100,좋아하는 배열,14,"['dynamic programming', 'mathematics', 'number theory', 'prefix sum']"
12912,1291200,트리 수정,15,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
12913,1291300,매직 포션,14,"[""dijkstra's"", 'graph theory']"
12914,1291400,곰을 위한 레스토랑,13,"['data structures', 'set / map by trees']"
12915,1291500,대회 개최,9,"['binary search', 'greedy']"
12916,1291600,K-Path,15,"['exponentiation by squaring', 'graph theory', 'mathematics']"
12917,1291700,문자열 함수 계산,20,"['data structures', 'string', 'suffix array and lcp array']"
12918,1291800,정리정돈,21,"['maximum flow', 'geometry', 'minimum cost maximum flow']"
12919,1291900,A와 B 2,11,"['bruteforcing', 'implementation', 'recursion', 'string']"
12920,1292000,평범한 배낭 2,17,"['dynamic programming', 'knapsack', 'mathematics']"
12921,1292100,제한된 메모리,20,"['binary search', 'parallel binary search']"
12922,1292200,블록 퍼즐,18,"['maximum flow', 'max-flow min-cut theorem']"
12923,1292300,별 모으기,0,[]
12924,1292400,멋진 쌍,11,"['bruteforcing', 'mathematics']"
12925,1292500,Numbers,20,"['exponentiation by squaring', 'mathematics']"
12926,1292600,쉽게 제한된 메모리,19,"['binary search', 'parallel binary search']"
12927,1292700,배수 스위치,7,['greedy']
12928,1292800,트리와 경로의 길이,17,"['dynamic programming', 'tree']"
12929,1292900,빌딩 높이,13,"['binary search', 'greedy']"
12930,1293000,두 가중치,16,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
12931,1293100,두 배 더하기,11,['greedy']
12932,1293200,노래방,16,['dynamic programming']
12933,1293300,오리,8,"['greedy', 'implementation', 'string']"
12934,1293400,턴 게임,11,"['greedy', 'mathematics']"
12935,1293500,트리와 경로의 길이 2,17,['constructive']
12936,1293600,영웅은 죽지 않아요,22,"['maximum flow', 'max-flow min-cut theorem']"
12937,1293700,좋아하는 배열 2,23,"['berlekamp–massey', 'dynamic programming', 'mathematics']"
12938,1293800,곱으로 분해하기,14,"['combinatorics', 'mathematics', 'number theory', 'primality test']"
12939,1293900,부분 문자열,20,"['aho-corasick', 'bitmask', 'data structures', 'dynamic programming', 'dynamic programming using bitfield', 'knuth–morris–pratt', 'string', 'tree', 'trie']"
12940,1294000,에너지 관리,0,[]
12941,1294100,동전 게임,19,"['game theory', 'sprague–grundy theorem']"
12942,1294200,원 위의 춤,17,"['data structures', 'offline queries', 'stack']"
12943,1294300,노래방 2,0,[]
12944,1294400,재미있는 숫자 놀이,15,"['bitmask', 'euclidean algorithm', 'inclusion and exclusion', 'mathematics', 'number theory']"
12945,1294500,재미있는 박스 정리,13,['greedy']
12946,1294600,육각 보드,13,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics']"
12947,1294700,트리 만들기,11,"['ad-hoc', 'tree']"
12948,1294800,문자열의 개수,0,[]
12949,1294900,로봇의 이동,0,[]
12950,1295000,팰린드롬 보행,16,"['dynamic programming', 'graph theory', 'graph traversal']"
12951,1295100,경기 결과,17,[]
12952,1295200,숫자 자물쇠,0,[]
12953,1295300,숫자 자물쇠 2,0,[]
12954,1295400,비트 문자열 뒤집기,0,[]
12955,1295500,팰린드롬 부분 문자열,17,"['bruteforcing', 'combinatorics', 'graph theory', 'graph traversal', 'inclusion and exclusion', 'mathematics', 'recursion']"
12956,1295600,퍼레이드,13,"['floyd–warshall', 'graph theory']"
12957,1295700,보행의 개수,0,[]
12958,1295800,단순 사이클의 개수,0,[]
12959,1295900,방향판,20,"['maximum flow', 'hungarian', 'minimum cost maximum flow']"
12960,1296000,체스판,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
12961,1296100,체스판 2,21,['maximum flow']
12962,1296200,나무 자르기,0,[]
12963,1296300,달리기,18,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'greedy']"
12964,1296400,점수의 합,0,[]
12965,1296500,빨간 선분 파란 선분,21,"['maximum flow', 'geometry', 'max-flow min-cut theorem']"
12966,1296600,턴 게임 2,13,['greedy']
12967,1296700,pqr,15,"['mathematics', 'prefix sum']"
12968,1296800,방문,9,"['ad-hoc', 'mathematics']"
12969,1296900,ABC,15,['dynamic programming']
12970,1297000,AB,12,"['constructive', 'greedy', 'implementation', 'mathematics']"
12971,1297100,숫자 놀이,7,"['bruteforcing', 'chinese remainder theorem', 'mathematics', 'number theory']"
12972,1297200,GCD 테이블,15,"['ad-hoc', 'mathematics', 'number theory']"
12973,1297300,Array GCD,17,"['dynamic programming', 'mathematics', 'number theory', 'primality test', 'two-pointer']"
12974,1297400,시간 여행과 Multiset,19,"['value / coordinate compression', 'data structures', 'offline queries', 'segment tree']"
12975,1297500,트라이슬,15,"['dynamic programming', 'knapsack']"
12976,1297600,돌 옮기기,0,[]
12977,1297700,원 위의 점,15,"['calculus', 'mathematics', 'probability theory']"
12978,1297800,스크루지 민호 2,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
12979,1297900,종이 접기,12,[]
12980,1298000,좋아하는 수열,12,['bruteforcing']
12981,1298100,공 포장하기,7,"['case work', 'greedy', 'mathematics']"
12982,1298200,공 포장하기 2,14,"['bruteforcing', 'greedy', 'prefix sum', 'sorting']"
12983,1298300,Set Definition,14,"['data structures', 'dynamic programming', 'graph theory', 'graph traversal', 'priority queue', 'two-pointer']"
12984,1298400,문자열의 분할,0,[]
12985,1298500,비밀 회선,0,[]
12986,1298600,화려한 마을2,19,"['data structures', ""mo's"", 'offline queries', 'segment tree']"
12987,1298700,Matrix Again,14,"['exponentiation by squaring', 'mathematics']"
12988,1298800,주식 차트,19,['bipartite matching']
12989,1298900,LCS Again,23,[]
12990,1299000,A Heap of Heaps,20,"['data structures', 'merge sort tree', 'segment tree', 'sorting']"
12991,1299100,홍준이의 행렬,13,['binary search']
12992,1299200,홍준이의 교집합,0,[]
12993,1299300,이동3,9,"['mathematics', 'number theory']"
12994,1299400,이동3-2,11,"['mathematics', 'number theory']"
12995,1299500,트리나라,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
12996,1299600,Acka,12,['dynamic programming']
12997,1299700,철인 2종 경기,0,[]
12998,1299800,꽃 장식하기,0,[]
12999,1299900,화려한 마을3,20,"[""mo's"", 'offline queries']"
13000,1300000,홍준이와 가능한 집합,0,[]
13001,1300100,홍준이와 직사각형,0,[]
13002,1300200,Happy Cow,13,['dynamic programming']
13003,1300300,배수열,14,"['dynamic programming', 'mathematics', 'number theory']"
13004,1300400,비밀 임무,0,[]
13005,1300500,행복한 나무,17,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
13006,1300600,키위쥬스,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
13007,1300700,ntopia,16,"['combinatorics', ""fermat's little theorem"", 'mathematics', 'number theory']"
13008,1300800,특수 능력,15,"[""dijkstra's"", 'graph theory']"
13009,1300900,특수 능력 2,21,[]
13010,1301000,h(n),15,"['binary search', 'mathematics', 'number theory']"
13011,1301100,사탕의 밀도,10,"['mathematics', 'ternary search']"
13012,1301200,접미사 배열 1,17,"['string', 'suffix array and lcp array']"
13013,1301300,접미사 배열 2,15,"['string', 'suffix array and lcp array']"
13014,1301400,동혁이의 이동,0,[]
13015,1301500,별 찍기 - 23,6,['implementation']
13016,1301600,내 왼손에는 흑염룡이 잠들어 있다,16,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
13017,1301700,특이한 수,0,[]
13018,1301800,특이한 수열,12,"['ad-hoc', 'constructive', 'mathematics']"
13019,1301900,A를 B로,11,['greedy']
13020,1302000,좋은 집합,0,[]
13021,1302100,공 색칠하기,11,"['combinatorics', 'mathematics']"
13022,1302200,늑대와 올바른 단어,9,"['implementation', 'string']"
13023,1302300,ABCDE,11,"['depth-first search', 'graph theory', 'graph traversal']"
13024,1302400,서브 트리의 크기,17,"['dynamic programming', 'dynamic programming on trees', 'tree']"
13025,1302500,숫자 골라내기,17,"['ad-hoc', 'case work', 'constructive', 'mathematics']"
13026,1302600,저녁 식사,0,[]
13027,1302700,Clique Problem,14,"['dynamic programming', 'greedy', 'sorting', 'sweeping']"
13028,1302800,민호의 소원,0,[]
13029,1302900,홍준이와 반물질,16,['dynamic programming']
13030,1303000,홍준이와 트리,18,"['data structures', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
13031,1303100,쉽게 행복한 나무,17,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
13032,1303200,PS 테러리스트,0,[]
13033,1303300,홍준이와 트리2,0,[]
13034,1303400,다각형 게임,18,"['game theory', 'sprague–grundy theorem']"
13035,1303500,Rectangle and Squares,5,"['arithmetic', 'mathematics']"
13036,1303600,Zeroes and Ones,9,['greedy']
13037,1303700,New Track,0,[]
13038,1303800,Tree,20,"['data structures', 'lowest common ancestor', 'segment tree', 'tree']"
13039,1303900,Barbarians,0,[]
13040,1304000,Important Test,5,[]
13041,1304100,Centipede,0,[]
13042,1304200,Binary Tree,0,[]
13043,1304300,Containers and Reagents,0,[]
13044,1304400,Money Exchange,0,[]
13045,1304500,"Elimination Round, Problem F",0,[]
13046,1304600,Secret Code,8,[]
13047,1304700,Chaos,6,['greedy']
13048,1304800,New Adventure of Marty and Doc,0,[]
13049,1304900,Teams Creation,0,[]
13050,1305000,Maximal Sum,0,[]
13051,1305100,Fancy Antiques,23,['bruteforcing']
13052,1305200,Alternative Bracket Notation,20,['dynamic programming']
13053,1305300,Greetings!,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
13054,1305400,Programming Team,22,"['binary search', 'dynamic programming', 'dynamic programming on trees', 'tree']"
13055,1305500,K-Inversions,21,"['fast fourier transform', 'mathematics']"
13056,1305600,Mountain Scenes,13,['dynamic programming']
13057,1305700,Symmetry,0,[]
13058,1305800,Jewel Thief,23,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'monotone queue optimization']"
13059,1305900,Tourists,16,"['lowest common ancestor', 'tree']"
13060,1306000,Whiteboard,0,[]
13061,1306100,YATP,0,[]
13062,1306200,2016 KBO 한국시리즈 우승팀,0,[]
13063,1306300,Lobby,3,"['implementation', 'mathematics']"
13064,1306400,Cameras,4,"['implementation', 'string']"
13065,1306500,Robot,16,"['breadth-first search', 'graph theory', 'graph traversal']"
13066,1306600,Laser Game,0,[]
13067,1306700,Billboard,0,[]
13068,1306800,Funfair,19,"['dynamic programming', 'greedy', 'mathematics', 'sorting']"
13069,1306900,Beehive,0,[]
13070,1307000,DNA Sequencing,0,[]
13071,1307100,Cafebazaar,20,"['circulation', 'maximum flow', 'minimum cost maximum flow']"
13072,1307200,Fence,0,[]
13073,1307300,Sums,3,"['arithmetic', 'mathematics']"
13074,1307400,Musican Notes,11,"['combinatorics', 'dynamic programming', 'mathematics']"
13075,1307500,Fibonacci Sequence,14,"['exponentiation by squaring', 'mathematics']"
13076,1307600,Distinct rational numbers,14,"['euler totient function', 'mathematics', 'number theory', 'prefix sum']"
13077,1307700,Sequence,10,"['mathematics', 'tree']"
13078,1307800,History-Cleanable DFA,0,[]
13079,1307900,Partitioning a Queue,11,"['dynamic programming', 'knapsack']"
13080,1308000,Brocard Point,19,"['binary search', 'geometry']"
13081,1308100,RATS,11,"['arbitrary precision / big integers', 'implementation', 'mathematics', 'simulation']"
13082,1308200,M and A,9,"['string', 'two-pointer']"
13083,1308300,Change a Password,11,"['backtracking', 'bruteforcing']"
13084,1308400,Delete Files,15,"['ad-hoc', 'greedy']"
13085,1308500,Line Gimmick,12,['ad-hoc']
13086,1308600,Shifting a Matrix,15,['implementation']
13087,1308700,Modern Announce Network,17,[]
13088,1308800,Cube Dividing,21,"['ad-hoc', 'graph theory', 'graph traversal', 'implementation']"
13089,1308900,Donut Decoration,17,"['data structures', 'hashing', 'segment tree with lazy propagation', 'segment tree']"
13090,1309000,Shortest Bridge,28,[]
13091,1309100,Longest Shortest Path,25,"['maximum flow', 'linear programming', 'minimum cost maximum flow']"
13092,1309200,Optimal Tournament,21,"['dynamic programming', 'knuth optimization']"
13093,1309300,North North West,8,"['implementation', 'mathematics']"
13094,1309400,Unknown Switches,9,"['implementation', 'simulation']"
13095,1309500,Speedrun,0,[]
13096,1309600,Flowers,22,"['duality', 'greedy', 'knapsack', 'linear programming', 'mathematics']"
13097,1309700,Square in Circles,0,[]
13098,1309800,Reverse a Road II,18,"['maximum flow', 'graph theory']"
13099,1309900,Cookie Counter,17,"['combinatorics', 'dynamic programming', 'inclusion and exclusion', 'mathematics']"
13100,1310000,Points and Lines,15,"['data structures', 'set / map by hashing', 'implementation', 'parsing', 'stack', 'string']"
13101,1310100,Color the Map Extreme,0,[]
13102,1310200,Website Tour,0,[]
13103,1310300,Idempotent Filter,13,"['bitmask', 'bruteforcing']"
13116,1311600,30번,7,"['lowest common ancestor', 'mathematics', 'tree']"
13117,1311700,가위바위보,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics', 'probability theory']"
13118,1311800,뉴턴과 사과,2,['implementation']
13119,1311900,Mountains Beyond Mountains,6,['implementation']
13120,1312000,트리의 변화,21,"['dynamic programming', 'dynamic programming on trees', 'tree']"
13121,1312100,이진 탐색,22,"['greedy', 'mathematics']"
13122,1312200,별빛이 내린다,25,[]
13123,1312300,계산 실수,22,"['data structures', 'segment tree']"
13124,1312400,순열 그래프의 전갈성 판별,17,"['case work', 'graph theory']"
13125,1312500,Checkpoint,21,[]
13126,1312600,The Show Must Go On,21,"['data structures', 'segment tree', 'sweeping']"
13127,1312700,도박과 사각형,21,"['combinatorics', 'linearity of expectation', 'mathematics', 'prefix sum', 'probability theory']"
13128,1312800,특수부대 CH,0,[]
13129,1312900,Disposable Cup,3,"['arithmetic', 'implementation', 'mathematics']"
13130,1313000,FunctionCup,20,"['bitmask', 'combinatorics', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics']"
13131,1313100,HicCup,0,"['arithmetic', 'mathematics', 'implementation']"
13132,1313200,World Cup,12,"['bruteforcing', 'mathematics', 'probability theory']"
13133,1313300,Aurora Princess,6,['implementation']
13134,1313400,Baseball Watching,18,['bruteforcing']
13135,1313500,Corrupt Election,16,"['value / coordinate compression', 'mathematics']"
13136,1313600,Do Not Touch Anything,2,"['arithmetic', 'mathematics']"
13137,1313700,Exchange Problem,18,"['dynamic programming', 'greedy']"
13138,1313800,Fairies' Sorcery,22,"['data structures', 'hashing', 'set / map by hashing', 'linked list', 'mathematics', 'segment tree']"
13139,1313900,Grid Forest,19,"['ad-hoc', 'breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory', 'primality test']"
13140,1314000,Hello World!,11,"['bruteforcing', 'mathematics']"
13141,1314100,Ignition,16,"['bruteforcing', 'floyd–warshall', 'graph theory']"
13142,1314200,Jolly Jelly Jiffy,23,"['combinatorics', 'dynamic programming', 'graph theory', 'mathematics']"
13143,1314300,King of Chairs,16,"['combinatorics', 'graph theory', 'greedy', 'mathematics']"
13144,1314400,List of Unique Numbers,12,['two-pointer']
13145,1314500,Masonry Bridge,23,"[""dijkstra's"", 'dual graph', 'geometry', 'graph theory', 'planar graph']"
13146,1314600,같은 수로 만들기 2,16,"['data structures', 'greedy', 'stack']"
13147,1314700,Dwarves,14,"['graph theory', 'graph traversal', 'topological sorting']"
13148,1314800,Correcting Cheeseburgers,22,"['breadth-first search', 'bidirectional search', 'graph theory', 'graph traversal']"
13149,1314900,Knapsack in a Globalized World,18,"[""dijkstra's"", 'graph theory', 'knapsack']"
13150,1315000,Matrix Cypher,10,"['arbitrary precision / big integers', 'mathematics']"
13151,1315100,Model Railroad,13,"['graph theory', 'minimum spanning tree']"
13152,1315200,One-Way Roads,20,"['binary search', 'maximum flow']"
13153,1315300,Formula,4,"['arithmetic', 'geometry', 'mathematics']"
13154,1315400,Celestial Map,13,"['geometry', 'geometry; 3d']"
13155,1315500,Common Knowledge,4,"['combinatorics', 'mathematics']"
13156,1315600,Selling CPUs,11,"['dynamic programming', 'knapsack']"
13157,1315700,Routing,14,"[""dijkstra's"", 'graph theory']"
13158,1315800,Maze,15,['dynamic programming']
13159,1315900,배열,24,"['splay tree', 'tree']"
13160,1316000,최대 클리크 구하기,14,"['value / coordinate compression', 'data structures', 'priority queue', 'sorting']"
13161,1316100,분단의 슬픔,20,"['maximum flow', 'max-flow min-cut theorem']"
13162,1316200,Flowey's Love,22,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'geometry']"
13163,1316300,닉네임에 갓 붙이기,4,"['implementation', 'string']"
13164,1316400,행복 유치원,11,"['greedy', 'sorting']"
13165,1316500,이것도 해결해 보시지,21,"['greedy', 'linear algebra', 'mathematics', 'randomization']"
13166,1316600,범죄 파티,19,"['2-sat', 'binary search', 'bipartite matching', 'graph theory', 'strongly connected component']"
13167,1316700,포스터,20,"['value / coordinate compression', 'data structures', 'disjoint set', 'sweeping']"
13168,1316800,내일로 여행,13,"['data structures', 'floyd–warshall', 'graph theory', 'set / map by hashing', 'implementation']"
13169,1316900,Xor of Sums,21,"['binary search', 'bitmask', 'meet in the middle', 'sorting']"
13170,1317000,떨어진 수정,7,"['arithmetic', 'greedy', 'mathematics']"
13171,1317100,A,7,"['exponentiation by squaring', 'mathematics']"
13172,1317200,Σ,12,"['exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'modular multiplicative inverse', 'number theory']"
13173,1317300,Ω,15,"['dynamic programming', 'exponentiation by squaring', 'mathematics', 'modular multiplicative inverse', 'number theory']"
13174,1317400,괄호,22,"['combinatorics', 'exponentiation by squaring', 'mathematics']"
13175,1317500,능력,22,"['combinatorics', 'linearity of expectation', 'mathematics', 'probability theory']"
13176,1317600,동전,19,"['dynamic programming', 'game theory', 'sprague–grundy theorem']"
13177,1317700,로봇,25,"['linearity of expectation', 'mathematics', 'probability theory']"
13178,1317800,목공,24,"['fast fourier transform', 'kitamasa', 'mathematics']"
13179,1317900,비트,22,"['combinatorics', 'dynamic programming', 'exponentiation by squaring', 'gaussian elimination', 'linear algebra', 'mathematics']"
13180,1318000,순열,20,"['combinatorics', 'extended euclidean algorithm', 'mathematics', 'modular multiplicative inverse', 'number theory']"
13181,1318100,악수,23,"['dynamic programming', 'mathematics', 'precomputation']"
13182,1318200,제비,24,"['exponentiation by squaring', 'mathematics']"
13183,1318300,창문,9,"['combinatorics', 'mathematics', 'probability theory']"
13184,1318400,카드,23,"['combinatorics', 'dynamic programming', 'fast fourier transform', 'mathematics']"
13185,1318500,트리,21,"['combinatorics', 'mathematics']"
13186,1318600,팔찌,21,"[""burnside's lemma"", 'combinatorics', 'euler totient function', 'exponentiation by squaring', 'mathematics', 'modular multiplicative inverse', 'number theory']"
13187,1318700,흑백,23,"['combinatorics', 'linearity of expectation', 'mathematics', 'probability theory']"
13188,1318800,Kangaroo,23,['dynamic programming']
13189,1318900,Trick,27,"['ad-hoc', 'bruteforcing', 'constructive', 'mathematics']"
13190,1319000,Match,22,[]
13191,1319100,Popeala,20,[]
13192,1319200,Router 1,4,"['ad-hoc', 'constructive', 'implementation', 'simulation']"
13193,1319300,Router 2,4,"['ad-hoc', 'constructive', 'implementation', 'simulation']"
13194,1319400,Router 3,13,"['constructive', 'graph theory', 'implementation', 'mathematics', 'simulation']"
13195,1319500,Router 4,15,"['constructive', 'graph theory']"
13196,1319600,Router 5,17,['constructive']
13197,1319700,Router 6,18,['constructive']
13198,1319800,Router 7,20,['constructive']
13199,1319900,치킨 먹고 싶다,13,['mathematics']
13200,1320000,Light Up,18,"['backtracking', 'bruteforcing', 'implementation', 'simulation']"
13201,1320100,즉흥 여행,17,"['dynamic programming', 'mathematics', 'probability theory']"
13202,1320200,피자 배치,14,"['geometry', 'mathematics']"
13203,1320300,읽어내기,20,"['data structures', 'divide and conquer', 'segment tree']"
13204,1320400,표본의 수 구하기,11,"['bruteforcing', 'mathematics']"
13205,1320500,비밀번호,21,[]
13206,1320600,Professor KCM,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
13207,1320700,Torres del Paine,21,['geometry']
13208,1320800,승현이와 승현이,22,"['binary search', 'data structures', 'disjoint set', 'graph theory', 'lowest common ancestor', 'minimum spanning tree', 'parallel binary search', 'tree']"
13209,1320900,검역소,18,"['binary search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'greedy', 'parametric search', 'tree']"
13210,1321000,직사각형의 개수,23,[]
13211,1321100,Passport Checking,6,"['data structures', 'set / map by hashing', 'string']"
13212,1321200,Random,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
13213,1321300,Binary Roads,11,"['breadth-first search', 'graph theory', 'graph traversal']"
13214,1321400,Swaps,12,[]
13215,1321500,Fish,17,[]
13216,1321600,Badminton,5,"['implementation', 'simulation', 'string']"
13217,1321700,Honey,7,"['greedy', 'sorting']"
13218,1321800,Bitcoin,14,"['value / coordinate compression', 'dynamic programming', 'mathematics']"
13219,1321900,Trains,10,"['breadth-first search', 'graph theory', 'graph traversal']"
13220,1322000,Secret,10,"['knuth–morris–pratt', 'string']"
13221,1322100,Manhattan,3,"['arithmetic', 'geometry', 'implementation', 'mathematics']"
13222,1322200,Matches,3,"['geometry', 'mathematics', 'pythagoras theorem']"
13223,1322300,소금 폭탄,3,"['arithmetic', 'implementation', 'mathematics']"
13224,1322400,Chop Cup,4,"['implementation', 'simulation', 'string']"
13225,1322500,Divisors,3,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
13226,1322600,Divisors Again,7,"['mathematics', 'number theory']"
13227,1322700,TicTacToe,5,"['implementation', 'string']"
13228,1322800,The REAL Manhattan distance,3,"['arithmetic', 'mathematics']"
13229,1322900,Selection Sum,7,['prefix sum']
13230,1323000,Bits equalizer,12,"['greedy', 'implementation']"
13231,1323100,Lucky Tickets,12,['dynamic programming']
13232,1323200,Domain clusters,15,"['graph theory', 'strongly connected component']"
13233,1323300,Celtic Symmetry,0,[]
13234,1323400,George Boole,4,"['implementation', 'string']"
13235,1323500,팰린드롬,4,"['implementation', 'string']"
13236,1323600,Collatz Conjecture,3,"['arithmetic', 'implementation', 'mathematics']"
13237,1323700,Binary tree,8,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
13238,1323800,Bitcoin investment,6,['greedy']
13239,1323900,Combinations,10,"['combinatorics', 'dynamic programming', 'mathematics']"
13240,1324000,Chessboard,3,['implementation']
13241,1324100,최소공배수,6,"['euclidean algorithm', 'mathematics', 'number theory']"
13242,1324200,Harps and Tails,8,"['data structures', 'greedy', 'set / map by hashing', 'set / map by trees']"
13243,1324300,Non-decreasing subsegment,7,['implementation']
13244,1324400,Tree,12,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'tree']"
13245,1324500,Sum of digits,14,"['combinatorics', 'mathematics']"
13246,1324600,행렬 제곱의 합,14,"['exponentiation by squaring', 'mathematics']"
13247,1324700,토끼의 이동,14,"['bitmask', 'combinatorics', 'mathematics']"
13248,1324800,수업 거절,14,[]
13249,1324900,공의 충돌,11,"['ad-hoc', 'bruteforcing', 'mathematics', 'probability theory']"
13250,1325000,주사위 게임,12,"['dynamic programming', 'mathematics', 'probability theory']"
13251,1325100,조약돌 꺼내기,8,"['combinatorics', 'mathematics', 'probability theory']"
13252,1325200,카지노,12,"['dynamic programming', 'greedy']"
13253,1325300,토러스,13,['mathematics']
13254,1325400,연휴,16,"['depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'probability theory', 'tree']"
13255,1325500,동전 뒤집기,13,"['dynamic programming', 'linearity of expectation', 'mathematics', 'probability theory']"
13256,1325600,수열의 아름다움,16,"['ad-hoc', 'linearity of expectation', 'mathematics', 'probability theory']"
13257,1325700,생태학,13,"['combinatorics', 'dynamic programming', 'mathematics', 'probability theory']"
13258,1325800,복권 + 은행,12,"['dynamic programming', 'mathematics']"
13259,1325900,강호의 초대,0,[]
13260,1326000,문자열 자르기,15,"['dynamic programming', 'knuth optimization']"
13261,1326100,탈옥,20,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming']"
13262,1326200,수열의 OR 점수,20,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming']"
13263,1326300,나무 자르기,19,"['convex hull trick', 'dynamic programming']"
13264,1326400,접미사 배열 2,18,"['string', 'suffix array and lcp array']"
13265,1326500,색칠하기,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
13266,1326600,생일 케이크,21,[]
13267,1326700,쿠키 배열,21,"['bitmask', 'data structures', 'divide and conquer', 'dynamic programming', 'dynamic programming using bitfield', 'exponentiation by squaring', 'implementation', 'mathematics', 'sparse table']"
13268,1326800,셔틀런,7,"['case work', 'implementation', 'simulation']"
13269,1326900,쌓기나무,12,"['constructive', 'greedy', 'implementation']"
13270,1327000,피보나치 치킨,9,"['dynamic programming', 'mathematics']"
13271,1327100,스파이,20,"['bellman–ford', 'graph theory', 'mathematics']"
13272,1327200,비밀번호,20,"['string', 'suffix array and lcp array', 'two-pointer']"
13273,1327300,로마숫자,10,"['implementation', 'mathematics', 'string']"
13274,1327400,수열,11,"['implementation', 'sorting']"
13275,1327500,가장 긴 팰린드롬 부분 문자열,16,"[""manacher's"", 'string']"
13276,1327600,Prefix와 Suffix,17,"['hashing', 'string', 'suffix array and lcp array']"
13277,1327700,큰 수 곱셈,1,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
13278,1327800,피보나치 합의 개수,21,"['fast fourier transform', 'mathematics', 'number theory']"
13279,1327900,곱의 합 쿼리,17,"['dynamic programming', 'fast fourier transform', 'mathematics']"
13280,1328000,Selection of Participants of an Experiment,5,"['bruteforcing', 'sorting']"
13281,1328100,Look for the Winner!,8,"['implementation', 'simulation', 'sorting']"
13282,1328200,Bamboo Blossoms,14,"['bit set', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
13283,1328300,Daruma Otoshi,15,['dynamic programming']
13284,1328400,3D Printing,0,[]
13285,1328500,Deciphering Characters,23,"['tree', 'tree isomorphism']"
13286,1328600,Warp Drive,0,[]
13287,1328700,Gift Exchange Party,23,"['circulation', 'maximum flow', 'two-pointer']"
13288,1328800,A New Alphabet,4,"['implementation', 'string']"
13289,1328900,Arcade!,19,"['dynamic programming', 'gaussian elimination', 'graph theory', 'linear algebra', 'mathematics']"
13290,1329000,Big Truck,13,"[""dijkstra's"", 'graph theory']"
13291,1329100,Brackets,17,"['dynamic programming', 'mathematics']"
13292,1329200,Dots and Boxes,20,"['bipartite matching', 'maximum flow', 'implementation']"
13293,1329300,Free Desserts,21,['dynamic programming']
13294,1329400,역팩토리얼,13,"['mathematics', 'number theory']"
13295,1329500,Nine Packs,12,"['dynamic programming', 'knapsack']"
13296,1329600,Primonimo,20,"['gaussian elimination', 'linear algebra', 'mathematics', 'number theory']"
13297,1329700,Quick Estimates,3,['string']
13298,1329800,Robotopia,5,"['bruteforcing', 'mathematics']"
13299,1329900,Unusual Darts,18,"['bruteforcing', 'geometry']"
13300,1330000,방 배정,4,"['implementation', 'mathematics']"
13301,1330100,타일 장식물,6,"['dynamic programming', 'mathematics']"
13302,1330200,리조트,12,['dynamic programming']
13303,1330300,장애물 경기,18,"['data structures', 'set / map by trees']"
13304,1330400,방 배정,4,"['implementation', 'mathematics']"
13305,1330500,주유소,8,['greedy']
13306,1330600,트리,17,"['data structures', 'disjoint set', 'offline queries']"
13307,1330700,레이저 센서,23,"['constructive', 'convex hull', 'divide and conquer', 'geometry']"
13308,1330800,주유소,16,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
13309,1330900,트리,20,"['data structures', 'euler tour technique', 'heavy-light decomposition', 'segment tree', 'tree']"
13310,1331000,먼 별,21,"['convex hull', 'geometry', 'rotating calipers', 'ternary search']"
13311,1331100,행운의 편지,3,"['mathematics', 'number theory']"
13312,1331200,아크코사인은 믿음입니다,12,['constructive']
13313,1331300,손은 컴퓨터보다 빠르다,15,"['constructive', 'graph theory', 'randomization']"
13314,1331400,플로이드에 오타가?,13,"['constructive', 'floyd–warshall', 'graph theory']"
13315,1331500,실수 써도 풀려요?,15,"['constructive', 'mathematics']"
13316,1331600,std::정렬부터 시작하는 디버깅 생활,14,"['constructive', 'sorting']"
13317,1331700,한 번 남았다,13,"['bellman–ford', 'constructive', 'graph theory']"
13318,1331800,위험한 해싱,24,"['constructive', 'hashing', 'mathematics', 'number theory']"
13319,1331900,가짜 소수,15,"['constructive', ""fermat's little theorem"", 'mathematics', 'number theory', 'precomputation', 'primality test']"
13320,1332000,잘못 구현한 디닉,15,"['constructive', 'maximum flow', 'graph theory', 'randomization']"
13321,1332100,디닉은 네제곱입니까?,0,[]
13322,1332200,접두사 배열,4,"['ad-hoc', 'implementation', 'string']"
13323,1332300,BOJ 수열 1,23,"['data structures', 'dynamic programming', 'priority queue', 'slope trick']"
13324,1332400,BOJ 수열 2,24,"['data structures', 'dynamic programming', 'priority queue', 'slope trick']"
13325,1332500,이진 트리,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
13326,1332600,Diameter,22,"['geometry', 'greedy']"
13327,1332700,개구리,18,"[""dijkstra's"", 'geometry', 'graph theory', 'implementation']"
13328,1332800,Message Passing,16,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
13329,1332900,Meteor Shower,22,"['convex hull', 'data structures', 'geometry', 'sweeping']"
13330,1333000,유사 팰린드롬,17,['dynamic programming']
13331,1333100,Planar Drawing,22,"['data structures', 'disjoint set', 'dual graph', 'graph theory', 'planar graph']"
13332,1333200,Project Team,21,"['circulation', 'maximum flow']"
13333,1333300,Q-인덱스,6,"['bruteforcing', 'sorting']"
13334,1333400,철로,14,"['data structures', 'priority queue', 'sorting', 'sweeping']"
13335,1333500,트럭,10,"['data structures', 'implementation', 'queue', 'simulation']"
13336,1333600,카르테시안 트리,20,['dynamic programming']
13337,1333700,거의 오일러 그래프,20,"['combinatorics', 'graph theory', 'mathematics']"
13338,1333800,수도 선정,0,[]
13339,1333900,XOR 수열,18,['greedy']
13340,1334000,마법의 탑과 순간 이동,17,[]
13341,1334100,두 트리,0,[]
13342,1334200,건물주,21,"['maximum flow', 'floyd–warshall', 'graph theory', 'minimum cost maximum flow']"
13343,1334300,Block Game,14,"['euclidean algorithm', 'game theory', 'mathematics', 'number theory']"
13344,1334400,Chess Tournament,15,"['data structures', 'disjoint set', 'graph theory', 'topological sorting']"
13345,1334500,Completing the Square,8,"['geometry', 'mathematics']"
13346,1334600,Hamming Ellipses,11,['dynamic programming']
13347,1334700,Lost In The Woods,15,"['dynamic programming', 'mathematics', 'probability theory']"
13348,1334800,Memory Match,9,['implementation']
13349,1334900,Millionaire Madness,12,"['binary search', ""dijkstra's"", 'graph theory', 'graph traversal']"
13350,1335000,Presidential Elections,12,"['dynamic programming', 'knapsack']"
13351,1335100,Rock Band,12,[]
13352,1335200,석양이 진다...,17,"['geometry', 'implementation', 'randomization']"
13353,1335300,Translators’ Dinner,19,"['constructive', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
13354,1335400,Artwork,17,"['data structures', 'disjoint set', 'offline queries']"
13355,1335500,Bless You Autocorrect!,19,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'tree', 'trie']"
13356,1335600,Card Hand Sorting,14,"['bruteforcing', 'dynamic programming', 'implementation', 'longest increasing sequence in o(n log n)']"
13357,1335700,Daydreaming Stockbroker,8,['greedy']
13358,1335800,Exponial,20,"['euler totient function', 'exponentiation by squaring', 'mathematics', 'number theory']"
13359,1335900,Fleecing the Raffle,16,"['combinatorics', 'mathematics']"
13360,1336000,Game Rank,8,"['implementation', 'simulation']"
13361,1336100,최고인 대장장이 토르비욘,21,"['data structures', 'disjoint set', 'graph theory']"
13362,1336200,Interception,27,[]
13363,1336300,Jumbled Compass,3,"['arithmetic', 'case work', 'implementation', 'mathematics']"
13364,1336400,Keeping the Dogs Apart,18,"['binary search', 'geometry', 'two-pointer']"
13365,1336500,Jumping Worm,0,[]
13366,1336600,Math Contest,5,"['mathematics', 'number theory']"
13367,1336700,Weeping Fig,21,"['graph theory', 'stoer–wagner']"
13368,1336800,Cocktail Shaker Sort,0,[]
13369,1336900,The Escape,0,[]
13370,1337000,Carrot Farm,0,[]
13371,1337100,Dolphin,6,"['binary search', 'implementation', 'mathematics']"
13372,1337200,Glass Bridge,16,"['data structures', 'segment tree']"
13373,1337300,Rearrange,0,[]
13374,1337400,Cyclic Triangle,5,"['implementation', 'mathematics']"
13375,1337500,Organization,0,[]
13376,1337600,Rune,10,"['sorting', 'string']"
13377,1337700,Dictionary,11,"['data structures', 'set / map by hashing', 'precomputation']"
13378,1337800,Dungeon,0,[]
13379,1337900,Far Far Away,10,"['breadth-first search', 'graph theory', 'graph traversal', 'tree']"
13380,1338000,Found,15,"['exponentiation by squaring', 'graph theory', 'mathematics']"
13381,1338100,Jump,0,[]
13382,1338200,Lab,8,['dynamic programming']
13383,1338300,Oil,0,[]
13384,1338400,Pry Sequence Transformation,0,[]
13385,1338500,Square,8,"['arbitrary precision / big integers', 'dynamic programming', 'mathematics']"
13386,1338600,Tree Count,14,"['tree', 'tree isomorphism']"
13387,1338700,Water Pump,0,[]
13388,1338800,Who Feels Lucky,0,[]
13389,1338900,RMQ,0,[]
13390,1339000,그래프 클릭,0,[]
13391,1339100,특별한 표,22,"['combinatorics', 'inclusion and exclusion', 'mathematics']"
13392,1339200,방법을 출력하지 않는 숫자 맞추기,15,['dynamic programming']
13393,1339300,스타트링크 알고리즘 멤버십,22,"['dynamic programming', 'maximum flow', 'hungarian', 'minimum cost maximum flow']"
13394,1339400,여행,0,[]
13395,1339500,팰린드롬 행렬,0,[]
13396,1339600,카르테시안 트리 2,19,['dynamic programming']
13397,1339700,구간 나누기 2,12,"['binary search', 'parametric search']"
13398,1339800,연속합 2,11,['dynamic programming']
13399,1339900,Rearranging a Sequence,7,"['implementation', 'sorting']"
13400,1340000,Quality of Check Digits,9,"['bruteforcing', 'implementation']"
13401,1340100,Distribution Center,14,['sorting']
13402,1340200,Hidden Anagrams,14,"['data structures', 'hashing', 'string', 'set / map by trees']"
13403,1340300,Infallibly Crack Perplexing Cryptarithm,20,[]
13404,1340400,Three Kingdoms of Bourdelot,21,[]
13405,1340500,Placing Medals on a Binary Tree,19,"['mathematics', 'number theory']"
13406,1340600,Animal Companion in Maze,21,[]
13407,1340700,Skinny Polygon,22,"['constructive', 'extended euclidean algorithm', 'mathematics', 'number theory']"
13408,1340800,Cover the Polygon with Your Disk,23,[]
13409,1340900,Black and White Boxes,27,"['game theory', 'hackenbush', 'meet in the middle']"
13410,1341000,거꾸로 구구단,4,"['bruteforcing', 'mathematics']"
13411,1341100,하늘에서 정의가 빗발친다!,7,"['geometry', 'pythagoras theorem', 'sorting']"
13412,1341200,서로소 쌍,9,"['euclidean algorithm', 'mathematics', 'number theory']"
13413,1341300,오셀로 재배치,7,"['greedy', 'string']"
13414,1341400,수강신청,8,"['data structures', 'set / map by hashing', 'implementation']"
13415,1341500,정렬 게임,15,"['ad-hoc', 'data structures', 'deque', 'stack']"
13416,1341600,주식 투자,3,"['arithmetic', 'implementation', 'mathematics']"
13417,1341700,카드 문자열,7,"['data structures', 'greedy', 'string']"
13418,1341800,학교 탐방하기,13,"['graph theory', 'minimum spanning tree']"
13419,1341900,탕수육,4,"['implementation', 'simulation', 'string']"
13420,1342000,사칙연산,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
13421,1342100,국민 랜드,14,['ternary search']
13422,1342200,도둑,11,"['sliding window', 'two-pointer']"
13423,1342300,Three Dots,9,"['binary search', 'bruteforcing', 'data structures']"
13424,1342400,비밀 모임,12,"[""dijkstra's"", 'floyd–warshall', 'graph theory']"
13425,1342500,최대 이분 매칭,0,[]
13426,1342600,단순 경로의 수열의 도치,20,[]
13427,1342700,레이저 타워,21,"['maximum flow', 'max-flow min-cut theorem']"
13428,1342800,배열의 합,22,"['fast fourier transform', 'mathematics', 'square root decomposition']"
13429,1342900,동전 교환,0,[]
13430,1343000,합 구하기,16,"['combinatorics', 'exponentiation by squaring', 'mathematics', 'modular multiplicative inverse', 'number theory']"
13431,1343100,트리 문제,22,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'tree']"
13432,1343200,좋은 부분 문자열,22,"['binary search', 'data structures', 'segment tree', 'string', 'suffix array and lcp array']"
13433,1343300,기하 문제,15,"['bruteforcing', 'dynamic programming', 'geometry']"
13434,1343400,영역의 개수,0,[]
13435,1343500,피라미드 수열,18,"['mathematics', 'number theory']"
13436,1343600,정다각형 선분,0,[]
13437,1343700,슈퍼 나이트,0,[]
13438,1343800,계단 오르기 운동,19,"['dynamic programming', 'knuth–morris–pratt', 'string']"
13439,1343900,팩토리얼과 점화식,17,"['mathematics', 'number theory']"
13440,1344000,귀,0,[]
13441,1344100,마법의 나무,20,"['bipartite matching', 'graph theory']"
13442,1344200,메탈은 인생,23,[]
13443,1344300,바둑,0,[]
13444,1344400,보드 색칠하기,23,"['bipartite matching', 'maximum flow']"
13445,1344500,부분 수열 XOR,18,"['data structures', 'tree', 'trie']"
13446,1344600,새로운 가게 이름,0,[]
13447,1344700,그래프 최대 매칭,24,['general matching']
13448,1344800,SW 역량 테스트,18,"['dynamic programming', 'greedy', 'knapsack', 'sorting']"
13449,1344900,Alan Turing,0,[]
13450,1345000,László Babai,5,"['ad-hoc', 'bruteforcing', 'implementation']"
13451,1345100,Stephen Cook,0,[]
13452,1345200,Edsger Dijkstra,0,[]
13453,1345300,Jack Edmonds,22,"['data structures', 'graph theory', 'minimum spanning tree', 'segment tree', 'sweeping']"
13454,1345400,Robert Floyd,0,[]
13455,1345500,Kurt Gödel,0,[]
13456,1345600,Richard Hamming,4,['implementation']
13457,1345700,Oracle,0,[]
13458,1345800,시험 감독,4,"['arithmetic', 'mathematics']"
13459,1345900,구슬 탈출,14,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
13460,1346000,구슬 탈출 2,15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
13461,1346100,Airport Logistics,24,"['calculus', ""dijkstra's"", 'geometry', 'graph theory', 'mathematics']"
13462,1346200,Battle Simulation,4,"['implementation', 'string']"
13463,1346300,Brexit,11,"['breadth-first search', 'graph theory', 'graph traversal']"
13464,1346400,Bridge Automation,14,['dynamic programming']
13465,1346500,Charles in Charge,15,"['binary search', ""dijkstra's"", 'graph theory']"
13466,1346600,Endless Turning,22,"['geometry', 'implementation']"
13467,1346700,Manhattan Positioning System,18,"['geometry', 'line segment intersection check']"
13468,1346800,Multiplying Digits,20,"['dynamic programming', 'mathematics', 'number theory']"
13469,1346900,Older Brother,8,"['mathematics', 'number theory', 'primality test']"
13470,1347000,Programming Tutors,18,"['binary search', 'bipartite matching', 'parametric search']"
13471,1347100,Safe Racing,18,"['combinatorics', 'dynamic programming', 'mathematics']"
13472,1347200,Sticky Situation,7,"['bruteforcing', 'geometry', 'greedy', 'mathematics', 'sorting']"
13473,1347300,Anniversary Cake,7,"['constructive', 'geometry', 'mathematics']"
13474,1347400,Boys and Girls,21,"['case work', 'constructive']"
13475,1347500,CodeCoder vs TopForces,16,"['depth-first search', 'graph theory', 'graph traversal', 'sorting']"
13476,1347600,Digital Addition,18,"['backtracking', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'implementation']"
13477,1347700,Easy Reading,21,[]
13478,1347800,Folding,6,['mathematics']
13479,1347900,Gangsters in Central City,18,[]
13480,1348000,Hard Cuts,28,"['dynamic programming', 'mathematics', 'precomputation']"
13481,1348100,Integral Polygons,17,"['geometry', 'prefix sum']"
13482,1348200,Java2016,19,"['constructive', 'mathematics', 'probability theory']"
13483,1348300,King’s Heir,5,['implementation']
13484,1348400,Tarifa,3,"['arithmetic', 'implementation', 'mathematics']"
13485,1348500,Jetpack,14,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
13486,1348600,Cezar,16,"['graph theory', 'topological sorting']"
13487,1348700,Mag,20,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'mathematics', 'tree']"
13488,1348800,Kralj,19,"['data structures', 'greedy', 'set / map by trees']"
13489,1348900,Vještica,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
13490,1349000,Cleaning Stations,5,"['arithmetic', 'mathematics']"
13491,1349100,Sand Tiger Shark,11,"['depth-first search', 'graph theory', 'graph traversal']"
13492,1349200,Octopus,0,[]
13493,1349300,Sea Dragons,0,[]
13494,1349400,Manta Ray,0,[]
13495,1349500,Dolphins,0,[]
13496,1349600,The Merchant of Venice,2,"['arithmetic', 'implementation', 'mathematics']"
13497,1349700,Sonnets,6,"['implementation', 'parsing', 'string']"
13498,1349800,Romeo & Juliet,12,"['floyd–warshall', 'graph theory']"
13499,1349900,Hamlet,11,"['dynamic programming', 'mathematics', 'probability theory']"
13500,1350000,A Midsummer Night’s Dream,9,"['implementation', 'simulation']"
13501,1350100,Macbeth,12,['greedy']
13502,1350200,단어퍼즐 2,14,"['breadth-first search', 'bitmask', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'precomputation', 'string', 'tree', 'trie']"
13503,1350300,최소 체인 커버,19,"['bipartite matching', 'graph theory']"
13504,1350400,XOR 합,18,"['data structures', 'tree', 'trie']"
13505,1350500,두 수 XOR,18,"['data structures', 'tree', 'trie']"
13506,1350600,카멜레온 부분 문자열,17,"['knuth–morris–pratt', 'string']"
13507,1350700,좋은 부분 문자열의 개수,13,"['hashing', 'string']"
13509,1350900,가장 가까운 두 점 2,20,"['value / coordinate compression', 'data structures', 'geometry', 'segment tree']"
13510,1351000,트리와 쿼리 1,20,"['data structures', 'heavy-light decomposition', 'segment tree', 'tree']"
13511,1351100,트리와 쿼리 2,18,"['data structures', 'lowest common ancestor', 'sparse table', 'tree']"
13512,1351200,트리와 쿼리 3,20,"['data structures', 'heavy-light decomposition', 'segment tree', 'tree']"
13513,1351300,트리와 쿼리 4,23,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'tree']"
13514,1351400,트리와 쿼리 5,22,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'priority queue', 'tree']"
13515,1351500,트리와 쿼리 6,25,"['data structures', 'heavy-light decomposition', 'segment tree', 'tree']"
13516,1351600,트리와 쿼리 7,26,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'heavy-light decomposition', 'segment tree', 'square root decomposition', 'tree']"
13517,1351700,트리와 쿼리 8,21,"['data structures', 'lowest common ancestor', 'persistent segment tree', 'segment tree', 'tree']"
13518,1351800,트리와 쿼리 9,22,"['euler tour technique', 'lowest common ancestor', ""mo's"", 'offline queries', 'tree']"
13519,1351900,트리와 쿼리 10,23,"['data structures', 'heavy-light decomposition', 'segment tree with lazy propagation', 'segment tree', 'tree']"
13520,1352000,Taxing Problem,0,[]
13521,1352100,Build a Boat,0,[]
13522,1352200,Compiler,6,['bruteforcing']
13523,1352300,The Darkness,0,[]
13524,1352400,Elegant Showroom,12,"[""dijkstra's"", 'graph theory']"
13525,1352500,Fridge,5,[]
13526,1352600,Gondolas,0,[]
13527,1352700,Rhyming Slang,0,[]
13528,1352800,Grass Seed Inc.,3,"['arithmetic', 'mathematics']"
13529,1352900,Jack and the Beanbag,0,[]
13530,1353000,Compensation,0,[]
13531,1353100,Secret Santa,12,"['ad-hoc', 'combinatorics', 'mathematics', 'precomputation', 'probability theory']"
13532,1353200,악마의 수열,15,['mathematics']
13533,1353300,꽃 구매하기,18,"['combinatorics', 'inclusion and exclusion', 'mathematics']"
13534,1353400,생일 파티,0,[]
13535,1353500,괄호 부분 문자열,0,[]
13536,1353600,괄호 부분 문자열 쿼리,19,"['data structures', 'segment tree']"
13537,1353700,수열과 쿼리 1,18,"['data structures', 'merge sort tree', 'segment tree', 'sorting']"
13538,1353800,XOR 쿼리,22,"['data structures', 'persistent segment tree', 'segment tree']"
13539,1353900,트리와 쿼리 11,25,"['link/cut tree', 'tree']"
13540,1354000,팰린드롬과 쿼리,24,[]
13541,1354100,K번째 부분 문자열,18,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'hashing', 'priority queue', 'string']"
13542,1354200,우표 구매하기,20,"['combinatorics', 'generating function', 'lucas theorem', 'mathematics', 'number theory']"
13543,1354300,수열과 쿼리 2,24,"['splay tree', 'tree']"
13544,1354400,수열과 쿼리 3,18,"['data structures', 'merge sort tree', 'segment tree', 'sorting']"
13545,1354500,수열과 쿼리 0,22,"[""mo's"", 'offline queries', 'prefix sum', 'square root decomposition']"
13546,1354600,수열과 쿼리 4,21,"[""mo's"", 'offline queries', 'square root decomposition']"
13547,1354700,수열과 쿼리 5,19,"[""mo's"", 'offline queries']"
13548,1354800,수열과 쿼리 6,20,"[""mo's"", 'offline queries']"
13549,1354900,숨바꼭질 3,11,"['0-1 bfs', 'breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
13550,1355000,수열과 쿼리 7,22,"[""mo's"", 'offline queries', 'prefix sum', 'square root decomposition']"
13551,1355100,원과 쿼리,22,"['data structures', 'geometry', 'segment tree', 'square root decomposition']"
13552,1355200,구와 쿼리,5,"['geometry', 'geometry; 3d', 'pythagoras theorem']"
13553,1355300,수열과 쿼리 8,20,"['data structures', ""mo's"", 'offline queries', 'segment tree']"
13554,1355400,수열과 쿼리 9,22,"['data structures', ""mo's"", 'offline queries', 'segment tree', 'square root decomposition']"
13555,1355500,증가하는 부분 수열,17,"['data structures', 'dynamic programming', 'segment tree']"
13556,1355600,증가하는 부분 수열 2,20,"['data structures', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'segment tree']"
13557,1355700,수열과 쿼리 10,20,"['data structures', 'segment tree']"
13558,1355800,등차수열의 개수,13,"['combinatorics', 'mathematics', 'prefix sum']"
13559,1355900,Bridge Park,24,[]
13560,1356000,축구 게임,16,"['greedy', 'mathematics']"
13561,1356100,House Rental,16,"['binary search', 'parametric search', 'sweeping', 'two-pointer']"
13562,1356200,Independent Edges,0,[]
13563,1356300,Memory Cell,0,[]
13564,1356400,Meteorites,0,[]
13565,1356500,침투,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
13566,1356600,Power Supply,0,[]
13567,1356700,로봇,7,"['implementation', 'simulation']"
13568,1356800,Room,0,[]
13569,1356900,Rounding,22,"['circulation', 'maximum flow']"
13570,1357000,Virus,0,[]
13571,1357100,나이트의 이동,22,"['berlekamp–massey', 'chinese remainder theorem', 'mathematics', 'number theory', 'precomputation']"
13572,1357200,나이트의 이동 2,23,"['berlekamp–massey', 'chinese remainder theorem', 'exponentiation by squaring', 'linear algebra', 'mathematics', 'number theory', 'precomputation']"
13573,1357300,동전 뒤집기 3,22,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'fast fourier transform', 'mathematics']"
13574,1357400,수열 변환,25,"['fast fourier transform', 'mathematics']"
13575,1357500,보석 가게,20,"['exponentiation by squaring', 'fast fourier transform', 'mathematics']"
13576,1357600,Prefix와 Suffix,19,"['string', 'suffix array and lcp array', 'z']"
13577,1357700,Vôlei Marciano,0,[]
13578,1357800,Rouba-Monte,12,['implementation']
13579,1357900,Série de Tubos,0,[]
13580,1358000,Andando no tempo,2,"['implementation', 'mathematics']"
13581,1358100,Batata quente,0,[]
13582,1358200,Containers,0,[]
13583,1358300,Divisores,9,"['mathematics', 'number theory', 'sorting']"
13584,1358400,Estatística hexa,0,[]
13585,1358500,Fundindo árvores,0,[]
13586,1358600,Go--,11,"['bruteforcing', 'prefix sum']"
13587,1358700,huaauhahhuahau,4,['string']
13588,1358800,Isósceles,9,['implementation']
13589,1358900,Jogos olímpicos,0,[]
13590,1359000,Kit de encolhimento de polígonos,0,[]
13591,1359100,Ladrilhos,0,[]
13592,1359200,Mário,0,[]
13593,1359300,Histórico de Comandos,6,"['dynamic programming', 'implementation']"
13594,1359400,Desempilhando Caixas,7,"['ad-hoc', 'implementation']"
13595,1359500,Mania de Par,14,"[""dijkstra's"", 'graph theory']"
13596,1359600,Bolsa de Valores,11,['dynamic programming']
13597,1359700,Tri-du,2,['implementation']
13598,1359800,Quebra-cabeça,0,[]
13599,1359900,Espiral,0,[]
13600,1360000,Fatorial,9,"['dynamic programming', 'greedy', 'mathematics']"
13601,1360100,Guardiões Curiosos,0,[]
13602,1360200,Praça do Retângulo,0,[]
13603,1360300,Ominobox,0,[]
13604,1360400,Jogo de Estratégia,4,['implementation']
13605,1360500,Palíndromo,0,[]
13606,1360600,Loteria,0,[]
13607,1360700,Onde Estão as Bolhas?,0,[]
13608,1360800,Jogo de Varetas,5,"['greedy', 'implementation']"
13609,1360900,Zak Galou,0,[]
13610,1361000,Volta,3,"['arithmetic', 'bruteforcing', 'mathematics']"
13611,1361100,Baralho Embaralhado,11,"['mathematics', 'permutation cycle decomposition']"
13612,1361200,Confederaćão,0,[]
13613,1361300,Dona Minhoca,0,[]
13614,1361400,Ecologia,16,['dynamic programming']
13615,1361500,Teletransporte,0,[]
13616,1361600,Letras,0,[]
13617,1361700,Handebol,3,['implementation']
13618,1361800,RSA,16,"['euler totient function', 'exponentiation by squaring', 'extended euclidean algorithm', 'mathematics', 'modular multiplicative inverse', 'number theory']"
13619,1361900,Corte,0,[]
13620,1362000,Pizza do Vô Pepe,0,[]
13621,1362100,Olimpíadas,0,[]
13622,1362200,Circuito Bioquímico Digital,5,['implementation']
13623,1362300,Zero or One,2,['implementation']
13624,1362400,Balloon,0,[]
13625,1362500,Boss,13,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
13626,1362600,Folding Machine,0,[]
13627,1362700,Dangerous Dive,4,['implementation']
13628,1362800,Triangles,8,[]
13629,1362900,Lines of Containers,16,"['mathematics', 'permutation cycle decomposition']"
13630,1363000,Buses,10,['dynamic programming']
13631,1363100,Patches,0,[]
13632,1363200,Trucks,0,[]
13633,1363300,O Problema da Parada,0,[]
13634,1363400,Países em Guerra,0,[]
13635,1363500,Concurso de Contos,7,['string']
13636,1363600,Tobogan de bolinhas,0,[]
13637,1363700,Cartões,0,[]
13638,1363800,Coral Perfeito,5,"['greedy', 'implementation', 'mathematics']"
13639,1363900,Elevador Espacial,0,[]
13640,1364000,Perdido na Noite,0,[]
13641,1364100,Grid de Largada,5,"['implementation', 'sorting']"
13642,1364200,Combate ao câncer,0,[]
13643,1364300,Integral,0,[]
13644,1364400,Palavras,0,[]
13645,1364500,Ciclo de Rubik,16,['implementation']
13646,1364600,Estrela,16,"['euler totient function', 'mathematics', 'number theory']"
13647,1364700,Energia × Tempo,0,[]
13648,1364800,MegaDamas,0,[]
13649,1364900,Ácido Ribonucléico Alienígena,0,[]
13650,1365000,Botas perdidas,6,"['data structures', 'implementation', 'stack']"
13651,1365100,Campeonato de SMS,0,[]
13652,1365200,Desvio de rua,0,[]
13653,1365300,Estacionamento,8,"['implementation', 'simulation']"
13654,1365400,Foco,13,"['data structures', 'greedy', 'priority queue']"
13655,1365500,Guarda Costeira,4,"['geometry', 'mathematics', 'pythagoras theorem']"
13656,1365600,"Homem, Elefante e Rato",18,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
13657,1365700,Incidente em Atlântida,0,[]
13658,1365800,Revisão de Contrato,4,['implementation']
13659,1365900,Robô Colecionador,0,[]
13660,1366000,Livro-caixa,0,[]
13661,1366100,Desvio de Rota,0,[]
13662,1366200,Elevador,7,['geometry']
13663,1366300,Fórmula 1,0,[]
13664,1366400,Guerra nas estrelas,0,[]
13665,1366500,Plágio Musical,0,[]
13666,1366600,Ir e Vir,17,"['graph theory', 'strongly connected component']"
13667,1366700,Leitura Ótica,3,['implementation']
13668,1366800,Jogo da Velha,18,"['game theory', 'sprague–grundy theorem']"
13669,1366900,Ataque Fulminante,0,[]
13670,1367000,Alarme Despertador,4,"['arithmetic', 'implementation', 'mathematics']"
13671,1367100,Troca de Cartas,8,['greedy']
13672,1367200,Sub-prime,5,['implementation']
13673,1367300,Dragster,0,[]
13674,1367400,Torres de Telefonia Celular,0,[]
13675,1367500,Registrador de Deslocamento,0,[]
13676,1367600,Escultura a Laser,7,"['data structures', 'stack']"
13677,1367700,Apagando e Ganhando,11,"['data structures', 'greedy', 'stack']"
13678,1367800,Babel,0,[]
13679,1367900,O Salão do Clube,12,"['sorting', 'two-pointer']"
13680,1368000,Dama,5,"['ad-hoc', 'implementation']"
13681,1368100,Bolhas e Baldes,16,"['data structures', 'divide and conquer', 'game theory', 'segment tree', 'sorting']"
13682,1368200,Loop Musical,4,"['bruteforcing', 'implementation']"
13683,1368300,Set,20,[]
13684,1368400,Divisão da Nlogõnia,3,"['case work', 'implementation']"
13685,1368500,Maior Subseqüência Crescente,0,[]
13686,1368600,Vampiros,17,"['data structures', 'dynamic programming', 'mathematics', 'probability theory', 'sparse table']"
13687,1368700,Copa do Mundo,5,"['ad-hoc', 'arithmetic', 'mathematics']"
13688,1368800,Rota Crítica,0,[]
13689,1368900,Amigos ou Inimigos?,0,[]
13690,1369000,Jogo do Bicho,4,"['arithmetic', 'implementation', 'mathematics']"
13691,1369100,Curso Universitário,0,[]
13692,1369200,Redução de Pena,0,[]
13693,1369300,Cubos Coloridos,7,"['implementation', 'sorting']"
13694,1369400,Gerente de Espaço,0,[]
13695,1369500,Tecle & Some,0,[]
13696,1369600,Regata de Cientistas,0,[]
13697,1369700,Piscina,0,[]
13698,1369800,Hawk eyes,3,"['implementation', 'simulation']"
13699,1369900,점화식,7,['dynamic programming']
13700,1370000,완전 범죄,10,"['breadth-first search', 'graph theory', 'graph traversal']"
13701,1370100,중복 제거,12,"['bitmask', 'bit set']"
13702,1370200,이상한 술집,8,['binary search']
13703,1370300,물벼룩의 생존확률,11,['dynamic programming']
13704,1370400,수열과 쿼리 11,20,"[""mo's"", 'offline queries']"
13705,1370500,Ax+Bsin(x)=C,21,"['arbitrary precision / big integers', 'binary search', 'mathematics', 'numerical analysis']"
13706,1370600,제곱근,6,"['arbitrary precision / big integers', 'binary search', 'mathematics']"
13707,1370700,합분해 2,12,"['combinatorics', 'dynamic programming', 'mathematics']"
13708,1370800,모든 점을 포함하는 원,20,"['geometry', 'heuristics', 'minimum enclosing circle']"
13709,1370900,XOR 합 2,18,"['gaussian elimination', 'linear algebra', 'mathematics']"
13710,1371000,XOR 합 3,15,"['bitmask', 'prefix sum']"
13711,1371100,LCS 4,15,['longest increasing sequence in o(n log n)']
13712,1371200,키르히호프의 법칙,17,"['gaussian elimination', 'graph theory', 'linear algebra', 'mathematics', 'physics']"
13713,1371300,문자열과 쿼리,16,"['string', 'z']"
13714,1371400,약수의 개수,24,"['mathematics', 'möbius inversion', 'number theory']"
13715,1371500,순열의 좋은 위치,21,"['dynamic programming', 'graph theory', 'mathematics']"
13716,1371600,피보나치 수열처럼 보이지만...,21,"['berlekamp–massey', 'dynamic programming', 'exponentiation by squaring', 'mathematics']"
13717,1371700,포켓몬 GO,6,['implementation']
13718,1371800,Tavan,7,"['mathematics', 'sorting', 'string']"
13719,1371900,Nizin,13,"['ad-hoc', 'two-pointer']"
13720,1372000,Prosječni,16,"['ad-hoc', 'constructive', 'mathematics']"
13721,1372100,Zamjene,0,[]
13722,1372200,Burza,25,[]
13723,1372300,팩토리얼 분수 방정식,14,"['arbitrary precision / big integers', 'mathematics', 'number theory', 'primality test']"
13724,1372400,3D 쿼리,22,"['fast fourier transform', 'mathematics']"
13725,1372500,RNG,24,"['dynamic programming', 'fast fourier transform', 'kitamasa', 'mathematics']"
13726,1372600,랜덤 소트 2,0,[]
13727,1372700,5차원 구사과 초콜릿,25,"['berlekamp–massey', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'exponentiation by squaring', 'mathematics', 'precomputation']"
13728,1372800,행렬식과 GCD,17,"['linear algebra', 'mathematics']"
13729,1372900,1013 피보나치,22,"['exponentiation by squaring', 'mathematics', 'number theory']"
13730,1373000,좋은 트리의 개수,0,[]
13731,1373100,As Easy as CAB,14,"['graph theory', 'topological sorting']"
13732,1373200,Falling Apples,7,"['implementation', 'two-pointer']"
13733,1373300,Square Deal,9,"['bitmask', 'bruteforcing', 'case work', 'geometry']"
13734,1373400,Buggy Robot,17,"['0-1 bfs', ""dijkstra's"", 'dynamic programming', 'graph theory']"
13735,1373500,Construction Toy,21,"['bruteforcing', 'geometry']"
13736,1373600,Around and Around We Go,0,[]
13737,1373700,The Calculus of Ada,10,['mathematics']
13738,1373800,Ghostbusters 2,19,"['2-sat', 'binary search', 'graph theory', 'strongly connected component']"
13739,1373900,Postal Delivery,14,"['greedy', 'sorting']"
13740,1374000,Windy Path,20,"['ad-hoc', 'constructive', 'geometry', 'greedy']"
13741,1374100,Alphabet,10,"['dynamic programming', 'string']"
13742,1374200,Base Sums,24,['mathematics']
13743,1374300,Enclosure,24,[]
13744,1374400,Illumination,17,"['2-sat', 'graph theory', 'strongly connected component']"
13745,1374500,InTents,0,[]
13746,1374600,Islands,9,"['graph theory', 'graph traversal']"
13747,1374700,Paint,13,"['binary search', 'data structures', 'dynamic programming', 'set / map by trees']"
13748,1374800,Periodic Strings,6,"['bruteforcing', 'string']"
13749,1374900,Water,18,['maximum flow']
13750,1375000,Zigzag,9,[]
13751,1375100,Barbells,12,"['backtracking', 'bitmask', 'bruteforcing', 'data structures', 'set / map by hashing']"
13752,1375200,히스토그램,3,['implementation']
13753,1375300,Project Panoptes,0,[]
13754,1375400,Mismatched Socks,13,['greedy']
13755,1375500,It Takes Three,8,['bruteforcing']
13756,1375600,완벽한 구사과의 집합,24,"['dynamic programming', 'linear algebra', 'mathematics']"
13757,1375700,빼빼로 데이,0,[]
13758,1375800,RNG 2,22,"['divide and conquer', 'exponentiation by squaring', 'fast fourier transform', 'mathematics']"
13759,1375900,&,0,[]
13760,1376000,Appropriate Coordinate Map,0,[]
13761,1376100,Banking II,0,[]
13762,1376200,Calculating Taxes,0,[]
13763,1376300,Dropped Water Bottle,0,[]
13764,1376400,Earl’s Extremely Efficient Encryption,7,['sorting']
13765,1376500,Flipping Switches,0,[]
13766,1376600,Game Moves,11,['mathematics']
13767,1376700,Hiking,0,[]
13768,1376800,Individually Customised Pop-up Cards,0,[]
13769,1376900,Jumping Impala,0,[]
13770,1377000,Krypton Stadiums,0,[]
13771,1377100,Presents,4,"['implementation', 'sorting']"
13772,1377200,Holes,4,"['implementation', 'string']"
13773,1377300,Olympic Games,3,['implementation']
13774,1377400,Palindromes,4,"['bruteforcing', 'implementation', 'string']"
13775,1377500,Virus,4,['string']
13776,1377600,Alpha Puzzle,5,"['implementation', 'string']"
13777,1377700,Hunt The Rabbit,5,"['binary search', 'implementation']"
13778,1377800,Parliamentary Rankings,8,['implementation']
13779,1377900,Obfustication,0,[]
13780,1378000,Rasterization,10,"['geometry', 'mathematics']"
13781,1378100,IK Robot,0,[]
13782,1378200,Pokemon,0,[]
13783,1378300,Hashing,0,[]
13784,1378400,What Next,0,[]
13785,1378500,The Resistance,0,[]
13786,1378600,Rtetris,0,[]
13787,1378700,Infinity Maze,14,"['graph theory', 'graph traversal', 'implementation', 'pigeonhole principle', 'simulation']"
13788,1378800,Butterfly,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
13789,1378900,Chinese Classics,0,[]
13790,1379000,Revenge of Champernowne Constant,0,[]
13791,1379100,Full Text Search,0,[]
13792,1379200,Mysterious Maze,0,[]
13793,1379300,Number Sorting,18,[]
13794,1379400,Sky Jump,0,[]
13795,1379500,Mobile Network,0,[]
13796,1379600,Blue Forest,0,[]
13797,1379700,Era Name,6,"['implementation', 'sorting']"
13798,1379800,Step Step Evolution,9,"['implementation', 'simulation']"
13799,1379900,Dungeon Quest II,0,[]
13800,1380000,Dice Room,0,[]
13801,1380100,Alice and Bomb,0,[]
13802,1380200,Two-Wheel Buggy,0,[]
13803,1380300,Camera Control,0,[]
13804,1380400,Road Construction,15,"[""dijkstra's"", 'graph theory', 'greedy']"
13805,1380500,Operator,0,[]
13806,1380600,Merry Christmas,18,"['bipartite matching', 'maximum flow', 'floyd–warshall', 'graph theory']"
13807,1380700,Whist,10,"['implementation', 'simulation']"
13808,1380800,For the Peace,11,"['data structures', 'greedy', 'implementation', 'simulation', 'stack']"
13809,1380900,Champernowne Constant,12,"['ad-hoc', 'dynamic programming', 'implementation', 'mathematics', 'parametric search']"
13810,1381000,Futon,14,"['breadth-first search', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing']"
13811,1381100,Safe Area,0,[]
13812,1381200,Water Tank,16,['binary search']
13813,1381300,Neko’s Treasure,0,[]
13814,1381400,Eleven Lover,13,"['dynamic programming', 'mathematics', 'number theory']"
13815,1381500,Crystal Jails,0,[]
13816,1381600,Cave Explorer,0,[]
13817,1381700,Everlasting...?,9,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
13818,1381800,Headstrong Student,10,"['implementation', 'mathematics']"
13819,1381900,Dig or Climb,0,[]
13820,1382000,Rotation Estimation,0,[]
13821,1382100,Optimal Rest,0,[]
13822,1382200,Controlled Tournament,0,[]
13823,1382300,Entangled Tree,0,[]
13824,1382400,Ramen Shop,0,[]
13825,1382500,Cousin’s Aunt,0,[]
13826,1382600,Colony Maintenance,0,[]
13827,1382700,Space Coconut Crab II,8,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
13828,1382800,Sort the Panels,0,[]
13829,1382900,Disarmament of the Units,0,[]
13830,1383000,So Sleepy,0,[]
13831,1383100,Alice in Foxland,0,[]
13832,1383200,Lying about Your Age,0,[]
13833,1383300,Turn Polygons,0,[]
13834,1383400,Robots’ Crash,0,[]
13835,1383500,Linear Ether Geometry,0,[]
13836,1383600,Ruins,0,[]
13837,1383700,Hyper Rock-Scissors-Paper,0,[]
13838,1383800,Online Quiz System,0,[]
13839,1383900,Rock Man,0,[]
13840,1384000,Autocorrelation Function,19,"['calculus', 'mathematics', 'sweeping']"
13841,1384100,It Prefokery Pio,15,['dynamic programming']
13842,1384200,Traffic,0,[]
13843,1384300,Restriction Enzyme,0,[]
13844,1384400,The Extreme Slalom,0,[]
13845,1384500,Blackjack,0,[]
13846,1384600,Eight Princes,0,[]
13847,1384700,Geometry?! Why Not??,12,"['geometry', 'mathematics']"
13848,1384800,나누는 자가 지배한다,14,['backtracking']
13849,1384900,Reading a Chord,0,[]
13850,1385000,University Rankings,15,"['dynamic programming', 'graph theory', 'topological sorting']"
13851,1385100,Gather on the Clock,0,[]
13852,1385200,Tiling Polygons,0,[]
13853,1385300,Light The Room,0,[]
13854,1385400,트리와 소수,23,"['센트로이드', 'centroid decomposition', 'combinatorics', 'divide and conquer', 'fast fourier transform', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes', 'tree']"
13855,1385500,Three Squares,19,"['backtracking', 'binary search', 'parametric search']"
13856,1385600,Favorite music,22,[]
13857,1385700,Castle,18,"['knuth–morris–pratt', 'string']"
13858,1385800,Reading Digits,5,"['implementation', 'string']"
13859,1385900,Exam,0,[]
13860,1386000,Letters,11,[]
13861,1386100,Pokemons,0,[]
13862,1386200,Pub crawl,0,[]
13863,1386300,Cubes,18,[]
13864,1386400,Marathon,0,[]
13865,1386500,Cutting,0,[]
13866,1386600,팀 나누기,2,"['arithmetic', 'implementation', 'mathematics']"
13867,1386700,Back to the Future,19,['graph theory']
13868,1386800,Counting Self-Rotating Subsets,17,"['combinatorics', 'data structures', 'geometry', 'set / map by hashing', 'mathematics', 'set / map by trees']"
13869,1386900,Dating On-Line,10,"['geometry', 'greedy', 'area of a polygon']"
13870,1387000,Emission Spectrum,21,"['data structures', 'persistent segment tree', 'segment tree']"
13871,1387100,Farm robot,3,"['implementation', 'simulation']"
13872,1387200,Game of Matchings,19,"['hashing', 'knuth–morris–pratt', 'string']"
13873,1387300,Hotel Rewards,16,"['data structures', 'greedy', 'priority queue']"
13874,1387400,Internet Trouble,0,[]
13875,1387500,Just in Time,14,"['mathematics', 'number theory', 'primality test']"
13876,1387600,Kill the Werewolf,18,['maximum flow']
13877,1387700,이건 무슨 진법이지?,4,['mathematics']
13878,1387800,FBI Universal Control Numbers,6,['string']
13879,1387900,m-ary Partitions,11,['dynamic programming']
13880,1388000,A Rational Sequence (Take 3),9,"['data structures', 'stack']"
13881,1388100,Permutation Descent Counts,13,"['combinatorics', 'dynamic programming', 'mathematics']"
13882,1388200,Tight-Fit Sudoku,0,[]
13883,1388300,Magical Mystery Knight’s Tour,0,[]
13884,1388400,삭삽 정렬,10,"['greedy', 'sorting']"
13886,1388600,Smoothed Gardens,0,[]
13887,1388700,수열과 쿼리 12,27,"['data structures', 'multidimensional segment tree', 'offline queries', 'segment tree', 'splay tree', 'tree']"
13888,1388800,WSI Extreme,0,[]
13889,1388900,Average,18,"['combinatorics', 'dynamic programming', ""fermat's little theorem"", 'inclusion and exclusion', 'mathematics', 'number theory']"
13890,1389000,Big Bang,19,"['mathematics', 'möbius inversion', 'number theory']"
13891,1389100,Find C,18,"['extended euclidean algorithm', 'mathematics', 'number theory']"
13892,1389200,ACM Tax,21,"['data structures', 'lowest common ancestor', ""mo's"", 'offline queries', 'persistent segment tree', 'segment tree', 'tree']"
13893,1389300,Dictionary Game,21,"['data structures', 'game theory', 'sprague–grundy theorem', 'string', 'tree', 'trie']"
13894,1389400,Binary Strings,18,[]
13895,1389500,Witcher Potion,15,[]
13896,1389600,Sky Tax,18,"['lowest common ancestor', 'tree']"
13897,1389700,Printing Press,25,"['maximum flow', 'linear programming', 'minimum cost maximum flow']"
13898,1389800,Expected Number of Connected Components,0,[]
13899,1389900,Coordinates,11,"['graph theory', 'graph traversal']"
13900,1390000,순서쌍의 곱의 합,7,"['mathematics', 'prefix sum']"
13901,1390100,로봇,8,"['implementation', 'simulation']"
13902,1390200,개업 2,12,['dynamic programming']
13903,1390300,출근,10,"['breadth-first search', 'graph theory', 'graph traversal']"
13904,1390400,과제,13,"['data structures', 'greedy', 'priority queue', 'sorting']"
13905,1390500,세부,12,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'minimum spanning tree']"
13906,1390600,대문자,18,['dynamic programming']
13907,1390700,세금,17,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
13908,1390800,비밀번호,9,['bruteforcing']
13909,1390900,창문 닫기,6,"['mathematics', 'number theory']"
13910,1391000,개업,11,['dynamic programming']
13911,1391100,집 구하기,14,"[""dijkstra's"", 'graph theory']"
13912,1391200,외계 생물,15,"['combinatorics', 'dynamic programming', 'mathematics']"
13913,1391300,숨바꼭질 4,12,"['breadth-first search', 'graph theory', 'graph traversal']"
13914,1391400,Aerial Archeology,0,[]
13915,1391500,현수의 열기구 교실,8,"['bitmask', 'data structures', 'set / map by hashing', 'sorting', 'set / map by trees']"
13916,1391600,Cable Connection,0,[]
13917,1391700,Rotating Display,0,[]
13918,1391800,Fence,0,[]
13919,1391900,Tree Stands,0,[]
13920,1392000,Orchard Division,0,[]
13921,1392100,"It’s Raining, Man",0,[]
13922,1392200,Suspicious Samples,0,[]
13923,1392300,오버워치 월드컵,7,[]
13924,1392400,접미사 배열 3,0,[]
13925,1392500,수열과 쿼리 13,20,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
13926,1392600,"gcd(n, k) = 1",21,"['euler totient function', 'mathematics', 'miller–rabin', 'number theory', 'pollard rho', 'primality test']"
13927,1392700,수열과 쿼리 14,24,"['binary search', 'data structures', 'multidimensional segment tree', 'persistent segment tree', 'segment tree']"
13928,1392800,Arranging Hat,20,['dynamic programming']
13929,1392900,British Menu,20,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'strongly connected component']"
13930,1393000,Careful Ascent,6,"['implementation', 'mathematics']"
13931,1393100,Driving in Optimistan,0,[]
13932,1393200,Exam Redistribution,8,"['greedy', 'sorting']"
13933,1393300,Free Weights,10,['binary search']
13934,1393400,Gotta Nudge ’Em All,0,[]
13935,1393500,Hamiltonian Hypercube,9,"['bitmask', 'mathematics']"
13936,1393600,Iron and Coal,14,"['breadth-first search', 'graph theory', 'graph traversal']"
13937,1393700,Jupiter Orbiter,20,"['maximum flow', 'greedy']"
13938,1393800,Kiwi Trees,21,['geometry']
13939,1393900,Imena,4,"['parsing', 'string']"
13940,1394000,Pohlepko,14,"['breadth-first search', 'graph theory', 'graph traversal']"
13941,1394100,Kronican,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
13942,1394200,Kvalitetni,0,[]
13943,1394300,Zoltan,21,[]
13944,1394400,Meksikanac,25,"['fast fourier transform', 'geometry', 'mathematics']"
13945,1394500,Appearance Analysis,9,"['bruteforcing', 'implementation', 'string']"
13946,1394600,Bipartite Blanket,22,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', ""hall's theorem""]"
13947,1394700,Convex Contour,17,"['case work', 'geometry']"
13948,1394800,Dancing Disks,25,['dynamic programming']
13949,1394900,쉬운 문제,23,"['arbitrary precision / big integers', 'breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory']"
13950,1395000,Free Figurines,13,"['ad-hoc', 'graph theory', 'tree']"
13951,1395100,Geohash Grid,0,[]
13952,1395200,Hangar Hurdles,21,"['binary search', 'data structures', 'disjoint set', 'parallel binary search', 'prefix sum']"
13953,1395300,Invisible Integers,27,"['bitmask', 'dynamic programming']"
13954,1395400,Jazz Journey,21,['greedy']
13955,1395500,Key Knocking,14,"['case work', 'constructive', 'mathematics']"
13956,1395600,Lost Logic,23,"['2-sat', 'ad-hoc', 'constructive', 'graph theory', 'strongly connected component']"
13957,1395700,Within Arm's Reach,20,"['constructive', 'geometry']"
13958,1395800,Bribing Eve,19,"['ad-hoc', 'geometry', 'mathematics', 'sweeping']"
13959,1395900,Candle Box,6,"['bruteforcing', 'implementation', 'simulation']"
13960,1396000,Dinner Bet,18,"['dynamic programming', 'mathematics', 'probability theory']"
13961,1396100,Passwords,22,"['aho-corasick', 'data structures', 'string', 'tree', 'trie']"
13962,1396200,Performance Review,18,"['data structures', 'euler tour technique', 'segment tree', 'tree']"
13963,1396300,Cairo Corridor,22,"['graph theory', 'graph traversal', 'implementation']"
13964,1396400,Pascal's Hyper-Pyramids,14,"['backtracking', 'combinatorics', 'dynamic programming', 'mathematics']"
13965,1396500,The White Rabbit Pocket Watch,19,"['gaussian elimination', 'linear algebra', 'mathematics']"
13966,1396600,Risky Lottery,0,[]
13967,1396700,Balls and Needles,11,"['data structures', 'depth-first search', 'geometry', 'graph theory', 'graph traversal']"
13968,1396800,Conference,0,[]
13969,1396900,Hacker,0,[]
13970,1397000,Power towers,21,"['euler totient function', 'exponentiation by squaring', 'mathematics', 'number theory']"
13971,1397100,LEFKARITIKA,0,[]
13972,1397200,Cruise,0,[]
13973,1397300,Acrobat,0,[]
13974,1397400,파일 합치기 2,19,"['dynamic programming', 'knuth optimization']"
13975,1397500,파일 합치기 3,12,"['data structures', 'greedy', 'priority queue']"
13976,1397600,타일 채우기 2,16,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
13977,1397700,이항 계수와 쿼리,15,"['combinatorics', 'exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'modular multiplicative inverse', 'number theory']"
13978,1397800,Cameras,9,"['data structures', 'greedy', 'sliding window', 'set / map by trees']"
13979,1397900,Contest Strategy,0,[]
13980,1398000,Maximum Islands,19,['bipartite matching']
13981,1398100,Postman,15,['greedy']
13982,1398200,Shopping,18,"['data structures', 'mathematics', 'offline queries', 'sparse table']"
13983,1398300,Tournament Wins,17,"['bayes theorem', 'mathematics', 'probability theory']"
13984,1398400,Contest Score,9,"['data structures', 'implementation', 'priority queue', 'simulation']"
13985,1398500,Equality,2,"['arithmetic', 'mathematics', 'string']"
13986,1398600,Gravity,7,['implementation']
13987,1398700,Six Sides,4,"['arithmetic', 'bruteforcing', 'combinatorics', 'mathematics']"
13988,1398800,비무장 지대,24,"['data structures', 'dynamic programming', 'graph theory', 'strongly connected component', 'segment tree']"
13989,1398900,Abbreviation,14,"['parsing', 'string']"
13990,1399000,Binary Code,24,"['2-sat', 'data structures', 'graph theory', 'strongly connected component', 'string', 'tree', 'trie']"
13991,1399100,Cactus Construction,21,"['cactus', 'constructive', 'data structures', 'depth-first search', 'graph theory', 'graph traversal']"
13992,1399200,Delight for a Cat,25,"['maximum flow', 'minimum cost maximum flow']"
13993,1399300,Expect to Wait,19,"['offline queries', 'sweeping']"
13994,1399400,Foreign Postcards,14,"['dynamic programming', 'mathematics', 'prefix sum', 'probability theory']"
13995,1399500,Game on Graph,25,"['breadth-first search', 'depth-first search', 'game theory', 'graph theory', 'graph traversal']"
13996,1399600,Hard Refactoring,8,[]
13998,1399800,Jenga Boom,19,['prefix sum']
13999,1399900,Kids Designing Kids,23,[]
14000,1400000,List of Primes,21,"['dynamic programming', 'recursion']"
14001,1400100,Mole Tunnels,23,"['maximum flow', 'minimum cost maximum flow', 'tree']"
14002,1400200,가장 긴 증가하는 부분 수열 4,12,['dynamic programming']
14003,1400300,가장 긴 증가하는 부분 수열 5,16,"['binary search', 'longest increasing sequence in o(n log n)']"
14004,1400400,ICPC,4,"['arithmetic', 'mathematics']"
14005,1400500,Small Ping Pong Tournament,6,"['ad-hoc', 'bruteforcing']"
14006,1400600,Large Ping Pong Tournament,7,"['ad-hoc', 'sorting']"
14007,1400700,Small Weird Measurements,5,[]
14008,1400800,Medium Weird Measurements,7,[]
14009,1400900,Large Weird Measurements,11,"['dynamic programming', 'two-pointer']"
14010,1401000,Where To Go?,7,[]
14011,1401100,Small PhD Restaurant,8,"['greedy', 'sorting']"
14012,1401200,Large PhD Restaurant,9,"['greedy', 'sorting']"
14013,1401300,Unit Conversion,3,"['arithmetic', 'implementation', 'mathematics']"
14014,1401400,Dudu of English,11,"['implementation', 'parsing', 'regular expression', 'string']"
14032,1403200,Hungry Fox,15,"['ad-hoc', 'sorting']"
14033,1403300,Artskjid,0,[]
14034,1403400,Solar Flight,0,[]
14035,1403500,Cars on Ice,14,"['data structures', 'deque', 'depth-first search', 'graph theory', 'graph traversal', 'stack']"
14036,1403600,Timpanist,0,[]
14037,1403700,Eggscavation,18,"['data structures', 'disjoint set', 'inclusion and exclusion', 'prefix sum', 'segment tree', 'sparse table']"
14038,1403800,Tournament Selection,2,['implementation']
14039,1403900,Magic Squares,5,['implementation']
14040,1404000,Hidden Palindrome,5,"['bruteforcing', 'string']"
14041,1404100,Arrival Time,4,"['implementation', 'mathematics', 'simulation']"
14042,1404200,Tandem Bicycle,7,"['greedy', 'sorting']"
14043,1404300,Ragaman,4,"['ad-hoc', 'implementation', 'string']"
14044,1404400,Phonomenal Reviews,16,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
14045,1404500,Combining Riceballs,0,[]
14046,1404600,Circle of Life,17,"['bitmask', 'mathematics']"
14047,1404700,Stupendous Bowties,0,[]
14048,1404800,Through A Maze Darkly,0,[]
14049,1404900,Data Structure,16,"['implementation', 'mathematics', 'sorting']"
14050,1405000,Field Trip,0,[]
14051,1405100,Splitting Hares,0,[]
14052,1405200,Legends,0,[]
14053,1405300,O Canada,0,[]
14054,1405400,Zombie Apocalypse,0,[]
14055,1405500,Pirates,25,"['ad-hoc', 'data structures', 'game theory', 'splay tree', 'tree']"
14056,1405600,K번째 좋은 문자열,16,['bruteforcing']
14057,1405700,Towers,18,"['binary search', 'data structures', 'dynamic programming', 'segment tree', 'stack']"
14058,1405800,The Game “Divisibility”,21,"['ad-hoc', 'bruteforcing', 'game theory', 'mathematics', 'two-pointer']"
14059,1405900,Biathlon,0,[]
14060,1406000,Paths in Multigraph,22,"['graph theory', 'stoer–wagner']"
14061,1406100,Tower,14,"['data structures', 'stack']"
14062,1406200,Cheap Traveling,0,[]
14063,1406300,Blokada,21,"['binary search', 'maximum flow', 'parametric search']"
14064,1406400,Caki,9,"['implementation', 'simulation']"
14065,1406500,Gorivo,2,"['arithmetic', 'mathematics']"
14066,1406600,Kocka,11,['implementation']
14067,1406700,Marica,16,['dynamic programming']
14068,1406800,Ograda,0,[]
14069,1406900,Pčele,18,"['exponentiation by squaring', 'mathematics']"
14070,1407000,Roj,0,[]
14071,1407100,Rudar,0,[]
14072,1407200,Vjerojatnost,0,[]
14073,1407300,Bitovni,15,"['bitmask', 'dynamic programming', 'implementation']"
14074,1407400,Kratki,15,[]
14075,1407500,Luhn,3,"['arithmetic', 'implementation', 'mathematics']"
14076,1407600,선인장 선물,24,[]
14077,1407700,Parada,18,[]
14078,1407800,Piramida,0,[]
14079,1407900,R9K,0,[]
14080,1408000,Sjeckanje,0,[]
14081,1408100,Slika,0,[]
14082,1408200,Tablica,0,[]
14083,1408300,Bitstock,0,[]
14084,1408400,Četverokut,0,[]
14085,1408500,Dvaput,0,[]
14086,1408600,Hyperloop,0,[]
14087,1408700,Lijepi Putevi,0,[]
14088,1408800,Parket,0,[]
14089,1408900,Prosjek,0,[]
14090,1409000,RAM,0,[]
14091,1409100,Šetnja,0,[]
14092,1409200,Jabuka,0,[]
14093,1409300,Lektire,0,[]
14094,1409400,Magija,17,['dynamic programming']
14095,1409500,Novčicći,0,[]
14096,1409600,Pečat,0,[]
14097,1409700,Sort,0,[]
14098,1409800,Tunel,0,[]
14099,1409900,Velika Tablica,0,[]
14100,1410000,XOR,0,[]
14101,1410100,Arhimed,0,[]
14102,1410200,Formula,0,[]
14103,1410300,Haker,0,[]
14104,1410400,HNL,0,[]
14105,1410500,Ivo,0,[]
14106,1410600,Mnogokut,0,[]
14107,1410700,Sort,0,[]
14108,1410800,Umnozak,0,[]
14109,1410900,Zvonimir,0,[]
14110,1411000,Agresor,0,[]
14111,1411100,Kreditna,0,[]
14112,1411200,Kvadrati,0,[]
14113,1411300,Lubenice,7,"['greedy', 'mathematics']"
14114,1411400,Matematika,13,['mathematics']
14115,1411500,Permutacije,0,[]
14116,1411600,Restorani,0,[]
14117,1411700,Tartufi,0,[]
14118,1411800,Virus,0,[]
14119,1411900,Anadrom,0,[]
14120,1412000,Banane,0,[]
14121,1412100,Haker,11,"['constructive', 'greedy', 'parsing', 'string']"
14122,1412200,Izlet,0,[]
14123,1412300,Struja,0,[]
14124,1412400,Telefon,5,"['implementation', 'mathematics']"
14125,1412500,삼트리스,0,[]
14126,1412600,Vanzemaljci,0,[]
14127,1412700,Zone,0,[]
14128,1412800,Duzžine,0,[]
14129,1412900,Kugle,0,[]
14130,1413000,Mravi,0,[]
14131,1413100,Okret,22,"['splay tree', 'tree']"
14132,1413200,Šibice,0,[]
14133,1413300,Sličice,0,[]
14134,1413400,Sretan,0,[]
14135,1413500,Trokut,12,['mathematics']
14136,1413600,Višekratnici,15,[]
14137,1413700,Ćevapi,0,[]
14138,1413800,Filtar,0,[]
14139,1413900,Izviðači,0,[]
14140,1414000,Lunapark,6,"['implementation', 'simulation']"
14141,1414100,Majstor,0,[]
14142,1414200,Maxplus,0,[]
14143,1414300,Škola,20,"['data structures', 'persistent segment tree', 'segment tree']"
14144,1414400,Žabe,17,"['inclusion and exclusion', 'mathematics', 'number theory', 'parametric search']"
14145,1414500,Žetva,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
14146,1414600,Bomboni,9,"['mathematics', 'number theory']"
14147,1414700,Ceste,0,[]
14148,1414800,Čestice,18,"['combinatorics', 'dynamic programming', 'mathematics', 'number theory']"
14149,1414900,Igra,0,[]
14150,1415000,Prekidač,0,[]
14151,1415100,Riva,0,[]
14152,1415200,RSA,0,[]
14153,1415300,Trokut,12,"['implementation', 'recursion']"
14154,1415400,Zmija,13,"['data structures', 'deque', 'implementation', 'simulation']"
14155,1415500,Arhitekt,0,[]
14156,1415600,Binarni,9,"['bitmask', 'constructive']"
14157,1415700,Čuvar,6,"['bruteforcing', 'geometry', 'implementation']"
14158,1415800,Kalendar,11,"['bruteforcing', 'implementation']"
14159,1415900,Kemija,0,[]
14160,1416000,Pekar,0,[]
14161,1416100,Spoj,17,"['combinatorics', 'exponentiation by squaring', 'inclusion and exclusion', 'mathematics']"
14162,1416200,Suma,7,"['mathematics', 'number theory']"
14163,1416300,Torta,0,[]
14164,1416400,삼각형 영역,20,['geometry']
14165,1416500,Team Building,17,"['dynamic programming', 'prefix sum']"
14166,1416600,Robotic Cow Herd,24,"['data structures', 'graph theory', 'greedy', 'priority queue']"
14167,1416700,Moocast,13,"['graph theory', 'minimum spanning tree']"
14168,1416800,Cow Checklist,15,['dynamic programming']
14169,1416900,Lasers and Mirrors,15,"['breadth-first search', 'value / coordinate compression', ""dijkstra's"", 'graph theory', 'graph traversal']"
14170,1417000,Counting Haybales,8,['binary search']
14171,1417100,Cities and States,10,"['data structures', 'hashing', 'set / map by hashing']"
14172,1417200,Moocast,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
14173,1417300,Square Pasture,2,"['arithmetic', 'mathematics']"
14174,1417400,Block Game,5,['string']
14175,1417500,The Cow-Signal,4,"['implementation', 'string']"
14176,1417600,트리와 소수,23,"['센트로이드', 'centroid decomposition', 'combinatorics', 'divide and conquer', 'fast fourier transform', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes', 'tree']"
14177,1417700,티떱랜드,20,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'prefix sum']"
14178,1417800,Arranging Heaps,0,[]
14179,1417900,크리스마스 이브,21,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'prefix sum']"
14180,1418000,배열의 특징,21,"['convex hull trick', 'dynamic programming']"
14181,1418100,함수와 쿼리,23,['convex hull trick']
14182,1418200,Tax,3,"['arithmetic', 'mathematics']"
14183,1418300,Key Maker,4,['implementation']
14184,1418400,IOI 2017 Logo,5,"['implementation', 'sorting']"
14185,1418500,MicroRNA Ranking,11,"['data structures', 'priority queue']"
14186,1418600,Möbius Strip,0,[]
14187,1418700,Expression,19,[]
14188,1418800,Elections,13,"['combinatorics', 'dynamic programming', 'mathematics']"
14189,1418900,Explosion at Cafebazaar,20,"['graph theory', 'strongly connected component', 'topological sorting']"
14190,1419000,Linear Galaxy,14,[]
14191,1419100,Rahyab,0,[]
14192,1419200,Base Stations,20,[]
14193,1419300,Skeletons,21,"['depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'strongly connected component']"
14194,1419400,Grades,5,['mathematics']
14195,1419500,DotB,8,"['implementation', 'mathematics', 'simulation']"
14196,1419600,Sticks and Carrots(Chomagh va Havij),0,[]
14197,1419700,Son of Durin,0,[]
14198,1419800,Halting Machine,0,[]
14199,1419900,“Oland must not fall”,0,[]
14200,1420000,Circular Board Game,0,[]
14201,1420100,Blocks&Balls,0,[]
14202,1420200,Minions and the rooms,23,"['combinatorics', 'data structures', 'fast fourier transform', 'segment tree with lazy propagation', 'mathematics', 'segment tree']"
14203,1420300,Unlucky 89,0,[]
14204,1420400,표 정렬,12,['ad-hoc']
14205,1420500,함수,19,"['combinatorics', 'dynamic programming', 'mathematics', 'modular multiplicative inverse', 'number theory']"
14206,1420600,선데이 코딩,0,[]
14207,1420700,약수 도로,19,[]
14208,1420800,수열 찾기,0,[]
14209,1420900,Bridž,4,['string']
14210,1421000,Kartomat,6,[]
14211,1421100,Kas,17,"['dynamic programming', 'knapsack']"
14212,1421200,Rekonstruiraj,0,[]
14213,1421300,Rima,0,[]
14214,1421400,Osmosmjerka,0,[]
14215,1421500,세 막대,3,"['geometry', 'implementation', 'mathematics']"
14216,1421600,할 일 정하기 2,22,['hungarian']
14217,1421700,그래프 탐색,11,"['breadth-first search', 'graph theory', 'graph traversal']"
14218,1421800,그래프 탐색 2,10,"['breadth-first search', 'depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
14219,1421900,막대과자 포장,3,"['arithmetic', 'mathematics']"
14220,1422000,양아치 집배원,13,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
14221,1422100,편의점,12,"[""dijkstra's"", 'graph theory']"
14222,1422200,배열과 연산,11,['greedy']
14223,1422300,작은 정사각형 1,8,"['arithmetic', 'bruteforcing', 'mathematics']"
14224,1422400,작은 정사각형 2,15,"['bruteforcing', 'parametric search']"
14225,1422500,부분수열의 합,10,['bruteforcing']
14226,1422600,이모티콘,12,"['breadth-first search', 'graph theory', 'graph traversal']"
14227,1422700,빨간 버튼 파란 버튼,16,"['ad-hoc', 'mathematics']"
14228,1422800,물탱크,0,[]
14229,1422900,DNA 문자열,0,[]
14230,1423000,평면 게임,0,[]
14231,1423100,박스 포장,9,['dynamic programming']
14232,1423200,보석 도둑,11,"['mathematics', 'number theory', 'primality test']"
14233,1423300,악덕 사장,10,"['binary search', 'greedy', 'parametric search', 'sorting']"
14234,1423400,업무 처리,0,[]
14235,1423500,크리스마스 선물,8,"['data structures', 'priority queue']"
14236,1423600,명제 증명,0,[]
14237,1423700,숙련도,0,[]
14238,1423800,출근 기록,13,['dynamic programming']
14239,1423900,게임,0,[]
14240,1424000,부분 수열의 점수,21,"['convex hull trick', 'prefix sum']"
14241,1424100,슬라임 합치기,8,['mathematics']
14242,1424200,아름다운 그래프,0,[]
14243,1424300,출근 기록 2,15,"['case work', 'constructive']"
14244,1424400,트리 만들기,7,"['constructive', 'tree']"
14245,1424500,XOR,17,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
14246,1424600,K보다 큰 구간,7,['two-pointer']
14247,1424700,나무 자르기,9,"['greedy', 'sorting']"
14248,1424800,점프 점프,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
14249,1424900,점프 점프 2,19,"['graph theory', 'strongly connected component', 'topological sorting']"
14250,1425000,늑대,15,['dynamic programming']
14251,1425100,늑대 2,17,['dynamic programming']
14252,1425200,공약수열,16,"['euclidean algorithm', 'mathematics', 'number theory', 'sorting']"
14253,1425300,문자열 배열,0,[]
14254,1425400,비밀번호 변경,11,['string']
14255,1425500,멋진 배열,0,[]
14256,1425600,SSR,13,"['arithmetic', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
14257,1425700,XOR 방정식,14,"['combinatorics', 'mathematics']"
14258,1425800,XOR 그룹,15,"['data structures', 'disjoint set', 'offline queries']"
14259,1425900,거짓말쟁이 효빈이,0,[]
14260,1426000,열쇠 재배치 2,0,[]
14261,1426100,적군을 막아라,17,[]
14262,1426200,그림 그리기,13,['implementation']
14263,1426300,카드 놓기,17,"['data structures', 'graph theory', 'priority queue', 'topological sorting']"
14264,1426400,정육각형과 삼각형,3,"['geometry', 'mathematics']"
14265,1426500,영선 수열,12,['mathematics']
14266,1426600,나는 가르친다 스위핑을,15,"['sorting', 'sweeping']"
14267,1426700,회사 문화 1,12,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
14268,1426800,회사 문화 2,18,"['data structures', 'depth-first search', 'euler tour technique', 'graph theory', 'graph traversal', 'segment tree with lazy propagation', 'segment tree', 'tree']"
14269,1426900,전설의 쌍검 용사,14,"['greedy', 'sorting']"
14270,1427000,종전 협상,0,[]
14271,1427100,그리드 게임,10,"['breadth-first search', 'graph theory', 'graph traversal']"
14272,1427200,f(X) = A + X + B + X + C,22,"['knuth–morris–pratt', 'string']"
14273,1427300,영선이의 생일,0,[]
14274,1427400,세 점,17,"['value / coordinate compression', 'data structures', 'segment tree']"
14275,1427500,직사각형 색칠,20,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
14276,1427600,도로 건설,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
14277,1427700,등차 수열과 등비 수열,11,['mathematics']
14278,1427800,블록 쌓기,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
14279,1427900,두 수의 곱,12,"['bruteforcing', 'mathematics']"
14280,1428000,두 수의 곱 2,16,['mathematics']
14281,1428100,볼록 수열,9,"['implementation', 'simulation']"
14282,1428200,학년 통폐합,18,"['bipartite matching', 'graph theory', 'mathematics']"
14283,1428300,간선 이어가기,19,"['maximum flow', 'graph theory', 'max-flow min-cut theorem']"
14284,1428400,간선 이어가기 2,11,"[""dijkstra's"", 'graph theory']"
14285,1428500,간선 끊어가기,17,"[""dijkstra's"", 'graph theory']"
14286,1428600,간선 끊어가기 2,18,"['maximum flow', 'max-flow min-cut theorem']"
14287,1428700,회사 문화 3,18,"['data structures', 'euler tour technique', 'segment tree', 'tree']"
14288,1428800,회사 문화 4,18,"['data structures', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
14289,1428900,본대 산책 3,15,"['exponentiation by squaring', 'graph theory', 'mathematics']"
14290,1429000,Diwali lightings (Small),4,"['bruteforcing', 'implementation', 'string']"
14291,1429100,Diwali lightings (Large),7,"['mathematics', 'number theory', 'prefix sum']"
14292,1429200,Beautiful Numbers (Small),8,"['bruteforcing', 'mathematics']"
14293,1429300,Beautiful Numbers (Large),11,"['binary search', 'mathematics']"
14294,1429400,Partioning Number (Small),12,['dynamic programming']
14295,1429500,Partioning Number (Large),13,"['bruteforcing', 'mathematics']"
14296,1429600,Sorting Array (Small),0,[]
14297,1429700,Sorting Array (Large),0,[]
14298,1429800,Vote (Small),8,"['bruteforcing', 'mathematics', 'probability theory']"
14299,1429900,Vote (Large),12,"['combinatorics', 'dynamic programming', 'mathematics', 'probability theory']"
14300,1430000,Sitting (Small),9,"['bitmask', 'bruteforcing', 'precomputation']"
14301,1430100,Sitting (Large),12,"['ad-hoc', 'case work']"
14302,1430200,Codejamon Cipher (Small),11,"['bruteforcing', 'dynamic programming', 'string']"
14303,1430300,Codejamon Cipher (Large),12,"['dynamic programming', 'prefix sum', 'string']"
14304,1430400,Stretch Rope (Small),8,[]
14305,1430500,Stretch Rope (Large),19,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque', 'priority queue', 'segment tree']"
14306,1430600,Monster Path (Small),12,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'probability theory']"
14307,1430700,Monster Path (Large),12,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'probability theory']"
14308,1430800,Safe Squares (Small),6,['implementation']
14309,1430900,Safe Squares (Large),11,"['binary search', 'parametric search', 'prefix sum']"
14310,1431000,Evaluation (Small),6,"['parsing', 'string']"
14311,1431100,Evaluation (Large),6,"['parsing', 'string']"
14312,1431200,Soldiers (Small),0,[]
14313,1431300,Soldiers (Large),0,[]
14314,1431400,Sherlock and Parentheses (Small),6,"['bruteforcing', 'combinatorics', 'mathematics']"
14315,1431500,Sherlock and Parentheses (Large),7,"['combinatorics', 'greedy', 'mathematics']"
14316,1431600,Sherlock and Watson Gym Secrets (Small),11,"['exponentiation by squaring', 'mathematics']"
14317,1431700,Sherlock and Watson Gym Secrets (Large),17,"['exponentiation by squaring', 'mathematics', 'number theory']"
14318,1431800,Watson and Intervals (Small),12,"['bruteforcing', 'sorting', 'sweeping']"
14319,1431900,Watson and Intervals (Large),0,[]
14320,1432000,Sherlock and Permutation Sorting (Small),15,"['combinatorics', 'dynamic programming', 'mathematics']"
14321,1432100,Sherlock and Permutation Sorting (Large),0,[]
14322,1432200,Country Leader (Small),4,"['implementation', 'string']"
14323,1432300,Country Leader (Large),4,"['implementation', 'string']"
14324,1432400,Rain (Small),16,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
14325,1432500,Rain (Large),16,"['breadth-first search', 'data structures', 'depth-first search', ""dijkstra's"", 'graph theory', 'graph traversal', 'priority queue']"
14326,1432600,Jane's Flower Shop (Small),9,['mathematics']
14327,1432700,Jane's Flower Shop (Large),11,[]
14328,1432800,Clash Royale (Small),0,[]
14329,1432900,Clash Royale (Large),0,[]
14330,1433000,Interleaved Output: Part 1,0,[]
14331,1433100,Imbalance Obviation,0,[]
14332,1433200,Interleaved Output: Part 2,0,[]
14333,1433300,Impromptu Outdoor Gallery,0,[]
14334,1433400,Not So Random (Small),0,[]
14335,1433500,Not So Random (Large),0,[]
14336,1433600,Sums of Sums (Small),0,[]
14337,1433700,Sums of Sums (Large),0,[]
14338,1433800,Integeregex (Small),25,"['data structures', 'dynamic programming', 'set / map by hashing', 'parsing', 'string', 'set / map by trees']"
14339,1433900,Integeregex (Large),25,"['data structures', 'dynamic programming', 'set / map by hashing', 'parsing', 'string', 'set / map by trees']"
14340,1434000,Family Hotel (Small),18,"['combinatorics', 'mathematics']"
14341,1434100,Family Hotel (Large),22,"['combinatorics', 'mathematics', 'modular multiplicative inverse', 'number theory', 'prefix sum']"
14342,1434200,Gallery of Pillars (Small),20,"['euler totient function', 'geometry', 'inclusion and exclusion', 'mathematics', 'number theory']"
14343,1434300,Gallery of Pillars (Large),25,"['euler totient function', 'geometry', 'inclusion and exclusion', 'mathematics', 'number theory']"
14344,1434400,Map Reduce (Small),0,[]
14345,1434500,Map Reduce (Large),0,[]
14346,1434600,Radioactive Islands (Small),26,"['calculus', 'mathematics', 'numerical analysis']"
14347,1434700,Radioactive Islands (Large),27,"['binary search', 'calculus', 'mathematics', 'numerical analysis']"
14348,1434800,Teaching Assistant (Small),13,"['data structures', 'dynamic programming', 'greedy', 'stack']"
14349,1434900,Teaching Assistant (Large),13,"['data structures', 'greedy', 'stack']"
14350,1435000,Forest University (Small),0,[]
14351,1435100,Rebel Against The Empire (Small),0,[]
14352,1435200,Rebel Against The Empire (Large),0,[]
14353,1435300,Go++ (Small),0,[]
14354,1435400,Go++ (Large),0,[]
14355,1435500,Rather Perplexing Showdown (Small),7,"['bruteforcing', 'implementation', 'simulation']"
14356,1435600,Rather Perplexing Showdown (Large),16,"['depth-first search', 'divide and conquer', 'graph theory', 'graph traversal', 'recursion']"
14357,1435700,Red Tape Committee (Small),7,[]
14358,1435800,Red Tape Committee (Large),18,[]
14359,1435900,The Gardener of Seville (Small),0,[]
14360,1436000,The Gardener of Seville (Large),21,"['ad-hoc', 'greedy', 'implementation', 'simulation']"
14361,1436100,Freeform Factory (Small),10,"['ad-hoc', 'backtracking', 'bruteforcing']"
14362,1436200,Freeform Factory (Large),24,"['ad-hoc', 'backtracking']"
14363,1436300,Senate Evacuation (Small),0,[]
14364,1436400,Senate Evacuation (Large),11,"['data structures', 'greedy', 'priority queue']"
14365,1436500,Slides! (Small),0,[]
14366,1436600,Slides! (Large),18,[]
14367,1436700,Fashion Police (Small),9,"['bruteforcing', 'constructive']"
14368,1436800,Fashion Police (Large),16,"['constructive', 'mathematics', 'number theory', 'pigeonhole principle']"
14369,1436900,전화번호 수수께끼 (Small),11,"['ad-hoc', 'bruteforcing', 'string']"
14370,1437000,전화번호 수수께끼 (Large),12,"['ad-hoc', 'string']"
14371,1437100,Close Match (Small),0,[]
14372,1437200,Close Match (Large),18,"['case work', 'greedy', 'implementation']"
14373,1437300,Technobabble (Small),11,"['backtracking', 'bruteforcing', 'data structures', 'set / map by hashing', 'implementation']"
14374,1437400,Technobabble (Large),20,"['bipartite matching', 'value / coordinate compression', 'string']"
14375,1437500,The Last Word (Small),7,"['bruteforcing', 'greedy', 'string']"
14376,1437600,The Last Word (Large),10,['greedy']
14377,1437700,Rank and File (Small),8,['implementation']
14378,1437800,Rank and File (Large),11,"['combinatorics', 'mathematics']"
14379,1437900,BFFs (Small),0,[]
14380,1438000,BFFs (Large),15,[]
14381,1438100,숫자세는 양 (Small),7,"['implementation', 'simulation']"
14382,1438200,숫자세는 양 (Large),7,"['implementation', 'simulation']"
14383,1438300,Revenge of the Pancakes (Small),7,"['bruteforcing', 'greedy', 'string']"
14384,1438400,Revenge of the Pancakes (Large),8,"['greedy', 'string']"
14385,1438500,Coin Jam (Small),9,['bruteforcing']
14386,1438600,Coin Jam (Large),13,"['constructive', 'mathematics', 'number theory']"
14387,1438700,Fractiles (Small),7,"['mathematics', 'number theory']"
14388,1438800,Fractiles (Large),19,"['mathematics', 'number theory']"
14389,1438900,4블록,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
14390,1439000,타일 놓기,20,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
14391,1439100,종이 조각,13,"['bitmask', 'bruteforcing']"
14392,1439200,문자열 테이블,0,[]
14393,1439300,Whitespace,19,['dynamic programming']
14394,1439400,9-퍼즐,7,"['mathematics', 'string']"
14395,1439500,4연산,11,"['breadth-first search', 'graph theory', 'graph traversal']"
14396,1439600,수열 순열,16,['dynamic programming']
14397,1439700,해변,7,['implementation']
14398,1439800,피타고라스 수,18,"['bipartite matching', 'mathematics', 'number theory']"
14399,1439900,2연산,18,"['ad-hoc', 'constructive', 'euclidean algorithm', 'implementation', 'mathematics', 'number theory']"
14400,1440000,편의점 2,9,"['geometry', 'mathematics', 'sorting']"
14401,1440100,악덕 나라,13,"['geometry', 'graph theory', 'minimum spanning tree']"
14402,1440200,야근,7,"['data structures', 'set / map by hashing', 'implementation', 'simulation']"
14403,1440300,스프링클러,0,[]
14404,1440400,동전 시스템,0,[]
14405,1440500,피카츄,5,['string']
14406,1440600,좌중을 사로잡는 건배사,0,[]
14407,1440700,함대,18,"['binary search', 'maximum flow', 'minimum cost maximum flow', 'parametric search']"
14408,1440800,막대로 보는 점괘,0,[]
14409,1440900,Tuna,4,"['arithmetic', 'implementation', 'mathematics']"
14410,1441000,Pareto,6,['sorting']
14411,1441100,합집합,13,"['data structures', 'sorting', 'stack']"
14412,1441200,Ronald,16,"['2-sat', 'ad-hoc', 'constructive', 'data structures', 'disjoint set', 'graph theory', 'strongly connected component']"
14413,1441300,Poklon,20,"['value / coordinate compression', ""mo's"", 'offline queries']"
14414,1441400,Strelice,21,[]
14415,1441500,Paralelogrami,0,[]
14416,1441600,Klavir,0,[]
14417,1441700,팰린드롬과 쿼리 2,19,"['data structures', ""manacher's"", 'merge sort tree', 'offline queries', 'segment tree', 'sorting', 'string']"
14418,1441800,Three Square,7,"['bruteforcing', 'case work', 'implementation']"
14419,1441900,Foehn Phenomena,15,['prefix sum']
14420,1442000,Semiexpress,18,"['data structures', 'greedy', 'mathematics', 'priority queue']"
14421,1442100,The Kingdom of JOIOI,20,"['binary search', 'dynamic programming', 'parametric search']"
14422,1442200,Soccer,23,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
14423,1442300,Rope,22,['ad-hoc']
14424,1442400,두부장수 장홍준 3,21,"['maximum flow', 'minimum cost maximum flow']"
14425,1442500,문자열 집합,8,"['data structures', 'set / map by hashing', 'string', 'set / map by trees']"
14426,1442600,접두사 찾기,9,"['data structures', 'string', 'tree', 'trie']"
14427,1442700,수열과 쿼리 15,14,"['data structures', 'segment tree', 'set / map by trees']"
14428,1442800,수열과 쿼리 16,15,"['segment tree', 'data structures']"
14429,1442900,배스킨라빈스 31,5,"['game theory', 'mathematics']"
14430,1443000,자원 캐기,9,['dynamic programming']
14431,1443100,소수마을,13,"[""dijkstra's"", 'graph theory', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
14432,1443200,우물,15,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'tree']"
14433,1443300,한조 대기 중,17,['bipartite matching']
14434,1443400,놀이기구1,15,"['binary search', 'prefix sum']"
14435,1443500,놀이기구2,24,"['binary search', 'data structures']"
14436,1443600,서로 다른 부분 문자열 쿼리,26,"['data structures', 'string', 'suffix tree', 'tree', 'trie']"
14437,1443700,준오는 심술쟁이!!,14,"['dynamic programming', 'prefix sum']"
14438,1443800,수열과 쿼리 17,15,"['segment tree', 'data structures']"
14439,1443900,알 수도 있는 사람,17,[]
14440,1444000,정수 수열,12,"['exponentiation by squaring', 'mathematics']"
14441,1444100,사이클의 개수,17,[]
14442,1444200,벽 부수고 이동하기 2,13,"['breadth-first search', 'graph theory', 'graph traversal']"
14443,1444300,채점 소수 번호,0,[]
14444,1444400,가장 긴 팰린드롬 부분 문자열,16,"[""manacher's"", 'string']"
14445,1444500,케이크(?) 자르기,9,"['ad-hoc', 'geometry', 'mathematics']"
14446,1444600,Promotion Counting,19,"['data structures', 'euler tour technique', 'merge sort tree', 'offline queries', 'segment tree', 'sorting', 'tree']"
14447,1444700,Building a Tall Barn,0,[]
14448,1444800,Subsequence Reversal,19,"['dynamic programming', 'heuristics', 'randomization', 'simulated annealing']"
14449,1444900,Balanced Photo,17,"['data structures', 'segment tree']"
14450,1445000,"Hoof, Paper, Scissors (Gold)",13,['dynamic programming']
14451,1445100,안대 낀 스피드러너,15,"['breadth-first search', 'graph theory', 'graph traversal']"
14452,1445200,Cow Dance Show,12,"['binary search', 'data structures', 'priority queue']"
14453,1445300,"Hoof, Paper, Scissors (Silver)",9,"['dynamic programming', 'prefix sum']"
14454,1445400,Secret Cow Code,12,['recursion']
14455,1445500,Don't Be Last!,7,"['implementation', 'string']"
14456,1445600,"Hoof, Paper, Scissors (Bronze)",5,"['bruteforcing', 'implementation']"
14457,1445700,Cow Tipping,5,"['greedy', 'implementation']"
14458,1445800,소가 길을 건너간 이유 10,17,"['data structures', 'segment tree']"
14459,1445900,소가 길을 건너간 이유 11,17,"['data structures', 'longest increasing sequence in o(n log n)', 'segment tree']"
14460,1446000,소가 길을 건너간 이유 12,21,"['data structures', 'divide and conquer', 'multidimensional segment tree', 'segment tree']"
14461,1446100,소가 길을 건너간 이유 7,14,"[""dijkstra's"", 'graph theory']"
14462,1446200,소가 길을 건너간 이유 8,13,['dynamic programming']
14463,1446300,소가 길을 건너간 이유 9,17,"['data structures', 'segment tree']"
14464,1446400,소가 길을 건너간 이유 4,15,"['data structures', 'greedy', 'priority queue']"
14465,1446500,소가 길을 건너간 이유 5,9,"['prefix sum', 'sliding window']"
14466,1446600,소가 길을 건너간 이유 6,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
14467,1446700,소가 길을 건너간 이유 1,5,['implementation']
14468,1446800,소가 길을 건너간 이유 2,7,"['implementation', 'string']"
14469,1446900,소가 길을 건너간 이유 3,7,"['greedy', 'sorting']"
14470,1447000,전자레인지,2,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
14471,1447100,포인트 카드,4,"['greedy', 'mathematics']"
14472,1447200,休憩スペース (Refreshment Area),6,"['bruteforcing', 'implementation', 'string']"
14473,1447300,ぬいぐるみの整理 (Plush Toys),16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
14474,1447400,尾根 (Ridge),14,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
14475,1447500,ヘビの JOI 君 (Snake JOI),18,"[""dijkstra's"", 'graph theory']"
14476,1447600,최대공약수 하나 빼기,14,"['euclidean algorithm', 'mathematics', 'number theory', 'prefix sum']"
14477,1447700,Assembly Required,18,['sorting']
14478,1447800,Bulbs,8,['greedy']
14479,1447900,Card Collecting,19,"['dynamic programming', 'mathematics', 'probability theory']"
14480,1448000,Double Elimination,13,"['case work', 'mathematics']"
14481,1448100,Election of Evil,11,"['graph theory', 'graph traversal']"
14482,1448200,Flight Plan,16,"['geometry', 'geometry; 3d']"
14483,1448300,Ground Defense,14,['bruteforcing']
14484,1448400,Hunter’s Apprentice,12,['geometry']
14485,1448500,Ingenious Lottery Tickets,8,['implementation']
14486,1448600,Jurisdiction Disenchantment,16,"['bruteforcing', 'sorting', 'two-pointer']"
14487,1448700,욱제는 효도쟁이야!!,4,"['greedy', 'implementation']"
14488,1448800,준오는 급식충이야!!,11,"['mathematics', 'sweeping']"
14489,1448900,치킨 두 마리 (...),2,"['arithmetic', 'implementation', 'mathematics']"
14490,1449000,백대열,6,"['euclidean algorithm', 'mathematics', 'number theory', 'string']"
14491,1449100,9진수,3,"['implementation', 'mathematics']"
14492,1449200,부울행렬의 부울곱,6,"['implementation', 'mathematics']"
14493,1449300,과일노리,6,"['implementation', 'mathematics', 'simulation']"
14494,1449400,다이나믹이 뭐예요?,8,['dynamic programming']
14495,1449500,피보나치 비스무리한 수열,7,['dynamic programming']
14496,1449600,"그대, 그머가 되어",10,"['breadth-first search', 'graph theory', 'graph traversal']"
14497,1449700,주난의 난(難),12,"[""dijkstra's"", 'graph theory', 'graph traversal']"
14498,1449800,학급비 낭비하기,19,['bipartite matching']
14499,1449900,주사위 굴리기,12,"['implementation', 'simulation']"
14500,1450000,테트로미노,12,"['bruteforcing', 'implementation']"
14501,1450100,퇴사,8,"['bruteforcing', 'dynamic programming']"
14502,1450200,연구소,12,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal', 'implementation']"
14503,1450300,로봇 청소기,11,"['implementation', 'simulation']"
14504,1450400,수열과 쿼리 18,21,['square root decomposition']
14505,1450500,팰린드롬 개수 구하기 (Small),13,['dynamic programming']
14506,1450600,Pieces of Parentheses,20,"['dynamic programming', 'greedy', 'knapsack', 'sorting']"
14507,1450700,Stars in a Can,25,"['convex hull', 'geometry', 'geometry; 3d', 'minimum enclosing circle']"
14508,1450800,Stretching Streamers,21,"['dynamic programming', 'mathematics', 'number theory']"
14509,1450900,Heaps from Trees,21,"['data structures', 'segment tree', 'smaller to larger technique']"
14510,1451000,Blazing New Trails,24,"['aliens trick', 'binary search', 'graph theory', 'minimum spanning tree']"
14511,1451100,Incremental Double Free Strings,25,"['bruteforcing', 'precomputation']"
14512,1451200,Apple Market,24,[]
14513,1451300,Maximum Color Clique,24,"['combinatorics', 'dynamic programming', 'mathematics']"
14514,1451400,Ski Resort,0,[]
14515,1451500,Yin and Yang Stones,8,"['ad-hoc', 'combinatorics', 'greedy', 'mathematics']"
14516,1451600,Unbalanced Parentheses,24,"['data structures', 'greedy', 'set / map by hashing', 'prefix sum']"
14517,1451700,팰린드롬 개수 구하기 (Large),16,"['dynamic programming', 'inclusion and exclusion']"
14518,1451800,Ili,19,[]
14519,1451900,Raspad,24,"['divide and conquer', 'dynamic programming', 'dynamic programming using connection profile']"
14520,1452000,Trapezi,24,['dynamic programming']
14521,1452100,Zagrade,22,[]
14522,1452200,Modern Art (Platinum),18,['prefix sum']
14523,1452300,Switch Grass,24,"['data structures', 'graph theory', 'minimum spanning tree', 'square root decomposition', 'set / map by trees']"
14524,1452400,COWBASIC,23,"['exponentiation by squaring', 'implementation', 'mathematics', 'parsing', 'string']"
14525,1452500,Bovine Genomics (Gold),18,"['binary search', 'hashing', 'string']"
14526,1452600,Modern Art 2,14,"['data structures', 'stack']"
14527,1452700,Paired Up,11,"['greedy', 'sorting', 'two-pointer']"
14528,1452800,Bovine Genomics (Silver),9,"['bruteforcing', 'string']"
14529,1452900,Where's Bessie?,15,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal', 'implementation']"
14530,1453000,The Lost Cow,4,"['implementation', 'mathematics', 'simulation']"
14531,1453100,Bovine Genomics (Bronze),5,"['bruteforcing', 'implementation', 'string']"
14532,1453200,Modern Art (Bronze),11,"['backtracking', 'bruteforcing']"
14533,1453300,Financial Tsunami,0,[]
14534,1453400,String Permutation,6,"['backtracking', 'bruteforcing', 'case work', 'implementation', 'string']"
14535,1453500,Birthday Graph,3,['implementation']
14536,1453600,Bricks on the Wall,7,['dynamic programming']
14537,1453700,Street Light Pole,0,[]
14538,1453800,Connectivity Potential,13,"['floyd–warshall', 'graph theory']"
14539,1453900,Grid Pattern,4,"['implementation', 'string']"
14540,1454000,Railway Station,8,"['data structures', 'stack']"
14541,1454100,Speed Limit,3,"['arithmetic', 'implementation', 'mathematics']"
14542,1454200,Outer Triangle Sum,4,"['arithmetic', 'implementation', 'mathematics']"
14543,1454300,Linear Equation,11,"['case work', 'mathematics', 'parsing', 'string']"
14544,1454400,Vote,5,"['data structures', 'set / map by hashing', 'implementation', 'string']"
14545,1454500,Square,3,"['combinatorics', 'mathematics']"
14546,1454600,Prison Break,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
14547,1454700,X X glued,4,"['implementation', 'string']"
14548,1454800,The fastest road to banikoara,12,"[""dijkstra's"", 'graph theory']"
14549,1454900,The Triangle Game,10,"['backtracking', 'bruteforcing']"
14550,1455000,마리오 파티,11,['dynamic programming']
14551,1455100,Card Game Contest,4,"['combinatorics', 'mathematics']"
14552,1455200,Mahjong,13,"['bruteforcing', 'implementation']"
14553,1455300,The Way,16,"['berlekamp–massey', 'dynamic programming']"
14554,1455400,The Other Way,15,"[""dijkstra's"", 'graph theory']"
14555,1455500,Just as Tic Tac Toe,22,"['fast fourier transform', 'game theory', 'mathematics', 'sprague–grundy theorem']"
14556,1455600,Balance,13,"['combinatorics', 'dynamic programming', 'mathematics']"
14557,1455700,Memory,7,['mathematics']
14558,1455800,Too Many Traps,28,"['ad-hoc', 'data structures', 'mathematics', 'segment tree']"
14559,1455900,Protocol,20,"['berlekamp–massey', 'dynamic programming', 'exponentiation by squaring', 'mathematics']"
14560,1456000,Communism,20,"['divide and conquer', 'meet in the middle', 'sorting', 'two-pointer']"
14561,1456100,회문,4,['mathematics']
14562,1456200,태권왕,9,"['breadth-first search', 'graph theory', 'graph traversal']"
14563,1456300,완전수,4,"['bruteforcing', 'implementation', 'mathematics', 'number theory']"
14564,1456400,두부 게임 (Tofu Game),5,"['implementation', 'mathematics', 'simulation']"
14565,1456500,역원(Inverse) 구하기,14,"['extended euclidean algorithm', 'mathematics', 'modular multiplicative inverse', 'number theory']"
14566,1456600,Dongjak N1,5,"['bruteforcing', 'implementation', 'sorting']"
14567,1456700,선수과목 (Prerequisite),11,"['dynamic programming', 'graph theory', 'topological sorting']"
14568,1456800,2017 연세대학교 프로그래밍 경시대회,3,"['arithmetic', 'bruteforcing', 'mathematics']"
14569,1456900,시간표 짜기,9,"['bitmask', 'implementation']"
14570,1457000,나무 위의 구슬,14,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
14571,1457100,모래시계,18,"['combinatorics', 'inclusion and exclusion', 'mathematics']"
14572,1457200,스터디 그룹,16,"['greedy', 'sorting', 'two-pointer']"
14573,1457300,엄청난 수열,15,"['dynamic programming', 'mathematics', 'prefix sum']"
14574,1457400,헤븐스 키친,16,"['depth-first search', 'graph theory', 'graph traversal', 'minimum spanning tree']"
14575,1457500,뒤풀이,10,"['binary search', 'parametric search']"
14576,1457600,현재 스코어 보드는,0,[]
14577,1457700,일기예보,18,"['value / coordinate compression', 'data structures', 'offline queries', 'segment tree']"
14578,1457800,영훈이의 색칠공부,15,"['dynamic programming', 'mathematics']"
14579,1457900,덧셈과 곱셈,3,"['arithmetic', 'mathematics']"
14581,1458100,팬들에게 둘러싸인 홍준,2,['implementation']
14582,1458200,오늘도 졌다,6,['implementation']
14583,1458300,이음줄,12,"['geometry', 'mathematics']"
14584,1458400,암호 해독,6,"['bruteforcing', 'implementation', 'string']"
14585,1458500,사수빈탕,10,['dynamic programming']
14586,1458600,도미노 (Small),14,['dynamic programming']
14587,1458700,도미노 (Large),20,"['data structures', 'dynamic programming', 'segment tree']"
14588,1458800,Line Friends (Small),11,"['floyd–warshall', 'graph theory']"
14589,1458900,Line Friends (Large),20,"['data structures', 'greedy', 'sparse table']"
14590,1459000,KUBC League (Small),14,"['bitmask', 'depth-first search', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal', 'travelling salesman problem']"
14591,1459100,KUBC League (Large),19,"['depth-first search', 'graph theory', 'graph traversal']"
14592,1459200,2017 아주대학교 프로그래밍 경시대회 (Small),3,['implementation']
14593,1459300,2017 아주대학교 프로그래밍 경시대회 (Large),4,['implementation']
14594,1459400,동방 프로젝트 (Small),7,"['implementation', 'simulation']"
14595,1459500,동방 프로젝트 (Large),13,"['data structures', 'disjoint set', 'prefix sum', 'sweeping']"
14596,1459600,Quilting (Small),11,"['bruteforcing', 'dynamic programming']"
14597,1459700,Quilting (Large),12,['dynamic programming']
14598,1459800,인공지능 테트리스 (Small),0,[]
14599,1459900,인공지능 테트리스 (Large),15,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
14600,1460000,샤워실 바닥 깔기 (Small),11,"['divide and conquer', 'implementation']"
14601,1460100,샤워실 바닥 깔기 (Large),16,"['divide and conquer', 'implementation', 'recursion']"
14602,1460200,소금과 후추 (Small),7,"['implementation', 'sliding window', 'sorting']"
14603,1460300,소금과 후추 (Large),19,"['data structures', 'segment tree', 'sliding window']"
14604,1460400,Over Fitting (Small),15,"['bruteforcing', 'geometry']"
14605,1460500,Over Fitting (Large),20,"['convex hull', 'geometry', 'two-pointer']"
14606,1460600,피자 (Small),6,"['dynamic programming', 'mathematics']"
14607,1460700,피자 (Large),8,"['dynamic programming', 'mathematics']"
14608,1460800,구분구적법 (Small),6,"['binary search', 'calculus', 'implementation', 'mathematics']"
14609,1460900,구분구적법 (Large),10,"['binary search', 'calculus', 'mathematics']"
14610,1461000,좋은 대회,13,"['dynamic programming', 'greedy']"
14611,1461100,월요병,18,"[""dijkstra's"", 'graph theory', 'graph traversal']"
14612,1461200,김식당,7,"['implementation', 'simulation', 'sorting']"
14613,1461300,너의 티어는?,10,"['bruteforcing', 'dynamic programming', 'mathematics', 'probability theory']"
14614,1461400,Calculate!,4,['mathematics']
14615,1461500,Defend the CTP!!!,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
14616,1461600,Explore space,15,[]
14617,1461700,제3회 IUPC,0,[]
14618,1461800,총깡 총깡,13,"[""dijkstra's"", 'graph theory']"
14619,1461900,섬 여행,13,"['dynamic programming', 'graph theory']"
14620,1462000,꽃길,9,['bruteforcing']
14621,1462100,나만 안되는 연애,13,"['graph theory', 'minimum spanning tree']"
14622,1462200,소수 게임,12,"['data structures', 'implementation', 'mathematics', 'number theory', 'primality test', 'priority queue', 'sieve of eratosthenes']"
14623,1462300,감정이입,2,"['implementation', 'mathematics']"
14624,1462400,전북대학교,4,['implementation']
14625,1462500,냉동식품,4,['implementation']
14626,1462600,ISBN,5,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
14627,1462700,파닭파닭,9,['binary search']
14628,1462800,입 챌린저,12,"['dynamic programming', 'knapsack']"
14629,1462900,숫자 조각,10,"['backtracking', 'bruteforcing']"
14630,1463000,변신로봇,13,"[""dijkstra's"", 'graph theory']"
14631,1463100,명탐정 준하,19,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal', 'implementation']"
14632,1463200,고급 작품,17,"['implementation', 'offline queries']"
14633,1463300,Airport Construction,23,"['bruteforcing', 'case work', 'geometry']"
14634,1463400,Get a Clue!,22,"['bruteforcing', 'implementation']"
14635,1463500,Mission Improbable,20,['bipartite matching']
14636,1463600,Money for Nothing,22,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'geometry']"
14637,1463700,Need for Speed,11,['binary search']
14638,1463800,Posterize,15,['dynamic programming']
14639,1463900,Replicate Replicate Rfplicbte,24,"['ad-hoc', 'implementation', 'mathematics']"
14640,1464000,Scenery,29,['greedy']
14641,1464100,Secret Chamber at Mount Rushmore,10,"['depth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
14642,1464200,Son of Pipe Stream,0,[]
14643,1464300,Tarot Sham Boast,25,"['combinatorics', 'hashing', 'knuth–morris–pratt', 'mathematics', 'string']"
14644,1464400,Visual Python++,23,"['greedy', 'sweeping']"
14645,1464500,와이버스 부릉부릉,1,['implementation']
14646,1464600,욱제는 결정장애야!!,6,"['implementation', 'simulation']"
14647,1464700,준오는 조류혐오야!!,6,['implementation']
14648,1464800,쿼리 맛보기,4,['implementation']
14649,1464900,문홍안,4,['implementation']
14650,1465000,걷다보니 신천역 삼 (Small),9,"['bruteforcing', 'dynamic programming', 'mathematics', 'number theory']"
14651,1465100,걷다보니 신천역 삼 (Large),10,"['dynamic programming', 'mathematics', 'number theory']"
14652,1465200,나는 행복합니다~,1,"['arithmetic', 'mathematics']"
14653,1465300,너의 이름은,9,"['ad-hoc', 'implementation']"
14654,1465400,스테판 쿼리,6,"['implementation', 'simulation']"
14655,1465500,욱제는 도박쟁이야!!,5,['greedy']
14656,1465600,조교는 새디스트야!!,3,['implementation']
14657,1465700,준오는 최종인재야!!,14,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
14658,1465800,하늘에서 별똥별이 빗발친다,12,['bruteforcing']
14659,1465900,한조서열정리하고옴ㅋㅋ,5,['greedy']
14670,1467000,병약한 영정,7,"['data structures', 'set / map by hashing', 'implementation']"
14671,1467100,영정이의 청소,10,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics']"
14672,1467200,윤호는 마법약 도둑,18,"['bipartite matching', 'graph theory', 'mathematics']"
14673,1467300,Crush Fever,13,"['backtracking', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
14674,1467400,STOP USING MONEY,7,"['mathematics', 'sorting']"
14675,1467500,단절점과 단절선,10,"['articulation points and bridges', 'graph theory', 'tree']"
14676,1467600,영우는 사기꾼?,13,"['graph theory', 'implementation', 'topological sorting']"
14677,1467700,병약한 윤호,11,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
14678,1467800,어그로 끌린 영선,14,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
14679,1467900,영우와 ‘갓4’,16,"['exponentiation by squaring', 'graph theory', 'graph traversal', 'implementation', 'mathematics', 'simulation']"
14680,1468000,효빈이의 과외,7,['implementation']
14681,1468100,사분면 고르기,1,"['implementation', 'geometry']"
14682,1468200,Shifty Sum,3,"['arithmetic', 'implementation', 'mathematics']"
14683,1468300,Exactly Electrical,3,"['arithmetic', 'implementation', 'mathematics']"
14684,1468400,Favourite Times,9,['bruteforcing']
14685,1468500,Nailed It!,12,"['combinatorics', 'dynamic programming', 'mathematics']"
14686,1468600,Sum Game,4,"['arithmetic', 'mathematics', 'prefix sum']"
14687,1468700,"High Tide, Low Tide",6,"['implementation', 'sorting', 'two-pointer']"
14688,1468800,Minimum Cost Flow,18,"['graph theory', 'minimum spanning tree', 'tree']"
14689,1468900,RMT,21,['square root decomposition']
14690,1469000,Vera and Trail Building,14,"['constructive', 'implementation', 'simulation']"
14691,1469100,Cartesian Conquest,22,[]
14692,1469200,Vera and Modern Art,0,[]
14693,1469300,Rainfall Storage,19,"['bit set', 'constructive', 'dynamic programming']"
14694,1469400,Professional Network,19,"['data structures', 'greedy', 'priority queue', 'sorting']"
14695,1469500,Shifty Grid,0,[]
14696,1469600,딱지놀이,5,['implementation']
14697,1469700,방 배정하기,4,['bruteforcing']
14698,1469800,전생했더니 슬라임 연구자였던 건에 대하여 (Hard),12,"['data structures', 'greedy', 'priority queue']"
14699,1469900,관악산 등산,11,"['dynamic programming', 'graph theory']"
14700,1470000,넴모넴모 (Hard),19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
14701,1470100,셔틀버스,19,"['binary search', 'data structures', 'segment tree']"
14702,1470200,데굴데굴,20,"['geometry', 'sweeping', 'two-pointer']"
14703,1470300,전자기기,22,['maximum flow']
14704,1470400,타일 뒤집기 (Hard),24,"['0-1 bfs', 'ad-hoc', 'constructive', ""dijkstra's"", 'graph theory', 'graph traversal', 'prefix sum']"
14705,1470500,홍삼 게임 (Hard),17,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
14706,1470600,구간 합 최대,16,"['dynamic programming', 'greedy']"
14707,1470700,그림 그리기,21,"['chinese remainder theorem', 'fast fourier transform', 'mathematics', 'number theory']"
14708,1470800,정육면체를 사랑하는 사람,21,"['bruteforcing', 'mathematics']"
14709,1470900,여우 사인,6,['implementation']
14710,1471000,고장난 시계,4,['mathematics']
14711,1471100,타일 뒤집기 (Easy),12,"['greedy', 'string']"
14712,1471200,넴모넴모 (Easy),10,"['backtracking', 'bruteforcing']"
14713,1471300,앵무새,9,"['data structures', 'implementation', 'queue', 'string']"
14714,1471400,홍삼 게임 (Easy),11,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
14715,1471500,전생했더니 슬라임 연구자였던 건에 대하여 (Easy),10,"['mathematics', 'number theory']"
14716,1471600,현수막,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
14717,1471700,앉았다,7,"['bruteforcing', 'combinatorics', 'implementation', 'mathematics']"
14718,1471800,용감한 용사 진수,13,['bruteforcing']
14719,1471900,빗물,11,"['implementation', 'simulation']"
14720,1472000,우유 축제,3,"['greedy', 'implementation']"
14721,1472100,성적표,6,['bruteforcing']
14722,1472200,우유 도시,12,['dynamic programming']
14723,1472300,이산수학 과제,4,"['implementation', 'mathematics']"
14724,1472400,관리자는 누구?,4,['implementation']
14725,1472500,개미굴,13,"['data structures', 'string', 'tree', 'trie']"
14726,1472600,신용카드 판별,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
14727,1472700,퍼즐 자르기,16,"['data structures', 'divide and conquer', 'segment tree', 'stack']"
14728,1472800,벼락치기,11,"['dynamic programming', 'knapsack']"
14729,1472900,칠무해,6,['sorting']
14730,1473000,謎紛芥索紀 (Small),5,"['calculus', 'mathematics']"
14731,1473100,謎紛芥索紀 (Large),9,"['calculus', 'exponentiation by squaring', 'mathematics']"
14732,1473200,행사장 대여 (Small),6,['implementation']
14733,1473300,행사장 대여 (Large),17,"['value / coordinate compression', 'data structures', 'segment tree', 'sweeping']"
14734,1473400,Aztec Diamond,20,['recursion']
14735,1473500,"Break Oven, Run Cookie!",22,"['binary search', 'maximum flow']"
14736,1473600,Coke Challenge,5,['mathematics']
14737,1473700,"Dev, Please Add This!",25,"['2-sat', 'graph theory', 'implementation', 'strongly connected component']"
14739,1473900,Faster Sorting,15,['dynamic programming']
14740,1474000,Highway Track,14,['prefix sum']
14741,1474100,Impossible Design,23,['mathematics']
14742,1474200,Kimi No Ichi Wa.,20,[]
14743,1474300,Labor,14,"['binary search', 'dynamic programming', 'two-pointer']"
14744,1474400,God Game,18,"['breadth-first search', 'graph theory', 'graph traversal']"
14745,1474500,Jeong Lab,21,"['convex hull', 'data structures', 'geometry', 'set / map by trees']"
14746,1474600,Closest Pair,11,"['binary search', 'sorting', 'two-pointer']"
14747,1474700,Cycle Mean,24,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'strongly connected component']"
14748,1474800,Flow Graph Complexity,18,"['case work', 'data structures', 'parsing', 'stack', 'string']"
14749,1474900,Grasshopper Route,19,"['constructive', 'depth-first search', 'graph theory', 'graph traversal', 'recursion', 'tree']"
14750,1475000,Jerry and Tom,19,"['maximum flow', 'geometry', 'line segment intersection check']"
14751,1475100,Leftmost Segment,20,"['binary search', 'convex hull trick', 'convex hull', 'geometry']"
14752,1475200,Map Labeling,18,['dynamic programming']
14753,1475300,MultiMax,7,"['bruteforcing', 'case work', 'sorting']"
14754,1475400,Pizza Boxes,9,['greedy']
14755,1475500,Pseudoknot,23,"['binary search', 'data structures', 'knuth–morris–pratt', 'sparse table', 'string']"
14756,1475600,Telescope,20,"['fast fourier transform', 'mathematics']"
14757,1475700,Dueling Philosophers,0,[]
14758,1475800,Paint Me,4,"['arithmetic', 'geometry', 'geometry; 3d', 'implementation', 'mathematics']"
14759,1475900,Party Games,18,['string']
14760,1476000,Reverse Nonogram,6,['implementation']
14761,1476100,FizzBuzz,3,"['arithmetic', 'implementation', 'mathematics']"
14762,1476200,Election,6,"['combinatorics', 'mathematics']"
14763,1476300,Password Hacking,8,['sorting']
14764,1476400,Delivering Goods,0,[]
14765,1476500,Studying For Exams,12,['mathematics']
14766,1476600,Bumper-To-Bumper Traffic,0,[]
14767,1476700,Flow Shop,0,[]
14768,1476800,Nice Numbers,16,[]
14769,1476900,Stacking Cups,6,"['data structures', 'set / map by hashing', 'sorting', 'string']"
14770,1477000,Stack Construction,0,[]
14771,1477100,Advertising Revenue,4,"['arithmetic', 'implementation', 'mathematics']"
14772,1477200,Voter Depression,12,[]
14773,1477300,Tracking Fake News,0,[]
14774,1477400,Creating Fake News,0,[]
14775,1477500,Bot Or Not,0,[]
14776,1477600,Nothing But The Truth,0,[]
14777,1477700,The County Fair,10,"['dynamic programming', 'sorting']"
14778,1477800,The Milk Queue,17,"['greedy', 'sorting']"
14779,1477900,Two-Headed Cows,14,"['data structures', 'disjoint set']"
14780,1478000,County Fair Events,9,"['greedy', 'sorting']"
14781,1478100,The Climbing Wall,13,"['0-1 bfs', 'breadth-first search', 'data structures', ""dijkstra's"", 'geometry', 'graph theory', 'graph traversal', 'sorting', 'set / map by trees']"
14782,1478200,"Bedtime Reading, I",3,"['bruteforcing', 'mathematics', 'number theory']"
14783,1478300,Eenie Meenie Miney Moe,8,"['data structures', 'implementation', 'queue', 'simulation']"
14784,1478400,"Bedtime Reading, II",11,"['graph theory', 'graph traversal', 'implementation', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
14785,1478500,Cows on a Leash,11,"['greedy', 'sorting', 'two-pointer']"
14786,1478600,Ax+Bsin(x)=C ②,13,"['binary search', 'mathematics', 'numerical analysis']"
14787,1478700,XOR Sum 2,18,"['value / coordinate compression', 'data structures', 'segment tree']"
14788,1478800,Oversized Pancake Flipper (Small),6,"['bruteforcing', 'greedy']"
14789,1478900,Oversized Pancake Flipper (Large),8,"['bruteforcing', 'greedy']"
14790,1479000,Tidy Numbers (Small),4,"['bruteforcing', 'mathematics']"
14791,1479100,Tidy Numbers (Large),9,"['greedy', 'mathematics', 'string']"
14792,1479200,Bathroom Stalls (Small1),5,"['implementation', 'simulation']"
14793,1479300,Bathroom Stalls (Small2),12,"['data structures', 'mathematics', 'priority queue']"
14794,1479400,Bathroom Stalls (Large),15,"['data structures', 'dynamic programming', 'mathematics', 'set / map by trees']"
14795,1479500,Fashion Show (Small),15,"['ad-hoc', 'constructive']"
14796,1479600,Fashion Show (Large),21,"['ad-hoc', 'bipartite matching', 'constructive']"
14797,1479700,Alphabet Cake (Small),8,"['backtracking', 'bruteforcing']"
14798,1479800,Alphabet Cake (Large),11,['constructive']
14799,1479900,Ratatouille (Small),13,['bruteforcing']
14800,1480000,Ratatouille (Large),17,['greedy']
14801,1480100,Play the Dragon (Small),18,"['greedy', 'implementation', 'simulation']"
14802,1480200,Play the Dragon (Large),0,[]
14803,1480300,Steed 2: Cruise Control (Small),4,[]
14804,1480400,Steed 2: Cruise Control (Large),5,[]
14805,1480500,Stable Neigh-bors (Small),10,['constructive']
14806,1480600,Stable Neigh-bors (Large),15,['constructive']
14807,1480700,Pony Express (Small),10,['dynamic programming']
14808,1480800,Pony Express (Large),13,"['floyd–warshall', 'graph theory']"
14809,1480900,Ample Syrup (Small),9,"['bruteforcing', 'geometry']"
14810,1481000,Ample Syrup (Large),11,"['geometry', 'greedy', 'sorting']"
14811,1481100,Parenting Partnering (Small),9,[]
14812,1481200,Parenting Partnering (Large),12,[]
14813,1481300,Core Training (Small1),12,[]
14814,1481400,Core Training (Small2),15,[]
14815,1481500,Fresh Chocolate (Small),6,"['case work', 'greedy', 'mathematics', 'number theory']"
14816,1481600,Fresh Chocolate (Large),10,"['case work', 'greedy', 'mathematics', 'number theory']"
14817,1481700,Roller Coaster Scheduling (Small),12,['mathematics']
14818,1481800,Roller Coaster Scheduling (Large),17,"['ad-hoc', 'greedy']"
14819,1481900,Beaming With Joy (Small),11,[]
14820,1482000,Beaming With Joy (Large),19,"['2-sat', 'graph theory', 'implementation', 'strongly connected component']"
14821,1482100,Shoot the Turrets (Small),0,[]
14822,1482200,Shoot the Turrets (Large),0,[]
14823,1482300,Googlements (Small),0,[]
14824,1482400,Googlements (Large),16,"['breadth-first search', 'bruteforcing', 'combinatorics', 'graph theory', 'graph traversal', 'mathematics']"
14825,1482500,Good News and Bad News (Small),13,['bruteforcing']
14826,1482600,Good News and Bad News (Large),19,"['depth-first search', 'graph theory', 'graph traversal']"
14827,1482700,Mountain Tour (Small),0,[]
14828,1482800,Mountain Tour (Large),24,"['eulerian path / circuit', 'graph theory', 'greedy', 'minimum spanning tree']"
14829,1482900,Slate Modern (Small),0,[]
14830,1483000,Slate Modern (Large),0,[]
14831,1483100,Dice Straight (Small),18,['bipartite matching']
14832,1483200,Dice Straight (Large),21,"['bipartite matching', 'two-pointer']"
14833,1483300,Operation (Small),0,[]
14834,1483400,Operation (Large),0,[]
14835,1483500,Spanning Planning (Small),0,[]
14836,1483600,Omnicircumnavigation (Small),24,"['convex hull', 'geometry', 'geometry; 3d']"
14837,1483700,Omnicircumnavigation (Large),25,"['convex hull', 'geometry', 'geometry; 3d']"
14838,1483800,Stack Management (Small),0,[]
14839,1483900,Stack Management (Large),0,[]
14840,1484000,Teleporters (Small),0,[]
14841,1484100,Teleporters (Large),0,[]
14842,1484200,재홍의 사다리,5,"['geometry', 'mathematics']"
14843,1484300,정보갓 영훈이,6,"['arbitrary precision / big integers', 'implementation']"
14844,1484400,좋은 직사각형,0,[]
14845,1484500,컵과 구슬,21,"['binary search', 'data structures', 'segment tree with lazy propagation', 'segment tree']"
14846,1484600,직사각형과 쿼리,12,"['dynamic programming', 'prefix sum']"
14847,1484700,수열과 변환,17,"['combinatorics', 'exponentiation by squaring', 'inclusion and exclusion', 'mathematics']"
14848,1484800,정수 게임,13,"['bruteforcing', 'euclidean algorithm', 'inclusion and exclusion', 'mathematics', 'number theory']"
14849,1484900,동전 교환과 쿼리,19,"['dynamic programming', 'inclusion and exclusion', 'knapsack']"
14850,1485000,doju,27,"['fast fourier transform', 'mathematics', 'number theory']"
14851,1485100,해밍 거리와 쿼리,18,['bit set']
14852,1485200,타일 채우기 3,12,['dynamic programming']
14853,1485300,동전 던지기,24,"['bayes theorem', 'calculus', 'combinatorics', 'mathematics', 'probability theory', 'statistics']"
14854,1485400,이항 계수 6,22,"['combinatorics', 'chinese remainder theorem', 'lucas theorem', 'mathematics', 'number theory']"
14855,1485500,만두 가게 사장 박승원,12,[]
14856,1485600,조금 똑똑한 뢰벗과 조금 잘생긴 사냐,12,"['greedy', 'mathematics']"
14857,1485700,모눈종이와 삼각형,0,[]
14858,1485800,GCD 테이블과 연속 부분 수열,22,"['chinese remainder theorem', 'mathematics', 'number theory']"
14859,1485900,세 쌍 서로소,19,"['inclusion and exclusion', 'mathematics', 'number theory']"
14860,1486000,GCD 곱,17,"['exponentiation by squaring', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
14861,1486100,LCM 더하기,22,"['inclusion and exclusion', 'mathematics', 'möbius inversion', 'number theory']"
14862,1486200,최대공약수 기댓값,20,"['mathematics', 'möbius inversion', 'modular multiplicative inverse', 'number theory']"
14863,1486300,서울에서 경산까지,12,['dynamic programming']
14864,1486400,줄서기,13,"['ad-hoc', 'mathematics']"
14865,1486500,곡선 자르기,16,"['data structures', 'implementation', 'sorting', 'stack']"
14866,1486600,산만한 고양이,20,"['articulation points and bridges', 'depth-first search', 'graph theory', 'graph traversal']"
14867,1486700,물통,14,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal']"
14868,1486800,문명,17,"['breadth-first search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal']"
14869,1486900,요리 강좌,22,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque', 'sliding window']"
14870,1487000,조개 줍기,22,"['data structures', 'dynamic programming', 'segment tree', 'two-pointer']"
14871,1487100,Sheets,17,"['implementation', 'recursion']"
14872,1487200,Strings,0,[]
14873,1487300,Tale,0,[]
14874,1487400,Cats,23,"['case work', 'dynamic programming', 'implementation']"
14875,1487500,City Attractions,0,[]
14876,1487600,Monsters,20,[]
14877,1487700,순열 교환,22,"['combinatorics', 'divide and conquer', 'fast fourier transform', 'mathematics']"
14878,1487800,부분 수열 XOR합,22,"['fast fourier transform', 'mathematics']"
14879,1487900,수열의 좋음,0,[]
14880,1488000,태와 도토리의 초콜릿 나누기,25,[]
14881,1488100,물통 문제,12,"['euclidean algorithm', 'mathematics', 'number theory']"
14882,1488200,다항식과 쿼리,22,"['fast fourier transform', 'mathematics', 'number theory']"
14883,1488300,NPM998244353 (Hard),25,"['dynamic programming', 'fast fourier transform', 'inclusion and exclusion', 'mathematics', 'number theory']"
14884,1488400,ACG,19,"['berlekamp–massey', 'chinese remainder theorem', 'dynamic programming', 'exponentiation by squaring', 'mathematics', 'number theory']"
14885,1488500,NPM998244353 (Easy),22,"['dynamic programming', 'fast fourier transform', 'inclusion and exclusion', 'mathematics', 'number theory']"
14886,1488600,직사각형 색칠,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'exponentiation by squaring', 'mathematics']"
14887,1488700,짝수 부분 문자열,0,[]
14888,1488800,연산자 끼워넣기,10,"['backtracking', 'bruteforcing']"
14889,1488900,스타트와 링크,9,"['backtracking', 'bruteforcing']"
14890,1489000,경사로,13,['implementation']
14891,1489100,톱니바퀴,11,"['implementation', 'simulation']"
14892,1489200,좋은 순열의 개수,0,[]
14893,1489300,바이너리 문자열 토글,0,[]
14894,1489400,퀵 소트 cnt++,21,"['data structures', 'persistent segment tree', 'segment tree']"
14895,1489500,모여라,20,"['data structures', 'persistent segment tree', 'segment tree']"
14896,1489600,만들 수 없는 부분 수열의 합,0,[]
14897,1489700,서로 다른 수와 쿼리 1,19,"['value / coordinate compression', 'data structures', ""mo's"", 'offline queries', 'segment tree']"
14898,1489800,서로 다른 수와 쿼리 2,22,"['data structures', 'merge sort tree', 'persistent segment tree', 'segment tree', 'sorting']"
14899,1489900,수열과 쿼리 19,25,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
14900,1490000,트리 방문,0,[]
14901,1490100,좋은 경로의 세 쌍,0,[]
14902,1490200,트리 분해,0,[]
14904,1490400,이동하기 2,18,"['maximum flow', 'minimum cost maximum flow']"
14905,1490500,소수 4개의 합,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
14906,1490600,스러피,12,"['recursion', 'regular expression', 'string']"
14907,1490700,프로젝트 스케줄링,14,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'topological sorting']"
14908,1490800,구두 수선공,15,"['greedy', 'sorting']"
14909,1490900,양수 개수 세기,3,['implementation']
14910,1491000,오르막,4,['implementation']
14911,1491100,궁합 쌍 찾기,7,"['bruteforcing', 'data structures', 'set / map by hashing', 'sorting']"
14912,1491200,숫자 빈도수,6,"['bruteforcing', 'implementation', 'mathematics']"
14913,1491300,등차수열에서 항 번호 찾기,3,"['arithmetic', 'mathematics']"
14914,1491400,사과와 바나나 나눠주기,4,"['bruteforcing', 'mathematics']"
14915,1491500,진수 변환기,4,"['mathematics', 'string']"
14916,1491600,거스름돈,6,"['bruteforcing', 'dynamic programming', 'greedy', 'mathematics']"
14917,1491700,빼빼로 데이 2017,0,[]
14918,1491800,더하기,0,"['implementation', 'arithmetic', 'mathematics']"
14919,1491900,분포표 만들기,8,"['binary search', 'mathematics', 'sorting']"
14920,1492000,3n+1 수열,3,"['implementation', 'mathematics', 'simulation']"
14921,1492100,용액 합성하기,11,"['sorting', 'two-pointer']"
14922,1492200,부분평균,12,['mathematics']
14923,1492300,미로 탈출,12,"['breadth-first search', 'graph theory', 'graph traversal']"
14924,1492400,폰 노이만과 파리,2,"['arithmetic', 'mathematics']"
14925,1492500,목장 건설하기,12,['dynamic programming']
14926,1492600,Not Equal,10,"['depth-first search', 'eulerian path / circuit', 'graph theory', 'graph traversal']"
14927,1492700,전구 끄기,17,"['bitmask', 'bruteforcing', 'greedy']"
14928,1492800,큰 수 (BIG),1,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
14929,1492900,귀찮아 (SIB),6,"['mathematics', 'prefix sum']"
14930,1493000,구슬 (BEAD),9,['sorting']
14931,1493100,물수제비 (SUJEBI),10,"['bruteforcing', 'mathematics']"
14932,1493200,금고 (SAFE),17,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
14933,1493300,보석 (GEM),18,"['graph theory', 'mathematics', 'prefix sum']"
14934,1493400,변치 않는 수,14,[]
14935,1493500,FA,2,"['ad-hoc', 'implementation', 'mathematics']"
14936,1493600,엘리베이터 장난,7,"['bitmask', 'case work']"
14937,1493700,그림 매달기,0,[]
14938,1493800,서강그라운드,12,"[""dijkstra's"", 'floyd–warshall', 'graph theory']"
14939,1493900,불 끄기,16,"['bitmask', 'bruteforcing', 'greedy']"
14940,1494000,쉬운 최단거리,10,"['breadth-first search', 'graph theory', 'graph traversal']"
14941,1494100,호기심,14,"['binary search', 'mathematics', 'number theory', 'prefix sum', 'primality test', 'sieve of eratosthenes']"
14942,1494200,개미,16,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'sparse table']"
14943,1494300,벼룩 시장,13,['greedy']
14944,1494400,굿점원,17,"['case work', 'prefix sum']"
14945,1494500,불장난,12,['dynamic programming']
14946,1494600,누가 크리스마스 소리를 내었는가,18,"['dynamic programming', 'dynamic programming on trees', 'tree']"
14947,1494700,상자 배달,13,"['breadth-first search', 'graph theory', 'graph traversal']"
14948,1494800,군대탈출하기,14,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal']"
14949,1494900,외계 미생물,16,"['combinatorics', 'dynamic programming', 'mathematics']"
14950,1495000,정복자,13,"['graph theory', 'minimum spanning tree']"
14951,1495100,Broadcast Stations,22,"['dynamic programming', 'dynamic programming on trees', 'tree']"
14952,1495200,Connect3,15,"['bruteforcing', 'implementation', 'precomputation']"
14953,1495300,Game Map,12,"['dynamic programming', 'graph theory', 'graph traversal']"
14954,1495400,Happy Number,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
14955,1495500,How Many to Be Happy?,21,"['maximum flow', 'graph theory', 'max-flow min-cut theorem', 'minimum spanning tree']"
14956,1495600,Philosopher’s Walk,14,"['divide and conquer', 'recursion']"
14957,1495700,Rectilinear Regions,14,['geometry']
14958,1495800,Rock Paper Scissors,21,"['fast fourier transform', 'mathematics']"
14959,1495900,Slot Machines,18,"['knuth–morris–pratt', 'string']"
14960,1496000,Strongly Matchable,23,"['maximum flow', 'graph theory', ""hall's theorem"", 'minimum cost maximum flow', 'max-flow min-cut theorem']"
14961,1496100,Untangling Chain,16,['constructive']
14962,1496200,Vacation Plans,18,['dynamic programming']
14963,1496300,Cezar,5,"['implementation', 'simulation']"
14964,1496400,Tetris,10,"['case work', 'implementation']"
14965,1496500,Lozinke,12,['string']
14966,1496600,Hokej,17,"['constructive', 'greedy', 'implementation', 'sorting']"
14967,1496700,Deda,18,"['binary search', 'data structures', 'segment tree']"
14968,1496800,Plahte,22,"['binary search', 'value / coordinate compression', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'segment tree with lazy propagation', 'offline queries', 'segment tree', 'smaller to larger technique', 'sweeping', 'tree']"
14969,1496900,Taro's Shopping,4,['bruteforcing']
14970,1497000,Almost Identical Programs,9,"['parsing', 'string']"
14971,1497100,A Garden with Ponds,8,"['bruteforcing', 'implementation']"
14972,1497200,Making Lunch Boxes,17,"['backtracking', 'bitmask', 'bruteforcing', 'dynamic programming', 'dynamic programming using bitfield', 'meet in the middle']"
14973,1497300,Boolean Expression Compressor,17,"['dynamic programming', 'implementation', 'parsing', 'precomputation', 'string']"
14974,1497400,Folding a Ribbon,17,['ad-hoc']
14975,1497500,Go around the Labyrinth,0,[]
14976,1497600,Equivalent Deformation,0,[]
14977,1497700,Amusement Anticipation,4,"['implementation', 'mathematics']"
14978,1497800,Pond Cascade,0,[]
14979,1497900,Chessboard Dancing,8,"['ad-hoc', 'case work', 'graph theory']"
14980,1498000,Equinox Roller Coaster,18,[]
14981,1498100,Forest Picture,9,['implementation']
14982,1498200,Shooting Gallery,12,['dynamic programming']
14983,1498300,Ice cream samples,10,['two-pointer']
14984,1498400,Dark Ride with Monsters,7,"['greedy', 'sorting']"
14985,1498500,Go Northwest!,8,"['combinatorics', 'data structures', 'set / map by hashing', 'mathematics']"
14986,1498600,Punching Power,18,['bipartite matching']
14987,1498700,Treetop Walkway,0,[]
14988,1498800,Abandoned Animal,12,[]
14989,1498900,Booming Business,16,['dynamic programming']
14990,1499000,Crowd Control,15,"['binary search', 'graph theory', 'graph traversal', 'minimum spanning tree']"
14991,1499100,Disastrous Doubling,4,[]
14992,1499200,Envious Exponents,12,['bitmask']
14993,1499300,Flatland Fidget Spinner,0,[]
14994,1499400,Ghostbusters,0,[]
14995,1499500,Horror Film Night,9,[]
14996,1499600,Intelligence Infection,18,[]
14997,1499700,Journal Editing,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
14998,1499800,Knight’s Marathon,0,[]
14999,1499900,Leapfrog,21,"['chinese remainder theorem', 'mathematics', 'number theory']"
15000,1500000,CAPS,2,"['implementation', 'string']"
15001,1500100,Frog Leaps,4,"['arithmetic', 'greedy', 'mathematics']"
15002,1500200,Soccer Skills,0,[]
15003,1500300,Amsterdam Distance,9,"['bruteforcing', 'geometry']"
15004,1500400,Bearly Made It,24,"[""dijkstra's"", 'geometry', 'graph theory', 'implementation', 'sweeping']"
15005,1500500,Collatz Conjecture,19,"['data structures', 'mathematics', 'number theory']"
15006,1500600,Detour,14,"[""dijkstra's"", 'graph theory']"
15007,1500700,Easter Eggs,19,"['binary search', 'bipartite matching']"
15008,1500800,Falling Apart,5,"['greedy', 'sorting']"
15009,1500900,Going Dutch,20,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
15010,1501000,Hoarse Horses,20,"['euler characteristic (χ=v-e+f)', 'geometry', 'graph theory', 'line segment intersection check', 'planar graph']"
15011,1501100,Irrational Division,13,"['case work', 'dynamic programming', 'game theory', 'greedy']"
15012,1501200,Jumping Choreography,22,[]
15013,1501300,King of the Waves,18,"['constructive', 'depth-first search', 'graph theory', 'graph traversal', 'greedy']"
15014,1501400,Lemonade Trade,16,"['dynamic programming', 'mathematics']"
15015,1501500,Manhattan Mornings,15,"['longest increasing sequence in o(n log n)', 'sorting']"
15016,1501600,Airport Coffee,22,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque', 'prefix sum', 'two-pointer']"
15017,1501700,Best Relay Team,7,"['implementation', 'sorting']"
15018,1501800,Compass Card Sales,19,"['value / coordinate compression', 'data structures', 'implementation', 'linked list', 'priority queue', 'simulation', 'set / map by trees']"
15019,1501900,Distinctive Character,17,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal', 'string']"
15020,1502000,Emptying the Baltic,14,"['data structures', ""dijkstra's"", 'graph theory']"
15021,1502100,Fractal Tree,23,"['case work', 'recursion', 'tree']"
15022,1502200,Galactic Collegiate Programming Contest,15,"['value / coordinate compression', 'data structures', 'segment tree', 'set / map by trees']"
15023,1502300,Hubtown,22,"['bipartite matching', 'geometry']"
15024,1502400,Import Spaghetti,14,"['breadth-first search', 'floyd–warshall', 'graph theory', 'graph traversal', 'parsing', 'string']"
15025,1502500,Judging Moose,2,"['implementation', 'mathematics']"
15026,1502600,Kayaking Trip,17,"['binary search', 'greedy', 'parametric search']"
15027,1502700,Alien Sunset,14,['bruteforcing']
15028,1502800,Breaking Biscuits,18,"['convex hull', 'geometry', 'rotating calipers']"
15029,1502900,Cued In,5,"['greedy', 'implementation', 'string']"
15030,1503000,Deranging Hat,9,"['data structures', 'greedy', 'sorting', 'stack']"
15031,1503100,Education,13,"['greedy', 'sorting', 'sweeping']"
15032,1503200,Flipping Coins,14,"['combinatorics', 'dynamic programming', 'mathematics']"
15033,1503300,GentleBots,13,"['constructive', 'greedy', 'randomization']"
15034,1503400,Hiker Safety,0,[]
15035,1503500,I Work All Day,4,"['arithmetic', 'mathematics']"
15036,1503600,Just A Minim,3,"['arithmetic', 'implementation', 'mathematics']"
15037,1503700,Knightsbridge Rises,18,['maximum flow']
15038,1503800,Lounge Lizards,16,"['binary search', 'euclidean algorithm', 'geometry', 'longest increasing sequence in o(n log n)', 'mathematics', 'number theory']"
15039,1503900,Acordes intergaláticos,19,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
15040,1504000,Brincadeira,15,"['ad-hoc', 'bitmask', 'implementation', 'prefix sum', 'simulation']"
15041,1504100,Cigarras periódicas,0,[]
15042,1504200,Despojados,0,[]
15043,1504300,Escala musical,0,[]
15044,1504400,Fase,6,"['implementation', 'sorting']"
15045,1504500,Ginástica,9,['dynamic programming']
15046,1504600,Hipercampo,12,"['depth-first search', 'dynamic programming', 'geometry', 'graph theory', 'graph traversal', 'sorting']"
15047,1504700,Imposto Real,15,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
15048,1504800,Jogo de Boca,4,"['arbitrary precision / big integers', 'game theory', 'mathematics']"
15049,1504900,K-ésimo,19,['mathematics']
15050,1505000,Laboratório de biotecnologia,21,"['fast fourier transform', 'mathematics', 'prefix sum']"
15051,1505100,Máquina de café,2,"['arithmetic', 'implementation', 'mathematics']"
15052,1505200,Arranging tiles,21,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'geometry', 'ternary search', 'travelling salesman problem']"
15053,1505300,Buggy ICPC,18,"['ad-hoc', 'greedy']"
15054,1505400,Complete Naebbirac’s sequence,9,"['case work', 'implementation']"
15055,1505500,Daunting device,21,"['data structures', 'square root decomposition']"
15056,1505600,Enigma,15,['dynamic programming']
15057,1505700,Fundraising,17,"['value / coordinate compression', 'data structures', 'segment tree']"
15058,1505800,Gates of uncertainty,18,"['dynamic programming', 'dynamic programming on trees', 'tree']"
15059,1505900,Hard choice,2,"['implementation', 'mathematics']"
15060,1506000,Imperial roads,19,"['data structures', 'graph theory', 'lowest common ancestor', 'minimum spanning tree', 'sparse table', 'tree']"
15061,1506100,Jumping Frog,17,['mathematics']
15062,1506200,Keep it covered,21,"['bipartite matching', 'maximum flow']"
15063,1506300,Linearville,19,"['case work', 'mathematics']"
15064,1506400,Marblecoin,20,"['data structures', 'priority queue', 'string', 'suffix array and lcp array']"
15065,1506500,Dinoscan,8,['implementation']
15066,1506600,Happy Trails,5,['mathematics']
15067,1506700,Prime Driving Conditions,9,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes', 'string']"
15068,1506800,Time is of the Essence,8,['mathematics']
15069,1506900,Bubbly Troubly,0,[]
15070,1507000,Foosball Dynasty,0,[]
15071,1507100,The Key to Cryptography,9,[]
15072,1507200,Lost in Translation,0,[]
15073,1507300,Red Rover,12,"['bruteforcing', 'string']"
15074,1507400,Removal Game,0,[]
15075,1507500,That’s One Hanoi-ed Teacher,0,[]
15076,1507600,Vin Diagrams,0,[]
15077,1507700,Waif Until Dark,0,[]
15078,1507800,"Yes, Yes, It’s Nonograms",0,[]
15079,1507900,Arggggggh!,3,"['implementation', 'mathematics']"
15080,1508000,Every Second Counts,2,"['arithmetic', 'implementation', 'mathematics']"
15081,1508100,Is Everybody Appy?,6,"['data structures', 'set / map by hashing', 'implementation', 'string', 'set / map by trees']"
15082,1508200,KaBlam!,8,"['geometry', 'implementation', 'physics']"
15083,1508300,Life Savings,3,"['arithmetic', 'implementation', 'mathematics']"
15084,1508400,Treating Fractions Irrationally,6,"['arithmetic', 'implementation', 'mathematics']"
15085,1508500,Abstract Art,24,"['geometry', 'line segment intersection check', 'area of a polygon', 'sweeping']"
15086,1508600,Craters,25,"['convex hull', 'geometry', 'rotating calipers']"
15087,1508700,DRM Messages,5,"['implementation', 'string']"
15088,1508800,Game of Throwns,7,"['data structures', 'implementation', 'parsing', 'simulation', 'stack', 'string']"
15089,1508900,Is-A? Has-A? Who Knowz-A?,16,"['floyd–warshall', 'graph theory', 'graph traversal']"
15090,1509000,Keeping On Track,0,[]
15091,1509100,A Question of Ingestion,12,['dynamic programming']
15092,1509200,Sheba’s Amoebas,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
15093,1509300,"Twenty Four, Again",18,"['arithmetic', 'bruteforcing', 'dynamic programming', 'implementation', 'mathematics']"
15094,1509400,Workout for a Dumbbell,13,"['implementation', 'simulation']"
15095,1509500,Nine Knights,5,['implementation']
15096,1509600,Batter Up,3,"['arithmetic', 'implementation', 'mathematics']"
15097,1509700,Ring String,0,[]
15098,1509800,No Duplicates,5,"['bruteforcing', 'data structures', 'implementation', 'string', 'set / map by trees']"
15099,1509900,Honey Heist,11,"['breadth-first search', 'graph theory', 'graph traversal']"
15100,1510000,Orderly Class,13,"['ad-hoc', 'string']"
15101,1510100,Faulty Robot,12,"['breadth-first search', 'graph theory', 'graph traversal']"
15102,1510200,Hopscotch,18,"['combinatorics', 'mathematics']"
15103,1510300,The Uncertainty of Politics,18,"['dynamic programming', 'prefix sum']"
15104,1510400,Odd Palindrome,5,"['bruteforcing', 'string']"
15105,1510500,Enlarging Enthusiasm,24,[]
15106,1510600,Fear Factoring,16,"['mathematics', 'number theory']"
15107,1510700,Rainbow Roads,19,"['data structures', 'disjoint set', 'euler tour technique', 'graph theory', 'graph traversal', 'tree']"
15108,1510800,Straight Shot,12,"['geometry', 'mathematics', 'parametric search']"
15109,1510900,Distinct Distances,22,"['geometry', 'mathematics']"
15110,1511000,Security Badge,16,"['breadth-first search', 'graph theory', 'graph traversal', 'sweeping']"
15111,1511100,Avoiding Airports,22,"['convex hull trick', 'dynamic programming']"
15112,1511200,Long Long Strings,19,['implementation']
15113,1511300,Grid Coloring,13,['dynamic programming']
15114,1511400,Spinning Up Palindromes,16,['dynamic programming']
15115,1511500,Delayed Work,4,"['arithmetic', 'bruteforcing', 'mathematics']"
15116,1511600,Unsatisfying,20,[]
15117,1511700,Latin Squares,5,['implementation']
15118,1511800,Halfway,7,"['binary search', 'mathematics', 'parametric search']"
15119,1511900,Purple Rain,9,['prefix sum']
15120,1512000,Unloaded Die,7,"['greedy', 'mathematics', 'probability theory']"
15121,1512100,Star Arrangements,4,"['bruteforcing', 'mathematics']"
15122,1512200,Forbidden Zero,4,"['bruteforcing', 'mathematics']"
15123,1512300,Ducks in a Row,17,['dynamic programming']
15124,1512400,Flipping Out,0,[]
15125,1512500,Jumping Haybales,15,"['data structures', 'priority queue']"
15126,1512600,Move Away,17,"['bruteforcing', 'geometry']"
15127,1512700,Treasure Map,13,['dynamic programming']
15128,1512800,Congruent Numbers,2,"['arithmetic', 'mathematics']"
15129,1512900,Law 11,4,"['implementation', 'sorting']"
15130,1513000,Arithmetic Sequences,4,"['arithmetic', 'mathematics']"
15131,1513100,Auxiliary Project,8,"['case work', 'dynamic programming', 'greedy', 'mathematics']"
15132,1513200,Boolean Satisfiability,7,['mathematics']
15133,1513300,Consonant Fencity,13,['bruteforcing']
15134,1513400,Dividing Marbles,26,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics']"
15135,1513500,Equal Numbers,19,"['greedy', 'mathematics', 'number theory']"
15136,1513600,Fygon 2.0,23,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'floyd–warshall', 'graph theory']"
15137,1513700,Grand Test,23,"['biconnected component', 'depth-first search', 'graph theory', 'graph traversal']"
15138,1513800,Hidden Supervisors,22,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'tree']"
15139,1513900,Intelligence in Perpendicularia,9,['geometry']
15140,1514000,Joker,24,"['binary search', 'convex hull', 'geometry', 'square root decomposition']"
15141,1514100,Kotlin Island,9,['constructive']
15142,1514200,Little Difference,15,"['binary search', 'bruteforcing', 'mathematics', 'number theory']"
15143,1514300,Atomic Mass,10,[]
15144,1514400,Bake Off,0,[]
15145,1514500,Clever Title,0,[]
15146,1514600,Deck of Cards,0,[]
15147,1514700,Extra Judicial Operation,0,[]
15148,1514800,Front Nine,0,[]
15149,1514900,Greedy Generosity,0,[]
15150,1515000,Hole in One,0,[]
15151,1515100,Incomplete Book,3,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
15152,1515200,Jupiter Rock-Paper-Scissors,0,[]
15153,1515300,Keeping Cool,15,"[""dijkstra's"", 'graph theory']"
15154,1515400,Lights in the Morning,0,[]
15155,1515500,Analysis of Advanced Analytics,4,"['implementation', 'simulation']"
15156,1515600,Balloon Connect-the-Dots,0,[]
15157,1515700,Candy Sales,6,['greedy']
15158,1515800,Dangerous Discus,0,[]
15159,1515900,Exciting Startup,0,[]
15160,1516000,Fusion,0,[]
15161,1516100,Grass Cutting,5,"['implementation', 'simulation']"
15162,1516200,Haggling With a Witcher,0,[]
15163,1516300,Intuidiff,21,"['data structures', 'dynamic programming', 'segment tree', 'string', 'suffix array and lcp array']"
15164,1516400,Jousting Tournament,0,[]
15165,1516500,Killer Sudoku,12,"['data structures', 'disjoint set']"
15166,1516600,Loading Cargo,16,[]
15167,1516700,Anticlockwise Motion,8,"['implementation', 'mathematics']"
15168,1516800,Balloon Warehouse,16,"['depth-first search', 'graph theory', 'graph traversal']"
15169,1516900,Crazy Rotations,21,"['fast fourier transform', 'mathematics']"
15170,1517000,Dendroctonus,21,"['bruteforcing', 'geometry']"
15171,1517100,Election Frenzy,19,[]
15172,1517200,False Intelligence,16,['bruteforcing']
15173,1517300,Graphics Design,0,[]
15174,1517400,Hilbert’s Hash Browns,23,"['chinese remainder theorem', 'mathematics', 'number theory']"
15175,1517500,Intuidiff II,17,"['data structures', 'dynamic programming', 'segment tree']"
15176,1517600,Just Terraffic!,16,[]
15177,1517700,Kiwis vs Kangaroos,4,['string']
15178,1517800,Angles,3,"['arithmetic', 'implementation', 'mathematics']"
15179,1517900,Golf Croquet,3,"['implementation', 'simulation']"
15180,1518000,Fitness,4,"['implementation', 'simulation']"
15181,1518100,Beautiful Music,4,['implementation']
15182,1518200,Byte Me!,5,['implementation']
15183,1518300,Musical Chairs,8,[]
15184,1518400,Letter Count,4,"['implementation', 'string']"
15185,1518500,League Tables,0,[]
15186,1518600,Planes,0,[]
15187,1518700,Trees,0,[]
15188,1518800,Packing,12,['knapsack']
15189,1518900,Domino Killing,0,[]
15190,1519000,Infinite Trees,0,[]
15191,1519100,Competition Day,0,[]
15192,1519200,School Pairing,0,[]
15193,1519300,Asfalt,0,[]
15194,1519400,Cod,0,[]
15195,1519500,Kaktus,0,[]
15196,1519600,Kalendar,13,"['bruteforcing', 'implementation']"
15197,1519700,Letovi,0,[]
15198,1519800,NKD,7,"['implementation', 'simulation', 'string']"
15199,1519900,Ploča,0,[]
15200,1520000,Presjek,0,[]
15201,1520100,Sretan,0,[]
15202,1520200,Stablo,16,"['depth-first search', 'graph theory', 'graph traversal']"
15203,1520300,Police Station,16,"['graph theory', 'strongly connected component']"
15204,1520400,Pyramid,16,"['binary search', 'inclusion and exclusion', 'mathematics', 'sorting']"
15205,1520500,Robot Race,21,"['bit set', 'divide and conquer', 'dynamic programming', 'offline queries']"
15206,1520600,GCD-sum,0,[]
15207,1520700,Power plants,24,"['data structures', 'divide and conquer', 'geometry', 'graph theory', 'minimum spanning tree', 'parametric search', 'segment tree', 'voronoi diagram']"
15208,1520800,Brackets,22,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
15209,1520900,Skiing,23,"['convex hull', 'data structures', 'geometry']"
15210,1521000,Counterspells,23,"['data structures', 'dynamic programming', 'heavy-light decomposition', 'segment tree with lazy propagation', 'segment tree', 'tree', 'set / map by trees']"
15211,1521100,Jumbled password,0,[]
15212,1521200,The Battle for Wesnoth,0,[]
15213,1521300,Corporate life (after hostile takover),19,"['data structures', 'euler tour technique', 'segment tree', 'sweeping', 'tree']"
15214,1521400,Posters on the wall,22,"['data structures', 'persistent segment tree', 'segment tree']"
15215,1521500,Ironman,0,[]
15216,1521600,Another Brick in the Wall,4,['implementation']
15217,1521700,Zoning,0,[]
15218,1521800,Dice Betting,14,"['combinatorics', 'dynamic programming', 'mathematics']"
15219,1521900,Climbing,0,[]
15220,1522000,Hay Bales,12,"['greedy', 'implementation']"
15221,1522100,Racetrack,0,[]
15222,1522200,nnnnn,16,"['arbitrary precision / big integers', 'binary search', 'mathematics']"
15223,1522300,Saturn Bees,0,[]
15224,1522400,EvenOdd,13,"['mathematics', 'recursion']"
15225,1522500,Islands,0,[]
15226,1522600,House of Cards,4,"['arbitrary precision / big integers', 'mathematics', 'number theory']"
15227,1522700,Global Warming,0,[]
15228,1522800,3D Printed Statues,5,['mathematics']
15229,1522900,Restaurant Bribes,0,[]
15230,1523000,Wolf,0,[]
15231,1523100,Lights Out,0,[]
15232,1523200,Rectangles,2,['implementation']
15233,1523300,Final Score,7,"['data structures', 'set / map by hashing', 'implementation', 'string']"
15234,1523400,Number Pairs,4,"['arithmetic', 'bruteforcing', 'mathematics']"
15235,1523500,Olympiad Pizza,6,"['data structures', 'implementation', 'queue', 'simulation']"
15236,1523600,Dominos,3,['mathematics']
15237,1523700,Cipher,9,"['data structures', 'set / map by hashing', 'sorting']"
15238,1523800,Pirates,3,"['implementation', 'string']"
15239,1523900,Password check,4,"['implementation', 'string']"
15240,1524000,Paint bucket,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
15241,1524100,Counting paths,9,['dynamic programming']
15242,1524200,Knight,10,"['breadth-first search', 'graph theory', 'graph traversal', 'parsing', 'string']"
15243,1524300,Tiling,11,['dynamic programming']
15244,1524400,Debug,9,"['implementation', 'prefix sum']"
15245,1524500,Boom!,19,[]
15246,1524600,One-Way Streets,20,"['biconnected component', 'data structures', 'disjoint set', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
15247,1524700,Sure Bet,17,"['binary search', 'greedy', 'sorting', 'two-pointer']"
15248,1524800,Mousetrap,24,[]
15249,1524900,Building Bridges,21,"['convex hull trick', 'dynamic programming']"
15250,1525000,Palindromic Partitions,18,"['greedy', 'hashing', 'string', 'suffix array and lcp array']"
15251,1525100,Chase,21,"['dynamic programming', 'dynamic programming on trees', 'tree']"
15252,1525200,Opening Ceremony,4,['implementation']
15253,1525300,Rock Climbing,11,"['breadth-first search', 'graph theory', 'graph traversal']"
15254,1525400,Volleyball Scores,9,[]
15255,1525500,Single Elimination,0,[]
15256,1525600,Triple Jump,4,[]
15257,1525700,Basketball,0,[]
15258,1525800,Assignment Algorithm,10,"['implementation', 'simulation']"
15259,1525900,Buffalo Barricades,26,"['data structures', 'disjoint set', 'graph theory', 'set / map by hashing']"
15260,1526000,Cumulative Code,26,[]
15261,1526100,Donut Drone,23,"['data structures', 'graph theory', 'sparse table']"
15262,1526200,Embedding Enumeration,26,"['combinatorics', 'dynamic programming', 'dynamic programming on trees', 'mathematics', 'tree']"
15263,1526300,Faulty Factorial,17,"['mathematics', 'number theory']"
15264,1526400,Gambling Guide,20,"[""dijkstra's"", 'graph theory']"
15265,1526500,Hidden Hierarchy,14,"['implementation', 'string', 'tree']"
15266,1526600,Intrinsic Interval,25,"['data structures', 'segment tree']"
15267,1526700,Justified Jungle,15,"['dynamic programming', 'dynamic programming on trees', 'mathematics', 'number theory', 'tree']"
15268,1526800,Kitchen Knobs,24,[]
15269,1526900,Lunar Landscape,19,"['geometry', 'implementation', 'sweeping']"
15270,1527000,친구 팰린드롬,9,"['backtracking', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'recursion']"
15271,1527100,친구 팰린드롬 2,17,['bipartite matching']
15272,1527200,Hissing Microphone,3,['string']
15273,1527300,Open-Pit Mining,0,[]
15274,1527400,Multiplication Game,17,"['case work', 'game theory', 'mathematics', 'number theory']"
15275,1527500,Polyline Simplification,0,[]
15276,1527600,Palindromic Password,10,[]
15277,1527700,Flow Free,14,['backtracking']
15278,1527800,"Decisions, Decisions",11,"['bitmask', 'recursion']"
15279,1527900,Heart Rate,3,"['arithmetic', 'mathematics']"
15280,1528000,Initials,0,[]
15281,1528100,Particle Collision,14,"['geometry', 'mathematics']"
15282,1528200,Frosh Week,7,"['greedy', 'sorting']"
15283,1528300,Archery Tournament,20,"['binary search', 'data structures', 'geometry', 'segment tree', 'set / map by trees']"
15284,1528400,Box,12,[]
15285,1528500,Connections,17,"['ad-hoc', 'graph theory', 'graph traversal']"
15286,1528600,Designing the Toy,19,['constructive']
15287,1528700,Easy Quest,7,[]
15288,1528800,The Final Level,22,"['ad-hoc', 'case work', 'constructive', 'implementation']"
15289,1528900,The Great Wall,21,"['binary search', 'data structures', 'prefix sum', 'segment tree', 'sweeping']"
15292,1529200,Journey from Petersburg to Moscow,23,"[""dijkstra's"", 'graph theory']"
15293,1529300,Knapsack Cryptosystem,24,"['mathematics', 'meet in the middle', 'number theory']"
15294,1529400,Laminar Family,22,"['data structures', 'heavy-light decomposition', 'segment tree with lazy propagation', 'segment tree', 'tree']"
15295,1529500,Chanukah Challenge,3,['mathematics']
15296,1529600,Sum Squared Digits Function,4,['mathematics']
15297,1529700,Capsules,0,[]
15298,1529800,Pavers,0,[]
15299,1529900,Best Rational Approximation,0,[]
15300,1530000,The Components Game,0,[]
15301,1530100,Social Resistance,0,[]
15302,1530200,Triangle to Hexagon,17,"['geometry', 'line segment intersection check', 'mathematics']"
15303,1530300,Sumdoku,12,['backtracking']
15304,1530400,Toys,0,[]
15305,1530500,경곽 침공,23,"['convex hull', 'dynamic programming', 'geometry', 'prefix sum', 'two-pointer']"
15306,1530600,구몬 알고리즘,20,"['combinatorics', 'mathematics']"
15307,1530700,민돌 투어,19,[]
15308,1530800,비밀 요원,25,"['data structures', 'dual graph', 'floyd–warshall', 'graph theory', 'planar graph', 'sweeping', 'set / map by trees']"
15309,1530900,스킬 트리,19,"['combinatorics', 'mathematics']"
15310,1531000,아티스트,25,"['convex hull', 'divide and conquer', 'geometry', 'sweeping']"
15311,1531100,약 팔기,16,"['constructive', 'mathematics']"
15312,1531200,이름 궁합,6,"['dynamic programming', 'implementation', 'string']"
15313,1531300,정과프 해적단,21,"['data structures', 'dynamic programming', 'segment tree', 'two-pointer']"
15314,1531400,쿵! 쿵!,22,"['geometry', 'line segment intersection check', 'mathematics']"
15315,1531500,태풍의 아들 KDH,21,"['dynamic programming', 'dynamic programming on trees', 'mathematics', 'probability theory', 'tree']"
15316,1531600,현수시티,21,"['data structures', 'disjoint set', 'divide and conquer', 'graph theory', 'offline dynamic connectivity', 'offline queries']"
15317,1531700,동방 보수,14,"['binary search', 'parametric search']"
15318,1531800,새로운 수열,17,"['mathematics', 'prefix sum']"
15319,1531900,동혁이의 생일선물,11,[]
15320,1532000,단신쓴짠,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
15321,1532100,이상한 토너먼트,14,"['dynamic programming', 'greedy']"
15322,1532200,Košnja,4,['mathematics']
15323,1532300,ZigZag,8,"['data structures', 'set / map by hashing', 'sorting', 'string', 'set / map by trees']"
15324,1532400,Doktor,17,"['ad-hoc', 'prefix sum']"
15325,1532500,San,18,"['binary search', 'meet in the middle']"
15326,1532600,Usmjeri,22,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'lowest common ancestor', 'sparse table', 'tree']"
15327,1532700,Garaža,24,"['ad-hoc', 'data structures', 'segment tree']"
15328,1532800,산타의 선물,14,['arbitrary precision / big integers']
15329,1532900,Secret of Chocolate Poles,9,['dynamic programming']
15330,1533000,Parallel Lines,13,"['backtracking', 'bruteforcing', 'geometry', 'mathematics']"
15331,1533100,Medical Checkup,11,"['greedy', 'mathematics']"
15332,1533200,Making Perimeter of the Convex Hull Shortest,25,[]
15333,1533300,Black or White,21,"['data structures', 'dynamic programming', 'segment tree']"
15334,1533400,Pizza Delivery,21,"['articulation points and bridges', ""dijkstra's"", 'graph theory']"
15335,1533500,Rendezvous on a Tetrahedron,17,"['ad-hoc', 'case work', 'geometry', 'mathematics']"
15336,1533600,Homework,26,"['maximum flow', 'minimum cost maximum flow']"
15337,1533700,Starting a Scenic Railroad Service,18,"['data structures', 'greedy', 'segment tree', 'sweeping']"
15338,1533800,String Puzzle,22,"['binary search', 'graph theory']"
15339,1533900,Counting Cycles,24,"['graph theory', 'tree', 'tree compression']"
15340,1534000,Sim Card,3,"['arithmetic', 'implementation', 'mathematics']"
15341,1534100,Bank Card Verifier,5,"['arithmetic', 'implementation', 'mathematics']"
15342,1534200,Border Wall,19,[]
15343,1534300,World Cup Draw,0,[]
15344,1534400,Barareh on Fire,0,[]
15345,1534500,Homotopic Paths,23,[]
15346,1534600,New Country Division,21,[]
15347,1534700,Column Addition,0,[]
15348,1534800,Cafe Bazaar,0,[]
15349,1534900,Getting Back Home,21,"['graph theory', 'graph traversal', 'greedy', 'tree']"
15350,1535000,Mars,0,[]
15351,1535100,인생 점수,3,"['implementation', 'string']"
15352,1535200,욱제와 그의 팬들,18,"['data structures', 'disjoint set']"
15353,1535300,큰 수 A+B (2),7,"['arbitrary precision / big integers', 'arithmetic', 'mathematics', 'string']"
15354,1535400,Aron,3,['implementation']
15355,1535500,Programiranje,8,['prefix sum']
15356,1535600,Retro,0,[]
15357,1535700,Portal,18,[]
15358,1535800,Dojave,22,[]
15359,1535900,Sažetak,23,"['chinese remainder theorem', 'inclusion and exclusion', 'mathematics', 'number theory']"
15360,1536000,Rasvjeta,7,[]
15361,1536100,Izbori,9,[]
15362,1536200,Automobil,15,['mathematics']
15363,1536300,Vođe,0,[]
15364,1536400,Krov,21,"['binary search', 'value / coordinate compression', 'data structures', 'segment tree']"
15365,1536500,Ceste,0,[]
15366,1536600,Olivander,5,"['implementation', 'sorting']"
15367,1536700,Spirale,7,[]
15368,1536800,Birokracija,11,"['dynamic programming', 'dynamic programming on trees', 'tree']"
15369,1536900,Karte,17,"['constructive', 'greedy', 'sorting']"
15370,1537000,Pictionary,20,"['binary search', 'data structures', 'disjoint set', 'lowest common ancestor', 'mathematics', 'number theory', 'parallel binary search', 'smaller to larger technique', 'tree']"
15371,1537100,Planinarenje,23,"['bipartite matching', 'depth-first search', 'graph theory', 'graph traversal']"
15372,1537200,A Simple Problem.,3,"['arithmetic', 'mathematics']"
15373,1537300,A Simple Problem!,17,"['mathematics', 'number theory']"
15374,1537400,Tataramon,0,[]
15375,1537500,Friday,0,[]
15376,1537600,A Packing Problem,0,[]
15377,1537700,Bounce Bounce Bounce,0,[]
15378,1537800,Paasa Numbers,12,"['backtracking', 'dynamic programming']"
15379,1537900,Guardians of the Lunatics,20,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming']"
15380,1538000,The Grand Noi and ICPC Battle,20,[]
15381,1538100,AdoraBalls,0,[]
15382,1538200,Balloon Distribution,0,[]
15383,1538300,Convex Quadrilateral,0,[]
15384,1538400,Disco Dance Debacle,22,[]
15385,1538500,Expression,0,[]
15386,1538600,Frog Pushers,20,"['graph theory', 'graph traversal', 'minimum spanning tree']"
15387,1538700,Go Go Go Special Action Force!,7,['implementation']
15388,1538800,Handbags,0,[]
15389,1538900,Imelda’s Shopping Spree,25,"['splay tree', 'tree']"
15390,1539000,Jack and Jill and Joe,20,[]
15391,1539100,Off the Rails,18,[]
15392,1539200,LoL Tournament,0,[]
15393,1539300,Concerts,15,['dynamic programming']
15394,1539400,Bricks,22,"['dynamic programming', 'prefix sum']"
15395,1539500,Christmas Tree,0,[]
15396,1539600,Harry Potter and The Vector Spell,18,"['data structures', 'disjoint set', 'graph theory', 'linear algebra', 'mathematics']"
15397,1539700,Looping Playlist,18,['bitmask']
15398,1539800,Binary Transformations,17,['greedy']
15399,1539900,Robots,9,"['greedy', 'sorting']"
15400,1540000,Cat and Mouse,0,[]
15401,1540100,Tetris,22,"['bruteforcing', 'data structures', 'implementation', 'set / map by trees']"
15402,1540200,Cunning Friends,19,[]
15403,1540300,Escape Room,16,"['ad-hoc', 'greedy']"
15404,1540400,Divide and Conquer,21,"['lowest common ancestor', 'prefix sum', 'tree']"
15405,1540500,Menu Tour,0,[]
15406,1540600,Check the Check,4,"['implementation', 'string']"
15407,1540700,How to Eat at a Buffet,7,['greedy']
15408,1540800,French Dinner,0,[]
15409,1540900,Majestic Gourmet University,0,[]
15410,1541000,Cakey McCakeFace,8,['sorting']
15411,1541100,Table,22,"['data structures', 'prefix sum', 'stack']"
15412,1541200,Macarons,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'exponentiation by squaring', 'mathematics']"
15413,1541300,Candy Chain,22,['dynamic programming']
15414,1541400,Ingredients,14,"['data structures', 'dynamic programming', 'graph theory', 'graph traversal', 'knapsack', 'topological sorting', 'set / map by trees']"
15415,1541500,Shattered Cake,3,"['arithmetic', 'mathematics']"
15416,1541600,Cordon Bleu,21,"['maximum flow', 'hungarian', 'minimum cost maximum flow']"
15417,1541700,Kabobs,26,['string']
15418,1541800,Burglary,23,"['case work', 'dynamic programming', 'implementation']"
15419,1541900,Frosting on the Cake,7,"['implementation', 'mathematics']"
15420,1542000,Blowing Candles,18,"['convex hull', 'geometry', 'rotating calipers']"
15421,1542100,Birthday Cake,17,"['data structures', 'geometry', 'set / map by trees']"
15422,1542200,Bumped!,15,"[""dijkstra's"", 'graph theory']"
15423,1542300,Canonical Coin Systems,12,"['dynamic programming', 'greedy']"
15424,1542400,Cat and Mice,18,"['binary search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
15425,1542500,Company Picnic,16,"['dynamic programming', 'dynamic programming on trees', 'tree']"
15426,1542600,GlitchBot,6,"['bruteforcing', 'implementation', 'simulation']"
15427,1542700,Greeting Card,9,['binary search']
15428,1542800,Imperfect GPS,9,['geometry']
15429,1542900,Odd Gnome,3,"['bruteforcing', 'implementation']"
15430,1543000,Progressive Scramble,6,"['implementation', 'string']"
15431,1543100,Space Probe,15,"['sorting', 'sweeping']"
15432,1543200,Suspension Bridges,9,"['binary search', 'mathematics']"
15433,1543300,Umbral Decoding,14,"['sorting', 'sweeping']"
15434,1543400,Rhombinoes,0,[]
15435,1543500,Enumerating Brackets,0,[]
15436,1543600,Wizard of Odds,6,"['arbitrary precision / big integers', 'mathematics']"
15437,1543700,Treasure Hunt,6,"['implementation', 'simulation']"
15438,1543800,Planet Destruction,0,[]
15439,1543900,Vera and Outfits,2,"['implementation', 'combinatorics', 'mathematics']"
15440,1544000,Vera And LCS,15,"['ad-hoc', 'mathematics', 'string']"
15441,1544100,Vera and Mean Sorting,0,[]
15442,1544200,Vera and Sorting,0,[]
15443,1544300,Vera and Love Triangles,22,"['combinatorics', 'mathematics', 'number theory', 'prefix sum']"
15444,1544400,Vera and ABCDE,4,"['implementation', 'string']"
15445,1544500,Vera and Banquet,0,[]
15446,1544600,Vera and Canada Day,0,[]
15447,1544700,Vera and Dogs,0,[]
15448,1544800,Vera and Engineering Buildings,0,[]
15449,1544900,Art,4,"['bruteforcing', 'geometry']"
15450,1545000,Biology,10,['bruteforcing']
15451,1545100,Computer Science,12,"['binary search', 'data structures', 'parametric search', 'prefix sum', 'priority queue', 'sliding window']"
15452,1545200,Drama,13,['dynamic programming']
15453,1545300,English,0,[]
15454,1545400,Standing Out from the Herd,22,"['string', 'suffix array and lcp array']"
15455,1545500,Push a Box,23,"['biconnected component', 'graph theory', 'graph traversal']"
15456,1545600,Greedy Gift Takers,20,"['binary search', 'greedy']"
15457,1545700,A Pie for a Pie,18,"['breadth-first search', 'graph theory', 'graph traversal']"
15458,1545800,Barn Painting,15,"['dynamic programming', 'dynamic programming on trees', 'tree']"
15459,1545900,Haybale Feast,15,"['binary search', 'data structures', 'two-pointer']"
15460,1546000,My Cow Ate My Homework,9,"['implementation', 'prefix sum']"
15461,1546100,Milk Measurement,16,"['data structures', 'sorting', 'set / map by trees']"
15462,1546200,The Bovine Shuffle,13,['graph theory']
15463,1546300,Blocked Billboard,5,"['implementation', 'mathematics']"
15464,1546400,The Bovine Shuffle,6,"['implementation', 'simulation', 'string']"
15465,1546500,Milk Measurement,9,"['implementation', 'simulation', 'sorting']"
15466,1546600,Similarity Computation,5,['implementation']
15467,1546700,The Combination of Poker Cards,5,['implementation']
15468,1546800,Coloring Intervals,0,[]
15469,1546900,Mixing Coins,10,"['data structures', 'queue', 'stack']"
15470,1547000,Fences,17,"['case work', 'geometry', 'mathematics', 'parametric search']"
15471,1547100,A Simple Function,18,"['combinatorics', ""fermat's little theorem"", 'mathematics', 'modular multiplicative inverse', 'number theory']"
15472,1547200,The Jet-Black Wings,0,[]
15473,1547300,HH Country,0,[]
15474,1547400,鉛筆 (Pencils),2,"['arithmetic', 'mathematics']"
15475,1547500,双六 (Sugoroku),5,['implementation']
15476,1547600,幹線道路 (Trunk Road),4,['bruteforcing']
15477,1547700,水ようかん (Mizuyokan),16,"['dynamic programming', 'parametric search']"
15478,1547800,森林伐採 (Deforestation),18,['dynamic programming']
15479,1547900,L番目のK番目の数 (LthKthNumber),18,"['binary search', 'two-pointer']"
15480,1548000,LCA와 쿼리,19,"['lowest common ancestor', 'tree']"
15481,1548100,그래프와 MST,20,"['graph theory', 'lowest common ancestor', 'minimum spanning tree', 'tree']"
15482,1548200,한글 LCS,11,"['dynamic programming', 'implementation', 'parsing', 'string', 'utf-8 inputs']"
15483,1548300,최소 편집,13,['dynamic programming']
15484,1548400,최소 편집 2,18,['dynamic programming']
15485,1548500,\(a^ib^jc^k\),13,['dynamic programming']
15486,1548600,퇴사 2,11,['dynamic programming']
15487,1548700,A[j]-A[i]+A[l]-A[k],12,['dynamic programming']
15488,1548800,나이트가 체스판을 벗어나지 않을 확률,10,"['dynamic programming', 'mathematics', 'probability theory']"
15489,1548900,파스칼 삼각형,7,"['combinatorics', 'dynamic programming', 'mathematics']"
15490,1549000,즐거운 게임,16,"['dynamic programming', 'game theory']"
15491,1549100,도시 정비,18,"['data structures', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'segment tree', 'tree']"
15492,1549200,뒤집기,21,"['hashing', 'string']"
15493,1549300,수 고르기,22,"['data structures', 'greedy', 'priority queue']"
15494,1549400,Davor,4,"['arithmetic', 'bruteforcing', 'mathematics']"
15495,1549500,Alkemija,13,"['graph theory', 'topological sorting']"
15496,1549600,Mate,17,"['combinatorics', 'dynamic programming', 'mathematics']"
15497,1549700,Cover,16,['dynamic programming']
15498,1549800,Kotrljanje,17,"['bruteforcing', 'mathematics']"
15499,1549900,Vrtić,22,[]
15500,1550000,이상한 하노이 탑,9,"['data structures', 'implementation', 'simulation', 'stack']"
15501,1550100,부당한 퍼즐,9,['ad-hoc']
15502,1550200,K-균등 문자열,14,"['data structures', 'disjoint set']"
15503,1550300,레벨 배치하기,18,"['combinatorics', 'graph theory', 'mathematics', 'sorting']"
15504,1550400,프로그래밍 대결,21,"['maximum flow', 'minimum cost maximum flow']"
15505,1550500,아름다운 퍼즐 만들기,20,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'sliding window']"
15506,1550600,정원사,21,"['data structures', 'priority queue', 'segment tree']"
15507,1550700,연산 최적화,23,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'hashing', 'string', 'z']"
15508,1550800,Xayahh-Rakann at Moloco (Easy),12,"['data structures', 'disjoint set', 'greedy']"
15509,1550900,Xayahh-Rakann at Moloco (Hard),13,"['data structures', 'disjoint set', 'dynamic programming', 'knapsack']"
15510,1551000,League of Overwatch at Moloco (Easy),10,"['backtracking', 'bruteforcing']"
15511,1551100,League of Overwatch at Moloco (Hard),13,"['bipartite graph', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
15512,1551200,Lottery for Vitcoins at Moloco (Easy),12,"['mathematics', 'probability theory', 'sorting']"
15513,1551300,Lottery for Vitcoins at Moloco (Hard),14,"['mathematics', 'probability theory']"
15514,1551400,Tap Titanz at Moloco (Easy),19,[]
15515,1551500,Tap Titanz at Moloco (Hard),19,"['breadth-first search', 'graph theory', 'graph traversal']"
15516,1551600,Array Manipulation at Moloco (Easy),6,['implementation']
15517,1551700,Array Manipulation at Moloco (Hard),16,"['value / coordinate compression', 'data structures', 'segment tree']"
15518,1551800,Window,5,"['implementation', 'mathematics']"
15519,1551900,Tournament Chart,11,"['data structures', 'divide and conquer', 'greedy', 'parsing', 'recursion', 'stack', 'string']"
15520,1552000,Prime-Factor Prime,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
15521,1552100,Revenge of the Broken Door,24,[]
15522,1552200,Tree Separator,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
15523,1552300,RPG Maker,17,"['constructive', 'graph theory', 'graph traversal', 'implementation']"
15524,1552400,Coin Slider,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'geometry']"
15525,1552500,Separate String,22,"['aho-corasick', 'data structures', 'dynamic programming', 'hashing', 'rabin–karp', 'string', 'tree', 'trie']"
15526,1552600,Revenge of the Endless BFS,20,[]
15527,1552700,Farm Village,24,[]
15528,1552800,Conveyor Belt,20,[]
15529,1552900,Best Matched Pair,5,['bruteforcing']
15530,1553000,Help the Princess!,12,"['breadth-first search', 'graph theory', 'graph traversal']"
15531,1553100,We don’t wanna work!,16,"['data structures', 'implementation', 'set / map by trees']"
15532,1553200,Parentheses,11,[]
15533,1553300,Similarity of Subtrees,16,"['hashing', 'tree']"
15534,1553400,Escape from the Hell,18,[]
15535,1553500,Share the Ruins Preservation,18,[]
15536,1553600,Pipe Fitter and the Fierce Dogs,21,[]
15537,1553700,Multisect,20,[]
15538,1553800,Compressed Formula,22,[]
15539,1553900,Non-redundant Drive,22,"['binary search', '센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'dynamic programming', 'segment tree', 'tree']"
15540,1554000,Calling Extraterrestrial Intelligence Again,10,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
15541,1554100,Equals are Equals,18,[]
15542,1554200,GIGA Universe Cup,0,[]
15543,1554300,Life Line,0,[]
15544,1554400,Map of Ninja House,14,"['depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
15545,1554500,Shredding Company,11,"['bruteforcing', 'implementation']"
15546,1554600,Viva Confetti,0,[]
15547,1554700,Lorem ipsum,0,[]
15548,1554800,Anagram Pyramids (Hard),0,[]
15549,1554900,if,6,['ad-hoc']
15550,1555000,if 2,12,['ad-hoc']
15551,1555100,if 3,13,['hashing']
15552,1555200,빠른 A+B,2,"['implementation', 'arithmetic', 'mathematics']"
15553,1555300,난로,11,"['greedy', 'sorting']"
15554,1555400,전시회,15,"['prefix sum', 'sorting']"
15555,1555500,Dango Maker,20,['dynamic programming']
15556,1555600,Commuter Pass,20,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
15557,1555700,Snake Escaping,23,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'inclusion and exclusion', 'meet in the middle']"
15558,1555800,점프 게임,10,"['breadth-first search', 'graph theory', 'graph traversal']"
15559,1555900,내 선물을 받아줘,14,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
15560,1556000,구간 합 최대? 1,14,"['dynamic programming', 'mathematics']"
15561,1556100,구간 합 최대? 2,20,"['data structures', 'segment tree']"
15562,1556200,네트워크,15,['graph theory']
15563,1556300,Äventyr 1,11,"['data structures', 'set / map by trees']"
15564,1556400,Äventyr 2,22,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'tree']"
15565,1556500,귀여운 라이언,10,"['sliding window', 'two-pointer']"
15566,1556600,개구리 1,10,"['backtracking', 'bruteforcing']"
15567,1556700,개구리 2,20,"['2-sat', 'graph theory', 'strongly connected component']"
15568,1556800,개구리 3,21,"['2-sat', 'graph theory', 'strongly connected component']"
15569,1556900,블록 1,13,['dynamic programming']
15570,1557000,블록 2,14,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
15571,1557100,블록 3,15,"['dynamic programming', 'sliding window']"
15572,1557200,블록 4,22,"['dynamic programming', 'kitamasa']"
15573,1557300,채굴,13,"['breadth-first search', 'binary search', 'data structures', 'graph theory', 'graph traversal', 'parametric search']"
15574,1557400,신호 1,12,"['dynamic programming', 'geometry']"
15575,1557500,신호 2,14,"['dynamic programming', 'geometry']"
15576,1557600,큰 수 곱셈 (2),20,"['fast fourier transform', 'mathematics']"
15577,1557700,Prosjek,7,"['data structures', 'greedy', 'mathematics', 'priority queue', 'sorting']"
15578,1557800,Timovi,9,['mathematics']
15579,1557900,Go,17,['dynamic programming']
15580,1558000,Clickbait,18,"['implementation', 'parsing', 'recursion', 'string']"
15581,1558100,Dostavljač,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
15582,1558200,Priglavci,19,"['binary search', 'maximum flow']"
15583,1558300,Lifeguards (Platinum),22,"['dynamic programming', 'sweeping']"
15584,1558400,Cow at Large (Platinum),25,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'tree']"
15585,1558500,Sprinklers,20,"['combinatorics', 'mathematics', 'sweeping']"
15586,1558600,MooTube (Gold),16,"['data structures', 'disjoint set', 'offline queries']"
15587,1558700,Cow at Large (Gold),17,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
15588,1558800,Stamp Painting,17,"['dynamic programming', 'mathematics', 'prefix sum']"
15589,1558900,Lifeguards (Silver),15,['sweeping']
15590,1559000,Rental Service,15,"['greedy', 'prefix sum', 'sorting']"
15591,1559100,MooTube (Silver),11,"['breadth-first search', 'graph theory', 'graph traversal']"
15592,1559200,Blocked Billboard II,6,"['geometry', 'implementation']"
15593,1559300,Lifeguards (Bronze),4,['bruteforcing']
15594,1559400,Out of Place,7,"['ad-hoc', 'greedy', 'sorting']"
15595,1559500,정답 비율 계산하기,8,['implementation']
15596,1559600,정수 N개의 합,4,"['arithmetic', 'implementation', 'mathematics']"
15599,1559900,Ascending Photo,22,['dynamic programming']
15600,1560000,Boss Battle,4,"['game theory', 'greedy']"
15601,1560100,Connect the Dots,0,[]
15602,1560200,Dunglish,8,[]
15603,1560300,English Restaurant,28,['mathematics']
15604,1560400,Factor-Free Tree,22,"['divide and conquer', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
15605,1560500,Glyph Recognition,16,"['binary search', 'geometry', 'point in convex polygon check']"
15606,1560600,High Score,9,['mathematics']
15607,1560700,Installing Apps,19,"['dynamic programming', 'greedy', 'sorting']"
15608,1560800,Juggling Troupe,23,['ad-hoc']
15609,1560900,Knockout Tournament,14,"['combinatorics', 'greedy', 'mathematics', 'sorting']"
15610,1561000,Abbey Courtyard,2,"['geometry', 'mathematics']"
15611,1561100,Broken Gearbox,20,"['depth-first search', 'graph theory', 'graph traversal', 'linear algebra', 'mathematics']"
15612,1561200,Cube Bits,4,['mathematics']
15613,1561300,The Lawyer,0,[]
15614,1561400,Petrol,20,"['data structures', ""dijkstra's"", 'graph theory', 'minimum spanning tree', 'sparse table']"
15615,1561500,The Prices,0,[]
15616,1561600,Divisors,7,"['mathematics', 'number theory']"
15617,1561700,Euclidean Nim,15,[]
15618,1561800,Pillars,0,[]
15619,1561900,Global Warming,0,[]
15620,1562000,Hit of the Season,0,[]
15621,1562100,The Staging,22,"['data structures', 'implementation', 'permutation cycle decomposition', 'segment tree']"
15622,1562200,The Cave,22,"['ad-hoc', 'lowest common ancestor', 'tree']"
15623,1562300,The Captain,18,"[""dijkstra's"", 'graph theory']"
15624,1562400,피보나치 수 7,7,"['dynamic programming', 'mathematics']"
15625,1562500,Paprike,13,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'greedy', 'sorting', 'tree']"
15626,1562600,Pick,0,[]
15627,1562700,Svjetlost,0,[]
15628,1562800,Zagonetka,0,[]
15629,1562900,Africa,5,['implementation']
15630,1563000,Binary Game,0,['implementation']
15631,1563100,BOJeopardy,0,[]
15632,1563200,Drawing Character,16,"['bruteforcing', 'geometry']"
15633,1563300,Fan Death,3,"['bruteforcing', 'mathematics', 'number theory']"
15634,1563400,Glen,16,['constructive']
15635,1563500,IDN Homograph Attack,0,"['implementation', 'string', 'utf-8 inputs', 'parsing']"
15636,1563600,Linear Algebra and Group,0,"['implementation', 'arithmetic', 'precomputation', 'mathematics']"
15637,1563700,Lotto,0,"['implementation', 'parsing', 'string']"
15638,1563800,No Description,0,[]
15639,1563900,Rick,0,"['string', 'implementation']"
15640,1564000,Satan Game,17,['constructive']
15641,1564100,"SUPER SUPER BINARY SEARCH DELUXE 2.5: THE LEGEND OF THE GOLDEN MAZASSUMNIDA, EPISODE 2: THE MAZWAETL UNIVERSE, PART 2: THE PARALLEL UNIVERSE AND THE LOST MAZASSUMNIDA: GAME OF THE YEAR EDITION",0,"['binary search', 'bruteforcing']"
15642,1564200,Thinking Station,0,"['hashing', 'rabin–karp', 'string', 'suffix array and lcp array']"
15643,1564300,Yee,0,['implementation']
15644,1564400,구슬 탈출 3,15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
15645,1564500,내려가기 2,10,['dynamic programming']
15646,1564600,농부 후안은 바리스타입니다,17,"['data structures', 'segment tree']"
15647,1564700,로스팅하는 엠마도 바리스타입니다,17,"['dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
15648,1564800,추출하는 폴도 바리스타입니다,17,"['data structures', 'dynamic programming', 'segment tree']"
15649,1564900,N과 M (1),8,['backtracking']
15650,1565000,N과 M (2),8,['backtracking']
15651,1565100,N과 M (3),8,['backtracking']
15652,1565200,N과 M (4),8,['backtracking']
15653,1565300,구슬 탈출 4,15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
15654,1565400,N과 M (5),8,['backtracking']
15655,1565500,N과 M (6),8,['backtracking']
15656,1565600,N과 M (7),8,['backtracking']
15657,1565700,N과 M (8),8,['backtracking']
15658,1565800,연산자 끼워넣기 (2),9,"['backtracking', 'bruteforcing']"
15659,1565900,연산자 끼워넣기 (3),13,"['backtracking', 'bruteforcing', 'data structures', 'stack']"
15660,1566000,테트로미노 (2),13,['implementation']
15661,1566100,링크와 스타트,11,"['bitmask', 'bruteforcing']"
15662,1566200,톱니바퀴 (2),11,"['implementation', 'simulation']"
15663,1566300,N과 M (9),9,['backtracking']
15664,1566400,N과 M (10),9,['backtracking']
15665,1566500,N과 M (11),9,['backtracking']
15666,1566600,N과 M (12),9,['backtracking']
15667,1566700,2018 연세대학교 프로그래밍 경진대회,3,"['arithmetic', 'bruteforcing', 'mathematics']"
15668,1566800,방 번호,12,"['backtracking', 'bruteforcing', 'mathematics']"
15669,1566900,나무 위의 입자,16,"['dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
15670,1567000,도로 공사,14,"['mathematics', 'prefix sum']"
15671,1567100,오델로,10,['implementation']
15672,1567200,시공스톤,19,"['bipartite matching', 'bruteforcing']"
15673,1567300,헤븐스 키친 2,14,"['dynamic programming', 'prefix sum']"
15674,1567400,가로수,19,"['data structures', 'disjoint set', 'implementation']"
15675,1567500,괴도 강산,20,"['2-sat', 'graph theory', 'strongly connected component']"
15676,1567600,졸업한 택희를 기리며,26,[]
15677,1567700,문제 하나 풀어볼래?,18,"['ad-hoc', 'bruteforcing']"
15678,1567800,연세워터파크,16,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque', 'priority queue', 'segment tree']"
15679,1567900,수열의 개수,19,"['case work', 'combinatorics', 'mathematics']"
15680,1568000,연세대학교,2,['implementation']
15681,1568100,트리와 쿼리,11,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
15682,1568200,삼차 방정식 풀기 2,21,"['arbitrary precision / big integers', 'binary search', 'mathematics', 'numerical analysis']"
15683,1568300,감시,12,"['bruteforcing', 'implementation', 'simulation']"
15684,1568400,사다리 조작,13,"['backtracking', 'bruteforcing', 'implementation']"
15685,1568500,드래곤 커브,12,"['implementation', 'simulation']"
15686,1568600,치킨 배달,11,"['backtracking', 'bruteforcing', 'implementation']"
15687,1568700,직사각형,6,"['geometry', 'implementation']"
15688,1568800,수 정렬하기 5,6,['sorting']
15689,1568900,Catch the Plane,19,"['data structures', 'dynamic programming', 'graph theory', 'priority queue']"
15690,1569000,Comma Sprinkler,17,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation', 'set / map by trees']"
15691,1569100,Conquer The World,28,"['dynamic programming', 'dynamic programming on trees', 'smaller to larger technique', 'tree']"
15692,1569200,Gem Island,26,"['combinatorics', 'dynamic programming', 'mathematics']"
15693,1569300,Getting a Jump on Crime,22,"['breadth-first search', 'geometry', 'graph theory', 'graph traversal', 'physics']"
15694,1569400,Go with the Flow,17,['bruteforcing']
15695,1569500,Panda Preserve,26,"['geometry', 'line segment intersection check', 'point in non-convex polygon check', 'voronoi diagram']"
15696,1569600,Single Cut of Failure,22,[]
15697,1569700,Triangles,22,"['data structures', 'dynamic programming', 'prefix sum', 'segment tree', 'sweeping']"
15698,1569800,Uncrossed Knight’s Tour,29,"['bruteforcing', 'dynamic programming', 'dynamic programming using connection profile', 'precomputation']"
15699,1569900,Wireless is the New Fiber,17,"['greedy', 'sorting', 'tree']"
15700,1570000,타일 채우기 4,2,"['arithmetic', 'mathematics']"
15701,1570100,순서쌍,4,"['mathematics', 'number theory']"
15702,1570200,중간고사 채점,6,"['implementation', 'sorting']"
15703,1570300,주사위 쌓기,12,['greedy']
15704,1570400,백준 마라톤 대회,16,"['binary search', ""dijkstra's"", 'graph theory']"
15705,1570500,단어 찾기,9,['bruteforcing']
15706,1570600,블록 게임,0,[]
15707,1570700,exceed or not,6,['arbitrary precision / big integers']
15708,1570800,미네크래프트,16,"['data structures', 'greedy', 'priority queue']"
15709,1570900,정기검진,16,"[""dijkstra's"", 'graph theory']"
15710,1571000,xor 게임,11,"['exponentiation by squaring', 'mathematics']"
15711,1571100,환상의 짝꿍,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
15712,1571200,등비수열,14,"['exponentiation by squaring', 'mathematics']"
15713,1571300,오리날다,18,"['data structures', ""dijkstra's"", 'dynamic programming', 'graph theory', 'segment tree']"
15714,1571400,열려라 참깨,18,[]
15715,1571500,배열과 gcd,20,"['inclusion and exclusion', 'mathematics', 'number theory']"
15716,1571600,딸기당근수박참외메론게임,21,"['binary search', 'implementation', 'mathematics']"
15717,1571700,떡파이어,11,"['exponentiation by squaring', 'mathematics']"
15718,1571800,돌아온 떡파이어,18,"['combinatorics', 'chinese remainder theorem', 'lucas theorem', 'mathematics', 'number theory']"
15719,1571900,중복된 숫자,6,"['implementation', 'mathematics']"
15720,1572000,카우버거,6,"['arithmetic', 'greedy', 'implementation', 'mathematics', 'sorting']"
15721,1572100,번데기,5,"['bruteforcing', 'implementation', 'simulation']"
15722,1572200,빙글빙글 스네일,5,['implementation']
15723,1572300,n단 논법,10,"['floyd–warshall', 'graph theory', 'graph traversal']"
15724,1572400,주지수,10,"['dynamic programming', 'prefix sum']"
15725,1572500,다항함수의 미분,7,"['calculus', 'case work', 'mathematics', 'parsing', 'string']"
15726,1572600,이칙연산,2,"['arithmetic', 'mathematics']"
15727,1572700,조별과제를 하려는데 조장이 사라졌다,1,"['arithmetic', 'mathematics']"
15728,1572800,에리 - 카드,8,"['bruteforcing', 'implementation']"
15729,1572900,방탈출,9,['greedy']
15730,1573000,수영장 사장님,16,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
15731,1573100,Python 문법,17,"['dynamic programming', 'prefix sum']"
15732,1573200,도토리 숨기기,14,['binary search']
15733,1573300,나는 누구인가,1,['implementation']
15734,1573400,명장 남정훈,3,"['arithmetic', 'implementation', 'mathematics']"
15735,1573500,삼각,8,['mathematics']
15736,1573600,청기 백기,7,"['mathematics', 'number theory']"
15737,1573700,일반 그래프 매칭,24,['general matching']
15738,1573800,뒤집기,5,"['implementation', 'mathematics']"
15739,1573900,매직스퀘어,6,['implementation']
15740,1574000,A+B - 9,1,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
15741,1574100,일반 그래프 최대 가중치 매칭,28,['general matching']
15742,1574200,Slingshot,22,"['value / coordinate compression', 'data structures', 'offline queries', 'segment tree', 'sweeping']"
15743,1574300,New Barns,21,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'lowest common ancestor', 'offline queries', 'tree']"
15744,1574400,Cow Gymnasts,23,"['combinatorics', 'mathematics', 'number theory']"
15745,1574500,Snow Boots,17,"['data structures', 'disjoint set', 'offline queries', 'set / map by trees']"
15746,1574600,Directory Traversal,17,"['dynamic programming', 'dynamic programming on trees', 'tree']"
15747,1574700,Taming the Herd,16,['dynamic programming']
15748,1574800,Rest Stops,11,"['greedy', 'sorting']"
15749,1574900,Snow Boots,12,['dynamic programming']
15750,1575000,Teleportation,17,"['mathematics', 'sweeping']"
15751,1575100,Teleportation,3,"['arithmetic', 'implementation', 'mathematics']"
15752,1575200,Hoofball,11,"['graph theory', 'graph traversal', 'sorting']"
15753,1575300,Taming the Herd,10,['implementation']
15754,1575400,Out of Sorts,21,"['ad-hoc', 'sorting']"
15756,1575600,Disruption,20,"['data structures', 'disjoint set', 'smaller to larger technique', 'tree']"
15757,1575700,Out of Sorts,20,"['data structures', 'segment tree']"
15758,1575800,Milking Order,17,"['binary search', 'data structures', 'graph theory', 'priority queue', 'topological sorting']"
15759,1575900,Talent Show,18,"['dynamic programming', 'knapsack', 'parametric search', 'sorting']"
15760,1576000,Out of Sorts,14,"['greedy', 'sorting']"
15761,1576100,Lemonade Line,7,"['greedy', 'sorting']"
15762,1576200,Multiplayer Moo,18,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by trees']"
15763,1576300,Team Tic Tac Toe,7,"['bruteforcing', 'implementation']"
15764,1576400,Milking Order,10,"['case work', 'greedy', 'implementation']"
15765,1576500,Family Tree,12,"['case work', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation', 'lowest common ancestor', 'tree']"
15766,1576600,New Home,25,"['data structures', 'offline queries', 'segment tree']"
15767,1576700,Circle selection,27,"['ad-hoc', 'geometry', 'sorting']"
15768,1576800,Duathlon,24,"['articulation points and bridges', 'biconnected component', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
15769,1576900,PuyoPuyo,17,"['constructive', 'implementation']"
15770,1577000,QueryreuQ,14,['dynamic programming']
15771,1577100,Recipe,22,"['convex hull trick', 'data structures', 'segment tree']"
15772,1577200,Segmentation,13,"['case work', 'data structures', 'set / map by hashing', 'implementation']"
15773,1577300,Touch The Sky,22,"['data structures', 'greedy', 'priority queue']"
15774,1577400,United States Of Eurasia,24,"['binary search', 'geometry', 'parametric search', 'rotating calipers']"
15775,1577500,Voronoi Diagram,18,"[""dijkstra's"", 'graph theory']"
15776,1577600,Winter Olympic Games,20,"['string', 'suffix array and lcp array']"
15777,1577700,Xtreme NP-hard Problem?!,22,"['ad-hoc', 'case work', 'graph theory', 'meet in the middle']"
15778,1577800,Yut Nori,17,"['implementation', 'simulation']"
15779,1577900,Zigzag,6,"['bruteforcing', 'implementation']"
15780,1578000,멀티탭 충분하니?,3,"['arithmetic', 'mathematics']"
15781,1578100,헬멧과 조끼,3,"['arithmetic', 'implementation', 'mathematics']"
15782,1578200,Calculate! 2,19,"['data structures', 'euler tour technique', 'graph theory', 'graph traversal', 'segment tree with lazy propagation', 'segment tree', 'tree']"
15783,1578300,세진 바이러스,17,"['graph theory', 'strongly connected component']"
15784,1578400,질투진서,4,['implementation']
15785,1578500,낙하산,22,[]
15786,1578600,Send me the money,5,"['implementation', 'string']"
15787,1578700,기차가 어둠을 헤치고 은하수를,9,"['bitmask', 'implementation']"
15788,1578800,밸런스 스톤,7,['implementation']
15789,1578900,CTP 왕국은 한솔 왕국을 이길 수 있을까?,12,"['data structures', 'disjoint set', 'graph theory', 'sorting']"
15790,1579000,최종병기 활,13,"['binary search', 'parametric search']"
15791,1579100,세진이의 미팅,15,"['combinatorics', ""fermat's little theorem"", 'mathematics', 'number theory']"
15792,1579200,A/B - 2,5,"['arbitrary precision / big integers', 'arithmetic', 'implementation', 'mathematics']"
15793,1579300,Anagrams,16,"['maximum flow', 'minimum cost maximum flow']"
15794,1579400,Count,9,"['binary search', 'data structures', 'sorting', 'set / map by trees', 'two-pointer']"
15795,1579500,Gift,0,[]
15796,1579600,Magic,0,[]
15797,1579700,Particles,0,[]
15798,1579800,Six,0,[]
15799,1579900,Camel,0,[]
15800,1580000,Experience,0,[]
15801,1580100,Game,0,[]
15802,1580200,타노스,0,['implementation']
15803,1580300,PLAYERJINAH’S BOTTLEGROUNDS,6,"['geometry', 'mathematics']"
15804,1580400,저거 못 타면 지각이야!!,14,[]
15805,1580500,트리 나라 관광 가이드,10,"['graph theory', 'graph traversal', 'tree']"
15806,1580600,영우의 기숙사 청소,16,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
15807,1580700,*빛*영*우*,16,"['dynamic programming', 'prefix sum']"
15808,1580800,주말 여행 계획,16,"[""dijkstra's"", 'graph theory']"
15809,1580900,전국시대,13,"['data structures', 'disjoint set']"
15810,1581000,풍선 공장,9,"['binary search', 'parametric search']"
15811,1581100,복면산?!,12,"['backtracking', 'bruteforcing']"
15812,1581200,침략자 진아,9,['bruteforcing']
15813,1581300,너의 이름은 몇 점이니?,4,"['implementation', 'string']"
15814,1581400,야바위 대장,4,"['implementation', 'string']"
15815,1581500,천재 수학자 성필,8,"['data structures', 'stack']"
15816,1581600,퀘스트 중인 모험가,17,"['value / coordinate compression', 'data structures', 'segment tree']"
15817,1581700,배수 공사,10,"['dynamic programming', 'knapsack']"
15818,1581800,오버플로우와 모듈러,3,"['arithmetic', 'mathematics']"
15819,1581900,너의 핸들은,5,"['sorting', 'string']"
15820,1582000,맞았는데 왜 틀리죠?,3,['implementation']
15821,1582100,낚이고 낚아라,8,"['geometry', 'pythagoras theorem', 'sorting']"
15822,1582200,Ah-Choo!,14,['dynamic programming']
15823,1582300,카드 팩 구매하기,14,"['binary search', 'data structures', 'two-pointer']"
15824,1582400,너 봄에는 캡사이신이 맛있단다,14,"['combinatorics', 'exponentiation by squaring', 'mathematics', 'sorting']"
15825,1582500,System Call,18,['mathematics']
15826,1582600,Namje Adventure,22,"['bitmask', 'divide and conquer', 'exponentiation by squaring', 'floyd–warshall', 'graph theory', 'mathematics']"
15827,1582700,그날의 너,17,"['calculus', 'implementation', 'mathematics', 'tree']"
15828,1582800,Router,7,"['data structures', 'queue']"
15829,1582900,Hashing,4,"['hashing', 'string']"
15830,1583000,싱크홀,5,"['implementation', 'physics']"
15831,1583100,준표의 조약돌,12,['two-pointer']
15832,1583200,Aku Negaraku,7,[]
15833,1583300,Cheap Deliveries,20,"['bitmask', ""dijkstra's"", 'graph theory', 'travelling salesman problem']"
15834,1583400,Eli's Curious Mind,10,['dynamic programming']
15835,1583500,Explorace,12,"['graph theory', 'minimum spanning tree']"
15836,1583600,Matrix Multiplication Calculator,6,"['implementation', 'linear algebra', 'mathematics']"
15837,1583700,Sum of Subrectangle Areas,8,"['arbitrary precision / big integers', 'mathematics']"
15838,1583800,Wak Sani Satay,4,"['arithmetic', 'implementation', 'mathematics']"
15839,1583900,Stroop Effect,0,[]
15840,1584000,Super Ball,0,[]
15841,1584100,Virus Outbreak,4,"['arbitrary precision / big integers', 'dynamic programming']"
15842,1584200,Koala Game,23,"['ad-hoc', 'binary search', 'divide and conquer', 'implementation']"
15843,1584300,Travelling Merchant,20,"['floyd–warshall', 'graph theory', 'parametric search']"
15844,1584400,Land of the Rainbow Gold,23,"['data structures', 'euler characteristic (χ=v-e+f)', 'geometry', 'persistent segment tree', 'segment tree']"
15845,1584500,Winning ICPC,4,['implementation']
15846,1584600,Travelling Businessmen Problem,0,[]
15847,1584700,Non-Interactive Guessing Number,17,['implementation']
15848,1584800,Make a Forest,15,"['data structures', 'greedy', 'priority queue', 'sorting']"
15849,1584900,Parks of Jakarta,0,[]
15850,1585000,Random Number Generator,17,"['dynamic programming', 'mathematics', 'probability theory']"
15851,1585100,National Disaster: Two Towers,25,[]
15852,1585200,ANTS,19,"['dynamic programming', 'dynamic programming on trees', 'lowest common ancestor', 'tree', 'tree compression']"
15853,1585300,XEN 3166,20,"['data structures', 'greedy', 'priority queue', 'string']"
15854,1585400,Meeting,13,['greedy']
15855,1585500,Permutation,23,"['chinese remainder theorem', 'mathematics', 'number theory', 'permutation cycle decomposition']"
15856,1585600,Sacred Scarecrows,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'inclusion and exclusion']"
15858,1585800,Simple Arithmetic,3,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
15859,1585900,Citations,0,[]
15860,1586000,Ninety-nine,8,"['game theory', 'randomization']"
15861,1586100,Love Polygon,19,[]
15862,1586200,Martian DNA,14,"['binary search', 'two-pointer']"
15863,1586300,Worm Worries,25,"['binary search', 'divide and conquer', 'randomization', 'ternary search']"
15864,1586400,Alternating Current,25,"['ad-hoc', 'case work', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'sliding window']"
15865,1586500,Genetics,0,[]
15866,1586600,Paths,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory']"
15867,1586700,Subway,25,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'greedy', 'smaller to larger technique', 'tree']"
15868,1586800,Yule Lads,21,"['mathematics', 'möbius inversion', 'number theory']"
15869,1586900,IP over Avian Carriers,26,"['ad-hoc', 'bruteforcing', 'constructive', 'mathematics', 'precomputation']"
15870,1587000,Nordic Camping,21,"['ad-hoc', 'binary search', 'data structures', 'deque', 'dynamic programming', 'prefix sum']"
15871,1587100,French Fries,0,[]
15872,1587200,Mysterious Array,21,"['data structures', 'greedy', 'segment tree', 'sweeping', 'set / map by trees']"
15873,1587300,공백 없는 A+B,2,"['arithmetic', 'case work', 'mathematics']"
15874,1587400,Caesar Cipher,4,"['implementation', 'string']"
15875,1587500,Pineapple Farming,17,"['data structures', 'disjoint set', 'sorting']"
15876,1587600,Binary Counting,6,[]
15877,1587700,Apples and Bananas,12,"['dynamic programming', 'game theory']"
15878,1587800,Pineapple Pizza,16,"['geometry', 'sliding window']"
15879,1587900,Edge Coloring,21,"['gaussian elimination', 'graph theory', 'graph traversal', 'linear algebra', 'mathematics']"
15880,1588000,Turf Wars,21,"['2-sat', 'graph theory', 'strongly connected component']"
15881,1588100,Pen Pineapple Apple Pen,5,"['greedy', 'string']"
15882,1588200,Line of Bentham,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
15883,1588300,First In Last Out,11,"['bruteforcing', 'implementation', 'mathematics']"
15885,1588500,고장난 시계,5,['mathematics']
15886,1588600,내 선물을 받아줘 2,8,"['graph theory', 'string']"
15887,1588700,욱제는 결벽증이야!!,6,"['constructive', 'implementation', 'sorting']"
15888,1588800,정답은 이수근이야!!,9,"['bruteforcing', 'mathematics']"
15889,1588900,호 안에 수류탄이야!!,8,"['greedy', 'sorting', 'sweeping']"
15890,1589000,전국 대학생 프로그래밍 대회 동아리 연합 여름 대회 2018,0,[]
15891,1589100,스타트링크 사무실을 파헤쳐보자,0,[]
15892,1589200,사탕 줍는 로봇,17,['maximum flow']
15893,1589300,가장 긴 공통부분 팰린드롬,22,"['hashing', ""manacher's"", 'palindrome tree', 'string', 'tree']"
15894,1589400,수학은 체육과목 입니다,3,"['arithmetic', 'mathematics']"
15896,1589600,&+ +&,20,"['mathematics', 'sorting', 'two-pointer']"
15897,1589700,잘못 구현한 에라토스테네스의 체,14,"['mathematics', 'number theory']"
15898,1589800,피아의 아틀리에 ~신비한 대회의 연금술사~,15,"['bruteforcing', 'implementation']"
15899,1589900,트리와 색깔,19,"['data structures', 'euler tour technique', 'merge sort tree', 'segment tree', 'sorting', 'tree']"
15900,1590000,나무 탈출,10,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
15901,1590100,소각로,20,"['data structures', 'implementation', 'segment tree', 'set / map by trees']"
15902,1590200,Split and Merge,20,"['combinatorics', 'dynamic programming', 'mathematics']"
15903,1590300,카드 합체 놀이,10,"['data structures', 'greedy', 'priority queue']"
15904,1590400,UCPC는 무엇의 약자일까?,6,"['greedy', 'string']"
15905,1590500,스텔라(STELLA)가 치킨을 선물했어요,6,"['implementation', 'sorting']"
15906,1590600,변신 이동 게임,15,"[""dijkstra's"", 'graph theory']"
15907,1590700,Acka의 리듬 세상,16,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
15908,1590800,복구,19,"['binary search', 'dynamic programming', 'prefix sum']"
15909,1590900,토르의 여행,17,['smaller to larger technique']
15910,1591000,바나나나빠나나,15,['dynamic programming']
15911,1591100,동전,17,"['mathematics', 'probability theory']"
15912,1591200,우주선 만들기,14,['dynamic programming']
15913,1591300,가위 바위 보 999,0,[]
15915,1591500,가위 바위 보 1002,0,[]
15916,1591600,가희는 그래플러야!!,11,"['geometry', 'line segment intersection check', 'mathematics']"
15917,1591700,노솔브 방지문제야!!,3,"['implementation', 'mathematics']"
15918,1591800,랭퍼든 수열쟁이야!!,11,['backtracking']
15919,1591900,사자는 여행왕이야!!,13,['dynamic programming']
15920,1592000,선로에 마네킹이야!!,5,"['implementation', 'simulation']"
15921,1592100,수찬은 마린보이야!!,3,['mathematics']
15922,1592200,아우으 우아으이야!!,11,['sweeping']
15923,1592300,욱제는 건축왕이야!!,3,"['geometry', 'implementation', 'mathematics']"
15924,1592400,욱제는 사과팬이야!!,11,['dynamic programming']
15925,1592500,욱제는 정치쟁이야!!,10,['implementation']
15926,1592600,현욱은 괄호왕이야!!,12,"['data structures', 'stack']"
15927,1592700,회문은 회문아니야!!,11,"['ad-hoc', 'string']"
15928,1592800,Growing Trees,18,"['dynamic programming', 'dynamic programming on trees', 'ternary search', 'tree']"
15929,1592900,The Sprawl,22,"['data structures', 'geometry', 'graph theory', 'minimum spanning tree', 'segment tree']"
15930,1593000,Baby Seokhwan,25,"['data structures', 'persistent segment tree', 'segment tree']"
15931,1593100,풀 하우스,11,['bruteforcing']
15932,1593200,배열과 연산,0,[]
15933,1593300,행렬 곱셈,17,"['eulerian path / circuit', 'graph theory']"
15934,1593400,도시 계획,18,['bipartite matching']
15935,1593500,새로운 언어,0,[]
15938,1593800,더위 피하기,13,"['dynamic programming', 'graph theory', 'graph traversal']"
15939,1593900,쉬운 최단경로 문제,24,"['ad-hoc', 'case work', 'geometry', 'point in convex polygon check', 'point in non-convex polygon check', 'prefix sum', 'two-pointer']"
15940,1594000,네트워크 해킹,22,"['dynamic programming', 'dynamic programming on trees', 'tree']"
15941,1594100,TV 동물 농장,25,"['constructive', 'maximum flow', 'mathematics', 'minimum cost maximum flow']"
15942,1594200,Thinking Heap,14,"['constructive', 'greedy']"
15943,1594300,parentheses recover,28,"['ad-hoc', 'dynamic programming']"
15944,1594400,성공,19,"['0-1 bfs', ""dijkstra's"", 'graph theory', 'graph traversal']"
15945,1594500,Make Similar,18,['mathematics']
15946,1594600,피아의 아틀리에 ~신비한 생명의 연금술사~,23,"['data structures', 'disjoint set', 'divide and conquer', 'graph theory', 'offline dynamic connectivity', 'offline queries']"
15947,1594700,아기 석환 뚜루루 뚜루,5,"['case work', 'implementation']"
15948,1594800,간단한 문제,19,"['ad-hoc', 'mathematics']"
15949,1594900,Piet,17,"['graph theory', 'graph traversal', 'implementation']"
15953,1595300,상금 헌터,3,"['arithmetic', 'implementation', 'mathematics']"
15954,1595400,인형들,10,"['bruteforcing', 'mathematics']"
15955,1595500,부스터,19,"['data structures', 'disjoint set', 'offline queries', 'sorting']"
15956,1595600,숏코딩,21,"['case work', 'data structures', 'disjoint set', 'graph theory', 'implementation', 'parsing', 'string']"
15957,1595700,음악 추천,22,"['binary search', 'data structures', 'euler tour technique', 'parallel binary search', 'segment tree', 'tree']"
15958,1595800,프로도의 100일 준비,23,"['convex hull trick', 'dynamic programming']"
15961,1596100,회전 초밥,12,"['sliding window', 'two-pointer']"
15962,1596200,새로운 시작,1,['implementation']
15963,1596300,CASIO,2,['implementation']
15964,1596400,이상한 기호,1,"['arithmetic', 'mathematics', 'implementation']"
15965,1596500,K번째 소수,9,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
15966,1596600,군계일학,10,['dynamic programming']
15967,1596700,에바쿰,17,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
15968,1596800,물병 잡기,19,['binary search']
15969,1596900,행복,4,"['arithmetic', 'implementation', 'mathematics']"
15970,1597000,화살표 그리기,7,"['bruteforcing', 'sorting']"
15971,1597100,두 로봇,12,"['breadth-first search', 'graph theory', 'graph traversal']"
15972,1597200,물탱크,19,"['breadth-first search', 'data structures', ""dijkstra's"", 'graph theory', 'graph traversal', 'priority queue']"
15973,1597300,두 박스,10,"['case work', 'geometry', 'implementation', 'mathematics']"
15974,1597400,공룡 발자국,23,"['dynamic programming', 'geometry']"
15975,1597500,화살표 그리기,8,['sorting']
15976,1597600,XCorr,13,"['binary search', 'mathematics', 'prefix sum']"
15977,1597700,조화로운 행렬,22,"['data structures', 'divide and conquer', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'multidimensional segment tree', 'segment tree']"
15978,1597800,족보,24,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
15979,1597900,스승님 찾기,9,"['ad-hoc', 'euclidean algorithm', 'mathematics', 'number theory']"
15980,1598000,명상 방해꾼,11,"['bruteforcing', 'implementation']"
15981,1598100,상자 열기,16,"['bitmask', 'constructive', 'mathematics']"
15982,1598200,국제 소 줄서기 사진 콘테스트,18,"['data structures', 'priority queue', 'set / map by trees']"
15983,1598300,순간이동 발판,20,"['chinese remainder theorem', ""dijkstra's"", 'extended euclidean algorithm', 'graph theory', 'mathematics', 'number theory']"
15984,1598400,유물 도둑,21,"['breadth-first search', 'graph theory', 'graph traversal']"
15985,1598500,모든 결말을 보고 싶어,0,[]
15986,1598600,마법 목걸이,21,"['data structures', 'greedy', 'segment tree', 'sparse table']"
15987,1598700,팀 빌딩,19,"['data structures', 'disjoint set']"
15988,1598800,"1, 2, 3 더하기 3",9,['dynamic programming']
15989,1598900,"1, 2, 3 더하기 4",10,['dynamic programming']
15990,1599000,"1, 2, 3 더하기 5",9,['dynamic programming']
15991,1599100,"1, 2, 3 더하기 6",10,['dynamic programming']
15992,1599200,"1, 2, 3 더하기 7",10,['dynamic programming']
15993,1599300,"1, 2, 3 더하기 8",10,['dynamic programming']
15994,1599400,엘리베이터 2,21,"['extended euclidean algorithm', 'mathematics', 'number theory', 'square root decomposition']"
15995,1599500,잉여역수 구하기,4,"['bruteforcing', 'mathematics', 'modular multiplicative inverse', 'number theory']"
15996,1599600,팩토리얼 나누기,7,"['mathematics', 'number theory']"
15997,1599700,승부 예측,13,"['bruteforcing', 'implementation']"
15998,1599800,카카오머니,13,['mathematics']
15999,1599900,뒤집기,13,"['exponentiation by squaring', 'mathematics']"
16000,1600000,섬,19,"['articulation points and bridges', 'graph theory', 'graph traversal']"
16001,1600100,보물 상자 열기,21,['ad-hoc']
16002,1600200,조용한 생활관 만들기,26,"['convex hull trick', 'data structures', 'dynamic programming', 'dynamic programming on trees', 'smaller to larger technique', 'tree']"
16003,1600300,자석 장난감,25,"['현 그래프', 'graph theory']"
16004,1600400,헬리콥터,0,[]
16005,1600500,Kbin,14,"['combinatorics', 'mathematics']"
16006,1600600,Harmonic number,7,"['arbitrary precision / big integers', 'mathematics']"
16007,1600700,Shootings,0,[]
16008,1600800,Train,0,[]
16009,1600900,Or,0,[]
16010,1601000,Doubletrouble,0,[]
16011,1601100,Min Max Tree,21,"['data structures', 'heavy-light decomposition', 'segment tree with lazy propagation', 'segment tree', 'tree']"
16012,1601200,Elections,23,[]
16013,1601300,Home Coming,0,[]
16014,1601400,Parentrises,0,[]
16015,1601500,POPA,0,[]
16016,1601600,Zalmoxis,0,[]
16017,1601700,Telemarketer or not?,2,['implementation']
16018,1601800,Occupy parking,4,"['implementation', 'string']"
16019,1601900,Are we there yet?,5,"['implementation', 'mathematics', 'prefix sum']"
16020,1602000,Sunflowers,5,['implementation']
16021,1602100,Choose your own path,9,"['breadth-first search', 'graph theory', 'graph traversal']"
16022,1602200,Voronoi Villages,6,['sorting']
16023,1602300,RoboThieves,15,"['breadth-first search', 'graph theory', 'graph traversal']"
16024,1602400,Balanced Trees,19,"['dynamic programming', 'square root decomposition']"
16025,1602500,Maximum Strategic Savings,19,[]
16026,1602600,Cloud computing,16,['knapsack']
16027,1602700,Global warming,20,"['binary search', 'data structures', 'longest increasing sequence in o(n log n)', 'segment tree']"
16028,1602800,Lottery,22,"['dynamic programming', 'offline queries', 'prefix sum']"
16029,1602900,Fibonacci representations,26,"['red-black tree', 'tree']"
16030,1603000,Toys,17,"['bruteforcing', 'mathematics', 'number theory']"
16031,1603100,Triangles,0,[]
16032,1603200,Income Inequality,4,"['arithmetic', 'implementation', 'mathematics']"
16033,1603300,"Origami, or the art of folding paper",9,"['bruteforcing', 'implementation', 'simulation']"
16034,1603400,Skyscraper “MinatoHarukas”,8,['mathematics']
16035,1603500,Playoff by all the teams,12,"['backtracking', 'bruteforcing']"
16036,1603600,Floating-Point Numbers,0,[]
16037,1603700,Equilateral Triangular Fence,0,[]
16038,1603800,Expression Mining,0,[]
16039,1603900,For Programming Excellence,0,[]
16040,1604000,Cut It Out!,25,[]
16041,1604100,Double Clique,23,"['ad-hoc', 'combinatorics', 'graph theory', 'mathematics']"
16042,1604200,Flashing Fluorescents,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
16043,1604300,Missing Gnomes,15,[]
16044,1604400,Prefix Free Code,17,[]
16045,1604500,Probe Droids,26,[]
16046,1604600,Rainbow Graph,27,['matroid']
16047,1604700,Recovery,17,"['ad-hoc', 'constructive']"
16048,1604800,Red Black Tree,19,[]
16049,1604900,Winter Festival,25,"['articulation points and bridges', 'cactus', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
16050,1605000,Zoning Houses,19,"['data structures', 'segment tree']"
16051,1605100,Drawing Borders,0,[]
16052,1605200,Buildings,20,"[""burnside's lemma"", 'combinatorics', 'exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'modular multiplicative inverse', 'number theory']"
16053,1605300,Joyride,0,[]
16054,1605400,Pants On Fire,11,"['breadth-first search', 'data structures', 'depth-first search', 'floyd–warshall', 'graph theory', 'graph traversal', 'set / map by hashing', 'string', 'set / map by trees']"
16055,1605500,Perpetuum Mobile,0,[]
16056,1605600,Plug It In!,18,['bipartite matching']
16057,1605700,Water Testing,0,[]
16058,1605800,Ratatöskr,0,[]
16059,1605900,Überwatch,9,['dynamic programming']
16060,1606000,Word Clock,0,[]
16061,1606100,You Are Fired!,6,"['greedy', 'sorting']"
16062,1606200,Attack on Alpha-Zet,17,"['lowest common ancestor', 'tree']"
16063,1606300,Battle Royale,14,['geometry']
16064,1606400,Coolest Ski Route,13,"['bellman–ford', 'dynamic programming', 'floyd–warshall', 'graph theory', 'topological sorting']"
16065,1606500,Down the Pyramid,8,"['ad-hoc', 'mathematics']"
16066,1606600,Expired License,10,"['euclidean algorithm', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
16067,1606700,Fighting Monsters,9,"['dynamic programming', 'mathematics']"
16068,1606800,GPS,18,"['geometry', 'geometry; 3d']"
16069,1606900,Hyper Illuminati,10,"['bruteforcing', 'mathematics']"
16070,1607000,It’s Time for a Montage,5,['implementation']
16071,1607100,Jigsaw Puzzle,17,['implementation']
16072,1607200,Kitchen Cable Chaos,15,"['dynamic programming', 'knapsack']"
16073,1607300,Logic Puzzle,11,['implementation']
16074,1607400,Mountaineers,21,"['binary search', 'data structures', 'disjoint set', 'graph theory', 'minimum spanning tree', 'parallel binary search']"
16075,1607500,악마의 유혹,0,[]
16076,1607600,휴식이 필요해,0,[]
16077,1607700,Монгол ардын үлгэр,0,[]
16078,1607800,Хаалт,0,[]
16079,1607900,Тоглоом,0,[]
16080,1608000,And,7,['dynamic programming']
16081,1608100,Жагсаал,12,"['data structures', 'stack']"
16082,1608200,Гоё тоо,0,[]
16083,1608300,Хоёртын хайлтын мод,0,[]
16084,1608400,Бас нэгэн Графын бодлого,21,['string']
16085,1608500,Гэмт хэрэг,11,['geometry']
16086,1608600,Дайн,7,"['ad-hoc', 'mathematics', 'number theory']"
16087,1608700,It’s a Jungle Out There,0,[]
16088,1608800,Finding Your Coach,0,[]
16089,1608900,Pipe Hype,0,[]
16090,1609000,Twenty Thousand Leagues Under the Sea,0,[]
16091,1609100,Cruise Quail,0,[]
16092,1609200,Willy Feels Guilty,0,[]
16093,1609300,The Total is Right,0,[]
16094,1609400,Lush Gears,0,[]
16095,1609500,Amateur Radio Network,0,[]
16096,1609600,Life on a Torus,0,[]
16097,1609700,Grumpy Groundhogs in Gridland,0,[]
16098,1609800,Commuting Mathematicians,0,[]
16099,1609900,Larger Sport Facility,0,[]
16100,1610000,Andrew’s Amazing Architecture,15,"['greedy', 'two-pointer']"
16101,1610100,Banner,0,[]
16102,1610200,Catan’s Longest Road,11,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'parsing', 'string']"
16103,1610300,Drawn and Quartered,4,"['ad-hoc', 'implementation', 'string']"
16104,1610400,Extending Rock-Paper-Scissors,5,['constructive']
16105,1610500,Fair Share,19,"['case work', 'geometry', 'implementation', 'rotating calipers', 'sorting', 'two-pointer']"
16106,1610600,Grievous Loss of Data,22,"['graph theory', 'greedy']"
16107,1610700,Hiding Merlin,13,['dynamic programming']
16108,1610800,Injecting DNA,18,[]
16109,1610900,Judge’s Mistake,14,"['graph theory', 'greedy']"
16110,1611000,Kiwis vs Kangaroos II,14,['constructive']
16111,1611100,Last Casino,0,[]
16112,1611200,5차 전직,9,"['greedy', 'sorting']"
16113,1611300,시그널,9,"['implementation', 'string']"
16114,1611400,화살표 연산자,8,"['case work', 'implementation']"
16115,1611500,팬이에요,13,"['geometry', 'sorting']"
16116,1611600,작은 큐브러버,15,"['bruteforcing', 'implementation']"
16117,1611700,실버런,15,['dynamic programming']
16118,1611800,달빛 여우,15,"[""dijkstra's"", 'graph theory']"
16119,1611900,Cherrypick,19,"['data structures', 'dynamic programming', 'sparse table']"
16120,1612000,PPAP,12,"['data structures', 'greedy', 'stack', 'string']"
16121,1612100,사무실 이전,21,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'dynamic programming', 'dynamic programming on trees', 'tree']"
16122,1612200,Unary,17,"['combinatorics', ""fermat's little theorem"", 'mathematics', 'number theory']"
16123,1612300,피타고라스 쌍,24,"['mathematics', 'number theory']"
16124,1612400,나는 행복합니다,23,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
16125,1612500,영점사격,19,['geometry']
16126,1612600,동아리방 확장,20,"['bipartite matching', 'maximum flow']"
16127,1612700,미생물 키우기,24,"['directed minimum spanning tree', 'graph theory']"
16128,1612800,스눕시티,20,"['divide and conquer', 'mathematics']"
16129,1612900,뚜루루 뚜루,20,"['backtracking', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'mathematics']"
16130,1613000,벌점 (DemeritPoints),5,"['arithmetic', 'implementation', 'mathematics']"
16131,1613100,기숙사 서바이벌 (Dormvival Games),7,['implementation']
16132,1613200,그룹 나누기 (Subset),12,"['dynamic programming', 'knapsack']"
16133,1613300,공학용 계산기 (Calculator),20,"['data structures', 'implementation', 'parsing', 'stack', 'string']"
16134,1613400,조합 (Combination),15,"['combinatorics', 'exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'modular multiplicative inverse', 'number theory']"
16135,1613500,OBB(Oriented bounding box),14,"['linear algebra', 'mathematics']"
16136,1613600,준하의 정수론 과제 (Divmaster),18,"['data structures', 'mathematics', 'number theory', 'primality test', 'segment tree', 'sieve of eratosthenes']"
16137,1613700,견우와 직녀,14,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
16138,1613800,수강신청,23,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming']"
16139,1613900,인간-컴퓨터 상호작용,10,['prefix sum']
16140,1614000,정수론과 응용,19,"['euclidean algorithm', 'mathematics', 'number theory']"
16141,1614100,정수론과 응용: 레시테이션,23,"['mathematics', 'möbius inversion', 'number theory']"
16142,1614200,게임이론,20,"['game theory', 'graph theory', 'graph traversal']"
16143,1614300,선형대수학과 응용,19,"['breadth-first search', 'graph theory', 'graph traversal']"
16144,1614400,드로잉,12,['mathematics']
16145,1614500,Tide Pods,5,['implementation']
16146,1614600,Blowin’ in the Wind,0,[]
16147,1614700,Racial Discrimination,0,[]
16148,1614800,Non-Violent Protests,6,['sorting']
16149,1614900,Peace Sign,0,[]
16150,1615000,Gun Control,0,[]
16151,1615100,별자리,19,"['value / coordinate compression', 'data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque', 'implementation', 'queue', 'segment tree', 'sliding window', 'set / map by trees']"
16152,1615200,트리와 가희,20,"['data structures', 'tree']"
16153,1615300,비트와 가희,18,"['dynamic programming', 'meet in the middle', 'prefix sum']"
16154,1615400,배열과 가희,20,"['inclusion and exclusion', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
16155,1615500,업힐과 가희,10,"['euclidean algorithm', 'geometry', 'mathematics', 'number theory']"
16156,1615600,장애물 달리기,17,"[""dijkstra's"", 'graph theory']"
16157,1615700,블로그,17,['dynamic programming']
16158,1615800,회식구호,14,"['mathematics', 'sweeping']"
16159,1615900,전광판의 숫자,10,"['combinatorics', 'implementation', 'mathematics', 'string']"
16160,1616000,이진 트리와 수열,21,"['binary search', 'hashing']"
16161,1616100,가장 긴 증가하는 팰린드롬 부분수열,14,"['ad-hoc', 'implementation']"
16162,1616200,가희와 3단 고음,7,['greedy']
16163,1616300,#15164번_제보,16,"[""manacher's"", 'string']"
16164,1616400,Möbius Madness,24,"['mathematics', 'number theory']"
16165,1616500,걸그룹 마스터 준석이,8,"['data structures', 'set / map by hashing']"
16166,1616600,서울의 지하철,9,"['breadth-first search', 'bruteforcing', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'set / map by trees']"
16167,1616700,A Great Way,13,"[""dijkstra's"", 'graph theory']"
16168,1616800,퍼레이드,12,"['data structures', 'disjoint set', 'eulerian path / circuit', 'graph theory', 'graph traversal']"
16169,1616900,수행 시간,12,"['dynamic programming', 'graph theory', 'topological sorting']"
16170,1617000,오늘의 날짜는?,1,['implementation']
16171,1617100,나는 친구가 적다 (Small),5,['string']
16172,1617200,나는 친구가 적다 (Large),4,"['string', 'implementation']"
16173,1617300,점프왕 쩰리 (Small),6,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
16174,1617400,점프왕 쩰리 (Large),10,"['breadth-first search', 'depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
16175,1617500,General Election,3,['implementation']
16176,1617600,Liar Game,14,"['exponentiation by squaring', 'mathematics', 'number theory']"
16177,1617700,Why is Math Book So Sad?,0,[]
16178,1617800,Noodle Team Contest,0,[]
16179,1617900,Palapa Number,6,"['combinatorics', 'mathematics']"
16180,1618000,New House,6,['bruteforcing']
16181,1618100,Coloring Roads,22,"['data structures', 'heavy-light decomposition', 'segment tree', 'tree']"
16182,1618200,Dumae,20,"['data structures', 'graph theory', 'greedy', 'priority queue', 'topological sorting']"
16183,1618300,Electronic Circuit,21,"['ad-hoc', '현 그래프', 'graph theory', 'tree decomposition']"
16184,1618400,Fake Plastic Trees,15,"['constructive', 'recursion']"
16185,1618500,Fascination Street,21,['dynamic programming']
16186,1618600,Fractions,11,"['bruteforcing', 'mathematics']"
16187,1618700,Game on Plane,18,"['game theory', 'sprague–grundy theorem']"
16188,1618800,Histogram Sequence,20,['binary search']
16189,1618900,Repetitive Palindrome,5,"['ad-hoc', 'string']"
16190,1619000,Rising Sun,13,"['geometry', 'mathematics']"
16191,1619100,Utilitarianism,23,"['aliens trick', 'binary search', 'dynamic programming', 'dynamic programming on trees', 'tree']"
16192,1619200,Voronoi Diagram Returns,10,"['bruteforcing', 'geometry', 'pythagoras theorem', 'voronoi diagram']"
16193,1619300,차이를 최대로 2,14,"['greedy', 'mathematics', 'sorting']"
16194,1619400,카드 구매하기 2,10,['dynamic programming']
16195,1619500,"1, 2, 3 더하기 9",10,"['dynamic programming', 'prefix sum']"
16196,1619600,중국 신분증 번호,10,"['implementation', 'string']"
16197,1619700,두 동전,12,"['backtracking', 'breadth-first search', 'graph theory', 'graph traversal']"
16198,1619800,에너지 모으기,10,"['backtracking', 'bruteforcing']"
16199,1619900,나이 계산하기,2,"['arithmetic', 'implementation', 'mathematics']"
16200,1620000,해커톤,7,"['greedy', 'sorting']"
16201,1620100,발코니 공사,15,"['exponentiation by squaring', 'implementation', 'mathematics']"
16202,1620200,MST 게임,12,"['graph theory', 'minimum spanning tree']"
16203,1620300,까다로운 수 찾기,0,[]
16204,1620400,카드 뽑기,2,"['arithmetic', 'implementation', 'mathematics']"
16205,1620500,변수명,5,"['implementation', 'string']"
16206,1620600,롤케이크,10,['greedy']
16207,1620700,직사각형,14,"['greedy', 'sorting']"
16208,1620800,귀찮음,6,"['greedy', 'mathematics', 'sorting']"
16209,1620900,수열 섞기,13,['greedy']
16210,1621000,DSHS Bank,12,"['prefix sum', 'sorting']"
16211,1621100,백채원,14,"[""dijkstra's"", 'graph theory']"
16212,1621200,정열적인 정렬,6,['sorting']
16213,1621300,dgeu-learning,19,"['binary search', 'data structures', 'disjoint set', 'parallel binary search']"
16214,1621400,N과 M,20,"['euler totient function', 'mathematics', 'number theory']"
16215,1621500,Build a Wall!,22,"['geometry', 'parametric search']"
16216,1621600,우산,23,"['dynamic programming', 'dynamic programming on trees', 'tree']"
16217,1621700,옥토끼나라,21,"['depth-first search', 'graph theory', 'graph traversal']"
16218,1621800,힘 겨루기,6,['implementation']
16219,1621900,정렬하기,12,['case work']
16220,1622000,회의,16,"['data structures', 'greedy', 'priority queue', 'segment tree']"
16221,1622100,모독,17,"['data structures', 'segment tree']"
16222,1622200,Celtic Knots,26,"['dynamic programming', 'dynamic programming using connection profile']"
16223,1622300,클러스터,23,"['convex hull trick', 'data structures', 'dynamic programming', 'multidimensional segment tree', 'segment tree']"
16224,1622400,Path Equality,23,"['constructive', 'linear algebra', 'mathematics']"
16225,1622500,제271회 웰노운컵,20,"['data structures', 'greedy', 'priority queue', 'sorting']"
16226,1622600,거울냥이는 죽어서 거울을 남긴다,15,"['data structures', 'implementation', 'linked list', 'set / map by trees']"
16227,1622700,의약품 수송,15,"[""dijkstra's"", 'graph theory']"
16228,1622800,GCC의 유산,13,"['data structures', 'parsing', 'stack', 'string']"
16229,1622900,반복 패턴,17,"['string', 'z']"
16230,1623000,우리는 진실을 잊고 살잖아,23,"['graph theory', 'stoer–wagner']"
16231,1623100,내가 그린 라이언 그림,25,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'smaller to larger technique', 'tree', 'set / map by trees']"
16232,1623200,없던 일처럼,23,"['data structures', 'divide and conquer', 'merge sort tree', 'segment tree', 'sorting', 'splay tree', 'tree']"
16233,1623300,수학 문제,15,['mathematics']
16234,1623400,인구 이동,11,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
16235,1623500,나무 재테크,13,"['data structures', 'implementation', 'simulation']"
16236,1623600,아기 상어,13,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
16237,1623700,이삿짐센터,7,"['greedy', 'implementation', 'mathematics']"
16238,1623800,독수리,15,"['greedy', 'sorting']"
16239,1623900,Nadan,3,"['arithmetic', 'constructive', 'mathematics']"
16240,1624000,Zamjena,15,"['data structures', 'disjoint set', 'graph theory', 'parsing', 'string']"
16241,1624100,Cipele,14,"['binary search', 'greedy', 'sorting']"
16242,1624200,Strah,20,[]
16243,1624300,Teoretičar,26,[]
16244,1624400,Spaceship,5,"['implementation', 'mathematics']"
16245,1624500,Rangers in the Bus,8,"['data structures', 'set / map by trees']"
16246,1624600,Magic Weapon,14,"['ad-hoc', 'inclusion and exclusion']"
16247,1624700,Knights and Knaves,22,['ad-hoc']
16248,1624800,Parallelepiped,22,[]
16249,1624900,Closing ceremony,0,[]
16250,1625000,Cactusophobia,20,"['biconnected component', 'cactus', 'maximum flow', 'graph theory']"
16251,1625100,Homework,0,[]
16252,1625200,Slalom,23,[]
16253,1625300,Cipher,0,[]
16254,1625400,Array Covering,26,"['aliens trick', 'binary search', 'data structures', 'dynamic programming', 'prefix sum', 'segment tree']"
16255,1625500,Martian Volleyball,4,"['implementation', 'mathematics']"
16256,1625600,Painting the Wall,0,[]
16257,1625700,Magic Artifact,0,[]
16258,1625800,Memory Manager,0,[]
16259,1625900,LISA,0,[]
16260,1626000,Very Important Persons,5,"['constructive', 'implementation']"
16261,1626100,Least Common Multiple,7,"['euclidean algorithm', 'mathematics', 'number theory']"
16262,1626200,Bad Order,0,[]
16263,1626300,Red-Black Tree,0,[]
16264,1626400,Array Study,21,"[""mo's"", 'offline queries', 'prefix sum', 'square root decomposition']"
16265,1626500,Spreadsheets,5,"['data structures', 'mathematics', 'stack']"
16266,1626600,Mortal Combat,10,['sorting']
16267,1626700,A Bit Palindromic Numbers,12,['mathematics']
16268,1626800,Tree and Polynomials,0,[]
16269,1626900,Nice Report,0,[]
16270,1627000,Small Numbers,12,"['bruteforcing', 'mathematics', 'number theory']"
16271,1627100,New Keyboard,0,[]
16272,1627200,Folding the Figure,0,[]
16273,1627300,Acute Triangles,0,[]
16274,1627400,Joining Arrays,0,[]
16275,1627500,Two Trees,23,"['data structures', 'depth-first search', 'euler tour technique', 'graph theory', 'graph traversal', 'hashing', 'parametric search', 'segment tree', 'tree']"
16276,1627600,Set Theory,16,['constructive']
16277,1627700,Similar Words,19,"['dynamic programming', 'dynamic programming on trees', 'hashing', 'tree']"
16278,1627800,Eleventh Birthday,20,[]
16279,1627900,Masha and Cactus,22,[]
16280,1628000,Satellites,23,[]
16281,1628100,To Play or not to Play,0,[]
16282,1628200,Black Chain,12,['mathematics']
16283,1628300,Farm,4,"['arithmetic', 'bruteforcing', 'mathematics']"
16284,1628400,Lucid Strings,28,"['data structures', 'hashing', 'segment tree', 'string', 'suffix array and lcp array', 'sweeping']"
16285,1628500,Matching,0,[]
16286,1628600,Panokseon,19,"['binary search', 'dynamic programming', 'prefix sum', 'two-pointer']"
16287,1628700,Parcel,16,"['dynamic programming', 'meet in the middle']"
16288,1628800,Passport Control,13,"['dynamic programming', 'greedy']"
16289,1628900,Path Embedding,0,[]
16290,1629000,Sliding Blocks,0,[]
16291,1629100,Suffix-Freeness,0,[]
16292,1629200,Three Robots,0,[]
16293,1629300,Appalling Architecture,7,"['implementation', 'physics']"
16294,1629400,Bee Problem,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
16295,1629500,Criss-Cross Cables,14,"['data structures', 'greedy', 'priority queue']"
16296,1629600,Daily Division,17,"['binary search', 'data structures', 'segment tree', 'ternary search']"
16297,1629700,Eating Everything Efficiently,16,"['dynamic programming', 'graph theory', 'topological sorting']"
16298,1629800,Floating Points,0,[]
16299,1629900,Green Light,16,['prefix sum']
16300,1630000,H to O,7,"['data structures', 'set / map by hashing', 'parsing', 'string']"
16301,1630100,Isomorphic Inversion,19,"['greedy', 'hashing', 'string', 'suffix array and lcp array']"
16302,1630200,Jurassic Jigsaw,13,"['graph theory', 'minimum spanning tree']"
16303,1630300,KALLAX Construction,15,"['dynamic programming', 'knapsack']"
16304,1630400,A Prize No One Can Win,6,['sorting']
16305,1630500,Birthday Boy,11,"['ad-hoc', 'implementation', 'parsing', 'sorting', 'string']"
16306,1630600,Cardboard Container,5,"['bruteforcing', 'mathematics', 'number theory']"
16307,1630700,Driver Disagreement,25,"['breadth-first search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal']"
16308,1630800,Entirely Unsorted Sequences,20,"['combinatorics', 'dynamic programming', 'mathematics']"
16309,1630900,Financial Planning,12,['binary search']
16310,1631000,Game Night,14,"['prefix sum', 'sliding window']"
16311,1631100,Harry the Hamster,20,"[""dijkstra's"", 'game theory', 'graph theory']"
16312,1631200,"In Case of an Invasion, Please. . .",22,"['binary search', ""dijkstra's"", 'maximum flow', 'graph theory', ""hall's theorem""]"
16313,1631300,Janitor Troubles,16,"['geometry', 'mathematics']"
16314,1631400,Kingpin Escape,19,"['constructive', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
16315,1631500,Altruistic Amphibians,19,"['dynamic programming', 'greedy']"
16316,1631600,Baby Bites,3,"['implementation', 'string']"
16317,1631700,Code Cleanups,5,['implementation']
16318,1631800,Delivery Delays,19,"['binary search', ""dijkstra's"", 'dynamic programming', 'graph theory', 'parametric search']"
16319,1631900,Explosion Exploit,17,['dynamic programming']
16320,1632000,Firing the Phaser,23,[]
16321,1632100,Game Scheduling,25,"['constructive', 'graph theory']"
16322,1632200,House Lawn,9,"['mathematics', 'parsing', 'string']"
16323,1632300,Intergalactic Bidding,11,"['arbitrary precision / big integers', 'greedy']"
16324,1632400,Jumbled String,17,['constructive']
16325,1632500,King’s Colors,18,"['combinatorics', 'inclusion and exclusion', 'mathematics', 'tree']"
16326,1632600,Numbers,22,['bruteforcing']
16327,1632700,Broken Watch,13,"['combinatorics', 'mathematics']"
16328,1632800,Tree,17,"['dynamic programming', 'dynamic programming on trees', 'floyd–warshall', 'graph theory', 'tree']"
16329,1632900,Space Station,22,"['dynamic programming', 'dynamic programming on trees', 'maximum flow', 'greedy', 'minimum cost maximum flow', 'tree']"
16330,1633000,Fishermen,15,"['binary search', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'sorting']"
16331,1633100,Min Max Convert,21,"['greedy', 'two-pointer']"
16332,1633200,Matrix Queries,21,"['data structures', 'segment tree']"
16333,1633300,Modern Djinn,21,['randomization']
16334,1633400,Inversion,17,"['combinatorics', 'dynamic programming', 'graph theory', 'mathematics', 'topological sorting']"
16335,1633500,Rabbit vs Turtle,19,"[""dijkstra's"", 'graph theory']"
16336,1633600,Points and Rectangles,22,"['data structures', 'divide and conquer', 'offline queries', 'segment tree']"
16337,1633700,Die,4,"['implementation', 'precomputation', 'string']"
16338,1633800,Escalators,17,"['dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
16339,1633900,Moving Furniture,0,[]
16340,1634000,Split Game,18,"['dynamic programming', 'game theory', 'sprague–grundy theorem']"
16341,1634100,Horsemeet,8,['ad-hoc']
16342,1634200,Lighting,0,[]
16343,1634300,Locker Room,0,[]
16344,1634400,Numbers Generator,0,[]
16345,1634500,Rullete,0,[]
16346,1634600,Security Guards,12,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal', 'prefix sum']"
16347,1634700,Alloc,16,"['data structures', 'implementation', 'linked list', 'segment tree']"
16348,1634800,Flauta,0,[]
16349,1634900,Ghost leg,24,[]
16350,1635000,Hulja,21,[]
16351,1635100,Luka,0,[]
16352,1635200,Menza,0,[]
16353,1635300,Načitan,0,[]
16354,1635400,Ploča,15,[]
16355,1635500,Reality,0,[]
16356,1635600,Stablo u stablu,19,[]
16357,1635700,Circuits,20,"['value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
16358,1635800,Cosmetic Survey,17,"['floyd–warshall', 'graph theory']"
16359,1635900,Disks Arrangement,21,"['geometry', 'greedy']"
16360,1636000,Go Latin,6,"['implementation', 'string']"
16361,1636100,LED,17,"['binary search', 'parametric search']"
16362,1636200,Parentheses,15,"['case work', 'data structures', 'implementation', 'parsing', 'stack', 'string']"
16363,1636300,Secret Code,19,"['calculus', 'inclusion and exclusion', 'mathematics']"
16364,1636400,Simple Polygon,27,"['data structures', 'dynamic programming', 'geometry', 'priority queue', 'stack']"
16365,1636500,Square Root,27,"['현 그래프', 'graph theory']"
16366,1636600,Starwars,17,"['graph theory', 'graph traversal']"
16367,1636700,TV Show Game,19,"['2-sat', 'graph theory', 'strongly connected component']"
16368,1636800,Working Plan,14,"['data structures', 'greedy', 'priority queue']"
16369,1636900,Hills,0,[]
16370,1637000,Passports,0,[]
16371,1637100,AB-Strings,21,"['ad-hoc', 'case work', 'constructive']"
16372,1637200,Chemical table,19,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
16373,1637300,Prime Tree - 1,5,['constructive']
16374,1637400,Prime Tree - 2,10,['backtracking']
16375,1637500,Prime Tree - 3,11,[]
16376,1637600,Prime Tree - 4,13,[]
16377,1637700,Prime Tree - 5,13,[]
16378,1637800,Prime Tree - 6,14,[]
16379,1637900,Prime Tree - 7,15,[]
16380,1638000,Prime Tree - 8,15,[]
16381,1638100,Prime Tree - 9,17,[]
16382,1638200,Prime Tree - 10,17,[]
16383,1638300,Cycle sort,0,[]
16384,1638400,Stoichiometry,20,[]
16385,1638500,Pokemon Go Go,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'travelling salesman problem']"
16386,1638600,Urban Design,13,"['geometry', 'line segment intersection check', 'mathematics']"
16387,1638700,Smooth Array,21,[]
16388,1638800,Is-A? Has-A? Who Knowz-A?,16,"['depth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
16389,1638900,Atlantis,22,"['data structures', 'greedy', 'priority queue']"
16390,1639000,Sheba’s Amoebas,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
16391,1639100,Zebras and Ocelots,6,"['implementation', 'mathematics']"
16392,1639200,Racing Around the Alphabet,11,[]
16393,1639300,Lost Map,14,"['graph theory', 'minimum spanning tree']"
16394,1639400,홍익대학교,1,"['arithmetic', 'mathematics']"
16395,1639500,파스칼의 삼각형,6,"['combinatorics', 'dynamic programming', 'mathematics']"
16396,1639600,선 그리기,5,['implementation']
16397,1639700,탈출,12,"['breadth-first search', 'graph theory', 'graph traversal']"
16398,1639800,행성 연결,12,"['graph theory', 'minimum spanning tree']"
16399,1639900,드라이브,16,['dynamic programming']
16400,1640000,소수 화폐,11,"['dynamic programming', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
16401,1640100,과자 나눠주기,9,"['binary search', 'parametric search']"
16402,1640200,제국,15,"['data structures', 'disjoint set', 'set / map by hashing', 'parsing', 'string']"
16403,1640300,놀이동산,16,"['dynamic programming', 'mathematics']"
16404,1640400,주식회사 승범이네,18,"['data structures', 'euler tour technique', 'graph theory', 'segment tree with lazy propagation', 'segment tree', 'tree']"
16405,1640500,Treehouses,13,"['graph theory', 'minimum spanning tree']"
16406,1640600,Exam,5,['greedy']
16407,1640700,Cops and Robbers,19,"['maximum flow', 'max-flow min-cut theorem']"
16408,1640800,Poker Hand,4,"['implementation', 'parsing', 'string']"
16409,1640900,Coprime Integers,20,"['inclusion and exclusion', 'mathematics', 'möbius inversion', 'number theory']"
16410,1641000,Goat Rope,5,"['case work', 'geometry']"
16411,1641100,Illiteracy,15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'string']"
16412,1641200,Heir’s Dilemma,4,"['arithmetic', 'bruteforcing', 'mathematics', 'string']"
16413,1641300,Random Manhattan Distance,0,[]
16414,1641400,Mobilization,22,"['convex hull', 'geometry', 'mathematics']"
16415,1641500,Repeated Substrings,18,"['string', 'suffix array and lcp array']"
16416,1641600,Abstract Art,22,['maximum flow']
16417,1641700,Count the Bits,16,['dynamic programming']
16418,1641800,Inversions,22,"['convex hull trick', 'dynamic programming']"
16419,1641900,Knockout,17,"['bitmask', 'combinatorics', 'dynamic programming', 'implementation', 'mathematics', 'probability theory']"
16420,1642000,Paper Strips,0,[]
16421,1642100,Rectangles,19,"['value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
16422,1642200,Area Rug,12,['prefix sum']
16423,1642300,To Tell the Truth,5,[]
16424,1642400,Repeating Goldbachs,10,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
16425,1642500,Random Index Vectors,12,"['implementation', 'two-pointer']"
16426,1642600,Sculpture,5,['implementation']
16427,1642700,Time Limits,3,"['arithmetic', 'implementation', 'mathematics']"
16428,1642800,A/B - 3,3,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
16429,1642900,2018 빼빼로 데이 이벤트 겸 스타트링크 홍보,0,[]
16430,1643000,제리와 톰,1,"['arithmetic', 'mathematics']"
16431,1643100,베시와 데이지,3,"['implementation', 'mathematics']"
16432,1643200,떡장수와 호랑이,12,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
16433,1643300,주디와 당근농장,5,['implementation']
16434,1643400,드래곤 앤 던전,12,"['binary search', 'implementation']"
16435,1643500,스네이크버드,6,"['greedy', 'sorting']"
16436,1643600,얼룩말 아트,18,['prefix sum']
16437,1643700,양 구출 작전,13,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
16438,1643800,원숭이 스포츠,13,"['bitmask', 'divide and conquer']"
16439,1643900,치킨치킨치킨,7,['bruteforcing']
16440,1644000,제이크와 케이크,16,"['mathematics', 'sliding window']"
16441,1644100,아기돼지와 늑대,13,"['breadth-first search', 'graph theory', 'graph traversal']"
16442,1644200,Aventurando-se no Slackline,22,"['inclusion and exclusion', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
16443,1644300,Bolinhas de Gude,19,"['game theory', 'sprague–grundy theorem']"
16444,1644400,Cortador de Pizza,18,"['data structures', 'euler characteristic (χ=v-e+f)', 'geometry', 'segment tree']"
16445,1644500,Desvendando Monty Hall,3,['implementation']
16446,1644600,Enigma,4,"['bruteforcing', 'string']"
16447,1644700,Festival,16,"['bitmask', 'data structures', 'dynamic programming', 'dynamic programming using bitfield', 'segment tree']"
16448,1644800,Gasolina,19,"['binary search', 'maximum flow']"
16449,1644900,Hipótese Policial,0,[]
16450,1645000,Interruptores,7,"['implementation', 'simulation']"
16451,1645100,Juntando Capitais,0,[]
16452,1645200,Kepler,0,[]
16453,1645300,Linhas de Metrô,18,"['case work', 'data structures', 'heavy-light decomposition', 'lowest common ancestor', 'segment tree', 'tree']"
16454,1645400,Modificando SAT,0,[]
16455,1645500,K번째 수 찾는 함수,12,['sorting']
16456,1645600,하와와 대학생쨩 하와이로 가는 거시와요~,10,['dynamic programming']
16457,1645700,단풍잎 이야기,10,"['backtracking', 'bruteforcing']"
16458,1645800,가장 큰 숫자,11,"['bruteforcing', 'graph theory', 'graph traversal', 'implementation']"
16459,1645900,독서의 계절,8,[]
16460,1646000,Cupid,7,"['implementation', 'sorting', 'string']"
16461,1646100,듀얼 채널 VHF 무전기,10,[]
16462,1646200,'나교수' 교수님의 악필,4,"['implementation', 'mathematics']"
16463,1646300,13일의 금요일,8,"['bruteforcing', 'implementation', 'mathematics', 'simulation']"
16464,1646400,가주아,8,['mathematics']
16465,1646500,Bookend,11,"['ad-hoc', 'case work', 'implementation']"
16466,1646600,콘서트,5,"['data structures', 'implementation', 'sorting']"
16467,1646700,병아리의 변신은 무죄,15,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
16468,1646800,크리스마스 트리 꾸미기,17,"['dynamic programming', 'dynamic programming on trees', 'tree']"
16469,1646900,소년 점프,12,"['breadth-first search', 'graph theory', 'graph traversal']"
16470,1647000,A Homogeneous Country,8,"['data structures', 'set / map by trees']"
16471,1647100,작은 수 내기,8,"['greedy', 'sorting']"
16472,1647200,고냥이,12,['two-pointer']
16473,1647300,팰린드롬 만들기,15,['dynamic programming']
16474,1647400,이상한 전깃줄,15,"['dynamic programming', 'longest increasing sequence in o(n log n)']"
16475,1647500,수학 미로,15,"[""dijkstra's"", 'graph theory']"
16476,1647600,decrypt,19,"['graph theory', 'mathematics', 'randomization']"
16477,1647700,cmp,22,['ad-hoc']
16478,1647800,원의 분할,5,"['geometry', 'mathematics']"
16479,1647900,컵라면 측정하기,3,"['geometry', 'mathematics', 'pythagoras theorem']"
16480,1648000,외심과 내심은 사랑입니다,0,"['geometry', 'mathematics']"
16481,1648100,원 전문가 진우,0,"['geometry', 'mathematics']"
16482,1648200,한 점에서 만나라!,0,"['geometry', 'mathematics']"
16483,1648300,접시 안의 원,3,"['geometry', 'mathematics', 'pythagoras theorem']"
16484,1648400,작도하자! - ①,0,"['geometry', 'ad-hoc', 'mathematics']"
16485,1648500,작도하자! - ②,3,"['geometry', 'mathematics']"
16486,1648600,운동장 한 바퀴,2,"['geometry', 'mathematics']"
16487,1648700,말 타기,0,"['geometry', 'mathematics']"
16488,1648800,피카츄가 낸 어려운 문제,7,"['geometry', 'mathematics']"
16489,1648900,삼각형 해커,0,"['geometry', 'arbitrary precision / big integers', 'mathematics']"
16490,1649000,외계인의 침투,0,"['geometry', 'mathematics']"
16491,1649100,대피소 찾기,16,"['bruteforcing', 'geometry', 'line segment intersection check']"
16492,1649200,패턴 코드 진위,12,"['implementation', 'string']"
16493,1649300,최대 페이지 수,9,"['bruteforcing', 'dynamic programming', 'knapsack']"
16494,1649400,가장 큰 값,11,"['bruteforcing', 'dynamic programming']"
16495,1649500,열 순서,5,['mathematics']
16496,1649600,큰 수 만들기,16,"['greedy', 'sorting']"
16497,1649700,대출 요청,4,['implementation']
16498,1649800,작은 벌점,10,"['binary search', 'bruteforcing', 'sorting']"
16499,1649900,동일한 단어 그룹화하기,7,"['data structures', 'set / map by hashing', 'sorting', 'string']"
16500,1650000,문자열 판별,11,"['dynamic programming', 'string']"
16501,1650100,만족도 점수,9,[]
16502,1650200,그녀를 찾아서,8,"['graph theory', 'graph traversal', 'mathematics', 'probability theory']"
16503,1650300,괄호 없는 사칙연산,4,"['arithmetic', 'implementation', 'mathematics']"
16504,1650400,종이접기,3,"['arithmetic', 'implementation', 'mathematics']"
16505,1650500,별,8,"['implementation', 'recursion']"
16506,1650600,CPU,6,['implementation']
16507,1650700,어두운 건 무서워,10,['prefix sum']
16508,1650800,전공책,8,['bruteforcing']
16509,1650900,장군,11,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
16510,1651000,Predictable Queue,10,"['binary search', 'prefix sum']"
16511,1651100,Pokegene,23,"['data structures', 'lowest common ancestor', 'segment tree', 'string', 'tree', 'trie']"
16512,1651200,Maximum Subarrays,14,['dynamic programming']
16513,1651300,Rational Ratio,7,"['arithmetic', 'mathematics', 'parsing', 'string']"
16514,1651400,Travel the Skies,0,[]
16515,1651500,Euler’s Number,4,['mathematics']
16516,1651600,Lipschitz Constant,11,"['mathematics', 'sorting']"
16517,1651700,Tima goes to Xentopia,0,[]
16518,1651800,New Salaries,20,[]
16519,1651900,Other Side,9,['ad-hoc']
16520,1652000,Kaleidoscopic Palindromes,9,"['ad-hoc', 'implementation']"
16521,1652100,A Symmetrical Pizza,8,"['euclidean algorithm', 'mathematics', 'number theory']"
16522,1652200,Building a Field,12,"['binary search', 'prefix sum', 'two-pointer']"
16523,1652300,Cheap Trips,13,['dynamic programming']
16524,1652400,Database of Clients,7,"['data structures', 'implementation', 'parsing', 'string', 'set / map by trees']"
16525,1652500,"Escape, Polygon!",19,"['geometry', 'rotating calipers', 'two-pointer']"
16526,1652600,Fantastic Beasts,20,"['chinese remainder theorem', 'mathematics', 'number theory']"
16527,1652700,Gathering Red-Black Fruits,22,[]
16528,1652800,Highway Decommission,15,"[""dijkstra's"", 'graph theory']"
16529,1652900,Ink Colors,18,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'greedy', 'tree']"
16530,1653000,Jeopardized Election,23,[]
16531,1653100,KryptoLocker Ate my Homework,19,"['bitmask', 'constructive', 'recursion', 'sorting']"
16532,1653200,Looking for the Risk Factor,18,"['data structures', 'mathematics', 'merge sort tree', 'number theory', 'offline queries', 'primality test', 'segment tree', 'sieve of eratosthenes', 'sorting']"
16533,1653300,Mount Marathon,5,['greedy']
16534,1653400,Sequences,11,['dynamic programming']
16535,1653500,Game,0,[]
16536,1653600,Computer network,0,[]
16537,1653700,Shopping,0,[]
16538,1653800,Missing Bridges,0,[]
16539,1653900,Chain,10,"['data structures', 'stack']"
16540,1654000,Khans,0,[]
16541,1654100,Robots,0,[]
16542,1654200,Superstition,21,"['berlekamp–massey', 'exponentiation by squaring', 'implementation', 'mathematics']"
16543,1654300,Clubs,0,[]
16544,1654400,Colorgraph,24,"['case work', 'graph theory', 'stoer–wagner']"
16545,1654500,Crypto,0,[]
16546,1654600,Missing Runners,3,"['implementation', 'mathematics']"
16547,1654700,Oblongs and Right Triangles,0,[]
16548,1654800,Unique Substrings,0,[]
16549,1654900,Pie Max Flow,22,[]
16550,1655000,Odd Colouring,0,[]
16551,1655100,Potato Sacks,9,['backtracking']
16552,1655200,Moving Buildings,0,[]
16553,1655300,Hedwig’s Ladder,0,[]
16554,1655400,Tanks and Pipes,0,[]
16555,1655500,What time is it anyway?,0,[]
16556,1655600,Left-Right-Win,0,[]
16557,1655700,The Erdös-Straus Conjecture,0,[]
16558,1655800,Subprime Fibonacci Sequence,10,"['implementation', 'mathematics', 'number theory', 'simulation']"
16559,1655900,Airspace Regulations,0,[]
16560,1656000,Pinemi Puzzles,0,[]
16561,1656100,3의 배수,4,"['bruteforcing', 'combinatorics', 'mathematics']"
16562,1656200,친구비,12,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
16563,1656300,어려운 소인수분해,12,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
16564,1656400,히오스 프로게이머,10,"['binary search', 'parametric search']"
16565,1656500,N포커,14,"['combinatorics', 'dynamic programming', 'inclusion and exclusion', 'mathematics']"
16566,1656600,카드 게임,15,"['binary search', 'data structures', 'disjoint set']"
16567,1656700,바이너리 왕국,8,"['ad-hoc', 'implementation', 'simulation']"
16568,1656800,엔비스카의 영혼,10,['dynamic programming']
16569,1656900,화산쇄설류,12,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
16570,1657000,앞뒤가 맞는 수열,16,"['knuth–morris–pratt', 'string']"
16571,1657100,알파 틱택토,13,"['backtracking', 'game theory']"
16572,1657200,Pixel Triangles,16,['dynamic programming']
16573,1657300,Edit Distance,14,['constructive']
16574,1657400,Rotating Gears,25,"['data structures', 'heavy-light decomposition', 'link/cut tree', 'segment tree', 'tree']"
16575,1657500,Smart Thief,22,"['eulerian path / circuit', 'graph theory', 'hashing', 'randomization']"
16576,1657600,Icy Land,14,"['ad-hoc', 'case work']"
16577,1657700,Artilleries and Defensive Walls,24,[]
16578,1657800,Popping Balloons,18,['greedy']
16579,1657900,Go Make It Complete,19,"['binary search', 'data structures', 'greedy', 'parametric search', 'priority queue']"
16580,1658000,Lexical Sign Sequence,19,"['data structures', 'greedy', 'priority queue', 'segment tree']"
16581,1658100,Lie Detector,5,"['implementation', 'mathematics']"
16582,1658200,Future Generation,18,"['binary search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'sorting']"
16583,1658300,Boomerangs,20,"['depth-first search', 'graph theory', 'graph traversal', 'greedy', 'tree']"
16584,1658400,Binary String,13,['greedy']
16585,1658500,Tour de BINUS,4,['implementation']
16586,1658600,Linked List,23,"['splay tree', 'tree']"
16587,1658700,Hierarchical Structure,20,"['binary search', 'data structures', 'heavy-light decomposition', 'merge sort tree', 'prefix sum', 'segment tree', 'sorting', 'tree']"
16588,1658800,Substring Permutation,6,['string']
16589,1658900,"The Good, the Great, and the Superb",0,[]
16590,1659000,KMP,17,"['bipartite matching', 'maximum flow']"
16591,1659100,Discs,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
16592,1659200,Plate Parity,11,"['mathematics', 'prefix sum', 'recursion']"
16593,1659300,Expected Value of a Permutation,19,"['mathematics', 'number theory']"
16594,1659400,A Study on Groups,10,['greedy']
16595,1659500,Living Subgraph,0,[]
16596,1659600,Fair Tournament,0,[]
16597,1659700,Moving Around,0,[]
16598,1659800,Achievements,7,['two-pointer']
16599,1659900,Banana Republic,0,[]
16600,1660000,Contemporary Art,2,"['geometry', 'mathematics']"
16601,1660100,Access Points,22,"['data structures', 'dynamic programming', 'greedy', 'mathematics', 'stack']"
16602,1660200,Brexit Negotiations,17,"['graph theory', 'greedy', 'topological sorting']"
16603,1660300,Circuit Board Design,17,"['constructive', 'geometry', 'greedy', 'tree']"
16604,1660400,Date Pickup,24,"['binary search', ""dijkstra's"", 'dynamic programming', 'graph theory', 'topological sorting']"
16605,1660500,Equality Control,20,"['parsing', 'string']"
16606,1660600,Fastest Speedrun,24,[]
16607,1660700,Game Design,19,"['ad-hoc', 'implementation']"
16608,1660800,Hard Drive,11,"['constructive', 'greedy']"
16609,1660900,Inflation,7,['sorting']
16610,1661000,Jinxed Betting,18,"['implementation', 'mathematics', 'simulation']"
16611,1661100,Kleptography,7,"['implementation', 'simulation', 'string']"
16612,1661200,Aligned Typesetting,5,['implementation']
16613,1661300,Bad Keming,0,[]
16614,1661400,Collecting Stars,10,"['data structures', 'priority queue']"
16615,1661500,Dropping Blocks,0,[]
16616,1661600,Explosive Wiring,0,[]
16617,1661700,"Far, Far Away",19,"['floyd–warshall', 'graph theory', 'parametric search']"
16618,1661800,Good Cable Management,0,[]
16619,1661900,Hazardous Driving,13,[]
16620,1662000,Interesting World of Arrays,19,"['bruteforcing', 'combinatorics', 'mathematics']"
16621,1662100,Judging Divisionals,0,[]
16622,1662200,Knights and Dragons,0,[]
16623,1662300,Laps,4,"['ad-hoc', 'arithmetic', 'mathematics']"
16624,1662400,Bingo Ties,11,['bruteforcing']
16625,1662500,Das Blinkenlights,3,"['bruteforcing', 'mathematics', 'number theory']"
16626,1662600,Ebony and Ivory,13,['dynamic programming']
16627,1662700,Froggie,12,['implementation']
16628,1662800,Fruit Slicer,19,['geometry']
16629,1662900,LCM Tree,25,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics', 'number theory']"
16630,1663000,Left and Right,8,['greedy']
16631,1663100,Longest Life,21,"['binary search', 'convex hull trick', 'dynamic programming']"
16632,1663200,Monitoring Ski Paths,17,"['depth-first search', 'graph theory', 'graph traversal', 'greedy', 'tree']"
16633,1663300,Peg Game for Two,11,"['bruteforcing', 'dynamic programming']"
16634,1663400,"Run-Length Encoding, Run!",4,"['implementation', 'string']"
16635,1663500,Superdoku,20,"['bipartite matching', 'graph theory', ""hall's theorem""]"
16636,1663600,Triangular Clouds,23,['geometry']
16637,1663700,괄호 추가하기,12,['bruteforcing']
16638,1663800,괄호 추가하기 2,15,"['bruteforcing', 'implementation']"
16639,1663900,괄호 추가하기 3,15,['dynamic programming']
16640,1664000,Awesome Numbers,21,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory', 'precomputation']"
16641,1664100,Binary Table,23,['mathematics']
16642,1664200,Cake Cutting,19,"['calculus', 'mathematics']"
16643,1664300,Decorator Cubelover,19,['backtracking']
16644,1664400,Easy Problem,25,"['binary search', 'mathematics', 'möbius inversion', 'number theory']"
16645,1664500,Fraction Challenge,23,"['hashing', 'mathematics', 'meet in the middle', 'number theory']"
16646,1664600,Game with Polynomials,27,"['mathematics', 'number theory']"
16647,1664700,"Happy Birthday, kipa00!",0,[]
16648,1664800,Accumulator Battery,3,"['arithmetic', 'mathematics']"
16649,1664900,Building a Stair,11,['constructive']
16650,1665000,Counting Stairs,20,"['combinatorics', 'dynamic programming', 'mathematics']"
16651,1665100,Distinct Substrings,19,"['binary search', 'data structures', 'hashing', 'string', 'tree', 'trie']"
16652,1665200,Email Destruction,9,"['data structures', 'hashing', 'set / map by hashing', 'parsing', 'string']"
16653,1665300,Forgotten Land,21,"['bitmask', 'combinatorics', 'data structures', 'disjoint set', 'inclusion and exclusion', 'mathematics']"
16654,1665400,Generalized German Quotation,8,"['data structures', 'greedy', 'regular expression', 'stack', 'string']"
16655,1665500,Halves Not Equal,21,"['binary search', 'mathematics']"
16656,1665600,Interactive Array Guessing,15,[]
16657,1665700,Joined Vessels,20,"['data structures', 'offline queries', 'prefix sum', 'segment tree', 'stack']"
16658,1665800,Keyboard Consensus,28,"['ad-hoc', 'game theory']"
16659,1665900,LED-led Paths,21,"['ad-hoc', 'constructive', 'divide and conquer', 'graph theory', 'topological sorting']"
16660,1666000,Alice the Fan,18,[]
16661,1666100,Bimatching,26,['general matching']
16662,1666200,Cactus Search,21,"['ad-hoc', 'cactus', '센트로이드', 'floyd–warshall', 'graph theory', 'tree']"
16663,1666300,Distance Sum,26,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'prefix sum']"
16664,1666400,Easy Chess,12,['implementation']
16665,1666500,Fractions,15,[]
16666,1666600,Guest Student,7,['implementation']
16667,1666700,Harder Satisfiability,26,"['2-sat', 'graph theory', 'strongly connected component']"
16668,1666800,Interval-Free Permutations,26,"['combinatorics', 'dynamic programming', 'mathematics']"
16669,1666900,JS Minification,24,[]
16670,1667000,King Kog’s Reception,21,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
16671,1667100,Lazyland,8,[]
16672,1667200,Minegraphed,19,['constructive']
16673,1667300,고려대학교에는 공식 와인이 있다,3,"['arithmetic', 'mathematics']"
16674,1667400,2018년을 되돌아보며,4,"['case work', 'implementation']"
16675,1667500,두 개의 손,4,"['case work', 'implementation']"
16676,1667600,근우의 다이어리 꾸미기,4,"['implementation', 'mathematics']"
16677,1667700,악마 게임,7,['string']
16678,1667800,모독,11,"['greedy', 'sorting']"
16679,1667900,Back to the Bones,16,['dynamic programming']
16680,1668000,안수빈수,17,"['ad-hoc', 'mathematics']"
16681,1668100,등산,14,"[""dijkstra's"", 'graph theory']"
16682,1668200,삼원색,21,"['data structures', 'inclusion and exclusion', 'segment tree', 'sweeping']"
16683,1668300,종이 자르기,23,"['arbitrary precision / big integers', 'geometry']"
16684,1668400,하노삼의 탑,17,"['dynamic programming', 'implementation']"
16685,1668500,XOR 포커,19,"['gaussian elimination', 'linear algebra', 'mathematics']"
16686,1668600,실시간 내비게이션,22,"['data structures', 'dynamic programming', 'segment tree with lazy propagation', 'segment tree']"
16687,1668700,기묘한 여행계획,22,['dynamic programming']
16688,1668800,Contest Setting,12,"['combinatorics', 'value / coordinate compression', 'dynamic programming', 'mathematics']"
16689,1668900,Liars,6,['bruteforcing']
16690,1669000,Paper Cuts,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
16691,1669100,House Numbers,11,"['mathematics', 'prefix sum', 'two-pointer']"
16692,1669200,Greedy Scheduler,8,"['implementation', 'simulation']"
16693,1669300,Pizza Deal,2,"['arithmetic', 'geometry', 'implementation', 'mathematics']"
16694,1669400,The ABCD Murderer,21,"['aho-corasick', 'data structures', 'greedy', 'string', 'tree', 'trie']"
16695,1669500,The Bridge on the River Kawaii,21,"['data structures', 'disjoint set', 'divide and conquer', 'graph theory', 'offline dynamic connectivity', 'offline queries']"
16696,1669600,Clockwork ||ange,12,"['breadth-first search', 'bitmask', 'depth-first search', 'graph theory', 'graph traversal']"
16697,1669700,Reservoir Dog,19,"['binary search', 'case work', 'mathematics', 'physics']"
16698,1669800,Trees Gump,17,"['ad-hoc', 'depth-first search', 'geometry', 'graph theory', 'graph traversal', 'tree']"
16699,1669900,Incredible Hull,21,[]
16700,1670000,Shooter Island,18,"['data structures', 'disjoint set']"
16701,1670100,The Lord of the Kings,23,[]
16702,1670200,The Silence of the Lamps,11,"['mathematics', 'number theory']"
16703,1670300,Matrice,16,['dynamic programming']
16704,1670400,Mirrority Report,24,[]
16705,1670500,Game of Stones,21,"['case work', 'game theory', 'sprague–grundy theorem']"
16706,1670600,의약품 수송 2,0,[]
16707,1670700,American Tour,18,"['maximum flow', 'graph theory', 'minimum cost maximum flow']"
16708,1670800,Bob's Rummikub,20,"['backtracking', 'bitmask', 'bruteforcing', 'dynamic programming', 'dynamic programming using bitfield']"
16709,1670900,Congruence Equation,23,"['mathematics', 'number theory']"
16710,1671000,Dragging,19,"['breadth-first search', 'binary search', 'game theory', 'graph theory', 'graph traversal']"
16711,1671100,Erasing Matrix,19,"['ad-hoc', 'constructive']"
16712,1671200,Finding Love,8,"['implementation', 'sorting']"
16713,1671300,Generic Queries,9,['prefix sum']
16714,1671400,Hosting MT,20,[]
16715,1671500,Inspiration,5,"['bruteforcing', 'mathematics']"
16716,1671600,JeoGyuk,16,"['bruteforcing', 'geometry']"
16717,1671700,Katty and Wonki,20,"['dynamic programming', 'dynamic programming on trees', 'tree']"
16718,1671800,Love Triangles,26,"['ad-hoc', 'constructive', 'graph theory']"
16719,1671900,ZOAC,11,"['implementation', 'recursion', 'string']"
16720,1672000,BAZE RUNNER,10,[]
16721,1672100,Structure of Balanced Networks,10,['implementation']
16722,1672200,결! 합!,12,"['bruteforcing', 'implementation', 'simulation']"
16723,1672300,원영이는 ZOAC과 영원하고 싶다,9,['mathematics']
16724,1672400,피리 부는 사나이,13,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
16725,1672500,다항 계수,16,"['combinatorics', 'mathematics', 'prefix sum']"
16726,1672600,영과일 학회방,18,"['bipartite matching', 'maximum flow']"
16727,1672700,ICPC,2,['implementation']
16728,1672800,Chaarshanbegaan at Cafebazaar,4,"['implementation', 'mathematics']"
16729,1672900,Cinema,23,[]
16730,1673000,Nader Shah,21,"['data structures', 'graph theory', 'priority queue', 'topological sorting']"
16731,1673100,JackRabbit Slim,22,[]
16732,1673200,Imputation,17,"['dynamic programming', 'dynamic programming on trees', 'tree']"
16733,1673300,Relay Race,24,"['convex hull', 'geometry']"
16734,1673400,T-net,18,['dynamic programming']
16735,1673500,Congestion Charging Zone,4,['implementation']
16736,1673600,Image Processing Project,19,[]
16737,1673700,Python Classes,21,"['data structures', 'disjoint set', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'parsing', 'strongly connected component', 'string', 'tree']"
16738,1673800,초특가 숭놀자,7,[]
16739,1673900,Digits Are Not Just Characters,12,"['implementation', 'parsing', 'sorting', 'string']"
16740,1674000,Arithmetic Progressions,16,"['data structures', 'dynamic programming', 'set / map by hashing']"
16741,1674100,Emergency Evacuation,16,"['greedy', 'implementation', 'simulation', 'sorting']"
16742,1674200,Shortest Common Non-Subsequence,18,['dynamic programming']
16743,1674300,Eulerian Flight Tour,22,"['case work', 'depth-first search', 'graph theory', 'graph traversal']"
16744,1674400,Fair Chocolate-Cutting,24,[]
16745,1674500,What Goes Up Must Come Down,18,"['data structures', 'segment tree', 'sorting']"
16746,1674600,Four-Coloring,25,"['ad-hoc', 'constructive', 'geometry', 'graph theory', 'planar graph']"
16747,1674700,Ranks,24,"['bit set', 'gaussian elimination', 'linear algebra', 'mathematics']"
16748,1674800,Colorful Tree,22,"['data structures', 'euler tour technique', 'lowest common ancestor', 'offline queries', 'segment tree', 'tree', 'set / map by trees']"
16749,1674900,Sixth Sense,19,['greedy']
16750,1675000,Preokret,6,['implementation']
16751,1675100,Kocka,0,[]
16752,1675200,Deblo,0,[]
16753,1675300,Maja,0,[]
16754,1675400,Sunčanje,23,[]
16755,1675500,Magnus,5,['string']
16756,1675600,Pismo,5,"['greedy', 'implementation']"
16757,1675700,Sajam,0,[]
16758,1675800,NLO,16,"['offline queries', 'sorting', 'sweeping']"
16759,1675900,Praktični,0,[]
16760,1676000,Balance Beam,21,"['convex hull', 'geometry', 'mathematics', 'probability theory']"
16761,1676100,Sort It Out,21,"['binary search', 'data structures', 'longest increasing sequence in o(n log n)', 'segment tree']"
16762,1676200,The Cow Gathering,22,"['depth-first search', 'graph theory', 'graph traversal', 'topological sorting']"
16763,1676300,Fine Dining,16,"[""dijkstra's"", 'graph theory']"
16764,1676400,Cowpatibility,17,"['data structures', 'set / map by hashing', 'inclusion and exclusion', 'set / map by trees']"
16765,1676500,Teamwork,13,['dynamic programming']
16766,1676600,Convention,12,"['binary search', 'parametric search']"
16767,1676700,Convention II,14,"['data structures', 'priority queue']"
16768,1676800,Mooyo Mooyo,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
16769,1676900,Mixing Milk,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
16770,1677000,The Bucket List,4,['implementation']
16771,1677100,Back and Forth,10,"['backtracking', 'bitmask', 'bruteforcing', 'implementation', 'simulation']"
16772,1677200,Colored Tiles 1,0,[]
16773,1677300,Colored Tiles 2,0,[]
16774,1677400,Colored Tiles 3,0,[]
16775,1677500,Colored Tiles 4,0,[]
16776,1677600,Colored Tiles 5,0,[]
16777,1677700,Election Campaign,22,"['dynamic programming', 'dynamic programming on trees', 'heavy-light decomposition', 'tree']"
16778,1677800,Sterilizing Spray,20,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
16779,1677900,JOIRIS,23,['constructive']
16780,1678000,Selling RNA Strands,23,"['data structures', 'offline queries', 'segment tree', 'tree', 'trie']"
16781,1678100,Skyscraper,24,['dynamic programming']
16782,1678200,Amusement Park,23,['ad-hoc']
16783,1678300,Bulldozer,24,"['data structures', 'geometry', 'segment tree', 'sweeping']"
16784,1678400,Golf,27,"['data structures', 'segment tree', 'sweeping']"
16785,1678500,ソーシャルゲーム (Social Game),3,"['implementation', 'mathematics', 'simulation']"
16786,1678600,すごろくと駒 (Sugoroku and Pieces),4,"['implementation', 'simulation']"
16787,1678700,マルバツスタンプ (Circle Cross Stamps),5,"['greedy', 'implementation', 'string']"
16788,1678800,日本沈没 (Japan Sinks),13,['sorting']
16789,1678900,イルミネーション (Illumination),13,['dynamic programming']
16790,1679000,座席 (Seats),23,['dynamic programming']
16791,1679100,Bubble Sort 2,22,"['value / coordinate compression', 'data structures', 'segment tree']"
16792,1679200,Cats or Dogs,26,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'heavy-light decomposition', 'segment tree with lazy propagation', 'segment tree', 'tree']"
16793,1679300,Collapse,26,"['data structures', 'disjoint set', 'offline queries', 'square root decomposition']"
16794,1679400,Xylophone,0,[]
16795,1679500,Thread Tree,10,"['depth-first search', 'graph theory', 'graph traversal', 'implementation', 'recursion', 'tree']"
16796,1679600,Trodden Cable,0,[]
16797,1679700,Fox Observation,15,"['data structures', 'greedy', 'set / map by hashing']"
16798,1679800,Removing Magical Tiles,22,[]
16799,1679900,Optimal alpha beta pruning,0,[]
16800,1680000,Graph Automata Player,0,[]
16801,1680100,Spotlight Movement,0,[]
16802,1680200,Gravity Point,0,[]
16803,1680300,Multi Path Story,0,[]
16804,1680400,Rotation Game,25,[]
16805,1680500,Where is the Boundary,9,['prefix sum']
16806,1680600,Vector Field,12,"['bruteforcing', 'value / coordinate compression']"
16807,1680700,Kuru Kuru Sushi,26,[]
16808,1680800,Identity Function,21,"[""fermat's little theorem"", 'mathematics', 'number theory', 'primality test']"
16809,1680900,Enclose Points,25,"['geometry', 'sweeping']"
16810,1681000,Marching Course,12,"['dynamic programming', 'graph theory']"
16811,1681100,Surface Area of Cubes,11,"['data structures', 'geometry', 'geometry; 3d', 'set / map by hashing']"
16812,1681200,Laser Cutter,21,['hungarian']
16813,1681300,Live Programming,22,"['convex hull trick', 'dynamic programming']"
16814,1681400,Black Company,0,[]
16815,1681500,Star in Parentheses,6,"['data structures', 'stack', 'string']"
16816,1681600,Slimming Plan,11,"['implementation', 'mathematics', 'simulation']"
16817,1681700,Ninja Map,12,"['constructive', 'depth-first search', 'graph theory', 'graph traversal']"
16818,1681800,Janken Master,0,[]
16819,1681900,Route Calculator,0,[]
16820,1682000,Endless BFS,0,[]
16821,1682100,Low Range-Sum Matrix,12,"['backtracking', 'prefix sum']"
16822,1682200,Tiny Room,0,[]
16823,1682300,Librarian's Work,0,[]
16824,1682400,Sum Source Detection,0,[]
16825,1682500,Permutation Period,22,"['data structures', 'disjoint set', 'divide and conquer', 'graph theory', 'mathematics', 'number theory', 'offline dynamic connectivity', 'offline queries']"
16826,1682600,GuruGuru,8,"['implementation', 'simulation']"
16827,1682700,Colorful Drink,8,"['sorting', 'two-pointer']"
16828,1682800,Santa’s Gift,14,"['dynamic programming', 'knapsack']"
16829,1682900,Prefix Suffix Search,0,[]
16830,1683000,Magic Triangles,0,[]
16831,1683100,Nim without Zero,19,"['game theory', 'sprague–grundy theorem']"
16832,1683200,Additions,0,[]
16833,1683300,Enlarge Circles,23,"['duality', 'maximum flow', 'linear programming', 'mathematics', 'minimum cost maximum flow']"
16834,1683400,Sum of QQ,14,"['combinatorics', 'mathematics', 'number theory', 'prefix sum', 'two-pointer']"
16835,1683500,Prime Routing,16,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory', 'primality test']"
16836,1683600,Rough Sorting,0,[]
16837,1683700,Manhattan,14,"['ad-hoc', 'geometry']"
16838,1683800,Dictionary,18,['dynamic programming']
16839,1683900,Clique Coloring,17,"['case work', 'greedy']"
16840,1684000,Dense Amidakuji,20,[]
16841,1684100,Cellular Automaton,26,['string']
16842,1684200,Directions,23,[]
16843,1684300,Snake,23,['geometry']
16844,1684400,Distance Sum,22,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'euler tour technique', 'segment tree', 'tree']"
16845,1684500,Substring Pairs,25,[]
16846,1684600,Hyperrectangle,19,"['combinatorics', 'dynamic programming', 'geometry', 'geometry; hyperdimensional', 'inclusion and exclusion', 'mathematics']"
16847,1684700,Teenage Mutant,4,"['bruteforcing', 'implementation', 'string']"
16848,1684800,Fairness,0,[]
16849,1684900,Craziness,10,['bruteforcing']
16850,1685000,Siblings,7,[]
16851,1685100,Family Portrait,0,[]
16852,1685200,Junior,0,[]
16853,1685300,필름,18,"['2-sat', 'bitmask', 'graph theory', 'strongly connected component']"
16854,1685400,편안한 문자열,14,"['dynamic programming', 'prefix sum']"
16855,1685500,"일해라, 류트!",17,['mathematics']
16856,1685600,감성 테트리스,21,"['binary search', 'data structures', 'implementation', 'sparse table']"
16857,1685700,잉크를 엎질렀다,24,[]
16858,1685800,고양이 소개팅,20,"['data structures', 'greedy', 'smaller to larger technique']"
16859,1685900,선인장의 최대 매칭,22,"['articulation points and bridges', 'cactus', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
16860,1686000,Are You Listening?,8,"['bruteforcing', 'geometry', 'mathematics']"
16861,1686100,Harshad Numbers,3,"['bruteforcing', 'implementation', 'mathematics']"
16862,1686200,An I for an Eye,0,[]
16863,1686300,Score!,9,[]
16864,1686400,So You Like Your Food Hot?,4,['bruteforcing']
16865,1686500,The Ups and Downs of Investing,6,"['bruteforcing', 'implementation']"
16866,1686600,Car Vet,17,"['breadth-first search', 'graph theory', 'graph traversal']"
16867,1686700,Difference,9,['bruteforcing']
16868,1686800,Pear-wise Voting,14,"['graph theory', 'graph traversal']"
16869,1686900,Pizza Cutting,0,[]
16870,1687000,The Punctilious Cruciverbalist,11,[]
16871,1687100,A Random Problem,19,[]
16872,1687200,Roman Holidays,16,"['binary search', 'sorting']"
16873,1687300,Sequential Yahtzee,0,[]
16874,1687400,Tours de Sales Force,21,"['maximum flow', 'minimum cost maximum flow', 'travelling salesman problem']"
16875,1687500,Watch Where You Step,16,"['bitmask', 'floyd–warshall', 'graph theory', 'strongly connected component']"
16876,1687600,재미있는 숫자 게임,14,"['dynamic programming', 'game theory']"
16877,1687700,핌버,18,"['game theory', 'sprague–grundy theorem']"
16878,1687800,궁전,22,"['dynamic programming', 'mathematics']"
16879,1687900,궁전 게임,20,"['game theory', 'sprague–grundy theorem']"
16880,1688000,"룩, 비숍, 킹, 나이트, 궁전 게임",21,"['game theory', 'sprague–grundy theorem']"
16881,1688100,행렬 게임,19,"['game theory', 'sprague–grundy theorem']"
16882,1688200,카드 게임,15,['game theory']
16883,1688300,대각 게임,19,"['game theory', 'sprague–grundy theorem']"
16884,1688400,나이트 게임,12,"['ad-hoc', 'game theory']"
16885,1688500,벡터의 합,19,"['divide and conquer', 'geometry', 'sorting', 'sweeping']"
16886,1688600,나누기 게임,18,"['game theory', 'mathematics', 'sprague–grundy theorem']"
16887,1688700,루트 님 게임,20,"['game theory', 'sprague–grundy theorem']"
16888,1688800,루트 게임,11,"['dynamic programming', 'game theory']"
16889,1688900,중복 없는 님 게임,20,"['bitmask', 'dynamic programming', 'game theory', 'sprague–grundy theorem']"
16890,1689000,창업,14,"['game theory', 'greedy', 'sorting', 'string']"
16891,1689100,탄성 충돌,14,"['mathematics', 'physics']"
16892,1689200,레몬 주스 게임,21,['game theory']
16893,1689300,소수 제곱 게임,19,"['data structures', 'dynamic programming', 'game theory', 'set / map by hashing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes', 'sprague–grundy theorem']"
16894,1689400,약수 게임,13,"['game theory', 'mathematics', 'number theory', 'primality test']"
16895,1689500,님 게임 3,17,"['game theory', 'sprague–grundy theorem']"
16896,1689600,더일곱이 게임,17,"['game theory', 'mathematics']"
16897,1689700,아인타 게임,19,"['case work', 'game theory', 'sprague–grundy theorem']"
16898,1689800,물건 넣기 게임,17,"['dynamic programming', 'game theory']"
16899,1689900,채석장 게임,18,"['game theory', 'sprague–grundy theorem']"
16900,1690000,이름 정하기,16,"['knuth–morris–pratt', 'string', 'z']"
16901,1690100,XOR MST,21,"['data structures', 'divide and conquer', 'graph theory', 'minimum spanning tree', 'tree', 'trie']"
16902,1690200,mex,18,"['data structures', 'segment tree', 'tree', 'trie']"
16903,1690300,수열과 쿼리 20,18,"['data structures', 'tree', 'trie']"
16904,1690400,집합과 쿼리,22,"['divide and conquer', 'gaussian elimination', 'linear algebra', 'mathematics', 'offline queries']"
16905,1690500,XOR 부분 행렬,18,"['data structures', 'mathematics', 'tree', 'trie']"
16906,1690600,욱제어,16,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'tree', 'trie']"
16907,1690700,서로 다른 부분 문자열 쿼리 2,22,"['data structures', 'offline queries', 'segment tree', 'string', 'suffix array and lcp array']"
16908,1690800,가장 긴 공통 부분 문자열,19,"['hashing', 'string', 'suffix array and lcp array']"
16909,1690900,카드 구매하기 3,18,"['data structures', 'stack']"
16910,1691000,mex와 쿼리,21,"['value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'segment tree']"
16911,1691100,그래프와 쿼리,21,"['data structures', 'disjoint set', 'divide and conquer', 'graph theory', 'offline dynamic connectivity', 'offline queries']"
16912,1691200,트리와 쿼리 12,21,"['data structures', 'disjoint set', 'divide and conquer', 'graph theory', 'offline dynamic connectivity', 'offline queries']"
16913,1691300,부분 문자열 변환,20,"['dynamic programming', 'knuth–morris–pratt', 'string']"
16914,1691400,K번째 부분 문자열,19,"['string', 'suffix array and lcp array']"
16915,1691500,호텔 관리,18,"['2-sat', 'graph theory', 'strongly connected component']"
16916,1691600,부분 문자열,4,"['string', 'implementation']"
16917,1691700,양념 반 후라이드 반,4,"['arithmetic', 'implementation', 'mathematics']"
16918,1691800,봄버맨,10,"['graph theory', 'graph traversal', 'implementation', 'simulation']"
16919,1691900,봄버맨 2,12,"['ad-hoc', 'implementation']"
16920,1692000,확장 게임,14,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal']"
16921,1692100,로마 숫자 만들기 2,17,['mathematics']
16922,1692200,로마 숫자 만들기,8,"['backtracking', 'bruteforcing', 'combinatorics', 'implementation', 'mathematics']"
16923,1692300,다음 다양한 단어,10,"['implementation', 'string']"
16924,1692400,십자가 찾기,9,"['bruteforcing', 'implementation', 'simulation']"
16925,1692500,문자열 추측,11,"['implementation', 'string']"
16926,1692600,배열 돌리기 1,10,['implementation']
16927,1692700,배열 돌리기 2,11,['implementation']
16928,1692800,뱀과 사다리 게임,11,"['breadth-first search', 'graph theory', 'graph traversal']"
16929,1692900,Two Dots,12,"['depth-first search', 'graph theory', 'graph traversal']"
16930,1693000,달리기,18,"['breadth-first search', 'graph theory', 'graph traversal']"
16931,1693100,겉넓이 구하기,9,"['geometry', 'geometry; 3d', 'implementation']"
16932,1693200,모양 만들기,13,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
16933,1693300,벽 부수고 이동하기 3,15,"['breadth-first search', 'graph theory', 'graph traversal']"
16934,1693400,게임 닉네임,14,"['data structures', 'set / map by hashing', 'string', 'tree', 'trie']"
16935,1693500,배열 돌리기 3,10,['implementation']
16936,1693600,나3곱2,11,"['constructive', 'mathematics', 'sorting']"
16937,1693700,두 스티커,8,"['bruteforcing', 'geometry', 'implementation']"
16938,1693800,캠프 준비,11,"['backtracking', 'bitmask', 'bruteforcing', 'combinatorics', 'mathematics']"
16939,1693900,2×2×2 큐브,14,['implementation']
16940,1694000,BFS 스페셜 저지,13,"['breadth-first search', 'graph theory', 'graph traversal']"
16941,1694100,꼬리별,24,"['dynamic programming', 'mathematics', 'number theory']"
16942,1694200,문자열 접기,13,"['dynamic programming', 'string']"
16943,1694300,숫자 재배치,10,"['backtracking', 'bruteforcing', 'combinatorics', 'mathematics']"
16944,1694400,강력한 비밀번호,4,"['implementation', 'string']"
16945,1694500,매직 스퀘어로 변경하기,9,"['backtracking', 'bruteforcing']"
16946,1694600,벽 부수고 이동하기 4,14,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
16947,1694700,서울 지하철 2호선,13,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
16948,1694800,데스 나이트,10,"['breadth-first search', 'graph theory', 'graph traversal']"
16949,1694900,연속 반복 문자열,0,[]
16950,1695000,레드 블루 스패닝 트리 2,19,"['constructive', 'data structures', 'disjoint set', 'graph theory', 'minimum spanning tree']"
16951,1695100,블록 놀이,7,['bruteforcing']
16952,1695200,체스판 여행 2,16,"['breadth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
16953,1695300,A → B,9,"['breadth-first search', 'graph theory', 'graph traversal', 'greedy']"
16954,1695400,움직이는 미로 탈출,13,"['breadth-first search', 'graph theory', 'graph traversal']"
16955,1695500,"오목, 이길 수 있을까?",7,"['bruteforcing', 'implementation']"
16956,1695600,늑대와 양,8,"['ad-hoc', 'constructive']"
16957,1695700,체스판 위의 공,12,"['data structures', 'dynamic programming', 'graph theory', 'graph traversal']"
16958,1695800,텔레포트,12,"['bruteforcing', 'floyd–warshall', 'graph theory']"
16959,1695900,체스판 여행 1,15,"['breadth-first search', 'graph theory', 'graph traversal']"
16960,1696000,스위치와 램프,7,['implementation']
16961,1696100,탭 vs 공백,6,['implementation']
16964,1696400,DFS 스페셜 저지,13,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'sorting']"
16965,1696500,구간과 쿼리,11,"['breadth-first search', 'graph theory', 'graph traversal']"
16966,1696600,구간과 쿼리 2,25,[]
16967,1696700,배열 복원하기,8,['implementation']
16968,1696800,차량 번호판 1,5,"['combinatorics', 'mathematics']"
16969,1696900,차량 번호판 2,6,"['combinatorics', 'mathematics']"
16970,1697000,정수 좌표의 개수,10,"['bruteforcing', 'euclidean algorithm', 'mathematics', 'number theory']"
16971,1697100,배열 B의 값,13,"['mathematics', 'prefix sum']"
16972,1697200,814 - 1,5,"['constructive', 'geometry', 'randomization']"
16973,1697300,직사각형 탈출,12,"['breadth-first search', 'graph theory', 'graph traversal', 'prefix sum']"
16974,1697400,레벨 햄버거,9,"['mathematics', 'recursion']"
16975,1697500,수열과 쿼리 21,17,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
16976,1697600,민혁이의 게임 파티,19,"['binary search', 'data structures', 'disjoint set', 'parallel binary search']"
16977,1697700,히스토그램에서 가장 큰 직사각형과 쿼리,23,"['binary search', 'data structures', 'parallel binary search', 'persistent segment tree', 'segment tree']"
16978,1697800,수열과 쿼리 22,17,"['data structures', 'offline queries', 'segment tree']"
16979,1697900,수열과 쿼리 23,20,"['value / coordinate compression', 'data structures', ""mo's"", 'offline queries', 'segment tree']"
16980,1698000,Bitaro the Brave,8,"['combinatorics', 'implementation', 'mathematics', 'prefix sum']"
16981,1698100,Exhibition,15,"['greedy', 'sorting']"
16982,1698200,Growing Vegetables is Fun 3,20,['dynamic programming']
16983,1698300,Coin Collecting,23,['greedy']
16984,1698400,Unique Cities,26,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'segment tree', 'stack', 'tree']"
16985,1698500,Maaaaaaaaaze,14,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal', 'implementation']"
16986,1698600,인싸들의 가위바위보,13,"['backtracking', 'bruteforcing', 'implementation']"
16987,1698700,계란으로 계란치기,10,"['backtracking', 'bruteforcing']"
16988,1698800,Baaaaaaaaaduk2 (Easy),13,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
16989,1698900,Baaaaaaaaaduk2 (Hard),17,"['graph theory', 'graph traversal', 'implementation']"
16990,1699000,마법 장벽,17,[]
16991,1699100,외판원 순회 3,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'travelling salesman problem']"
16992,1699200,3-SAT,18,"['heuristics', 'simulated annealing']"
16993,1699300,연속합과 쿼리,20,"['data structures', 'segment tree']"
16994,1699400,로프와 쿼리,20,"['data structures', 'rope', 'splay tree', 'string', 'tree']"
16995,1699500,Piece of Cake,19,"['combinatorics', 'geometry', 'mathematics']"
16996,1699600,Busy Board,23,[]
16997,1699700,Cost of Living,24,[]
16998,1699800,"It’s a Mod, Mod, Mod, Mod World",22,"['euclidean algorithm', 'mathematics', 'number theory']"
16999,1699900,Monotony,22,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
17000,1700000,Heaps of Fun,22,[]
17001,1700100,Intersecting Rectangles,19,['sweeping']
17002,1700200,Rocket Powered Hovercraft,25,[]
17003,1700300,Cutting Strings,24,[]
17004,1700400,Subsequences in Substrings,15,[]
17005,1700500,Knight of the Tarot Cards,23,"[""dijkstra's"", 'graph theory', 'mathematics', 'number theory']"
17006,1700600,"Planes, Trains, but not Automobiles",21,[]
17007,1700700,XOR Sequences,18,['divide and conquer']
17008,1700800,3-SAT 2,18,"['heuristics', 'simulated annealing']"
17009,1700900,Winning Score,2,"['arithmetic', 'implementation', 'mathematics']"
17010,1701000,Time to Decompress,3,['implementation']
17011,1701100,Cold Compress,4,['implementation']
17012,1701200,Rule of Three,0,[]
17013,1701300,Flipper,5,"['implementation', 'simulation']"
17014,1701400,Pretty Average Primes,10,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
17015,1701500,Arithmetic Square,20,[]
17016,1701600,Tourism,21,[]
17017,1701700,Triangle: The Data Structure,21,['divide and conquer']
17018,1701800,Redistricting,19,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
17019,1701900,Exercise Route,23,[]
17020,1702000,Train Tracking 2,22,"['data structures', 'dynamic programming', 'segment tree']"
17021,1702100,Cow Poetry,14,"['combinatorics', 'dynamic programming', 'mathematics']"
17022,1702200,Sleepy Cow Sorting,16,"['data structures', 'segment tree']"
17023,1702300,Shortcut,15,"[""dijkstra's"", 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
17024,1702400,Grass Planting,9,['tree']
17025,1702500,Icy Perimeter,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
17026,1702600,Mountain View,12,"['data structures', 'sorting', 'stack', 'sweeping']"
17027,1702700,Shell Game,4,"['implementation', 'simulation']"
17028,1702800,Sleepy Cow Sorting,7,"['ad-hoc', 'sorting']"
17029,1702900,Guess the Animal,8,"['bruteforcing', 'data structures', 'set / map by hashing', 'implementation', 'string']"
17030,1703000,Cow Dating,21,"['convex hull', 'divide and conquer', 'geometry', 'mathematics', 'probability theory', 'two-pointer']"
17031,1703100,Moorio Kart,21,"['combinatorics', 'data structures', 'dynamic programming', 'knapsack', 'mathematics']"
17032,1703200,Mowing Mischief,27,"['data structures', 'divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'segment tree']"
17033,1703300,Cow Land,20,"['data structures', 'heavy-light decomposition', 'segment tree', 'tree']"
17034,1703400,Dishwashing,18,"['binary search', 'data structures', 'greedy', 'implementation', 'stack']"
17035,1703500,Painting the Barn (Gold),19,"['dynamic programming', 'prefix sum']"
17036,1703600,Sleepy Cow Herding (Silver),15,"['ad-hoc', 'two-pointer']"
17037,1703700,Painting the Barn (Silver),12,['prefix sum']
17038,1703800,The Great Revegetation (Silver),14,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
17039,1703900,Sleepy Cow Herding (Bronze),6,"['implementation', 'mathematics']"
17040,1704000,The Great Revegetation (Bronze),7,"['backtracking', 'bruteforcing', 'graph theory', 'graph traversal', 'greedy']"
17041,1704100,Measuring Traffic,10,['implementation']
17042,1704200,Elder,3,"['implementation', 'simulation']"
17043,1704300,Wand,9,"['graph theory', 'graph traversal']"
17044,1704400,Kisik,13,"['data structures', 'greedy', 'priority queue', 'sorting']"
17045,1704500,Slagalica,0,[]
17046,1704600,Akvizna,23,"['aliens trick', 'binary search', 'convex hull trick', 'dynamic programming']"
17047,1704700,Titlovi,5,"['parsing', 'string']"
17048,1704800,Jarvis,6,"['data structures', 'set / map by hashing', 'sorting', 'set / map by trees']"
17049,1704900,Ispit,12,"['string', 'two-pointer']"
17050,1705000,Parametriziran,16,"['binary search', 'bitmask', 'hashing']"
17051,1705100,Transport,22,"['binary search', '센트로이드', 'centroid decomposition', 'divide and conquer', 'tree']"
17052,1705200,Lun,5,"['implementation', 'string']"
17053,1705300,Konj,13,[]
17054,1705400,Sličice,13,['dynamic programming']
17055,1705500,Simfonija,16,[]
17056,1705600,Mobitel,21,"['combinatorics', 'dynamic programming', 'mathematics', 'number theory']"
17057,1705700,Alice in the Digital World,0,[]
17058,1705800,Reservoir,0,[]
17059,1705900,Terraced fields,0,[]
17060,1706000,Message,0,[]
17069,1706900,파이프 옮기기 2,12,['dynamic programming']
17070,1707000,파이프 옮기기 1,11,"['dynamic programming', 'graph theory', 'graph traversal']"
17071,1707100,숨바꼭질 5,16,"['breadth-first search', 'graph theory', 'graph traversal']"
17072,1707200,아스키 아트,5,['implementation']
17073,1707300,나무 위의 빗물,11,"['graph theory', 'graph traversal', 'mathematics', 'tree']"
17074,1707400,정렬,9,['dynamic programming']
17075,1707500,유물 복원,16,"['dynamic programming', 'mathematics']"
17076,1707600,망가진 데이터,18,"['data structures', 'segment tree']"
17077,1707700,고양이 우선 탐색,22,"['ad-hoc', 'breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
17078,1707800,원 위의 개미,16,"['binary search', 'prefix sum']"
17079,1707900,달콤새콤,20,"['combinatorics', 'greedy', 'mathematics']"
17080,1708000,결함 게임,14,['game theory']
17081,1708100,RPG Extreme,19,"['implementation', 'simulation']"
17082,1708200,쿼리와 쿼리,17,"['data structures', 'greedy']"
17083,1708300,그리드랜드,20,"['ad-hoc', 'breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
17084,1708400,"f(k, n)",17,['mathematics']
17085,1708500,십자가 2개 놓기,11,"['bruteforcing', 'implementation']"
17086,1708600,아기 상어 2,9,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
17087,1708700,숨바꼭질 6,9,"['euclidean algorithm', 'mathematics', 'number theory']"
17088,1708800,등차수열 변환,11,['bruteforcing']
17089,1708900,세 친구,10,"['bruteforcing', 'graph theory']"
17090,1709000,미로 탈출하기,13,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
17091,1709100,단어 시계,5,"['case work', 'implementation', 'string']"
17092,1709200,색칠 공부,12,"['data structures', 'set / map by hashing', 'sorting']"
17093,1709300,Total Circle,5,"['bruteforcing', 'geometry', 'pythagoras theorem']"
17094,1709400,Serious Problem,3,"['implementation', 'string']"
17095,1709500,Min-Max Subsequence,8,[]
17096,1709600,Tourist,19,"[""dijkstra's"", 'graph theory']"
17097,1709700,Truth Tellers,18,"['binary search', 'data structures', 'segment tree with lazy propagation', 'segment tree']"
17098,1709800,Boomerangs,22,"['articulation points and bridges', 'graph theory']"
17099,1709900,Contest,12,"['data structures', 'greedy', 'priority queue', 'sorting']"
17100,1710000,Candy Boxes,18,[]
17101,1710100,Dynamic Centroid,21,"['data structures', 'euler tour technique', 'graph theory', 'heavy-light decomposition', 'lowest common ancestor', 'segment tree', 'tree']"
17102,1710200,Grid Query,22,"['data structures', 'segment tree with lazy propagation', 'offline queries', 'segment tree', 'sweeping']"
17103,1710300,골드바흐 파티션,9,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
17104,1710400,골드바흐 파티션 2,21,"['fast fourier transform', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
17105,1710500,골드바흐 트리플,22,"['fast fourier transform', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
17106,1710600,빙고,16,"['bruteforcing', 'implementation']"
17107,1710700,Thinking Language,0,"['implementation', 'parsing', 'string']"
17108,1710800,파이의 왕 김파이,0,[]
17109,1710900,"연결그래프의 모든 간선의 저항이 1Ω일 경우 간선으로 직접 이어진 모든 쌍의 점 A, B 에 대해 A와 B 사이의 합성저항 값의 총합을 구한 뒤 소수점 넷째자리에서 반올림한 값을 출력하는 문제",0,[]
17110,1711000,Africa 2,0,[]
17111,1711100,Is it rated?,0,"['parsing', 'string']"
17112,1711200,ì¸ì½”ë”©,0,"['case work', 'parsing', 'utf-8 inputs', 'string']"
17113,1711300,3분 그래프,0,[]
17114,1711400,하이퍼 토마토,15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
17115,1711500,Kudeki Chain,0,"['precomputation', 'bruteforcing']"
17116,1711600,목격자,0,[]
17117,1711700,평가,0,[]
17118,1711800,갓 소수,20,"['mathematics', 'number theory']"
17119,1711900,오색 정리,0,[]
17120,1712000,이모지,0,"['implementation', 'string']"
17121,1712100,골드바흐 삼각형,0,[]
17122,1712200,체스,4,['implementation']
17123,1712300,배열 놀이,9,"['mathematics', 'prefix sum']"
17124,1712400,두 개의 배열,8,"['binary search', 'sorting']"
17126,1712600,연산,17,"['arbitrary precision / big integers', 'value / coordinate compression', 'data structures', 'segment tree', 'sorting']"
17127,1712700,벚꽃이 정보섬에 피어난 이유,5,"['bruteforcing', 'implementation']"
17128,1712800,소가 정보섬에 올라온 이유,8,"['implementation', 'mathematics']"
17129,1712900,윌리암슨수액빨이딱따구리가 정보섬에 올라온 이유,10,"['breadth-first search', 'graph theory', 'graph traversal']"
17130,1713000,토끼가 정보섬에 올라온 이유,12,['dynamic programming']
17131,1713100,여우가 정보섬에 올라온 이유,17,"['data structures', 'segment tree', 'sweeping']"
17132,1713200,두더지가 정보섬에 올라온 이유,16,"['data structures', 'disjoint set', 'sorting']"
17133,1713300,라쿤이 정보섬에 올라온 이유,21,['maximum flow']
17134,1713400,르모앙의 추측,20,"['fast fourier transform', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
17135,1713500,캐슬 디펜스,13,"['bruteforcing', 'graph theory', 'implementation', 'simulation']"
17136,1713600,색종이 붙이기,14,"['backtracking', 'bruteforcing']"
17137,1713700,사탕 놀이,15,"['combinatorics', 'dynamic programming', 'mathematics', 'sorting']"
17138,1713800,습격자 초라기와 쿼리 (Easy),20,"['data structures', 'segment tree']"
17139,1713900,습격자 초라기와 쿼리 (Normal),22,"['case work', 'data structures', 'divide and conquer', 'dynamic programming', 'segment tree']"
17140,1714000,이차원 배열과 연산,12,"['implementation', 'simulation', 'sorting']"
17141,1714100,연구소 2,12,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
17142,1714200,연구소 3,12,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
17143,1714300,낚시왕,14,"['implementation', 'simulation']"
17144,1714400,미세먼지 안녕!,12,"['implementation', 'simulation']"
17145,1714500,청소 로봇,21,"['case work', 'constructive']"
17146,1714600,IZLET,22,"['ad-hoc', 'constructive', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'greedy', 'tree']"
17147,1714700,LJEPOTICA,17,['dynamic programming']
17148,1714800,SEGWAY,12,"['dynamic programming', 'sorting']"
17149,1714900,TENIS,22,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
17150,1715000,Azulejos,17,"['data structures', 'greedy', 'set / map by trees']"
17151,1715100,Beautiful Bridges,22,"['dynamic programming', 'geometry', 'mathematics']"
17152,1715200,Checks Post Facto,25,"['backtracking', 'bruteforcing', 'implementation', 'parsing', 'simulation', 'string']"
17153,1715300,Circular DNA,17,"['data structures', 'greedy', 'prefix sum', 'stack']"
17154,1715400,Dead-End Detector,19,"['breadth-first search', 'biconnected component', 'depth-first search', 'graph theory', 'graph traversal']"
17155,1715500,Directing Rainfall,27,"['data structures', 'geometry', 'segment tree']"
17156,1715600,First of Her Name,23,"['aho-corasick', 'data structures', 'dynamic programming', 'string', 'tree', 'trie']"
17157,1715700,Hobson’s Trains,21,"['graph theory', 'graph traversal', 'smaller to larger technique']"
17158,1715800,Karel the Robot,23,"['dynamic programming', 'graph theory', 'graph traversal', 'implementation', 'parsing', 'string']"
17159,1715900,Miniature Golf,22,['sweeping']
17160,1716000,Traffic Blights,27,"['ad-hoc', 'chinese remainder theorem', 'mathematics', 'number theory']"
17161,1716100,편집 거리 (Hard),24,"['divide and conquer', 'dynamic programming', ""hirschberg's""]"
17162,1716200,가희의 수열놀이 (Small),12,"['data structures', 'mathematics', 'stack']"
17163,1716300,가희의 수열놀이 (Large),17,"['data structures', 'priority queue', 'segment tree', 'stack']"
17164,1716400,Rainbow Beads,7,"['sliding window', 'string', 'two-pointer']"
17165,1716500,Gosu,20,"['ad-hoc', 'graph theory']"
17166,1716600,Voronoi Diagram Again,19,"['geometry', 'sweeping']"
17167,1716700,A Plus Equals B,18,"['constructive', 'mathematics']"
17168,1716800,Water Knows The Answers,21,"['convex hull trick', 'dynamic programming', 'greedy']"
17169,1716900,Eat Economically,23,"['data structures', 'greedy', 'priority queue']"
17170,1717000,Increasing Sequence,23,"['dominator tree', 'dynamic programming', 'lowest common ancestor', 'tree']"
17171,1717100,Jealous Teachers,25,"['bipartite matching', 'depth-first search', 'graph theory', 'graph traversal', 'greedy', ""hall's theorem""]"
17172,1717200,Dijkstra Is Playing At My House,27,"['ad-hoc', 'data structures', 'segment tree', 'sweeping', 'set / map by trees']"
17173,1717300,배수들의 합,4,"['bruteforcing', 'implementation', 'mathematics']"
17174,1717400,전체 계산 횟수,3,"['arithmetic', 'mathematics']"
17175,1717500,피보나치는 지겨웡~,8,['dynamic programming']
17176,1717600,암호해독기,6,"['implementation', 'string']"
17177,1717700,내접사각형 만들기,4,['geometry']
17178,1717800,줄서기,11,"['data structures', 'implementation', 'simulation', 'stack']"
17179,1717900,케이크 자르기,11,"['binary search', 'parametric search']"
17180,1718000,문자열 비교하기,14,"['dynamic programming', 'string']"
17181,1718100,나랏말싸미 America와 different~,13,[]
17182,1718200,우주 탐사선,13,"['backtracking', 'bitmask', 'floyd–warshall', 'graph theory']"
17184,1718400,Nautilus,18,['bit set']
17185,1718500,Alpine Valley,21,"['data structures', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'euler tour technique', 'graph theory', 'graph traversal', 'sparse table', 'tree']"
17186,1718600,Tom’s Kitchen,20,['dynamic programming']
17187,1718700,Necklace,20,"['dynamic programming', 'string']"
17188,1718800,Olympiads,22,"['data structures', 'greedy', 'priority queue', 'sorting']"
17190,1719000,Compound Escape,24,"['dynamic programming', 'dynamic programming using connection profile']"
17191,1719100,Valleys,23,"['euler characteristic (χ=v-e+f)', 'geometry']"
17192,1719200,Snakes,14,['dynamic programming']
17193,1719300,I Would Walk 500 Miles,14,"['graph theory', 'greedy', 'mathematics', 'minimum spanning tree']"
17194,1719400,Balancing Inversions,19,"['greedy', 'two-pointer']"
17195,1719500,Left Out,15,"['bruteforcing', 'greedy']"
17196,1719600,Cow Steeplechase II,20,"['geometry', 'line segment intersection check', 'sweeping']"
17197,1719700,Fence Planning,10,"['breadth-first search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal']"
17198,1719800,Bucket Brigade,7,"['breadth-first search', 'case work', 'graph theory', 'graph traversal']"
17199,1719900,Milk Factory,10,"['depth-first search', 'graph theory', 'graph traversal']"
17200,1720000,Cow Evolution,15,"['ad-hoc', 'tree']"
17201,1720100,자석 체인,4,"['implementation', 'string']"
17202,1720200,핸드폰 번호 궁합,5,"['dynamic programming', 'implementation', 'string']"
17203,1720300,∑|ΔEasyMAX|,7,"['implementation', 'prefix sum']"
17204,1720400,죽음의 게임,8,"['graph theory', 'graph traversal', 'implementation', 'simulation']"
17205,1720500,진우의 비밀번호,11,"['combinatorics', 'mathematics']"
17206,1720600,준석이의 수학 숙제,4,['mathematics']
17207,1720700,돌려막기,6,"['arithmetic', 'implementation', 'mathematics']"
17208,1720800,카우버거 알바생,12,"['dynamic programming', 'knapsack']"
17209,1720900,새내기와 헌내기,14,"['graph theory', 'graph traversal']"
17210,1721000,문문문,3,"['implementation', 'mathematics']"
17211,1721100,좋은 날 싫은 날,6,"['mathematics', 'probability theory']"
17212,1721200,달나라 토끼를 위한 구매대금 지불 도우미,8,['dynamic programming']
17213,1721300,과일 서리,9,"['combinatorics', 'dynamic programming', 'mathematics']"
17214,1721400,다항 함수의 적분,11,"['calculus', 'case work', 'mathematics', 'parsing', 'string']"
17215,1721500,볼링 점수 계산,13,['implementation']
17216,1721600,가장 큰 감소 부분 수열,10,['dynamic programming']
17217,1721700,마술사 남정훈,16,[]
17218,1721800,비밀번호 만들기,11,['dynamic programming']
17219,1721900,비밀번호 찾기,7,"['data structures', 'set / map by hashing']"
17220,1722000,마약수사대,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
17221,1722100,인재야 머쉬맘 잡았어?,18,"['bruteforcing', 'greedy']"
17222,1722200,위스키 거래,17,['maximum flow']
17223,1722300,해시그래프,14,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'implementation', 'stack']"
17224,1722400,APC는 왜 서브태스크 대회가 되었을까?,5,"['greedy', 'sorting']"
17225,1722500,세훈이의 선물가게,10,"['data structures', 'implementation', 'queue']"
17226,1722600,묘수풀이: 모독,17,"['bruteforcing', 'implementation', 'simulation']"
17227,1722700,그래서 팩 주냐?,18,"['dynamic programming', 'graph theory', 'topological sorting']"
17228,1722800,아름다운 만영로,19,"['depth-first search', 'graph theory', 'graph traversal', 'hashing', 'knuth–morris–pratt', 'rabin–karp', 'string', 'tree']"
17229,1722900,아싸 너!,19,"['ad-hoc', 'implementation', 'simulation']"
17230,1723000,문제집 만들기,18,"['data structures', 'set / map by hashing', 'segment tree']"
17231,1723100,이건 버그야!,23,"['dynamic programming', 'dynamic programming on trees', 'tree']"
17232,1723200,생명 게임,12,"['implementation', 'prefix sum', 'simulation']"
17233,1723300,문자열 장식,18,"['knuth–morris–pratt', 'string', 'two-pointer']"
17234,1723400,Scoring Hack,14,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
17235,1723500,"Good Pizza, Great Pizza",12,['geometry']
17236,1723600,Heights,12,"['geometry', 'mathematics']"
17237,1723700,Conquering A Castle,11,"['constructive', 'game theory', 'greedy', 'mathematics']"
17238,1723800,Delicious Pineapple Pizza,18,"['binary search', 'bipartite matching', 'parametric search']"
17239,1723900,Linear-Feedback Shift Register,18,"['gaussian elimination', 'linear algebra', 'mathematics']"
17240,1724000,Team Selection,15,"['backtracking', 'bitmask', 'bruteforcing', 'dynamic programming', 'dynamic programming using bitfield', 'greedy']"
17241,1724100,Pineapple Advertising,10,"['graph theory', 'graph traversal']"
17242,1724200,Kaka & Bebe,15,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
17243,1724300,Almost-K Increasing Subsequence,11,['dynamic programming']
17244,1724400,아맞다우산,14,"['breadth-first search', 'bitmask', 'bruteforcing', 'graph theory', 'graph traversal']"
17245,1724500,서버실,9,"['binary search', 'parametric search']"
17246,1724600,씨씨,12,[]
17247,1724700,택시 거리,5,"['arithmetic', 'geometry', 'mathematics']"
17248,1724800,물리 공부,4,[]
17249,1724900,태보태보 총난타,4,"['implementation', 'string']"
17250,1725000,은하철도,12,"['data structures', 'disjoint set']"
17251,1725100,힘 겨루기,11,['dynamic programming']
17252,1725200,삼삼한 수,8,"['bruteforcing', 'mathematics']"
17253,1725300,삼삼한 수 2,9,['mathematics']
17254,1725400,키보드 이벤트,7,['sorting']
17255,1725500,N으로 만들기,12,"['backtracking', 'data structures', 'set / map by trees']"
17256,1725600,달달함이 넘쳐흘러,1,"['arithmetic', 'implementation', 'mathematics']"
17257,1725700,불확정성이 넘쳐흘러,19,"['inclusion and exclusion', 'mathematics', 'number theory']"
17258,1725800,인기가 넘쳐흘러,17,['dynamic programming']
17259,1725900,선물이 넘쳐흘러,10,['implementation']
17260,1726000,계곡이 넘쳐흘러,14,"['depth-first search', 'graph theory', 'graph traversal']"
17261,1726100,석유가 넘쳐흘러,20,"['greedy', 'parametric search', 'tree']"
17262,1726200,팬덤이 넘쳐흘러,6,['greedy']
17263,1726300,Sort 마스터 배지훈,3,['implementation']
17264,1726400,I AM IRONMAN,8,"['data structures', 'set / map by hashing']"
17265,1726500,나의 인생에는 수학과 함께,11,"['bruteforcing', 'depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
17266,1726600,어두운 굴다리,7,"['binary search', 'implementation', 'sweeping']"
17267,1726700,상남자,16,"['breadth-first search', 'graph theory', 'graph traversal']"
17268,1726800,미팅의 저주,13,"['combinatorics', 'dynamic programming', 'mathematics']"
17269,1726900,이름궁합 테스트,5,"['arithmetic', 'implementation', 'mathematics']"
17270,1727000,연예인은 힘들어,14,"[""dijkstra's"", 'floyd–warshall', 'graph theory', 'implementation']"
17271,1727100,리그 오브 레전설 (Small),10,['dynamic programming']
17272,1727200,리그 오브 레전설 (Large),15,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
17273,1727300,카드 공장 (Small),4,[]
17274,1727400,카드 공장 (Large),22,"['data structures', 'merge sort tree', 'segment tree', 'sorting']"
17275,1727500,부족 전쟁,17,"['combinatorics', 'mathematics']"
17276,1727600,배열 돌리기,9,['implementation']
17277,1727700,주식,17,"['data structures', 'priority queue']"
17278,1727800,이진 문자열,0,[]
17279,1727900,홀수 부분열,14,"['dynamic programming', 'knapsack']"
17280,1728000,카풀 매칭,15,"['data structures', 'greedy', 'priority queue']"
17281,1728100,⚾,12,"['bruteforcing', 'implementation']"
17282,1728200,Grid Query 2,25,"['data structures', 'multidimensional segment tree', 'segment tree']"
17283,1728300,I am Groot,5,"['arithmetic', 'implementation', 'mathematics']"
17284,1728400,Vending Machine,3,"['arithmetic', 'implementation', 'mathematics']"
17285,1728500,XORChic,4,"['implementation', 'mathematics', 'string']"
17286,1728600,유미,6,"['bruteforcing', 'geometry', 'pythagoras theorem']"
17287,1728700,"The Deeper, The Better",7,"['implementation', 'sweeping']"
17288,1728800,3개만!,5,[]
17289,1728900,에니그마,9,[]
17290,1729000,Crazy_aRcade_Good,5,"['bruteforcing', 'geometry']"
17291,1729100,새끼치기,9,"['dynamic programming', 'implementation']"
17292,1729200,바둑이 포커,11,['sorting']
17293,1729300,맥주 99병,4,['implementation']
17294,1729400,귀여운 수~ε٩(๑> ₃ <)۶з,5,"['implementation', 'mathematics']"
17295,1729500,엔드게임 스포일러,1,['implementation']
17296,1729600,But can you do it in 0.5x A presses?,7,"['implementation', 'simulation']"
17297,1729700,Messi Gimossi,13,"['divide and conquer', 'dynamic programming']"
17298,1729800,오큰수,12,"['data structures', 'stack']"
17299,1729900,오등큰수,13,"['data structures', 'stack']"
17300,1730000,패턴,8,['implementation']
17301,1730100,NC 문자열,15,"['combinatorics', 'mathematics']"
17302,1730200,흰색으로 만들기,15,['ad-hoc']
17303,1730300,슈퍼브 다트,20,"['biconnected component', 'data structures', 'disjoint set', 'dual graph', 'geometry', 'graph theory', 'planar graph', 'area of a polygon']"
17304,1730400,변호사들,20,"['graph theory', 'graph traversal']"
17305,1730500,사탕 배달,12,"['greedy', 'prefix sum', 'sorting']"
17306,1730600,전쟁 중의 삶,18,"['data structures', 'tree', 'trie']"
17307,1730700,색깔 통일하기,13,"['bruteforcing', 'prefix sum']"
17308,1730800,Getting-Up Syndrome,16,"['bitmask', 'greedy']"
17309,1730900,Enchanted Forest,24,"['binary search', 'data structures', 'disjoint set', 'divide and conquer', 'graph theory', 'offline dynamic connectivity', 'offline queries']"
17310,1731000,Zoo,19,"['data structures', 'knuth–morris–pratt', 'sparse table', 'string']"
17311,1731100,Random Number Generator,20,['prefix sum']
17312,1731200,Ticket Purchase,24,[]
17313,1731300,Inner Product,24,"['linear algebra', 'mathematics', 'randomization']"
17314,1731400,Tree Count,24,[]
17315,1731500,Matrix Game,18,"['exponentiation by squaring', 'mathematics']"
17316,1731600,Calligrapher,23,[]
17317,1731700,Fast Food Restaurant,24,[]
17318,1731800,Highway Cycling,25,"['binary search', 'calculus', 'mathematics', 'numerical analysis']"
17319,1731900,Magic Chessboard,23,[]
17320,1732000,Lost In The Park,25,"['mathematics', 'tree']"
17321,1732100,Food Festival,21,"['bellman–ford', 'maximum flow', 'graph theory', 'minimum cost maximum flow']"
17322,1732200,Rabbit Farming,22,"['mathematics', 'number theory']"
17323,1732300,Intelligent Car Racing,0,[]
17324,1732400,Ali's Typewriter,22,[]
17325,1732500,Road Construction,0,[]
17326,1732600,NOI Carnival,0,[]
17327,1732700,Energy Harvesting,18,[]
17328,1732800,Super Piano,20,"['data structures', 'priority queue', 'persistent segment tree', 'segment tree']"
17329,1732900,Altitude,21,[]
17330,1733000,Transformed Sequence,0,[]
17331,1733100,Modified Treap,19,"['dynamic programming', 'prefix sum']"
17332,1733200,Plants vs. Zombies,0,[]
17333,1733300,Pipe Marbles,22,[]
17334,1733400,Masquerade Party,0,[]
17335,1733500,Course Design,0,[]
17336,1733600,Hiring Employees,26,"['maximum flow', 'minimum cost maximum flow']"
17337,1733700,Olympic Logistics,22,[]
17338,1733800,Candy Rain,22,"['data structures', 'multidimensional segment tree', 'segment tree']"
17339,1733900,Social Network,0,[]
17340,1734000,Cash Exchange,22,"['convex hull trick', 'dynamic programming']"
17341,1734100,Necklace Factory,21,[]
17342,1734200,Counting Spanning Trees,25,"['berlekamp–massey', 'dynamic programming', 'dynamic programming using connection profile']"
17343,1734300,Network Charges,23,[]
17344,1734400,Millennium Worm,0,[]
17345,1734500,Maximum Profit,22,"['maximum flow', 'max-flow min-cut theorem']"
17346,1734600,Maintaining a Sequence,23,"['splay tree', 'tree']"
17347,1734700,Text Editor,18,"['data structures', 'rope', 'string']"
17348,1734800,국제 옥토끼 기구,24,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'offline queries', 'segment tree', 'tree']"
17349,1734900,1루수가 누구야,12,['implementation']
17350,1735000,2루수 이름이 뭐야,3,"['implementation', 'string']"
17351,1735100,3루수는 몰라,12,['dynamic programming']
17352,1735200,여러분의 다리가 되어 드리겠습니다!,11,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
17353,1735300,"하늘에서 떨어지는 1, 2, ..., R-L+1개의 별",19,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
17354,1735400,DVD,14,"['mathematics', 'number theory']"
17355,1735500,Messi An-Gimossi,14,"['mathematics', 'number theory', 'primality test']"
17356,1735600,욱 제,2,"['arithmetic', 'mathematics']"
17357,1735700,자동차가 차주 김표준의 편을 들면?,7,"['bruteforcing', 'mathematics', 'statistics']"
17358,1735800,복불복으로 지구 멸망,6,"['combinatorics', 'mathematics']"
17359,1735900,전구 길만 걷자,9,['bruteforcing']
17360,1736000,팰린드롬과 관련된 수열의 개수,12,"['case work', 'combinatorics', 'mathematics']"
17361,1736100,배열 A 찾기,18,"['binary search', 'graph theory', 'topological sorting']"
17362,1736200,수학은 체육과목 입니다 2,2,"['arithmetic', 'mathematics']"
17363,1736300,우유가 넘어지면?,5,['implementation']
17364,1736400,대회,21,"['data structures', 'greedy', 'sorting']"
17365,1736500,별다줄,18,"['data structures', 'dynamic programming', 'string', 'tree', 'trie']"
17366,1736600,%,24,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'lowest common ancestor', 'sparse table', 'tree']"
17367,1736700,공교육 도박,15,"['dynamic programming', 'mathematics', 'probability theory']"
17368,1736800,교점 세기,21,"['case work', 'mathematics']"
17369,1736900,유령의 집,19,"['binary search', 'data structures', 'graph theory', 'graph traversal', 'implementation', 'set / map by trees']"
17370,1737000,육각형 우리 속의 개미,13,"['backtracking', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
17371,1737100,이사,15,"['geometry', 'greedy']"
17372,1737200,피보나치 수의 최대공약수의 합,24,"['dynamic programming', 'euler totient function', 'mathematics', 'number theory', 'prefix sum']"
17373,1737300,녜힁,20,"['binary search', 'data structures', 'offline queries', 'persistent segment tree', 'segment tree']"
17374,1737400,비트베리,9,['mathematics']
17375,1737500,컨테이너,26,"['maximum flow', 'minimum cost maximum flow']"
17376,1737600,룰렛,23,"['combinatorics', 'data structures', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'lowest common ancestor', 'mathematics', 'probability theory', 'sparse table', 'tree']"
17377,1737700,Taxi,16,"['implementation', 'parsing', 'string']"
17378,1737800,공의 합집합,23,"['calculus', 'convex hull', 'geometry', 'mathematics']"
17379,1737900,땅다람쥐,26,"['case work', 'constructive', 'implementation', 'mathematics']"
17380,1738000,죽은 선인장의 사회,26,"['articulation points and bridges', 'binary search', 'cactus', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
17381,1738100,미로,28,"['graph theory', 'heavy-light decomposition', 'strongly connected component', 'tree']"
17382,1738200,격자 속의 숫자,28,[]
17383,1738300,옥토끼는 통신교육을 풀어라!!,17,"['binary search', 'greedy', 'parametric search']"
17384,1738400,대진표,16,"['constructive', 'divide and conquer']"
17385,1738500,Uncrossed Knights' Tour,22,"['dynamic programming', 'graph theory', 'graph traversal']"
17386,1738600,선분 교차 1,13,"['geometry', 'line segment intersection check']"
17387,1738700,선분 교차 2,14,"['case work', 'geometry', 'line segment intersection check']"
17388,1738800,와글와글 숭고한,2,['implementation']
17389,1738900,보너스 점수,4,['implementation']
17390,1739000,이건 꼭 풀어야 해!,8,"['prefix sum', 'sorting']"
17391,1739100,무한부스터,10,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
17392,1739200,우울한 방학,10,"['greedy', 'mathematics']"
17393,1739300,다이나믹 롤러,7,['binary search']
17394,1739400,핑거 스냅,11,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
17395,1739500,이진수 변환,11,"['greedy', 'mathematics']"
17396,1739600,백도어,11,"[""dijkstra's"", 'graph theory']"
17397,1739700,FLEX,14,['dynamic programming']
17398,1739800,통신망 분할,15,"['data structures', 'disjoint set']"
17399,1739900,트리의 외심,19,"['lowest common ancestor', 'tree']"
17400,1740000,깃발춤,16,"['data structures', 'segment tree']"
17401,1740100,일하는 세포,16,"['exponentiation by squaring', 'mathematics']"
17402,1740200,시간 끌기,18,['bipartite matching']
17403,1740300,가장 높고 넓은 성,17,"['convex hull', 'geometry']"
17404,1740400,RGB거리 2,12,['dynamic programming']
17405,1740500,피보나치 수의 최대공약수의 합처럼 보이지만...,27,"['mathematics', 'number theory']"
17406,1740600,배열 돌리기 4,12,"['backtracking', 'bruteforcing', 'implementation']"
17407,1740700,괄호 문자열과 쿼리,18,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
17408,1740800,수열과 쿼리 24,17,"['data structures', 'segment tree']"
17409,1740900,증가 수열의 개수,17,"['data structures', 'dynamic programming', 'segment tree']"
17410,1741000,수열과 쿼리 1.5,21,['square root decomposition']
17411,1741100,가장 긴 증가하는 부분 수열 6,19,"['binary search', 'data structures', 'longest increasing sequence in o(n log n)', 'segment tree']"
17412,1741200,도시 왕복하기 1,17,['maximum flow']
17413,1741300,단어 뒤집기 2,8,"['data structures', 'implementation', 'stack', 'string']"
17414,1741400,Sebin Loves Euler Circuit,17,"['data structures', 'depth-first search', 'disjoint set', 'eulerian path / circuit', 'graph theory', 'graph traversal']"
17415,1741500,Huge Integer!,18,"['mathematics', 'number theory']"
17416,1741600,Making Server,19,"['data structures', 'disjoint set', 'implementation']"
17417,1741700,Optimization is Freaky Fun,19,"['binary search', 'case work', 'mathematics', 'number theory', 'prefix sum']"
17418,1741800,G++ Language,21,['ad-hoc']
17419,1741900,비트가 넘쳐흘러,7,"['bitmask', 'mathematics', 'string']"
17420,1742000,깊콘이 넘쳐흘러,15,['greedy']
17421,1742100,빗물이 넘쳐흘러,18,"['data structures', 'stack']"
17422,1742200,지폐가 넘쳐흘러,16,"['dynamic programming', 'dynamic programming on trees', 'tree']"
17423,1742300,민원이 넘쳐흘러,20,"['binary search', 'value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
17424,1742400,2xN 타일링과 쿼리,22,"['data structures', 'divide and conquer', 'segment tree']"
17425,1742500,약수의 합,12,"['mathematics', 'number theory', 'prefix sum', 'primality test', 'sieve of eratosthenes']"
17426,1742600,Channel,26,"['dynamic programming', 'dynamic programming using connection profile']"
17427,1742700,약수의 합 2,9,"['mathematics', 'number theory']"
17428,1742800,K번째 괄호 문자열,16,"['combinatorics', 'dynamic programming', 'mathematics']"
17429,1742900,국제 메시 기구,22,"['data structures', 'euler tour technique', 'heavy-light decomposition', 'segment tree with lazy propagation', 'segment tree', 'tree']"
17430,1743000,가로등,10,['geometry']
17431,1743100,게임,17,"['euclidean algorithm', 'mathematics', 'number theory']"
17432,1743200,정렬,13,"['constructive', 'sorting']"
17433,1743300,신비로운 수,11,"['euclidean algorithm', 'mathematics', 'number theory']"
17434,1743400,도로 청소,19,"['eulerian path / circuit', 'graph theory']"
17435,1743500,합성함수와 쿼리,15,"['data structures', 'sparse table']"
17436,1743600,소수의 배수,13,['inclusion and exclusion']
17438,1743800,전생했더니 슬라임 연구자가 아니었던 건에 대하여,24,"['constructive', 'mathematics']"
17439,1743900,꽃집,24,"['aliens trick', 'binary search', 'dynamic programming', 'monotone queue optimization']"
17440,1744000,코포빵 토너먼트,20,"['linearity of expectation', 'mathematics', 'probability theory']"
17441,1744100,파리채 만들기,24,"['calculus', 'geometry', ""green's theorem"", 'mathematics']"
17442,1744200,삼분 그래프,23,"['value / coordinate compression', 'data structures', 'euler characteristic (χ=v-e+f)', 'geometry', 'graph theory', 'planar graph', 'segment tree', 'sweeping']"
17443,1744300,여우 퀴즈,22,"['data structures', 'segment tree']"
17444,1744400,투명 악어,22,[]
17445,1744500,range,20,"['case work', 'implementation', 'mathematics']"
17446,1744600,옥상 정원,22,"['ad-hoc', 'data structures', 'eulerian path / circuit', 'graph theory', 'linked list']"
17447,1744700,라이언 동상 구하기,17,['geometry']
17448,1744800,성냥팔이 소년,18,['greedy']
17449,1744900,순위 계산,14,"['greedy', 'mathematics']"
17450,1745000,과자 사기,3,"['arithmetic', 'implementation', 'mathematics']"
17451,1745100,평행 우주,8,"['greedy', 'mathematics']"
17452,1745200,Christmalo.win,11,['sorting']
17453,1745300,두 개의 문,12,"['bitmask', 'bruteforcing']"
17454,1745400,갓,14,['mathematics']
17455,1745500,kdh9949,15,"['dynamic programming', 'graph theory']"
17456,1745600,필살! 60단 컴보,19,"['bitmask', 'dynamic programming']"
17457,1745700,Hard To Explain,23,"['convex hull trick', 'data structures', 'segment tree']"
17458,1745800,Good Set,27,"['backtracking', 'bitmask', 'combinatorics', 'mathematics']"
17459,1745900,Fruit Tree,22,"['data structures', 'lowest common ancestor', 'boyer–moore majority vote', 'persistent segment tree', 'segment tree', 'sparse table', 'tree']"
17460,1746000,Cactus Determinant,25,"['articulation points and bridges', 'cactus', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
17461,1746100,Bohemian Rhaksody,29,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'greedy']"
17462,1746200,MST and Rectangles,25,[]
17463,1746300,"교준이의 심부름꾼, 민제의 고충 (""Circle"" Ver.)",27,"['breadth-first search', '센트로이드', 'centroid decomposition', 'data structures', 'depth-first search', 'divide and conquer', 'dynamic programming', 'dynamic programming on trees', 'geometry', 'graph theory', 'graph traversal', 'implementation', 'inclusion and exclusion', 'lowest common ancestor', 'prefix sum', 'persistent segment tree', 'pythagoras theorem', 'segment tree', 'stack', 'sweeping', 'tree', 'set / map by trees']"
17464,1746400,알파벳 문자열,19,"['bitmask', 'bit set']"
17465,1746500,동적 연결성과 쿼리,30,"['euler tour technique', 'splay tree', 'tree']"
17466,1746600,N! mod P (1),4,"['mathematics', 'number theory']"
17467,1746700,N! mod P (2),0,"['fast fourier transform', 'mathematics']"
17468,1746800,N! mod P (3),0,"['fast fourier transform', 'arbitrary precision / big integers', 'mathematics']"
17469,1746900,트리의 색깔과 쿼리,18,"['data structures', 'disjoint set', 'offline queries', 'smaller to larger technique', 'tree', 'set / map by trees']"
17470,1747000,배열 돌리기 5,16,['implementation']
17471,1747100,게리맨더링,12,"['breadth-first search', 'bruteforcing', 'combinatorics', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics']"
17472,1747200,다리 만들기 2,15,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'minimum spanning tree']"
17473,1747300,수열과 쿼리 25,26,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
17474,1747400,수열과 쿼리 26,24,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
17475,1747500,수열과 쿼리 27,28,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
17476,1747600,수열과 쿼리 28,25,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
17477,1747700,수열과 쿼리 29,27,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
17478,1747800,재귀함수가 뭔가요?,6,"['implementation', 'recursion']"
17479,1747900,정식당,8,"['data structures', 'set / map by hashing']"
17480,1748000,개구쟁이 준석이,13,"['bruteforcing', 'implementation', 'recursion']"
17481,1748100,최애 정하기,17,['bipartite matching']
17482,1748200,놀이공원을 만들자 (Small),0,[]
17483,1748300,놀이공원을 만들자 (Large),0,[]
17484,1748400,진우의 달 여행 (Small),8,"['bruteforcing', 'dynamic programming']"
17485,1748500,진우의 달 여행 (Large),11,['dynamic programming']
17486,1748600,수열과 쿼리 30,27,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'splay tree', 'tree']"
17487,1748700,타자 연습,4,['implementation']
17488,1748800,수강 바구니,6,"['implementation', 'sorting']"
17489,1748900,보물 찾기,16,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
17490,1749000,일감호에 다리 놓기,12,"['data structures', 'disjoint set', 'graph theory', 'minimum spanning tree']"
17491,1749100,고양이 밥주기,13,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
17492,1749200,바둑알 점프,12,"['backtracking', 'bruteforcing']"
17493,1749300,동아리 홍보하기,18,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'tree']"
17494,1749400,후임 간식 뺏어먹기,10,['dynamic programming']
17495,1749500,피아노 연주,15,"['dynamic programming', 'string']"
17496,1749600,스타후르츠,3,"['mathematics', 'arithmetic']"
17497,1749700,계산기,14,"['greedy', 'mathematics']"
17498,1749800,폴짝 게임,11,['dynamic programming']
17499,1749900,수열과 시프트 쿼리,8,"['implementation', 'mathematics']"
17500,1750000,국경,16,"['bruteforcing', 'implementation']"
17501,1750100,수식 트리,14,"['depth-first search', 'graph theory', 'graph traversal', 'greedy', 'sorting']"
17502,1750200,클레어와 팰린드롬,4,"['implementation', 'string']"
17503,1750300,맥주 축제,9,"['binary search', 'data structures', 'greedy', 'priority queue', 'sorting']"
17504,1750400,제리와 톰 2,7,"['implementation', 'mathematics']"
17505,1750500,링고와 순열,11,"['constructive', 'greedy']"
17506,1750600,주때의 자소서 쓰기,19,"['dynamic programming', 'maximum flow', 'minimum cost maximum flow']"
17507,1750700,시간여행자의 실험기록,22,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'offline queries', 'tree']"
17508,1750800,6789,6,"['case work', 'implementation']"
17509,1750900,And the Winner Is... Ourselves!,6,"['greedy', 'sorting']"
17510,1751000,Bigger Sokoban 40k,24,['constructive']
17511,1751100,Capital,11,"['graph theory', 'graph traversal']"
17512,1751200,Gosu 2,17,['greedy']
17513,1751300,Hilbert's Hotel,22,"['binary search', 'data structures', 'implementation', 'segment tree with lazy propagation', 'segment tree']"
17514,1751400,Lexicographically Minimum Walk,17,"['graph theory', 'greedy']"
17515,1751500,Maximizer,18,"['greedy', 'mathematics']"
17516,1751600,Minimum Diameter Spanning Tree,25,"['floyd–warshall', 'graph theory', 'minimum spanning tree', 'tree']"
17517,1751700,Parklife,23,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'priority queue', 'slope trick', 'smaller to larger technique', 'tree']"
17518,1751800,Wind of Change,26,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'tree']"
17519,1751900,All You Need is Dating,0,[]
17520,1752000,Balanced String,6,['mathematics']
17521,1752100,Byte Coin,7,['greedy']
17522,1752200,Canal,18,"['binary search', 'two-pointer']"
17523,1752300,Choreography,16,"['greedy', 'implementation', 'simulation']"
17524,1752400,Dryer,20,"['ad-hoc', 'bruteforcing', 'sorting']"
17525,1752500,Enumeration,23,"['case work', 'constructive', 'recursion']"
17526,1752600,Star Trek,21,"['convex hull trick', 'dynamic programming']"
17527,1752700,Steel Slicing,28,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'greedy', 'monotone queue optimization']"
17528,1752800,Two Machines,16,['dynamic programming']
17529,1752900,Artwork,16,"['data structures', 'disjoint set', 'geometry']"
17530,1753000,Buffoon,3,"['implementation', 'mathematics']"
17531,1753100,Crossings With Danger,0,[]
17532,1753200,Denouncing Mafia,17,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'greedy', 'segment tree with lazy propagation', 'segment tree', 'tree']"
17533,1753300,Exhibition of Clownfish,16,[]
17534,1753400,Forests in Danger,19,"['binary search', 'data structures', 'segment tree']"
17535,1753500,Getting Confidence,20,"['maximum flow', 'minimum cost maximum flow']"
17536,1753600,Hour for a Run,4,"['arithmetic', 'mathematics']"
17537,1753700,Interplanetary,17,"['floyd–warshall', 'graph theory']"
17538,1753800,Jar of Water Game,12,"['implementation', 'simulation']"
17539,1753900,Keep Calm and Sell Balloons,20,"['berlekamp–massey', 'dynamic programming', 'exponentiation by squaring', 'mathematics']"
17540,1754000,Less Coin Tosses,15,"['combinatorics', 'mathematics']"
17541,1754100,Maratona Brasileira de Popcorn,10,['binary search']
17542,1754200,Architecture,6,['greedy']
17543,1754300,Bracket Sequence,9,"['data structures', 'implementation', 'parsing', 'recursion', 'stack', 'string']"
17544,1754400,Canyon Crossing,14,"['0-1 bfs', 'binary search', ""dijkstra's"", 'graph theory', 'parametric search']"
17545,1754500,Deceptive Dice,12,"['dynamic programming', 'mathematics', 'probability theory']"
17546,1754600,Exits in Excess,13,"['ad-hoc', 'constructive', 'graph theory']"
17547,1754700,Floor Plan,8,"['constructive', 'mathematics', 'number theory']"
17548,1754800,Greetings!,3,"['implementation', 'string']"
17549,1754900,Hexagonal Rooks,13,"['bruteforcing', 'implementation']"
17550,1755000,Inquiry I,6,"['bruteforcing', 'prefix sum']"
17551,1755100,Jumbled Journey,0,[]
17552,1755200,Knapsack Packing,13,"['data structures', 'greedy', 'sorting', 'set / map by trees']"
17553,1755300,Lifeguards,17,"['ad-hoc', 'constructive', 'geometry', 'sorting']"
17554,1755400,City of Lights,5,"['implementation', 'simulation']"
17555,1755500,Blurred Pictures,16,"['binary search', 'data structures', 'set / map by hashing', 'parametric search', 'segment tree']"
17556,1755600,Crosswords,0,[]
17557,1755700,Monument Tour,13,"['prefix sum', 'sweeping', 'ternary search']"
17558,1755800,Rounding,12,"['implementation', 'mathematics']"
17559,1755900,Paris by Night,19,"['geometry', 'sorting', 'sweeping', 'two-pointer']"
17560,1756000,Strings,19,"['divide and conquer', 'prefix sum', 'string']"
17561,1756100,Travel Guide,20,"['value / coordinate compression', 'data structures', ""dijkstra's"", 'graph theory', 'segment tree']"
17562,1756200,Mason’s Mark,15,"['depth-first search', 'graph theory', 'graph traversal', 'implementation']"
17563,1756300,Mona Lisa,0,[]
17564,1756400,Dishonest Driver,17,"['dynamic programming', 'hashing', 'string']"
17565,1756500,Analogue Cluster,13,[]
17566,1756600,Bus Logic,6,"['bitmask', 'bruteforcing']"
17567,1756700,Code Word,15,['dynamic programming']
17568,1756800,Dynamo Wheel,18,"['geometry', 'two-pointer']"
17569,1756900,Evenly Divided,0,[]
17570,1757000,Fibonacci Compression,15,"['binary search', 'data structures', 'set / map by trees']"
17571,1757100,Garden Variety Vampire,0,[]
17572,1757200,Hamster Ball,7,"['greedy', 'sorting']"
17573,1757300,Internet Upload,0,[]
17574,1757400,Jackpot,12,"['mathematics', 'probability theory', 'ternary search']"
17575,1757500,Kings,21,['hungarian']
17576,1757600,Last Word,5,"['mathematics', 'string']"
17577,1757700,Scores of Final Examination,4,"['arithmetic', 'implementation', 'mathematics']"
17578,1757800,On-Screen Keyboard,5,"['implementation', 'simulation', 'string']"
17579,1757900,Balance Scale,13,"['backtracking', 'bruteforcing', 'data structures', 'set / map by hashing', 'implementation', 'set / map by trees']"
17580,1758000,Tally Counters,20,"['dynamic programming', 'mathematics', 'number theory']"
17581,1758100,Cube Surface Puzzle,16,"['bitmask', 'bruteforcing', 'implementation', 'simulation']"
17582,1758200,Flipping Colors,22,"['constructive', 'graph theory', 'graph traversal', 'minimum spanning tree', 'tree']"
17583,1758300,Let's Move Tiles!,22,[]
17585,1758500,Circuit Math,8,"['data structures', 'stack']"
17586,1758600,Diagonal Cut,10,"['euclidean algorithm', 'mathematics', 'number theory']"
17587,1758700,Gerrymandering,5,['implementation']
17588,1758800,Missing Numbers,3,['implementation']
17589,1758900,NVWLS,22,"['aho-corasick', 'data structures', 'dynamic programming', 'hashing', 'string', 'tree', 'trie']"
17590,1759000,Prospecting,25,"['data structures', 'disjoint set', 'graph theory', 'greedy', 'tree']"
17591,1759100,Research Productivity Index,13,"['dynamic programming', 'greedy', 'mathematics']"
17592,1759200,Running Routes,17,['dynamic programming']
17593,1759300,Slow Leak,14,"[""dijkstra's"", 'floyd–warshall', 'graph theory']"
17594,1759400,Stop Counting!,13,"['ad-hoc', 'mathematics']"
17595,1759500,Summer Trip,9,['ad-hoc']
17596,1759600,Traveling Merchant,20,"['data structures', 'implementation', 'segment tree', 'square root decomposition']"
17597,1759700,Zipline,9,"['geometry', 'mathematics', 'ternary search']"
17598,1759800,Animal King Election,3,"['implementation', 'string']"
17599,1759900,Bags,6,"['data structures', 'set / map by hashing', 'sorting']"
17600,1760000,Change Making,11,"['dynamic programming', 'greedy']"
17601,1760100,Disrupting Defense,14,"['greedy', 'sorting']"
17602,1760200,Explosion,0,[]
17603,1760300,Factorization,21,"['discrete square root', 'mathematics', 'number theory']"
17604,1760400,Gifted Bafuko,0,[]
17605,1760500,Hotel,20,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
17606,1760600,Integral Points,20,"['constructive', 'mathematics', 'number theory']"
17607,1760700,수열과 쿼리 31,23,"['splay tree', 'tree']"
17608,1760800,막대기,4,"['data structures', 'implementation', 'stack']"
17609,1760900,회문,11,"['implementation', 'string', 'two-pointer']"
17610,1761000,양팔저울,10,['bruteforcing']
17611,1761100,직각다각형,14,"['prefix sum', 'sorting', 'sweeping']"
17612,1761200,쇼핑몰,14,"['data structures', 'priority queue']"
17613,1761300,점프,19,"['divide and conquer', 'dynamic programming']"
17614,1761400,369,3,"['bruteforcing', 'implementation']"
17615,1761500,볼 모으기,10,['greedy']
17616,1761600,등수 찾기,13,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
17617,1761700,로봇,23,['greedy']
17618,1761800,신기한 수,3,"['bruteforcing', 'implementation']"
17619,1761900,개구리 점프,14,"['data structures', 'disjoint set', 'sorting', 'sweeping']"
17620,1762000,드론,0,[]
17621,1762100,물채우기,19,['implementation']
17622,1762200,타일 교체,12,"['bruteforcing', 'implementation', 'simulation']"
17623,1762300,괄호,14,['dynamic programming']
17624,1762400,검은 돌,22,"['dynamic programming', 'dynamic programming on trees', 'tree']"
17625,1762500,고압선,24,"['geometry', 'sweeping']"
17626,1762600,Four Squares,8,"['bruteforcing', 'dynamic programming']"
17627,1762700,XORanges,17,"['data structures', 'segment tree']"
17628,1762800,Hanging Rack,0,[]
17629,1762900,T - Covering,0,[]
17630,1763000,Tower,0,[]
17631,1763100,Awesome Arrowland Adventure,13,"['breadth-first search', 'graph theory', 'graph traversal']"
17632,1763200,Colouring a rectangle,0,[]
17633,1763300,제곱수의 합 (More Huge),22,"['mathematics', 'miller–rabin', 'number theory', 'pollard rho', 'primality test']"
17634,1763400,이상한 기계,18,"['mathematics', 'number theory']"
17635,1763500,다리,24,"['data structures', 'disjoint set', 'offline queries', 'square root decomposition']"
17636,1763600,가로등,24,"['data structures', 'divide and conquer', 'segment tree']"
17637,1763700,Count Squares,7,"['combinatorics', 'data structures', 'geometry', 'set / map by hashing', 'mathematics']"
17638,1763800,Separator,10,[]
17639,1763900,Tower Defense,14,"['case work', 'implementation']"
17640,1764000,Building Skyscrapers,27,"['breadth-first search', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing']"
17641,1764100,Cubeword,19,['ad-hoc']
17642,1764200,Dynamic Diameter,24,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
17643,1764300,Amusement Park,24,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'inclusion and exclusion']"
17644,1764400,Magic Tree,22,"['dynamic programming', 'dynamic programming on trees', 'smaller to larger technique', 'tree']"
17645,1764500,Scissors and Tape,29,"['constructive', 'geometry', 'mathematics']"
17646,1764600,제곱수의 합 2 (More Huge),27,"['mathematics', 'miller–rabin', 'number theory', 'pollard rho', 'primality test']"
17647,1764700,Trap,10,"['backtracking', 'bruteforcing', 'precomputation', 'recursion']"
17648,1764800,Majorant,0,[]
17649,1764900,Triangle,0,[]
17650,1765000,Namuhs,0,[]
17651,1765100,Artillery,0,[]
17652,1765200,Domino,0,[]
17653,1765300,Ruler,0,[]
17654,1765400,Resistance,0,[]
17655,1765500,Activity,0,[]
17656,1765600,Park,0,[]
17657,1765700,Seats,0,[]
17658,1765800,Chess,0,[]
17659,1765900,Cap Size,8,"['binary search', 'case work']"
17660,1766000,First-Name Basis,0,[]
17661,1766100,Mangling Names,8,['implementation']
17662,1766200,GPA,0,[]
17663,1766300,Department Receptions,0,[]
17664,1766400,Jump!,0,[]
17665,1766500,Triple Jump,26,"['data structures', 'offline queries', 'segment tree']"
17666,1766600,Remittance,22,[]
17667,1766700,Virus Experiment,25,"['breadth-first search', 'bitmask', 'data structures', 'disjoint set', 'graph theory', 'graph traversal', 'set / map by hashing', 'randomization', 'smaller to larger technique']"
17668,1766800,시험,21,"['data structures', 'divide and conquer', 'segment tree', 'sorting']"
17669,1766900,Meetings,22,"['ad-hoc', 'binary search', 'heavy-light decomposition', 'tree']"
17670,1767000,난,21,['greedy']
17671,1767100,두 안테나,25,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
17672,1767200,두 요리,25,"['data structures', 'dynamic programming', 'segment tree with lazy propagation', 'segment tree', 'set / map by trees']"
17673,1767300,Two Transportations,23,"['ad-hoc', ""dijkstra's"", 'graph theory', 'implementation']"
17674,1767400,특별관광도시,22,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'greedy', 'priority queue', 'tree']"
17675,1767500,램프,21,['dynamic programming']
17676,1767600,시간을 달리는 비타로,24,"['data structures', 'segment tree']"
17677,1767700,케이크 3,23,"['data structures', 'divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'persistent segment tree', 'segment tree']"
17678,1767800,합병,21,"['data structures', 'disjoint set', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'lowest common ancestor', 'tree']"
17679,1767900,Minerals,25,"['divide and conquer', 'heuristics']"
17680,1768000,Construction of Highway,23,"['value / coordinate compression', 'data structures', 'heavy-light decomposition', 'segment tree with lazy propagation', 'lowest common ancestor', 'segment tree', 'sparse table', 'tree']"
17681,1768100,Fences,24,"['convex hull', 'floyd–warshall', 'geometry', 'graph theory', 'line segment intersection check', 'point in non-convex polygon check']"
17682,1768200,Tents,18,"['combinatorics', 'dynamic programming', 'mathematics']"
17683,1768300,Asceticism,23,"['combinatorics', 'inclusion and exclusion', 'mathematics']"
17684,1768400,Road Service 1,16,[]
17685,1768500,Worst Reporter 3,18,['binary search']
17686,1768600,Airline Route Map,22,[]
17687,1768700,Bitaro’s Party,22,"['dynamic programming', 'square root decomposition', 'two-pointer']"
17688,1768800,Security Gate,0,[]
17689,1768900,Candies,22,"['data structures', 'greedy', 'priority queue']"
17690,1769000,Library,22,"['ad-hoc', 'binary search']"
17691,1769100,Wild Boar,26,"['data structures', ""dijkstra's"", 'graph theory', 'segment tree']"
17692,1769200,Cultivation,26,"['sorting', 'sweeping', 'two-pointer']"
17693,1769300,Port Facility,23,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'segment tree']"
17694,1769400,Sparklers,26,"['ad-hoc', 'binary search', 'greedy']"
17695,1769500,Arranging Tickets,27,"['binary search', 'greedy']"
17696,1769600,Broken Device,25,"['ad-hoc', 'constructive', 'mathematics']"
17697,1769700,Railway Trip,26,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'lowest common ancestor', 'sparse table', 'stack', 'tree']"
17698,1769800,Long Distance Coach,24,"['convex hull trick', 'dynamic programming']"
17699,1769900,Long Mansion,23,"['data structures', 'divide and conquer', 'segment tree']"
17700,1770000,Natural Park,25,"['ad-hoc', 'binary search', 'depth-first search', 'graph theory', 'graph traversal', 'recursion', 'tree']"
17701,1770100,Abduction 2,24,"['data structures', 'dynamic programming', 'greedy', 'segment tree']"
17702,1770200,City,25,"['ad-hoc', 'euler tour technique', 'graph theory', 'graph traversal', 'mathematics', 'tree']"
17703,1770300,Dragon 2,25,"['data structures', 'geometry', 'segment tree', 'square root decomposition']"
17704,1770400,Matryoshka,21,"['binary search', 'bipartite matching', 'value / coordinate compression', 'data structures', 'greedy', 'longest increasing sequence in o(n log n)', 'offline queries', 'segment tree', 'sorting', 'sweeping']"
17705,1770500,Memory2,22,"['ad-hoc', 'case work', 'implementation']"
17706,1770600,Solitaire,25,[]
17707,1770700,Employment,21,"['binary search', 'data structures', 'offline queries', 'segment tree', 'square root decomposition']"
17708,1770800,Sandwich,23,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
17709,1770900,Toilets,22,"['greedy', 'prefix sum']"
17710,1771000,Dungeon 2,24,"['ad-hoc', 'depth-first search', 'divide and conquer', 'graph theory', 'graph traversal']"
17711,1771100,Sushi,26,"['data structures', 'priority queue', 'square root decomposition']"
17712,1771200,Telegraph,21,"['dynamic programming', 'dynamic programming on trees', 'graph theory', 'greedy', 'implementation', 'tree']"
17713,1771300,Dangerous Skating,22,"[""dijkstra's"", 'graph theory']"
17715,1771500,Worst Reporter 2,22,"['bipartite matching', 'data structures', 'greedy', 'segment tree with lazy propagation', 'segment tree']"
17716,1771600,Copy and Paste 2,19,[]
17717,1771700,En-JOI-able Logo Design,16,"['bruteforcing', 'prefix sum']"
17718,1771800,Growing Vegetables is Fun 2,22,"['data structures', 'dynamic programming', 'segment tree with lazy propagation', 'segment tree']"
17719,1771900,IOIOI Cards,22,"[""dijkstra's"", 'graph theory', 'prefix sum']"
17720,1772000,Building 3,19,[]
17721,1772100,Keys,22,[]
17722,1772200,Road Development,21,"['data structures', 'disjoint set', 'heavy-light decomposition', 'segment tree with lazy propagation', 'offline queries', 'segment tree', 'tree']"
17723,1772300,AAQQZ,26,"['case work', 'dynamic programming', 'greedy']"
17724,1772400,Card Game Is Great Fun,19,['dynamic programming']
17726,1772600,Inheritance,19,"['binary search', 'graph theory', 'minimum spanning tree']"
17728,1772800,Walls,24,"['data structures', 'implementation', 'priority queue']"
17729,1772900,Bus,19,['graph theory']
17730,1773000,Growing Vegetables is Fun,19,"['data structures', 'greedy', 'segment tree']"
17731,1773100,Historical Research,21,"['value / coordinate compression', 'data structures', ""mo's"", 'offline queries', 'segment tree', 'square root decomposition']"
17733,1773300,Water Bottle,21,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal', 'lowest common ancestor', 'minimum spanning tree', 'parallel binary search', 'tree']"
17734,1773400,Making Friends is Fun,20,['graph theory']
17735,1773500,Collecting Stamps,22,[]
17736,1773600,JOIOJI,17,"['data structures', 'divide and conquer', 'prefix sum', 'set / map by trees']"
17737,1773700,Scarecrows,23,"['data structures', 'divide and conquer', 'segment tree']"
17738,1773800,Voltage,22,[]
17739,1773900,Constellation 2,24,"['geometry', 'sweeping']"
17741,1774100,Straps,16,"['dynamic programming', 'greedy', 'knapsack']"
17742,1774200,Bus Tour,20,[]
17743,1774300,Collecting Images is Fun,21,"['data structures', 'segment tree']"
17744,1774400,Communication Jamming,23,"['data structures', 'disjoint set']"
17745,1774500,JOI Poster,13,"['bruteforcing', 'geometry']"
17746,1774600,Construction Project,23,"['data structures', 'segment tree', 'sweeping']"
17747,1774700,Mascots,20,['dynamic programming']
17748,1774800,Spy,18,"['bitmask', 'depth-first search', 'graph theory', 'graph traversal']"
17749,1774900,Cake,25,"['ad-hoc', 'data structures', 'prefix sum', 'segment tree', 'stack']"
17750,1775000,Koala,21,"['value / coordinate compression', 'data structures', 'dynamic programming', 'mathematics', 'segment tree']"
17752,1775200,Messenger,21,['ad-hoc']
17753,1775300,Presents,20,[]
17754,1775400,Spaceships,25,"['link/cut tree', 'tree']"
17755,1775500,Równanie,11,"['bruteforcing', 'mathematics']"
17756,1775600,Kieszonkowe,7,['greedy']
17757,1775700,Siano,20,"['binary search', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'stack']"
17758,1775800,Fibonacci,22,"['mathematics', 'number theory']"
17759,1775900,Mistrzostwa,14,"['depth-first search', 'graph theory', 'graph traversal', 'greedy']"
17760,1776000,Hazard,22,"['data structures', 'permutation cycle decomposition', 'sparse table']"
17761,1776100,Rozstaw szyn,0,[]
17762,1776200,Building 2,23,"['data structures', 'euler tour technique', 'segment tree', 'smaller to larger technique', 'tree']"
17763,1776300,Fish,21,"['data structures', 'disjoint set', 'set / map by hashing', 'sweeping', 'set / map by trees', 'two-pointer']"
17764,1776400,Eksplozja komórkowa,0,[]
17765,1776500,Kontrmanifestacja,25,[]
17766,1776600,Roboty,28,"['bit set', 'chinese remainder theorem', 'dynamic programming', 'mathematics', 'number theory']"
17767,1776700,Siłownia,0,[]
17769,1776900,JOI Flag,20,[]
17771,1777100,Constellation,24,"['ad-hoc', 'combinatorics', 'convex hull', 'geometry', 'mathematics', 'modular multiplicative inverse', 'number theory']"
17772,1777200,Rotate,24,"['data structures', 'dual graph', 'graph theory', 'implementation', 'linked list', 'planar graph']"
17773,1777300,Fortune Telling,19,"['value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
17774,1777400,Kangaroo,20,['dynamic programming']
17775,1777500,Sokoban,24,"['articulation points and bridges', 'graph theory']"
17776,1777600,Chinese,21,"['greedy', 'sorting', 'sweeping']"
17777,1777700,Copy and Paste,20,"['data structures', 'rope', 'string']"
17778,1777800,Invitation,22,"['data structures', 'priority queue', 'segment tree']"
17779,1777900,게리맨더링 2,13,"['bruteforcing', 'implementation', 'simulation']"
17780,1778000,새로운 게임,14,"['implementation', 'simulation']"
17781,1778100,수열과 쿼리 32,25,"[""dijkstra's"", 'graph theory', 'minimum spanning tree', 'square root decomposition']"
17782,1778200,Appeal to the Audience,18,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'tree']"
17783,1778300,Breaking Branches,3,"['game theory', 'mathematics']"
17784,1778400,Conveyor Belts,22,"['ad-hoc', 'constructive']"
17785,1778500,Deck Randomisation,21,"['chinese remainder theorem', 'mathematics', 'number theory', 'permutation cycle decomposition']"
17786,1778600,Efficient Exchange,14,"['dynamic programming', 'greedy']"
17787,1778700,Find my Family,14,"['binary search', 'data structures', 'set / map by trees']"
17788,1778800,Gluttonous Goop,15,"['ad-hoc', 'breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'mathematics', 'simulation']"
17789,1778900,Historic Exhibition,13,['greedy']
17790,1779000,Inquiry II,19,"['bitmask', 'bruteforcing', 'dynamic programming', 'dynamic programming on trees', 'tree']"
17791,1779100,Jazz it Up!,5,"['mathematics', 'number theory']"
17792,1779200,Keep Him Inside,17,"['constructive', 'geometry', 'mathematics']"
17793,1779300,Lucky Draw,19,"['combinatorics', 'dynamic programming', 'mathematics']"
17794,1779400,Automatic Accountant,17,"['data structures', 'segment tree', 'sweeping']"
17795,1779500,Ballpark Estimate,4,"['bruteforcing', 'string']"
17796,1779600,Crooked Dealing,14,['greedy']
17797,1779700,Dome Construction,7,"['geometry', 'geometry; 3d', 'pythagoras theorem', 'sorting']"
17798,1779800,Estate Agent,20,"['maximum flow', 'minimum cost maximum flow']"
17799,1779900,Feeding Seals,11,"['greedy', 'sorting', 'two-pointer']"
17800,1780000,Grand Central Station,17,['hashing']
17801,1780100,Hat Stand,17,"['greedy', 'sorting']"
17802,1780200,Integral Pyramid,12,"['constructive', 'mathematics']"
17803,1780300,Jammed Gym,12,"['dynamic programming', 'mathematics']"
17804,1780400,Knocked Ink,25,"['binary search', 'calculus', 'boolean operations on geometric objects', 'geometry', ""green's theorem"", 'mathematics', 'sorting']"
17805,1780500,Low Effort League,18,['dynamic programming']
17806,1780600,Mosaic Mansion,19,"['hashing', 'meet in the middle']"
17807,1780700,Beer Barrels,8,"['case work', 'combinatorics', 'mathematics']"
17808,1780800,Beer Bill,6,"['implementation', 'parsing', 'string']"
17809,1780900,Beer Coasters,0,[]
17810,1781000,Beer Flood System,0,[]
17811,1781100,Beer Can Game,0,[]
17812,1781200,Beer Marathon,13,['ternary search']
17813,1781300,Beer Mugs,0,[]
17814,1781400,Screamers in the Storm,0,[]
17815,1781500,Sixpack,0,[]
17816,1781600,Beer Vision,12,"['bruteforcing', 'data structures', 'set / map by hashing', 'set / map by trees']"
17817,1781700,Trol,6,"['arithmetic', 'combinatorics', 'implementation', 'mathematics', 'number theory']"
17818,1781800,Lutrija,15,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory', 'primality test']"
17819,1781900,Džumbus,21,"['dynamic programming', 'dynamic programming on trees', 'tree']"
17820,1782000,Trobojnica,18,"['data structures', 'greedy', 'linked list']"
17821,1782100,Zoo,13,"['graph theory', 'graph traversal']"
17822,1782200,원판 돌리기,13,"['implementation', 'simulation']"
17823,1782300,수열과 쿼리 33,28,"['aliens trick', 'binary search', 'data structures', 'offline queries', 'parallel binary search', 'segment tree']"
17824,1782400,아폴로니안 네트워크,27,"['dynamic programming', 'dynamic programming using connection profile', 'dynamic programming on trees', 'graph theory', 'tree']"
17825,1782500,주사위 윷놀이,14,"['backtracking', 'bruteforcing', 'implementation', 'simulation']"
17826,1782600,나의 학점은?,4,['implementation']
17827,1782700,달팽이 리스트,9,"['implementation', 'mathematics']"
17828,1782800,문자열 화폐,11,"['greedy', 'string']"
17829,1782900,222-풀링,8,"['divide and conquer', 'implementation']"
17830,1783000,이진수씨의 하루 일과,12,"['implementation', 'mathematics', 'string']"
17831,1783100,대기업 승범이네,16,"['dynamic programming', 'dynamic programming on trees', 'tree']"
17832,1783200,RGB 젠가,0,[]
17833,1783300,홍익대학교 지하캠퍼스,16,"[""dijkstra's"", 'graph theory']"
17834,1783400,사자와 토끼,15,"['breadth-first search', 'combinatorics', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics']"
17835,1783500,면접보는 승범이네,14,"[""dijkstra's"", 'graph theory']"
17836,1783600,공주님을 구해라!,11,"['breadth-first search', 'graph theory', 'graph traversal']"
17837,1783700,새로운 게임 2,13,"['implementation', 'simulation']"
17838,1783800,커맨드,4,"['implementation', 'string']"
17839,1783900,Baba is Rabbit,11,"['graph theory', 'graph traversal']"
17840,1784000,피보나치 음악,15,"['dynamic programming', 'mathematics', 'number theory']"
17841,1784100,UNIST는 무엇의 약자일까?,12,['dynamic programming']
17842,1784200,버스 노선,15,"['greedy', 'tree']"
17843,1784300,시계,6,"['geometry', 'mathematics']"
17844,1784400,복붙하기,19,"['binary search', 'hashing', 'rabin–karp', 'string']"
17845,1784500,수강 과목,11,"['dynamic programming', 'knapsack']"
17846,1784600,Chopping on Line,0,[]
17847,1784700,Diamonds Are for Evers,7,"['implementation', 'string']"
17848,1784800,Flight Turbulence,6,"['graph theory', 'graph traversal', 'implementation']"
17849,1784900,Hardware Sales,5,['implementation']
17850,1785000,Make America Grade Again,4,"['implementation', 'mathematics']"
17851,1785100,This Problem’s a Slam Dunk,4,"['implementation', 'sorting']"
17852,1785200,Retribution!,9,['sorting']
17853,1785300,Bio Trip,19,"[""dijkstra's"", 'graph theory']"
17854,1785400,"Cheese, If You Please",23,['linear programming']
17855,1785500,Follow the Bouncing Ball,0,[]
17856,1785600,Just Passing Through,12,['dynamic programming']
17857,1785700,Musical Chairs,6,"['data structures', 'implementation', 'queue', 'simulation']"
17858,1785800,Out of Sorts,7,"['binary search', 'implementation', 'simulation']"
17859,1785900,Remainder Reminder,13,"['bruteforcing', 'chinese remainder theorem', 'mathematics', 'number theory']"
17860,1786000,Square Rooms,22,"['backtracking', 'bruteforcing', 'prefix sum']"
17861,1786100,Taxed Editor,20,"['binary search', 'greedy', 'parametric search']"
17862,1786200,Where Have You Bin?,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
17863,1786300,FYI,2,"['implementation', 'string']"
17864,1786400,Remdoku,0,[]
17865,1786500,Pass the Buck,0,[]
17866,1786600,Gerrymandering Criterion,23,['geometry']
17867,1786700,Circle Garden,0,[]
17868,1786800,Origami Fold,0,[]
17869,1786900,Simple Collatz Sequence,3,"['arithmetic', 'implementation', 'mathematics']"
17870,1787000,Problematic Public Keys,7,"['bruteforcing', 'mathematics', 'number theory', 'sorting']"
17871,1787100,Integers in Rational Bases,5,[]
17872,1787200,How Many Unicycles in a Wheel?,14,['dynamic programming']
17873,1787300,Regional Team Names,0,[]
17874,1787400,Piece of Cake!,2,"['arithmetic', 'mathematics']"
17875,1787500,Fantasy Draft,10,"['data structures', 'queue']"
17876,1787600,Folding a Cube,16,"['depth-first search', 'geometry', 'geometry; 3d', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
17877,1787700,Integer Division,9,"['combinatorics', 'mathematics', 'sorting', 'two-pointer']"
17878,1787800,Hogwarts,17,"['graph theory', 'graph traversal']"
17879,1787900,Molecules,19,"['linear algebra', 'mathematics']"
17880,1788000,Typo,19,"['data structures', 'tree', 'trie']"
17881,1788100,The Biggest Triangle,15,"['bruteforcing', 'geometry']"
17882,1788200,Tired Terry,9,['prefix sum']
17883,1788300,Watch Later,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
17884,1788400,Lost Lineup,4,['implementation']
17885,1788500,Bus Planning,0,[]
17886,1788600,Cars,0,[]
17887,1788700,Color Codes,0,[]
17888,1788800,#exclude<scoring>,19,"['binary search', 'dynamic programming', 'prefix sum', 'sorting']"
17889,1788900,Mars Window,4,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics', 'number theory']"
17890,1789000,Mathemagicians,0,[]
17891,1789100,Pairing Socks,7,"['data structures', 'stack']"
17892,1789200,Tree Hugging,0,[]
17893,1789300,Assassins,14,"['mathematics', 'probability theory']"
17894,1789400,Espresso Bucks,7,"['constructive', 'implementation']"
17895,1789500,Loo Rolls,6,"['mathematics', 'number theory']"
17896,1789600,Meow Factor 2,10,"['case work', 'regular expression', 'string']"
17897,1789700,Pea Soup and Pancakes,4,"['implementation', 'string']"
17898,1789800,Ski Lifts,0,[]
17899,1789900,Symmetric Polynomials,0,[]
17900,1790000,Type Charts,0,[]
17901,1790100,Awkward Party,8,"['data structures', 'set / map by hashing', 'set / map by trees']"
17902,1790200,Backpack Buddies,0,[]
17903,1790300,Counting Clauses,2,['implementation']
17904,1790400,Dice and Ladders,0,[]
17905,1790500,Expecting Rain,0,[]
17906,1790600,Fishmongers,7,"['greedy', 'sorting']"
17907,1790700,Gameworld Tornado,0,[]
17908,1790800,Hidden Words,0,[]
17909,1790900,ISP Merger,19,"['ad-hoc', 'case work', 'data structures', 'disjoint set', 'greedy', 'priority queue']"
17910,1791000,Joint Attack,6,"['euclidean algorithm', 'implementation', 'mathematics', 'number theory', 'recursion']"
17911,1791100,Keyboards in Concert,9,['dynamic programming']
17912,1791200,License to Launch,3,['implementation']
17913,1791300,Workout,15,['mathematics']
17914,1791400,Typo Squatting,0,[]
17915,1791500,Candy Packaging,0,[]
17916,1791600,Streaming Services,0,[]
17917,1791700,"Mirror, Mirror...",21,['geometry']
17918,1791800,Mutexes,0,[]
17919,1791900,Östgötska,4,"['implementation', 'string']"
17920,1792000,Short Sell,12,['dynamic programming']
17921,1792100,Pokémon Ice Maze,15,"['breadth-first search', 'graph theory', 'graph traversal']"
17922,1792200,Dry Ice Cream,0,[]
17923,1792300,Ice Cream,0,[]
17924,1792400,Cooking Water,4,"['bruteforcing', 'implementation']"
17925,1792500,Problem Classification,6,['string']
17926,1792600,Mixing Drinks,0,[]
17927,1792700,Counting Greedily Increasing Supersequences,14,"['combinatorics', 'mathematics']"
17928,1792800,Train Tickets,0,[]
17929,1792900,Assistant Ranking,0,[]
17930,1793000,Hanging Out on the Terrace,4,"['implementation', 'simulation']"
17931,1793100,Greedily Increasing Subsequence,5,"['data structures', 'greedy', 'implementation', 'stack']"
17932,1793200,Haiku,13,"['data structures', 'dynamic programming', 'string', 'tree', 'trie']"
17933,1793300,Logland,16,"['greedy', 'mathematics']"
17934,1793400,Flight Plans,18,"['breadth-first search', 'graph theory', 'graph traversal']"
17935,1793500,Infinite Slides,13,['geometry']
17936,1793600,트리와 쿼리 13,30,"['link/cut tree', 'top tree', 'tree']"
17937,1793700,수열과 쿼리 34,30,"['data structures', 'segment tree', 'string', 'suffix array and lcp array']"
17938,1793800,퐁당퐁당 2,6,"['implementation', 'mathematics']"
17939,1793900,Gazzzua,10,['greedy']
17940,1794000,지하철,14,"[""dijkstra's"", 'graph theory']"
17941,1794100,목장 CCTV,17,"['data structures', 'deque', 'dynamic programming', 'segment tree', 'sliding window', 'sparse table']"
17942,1794200,알고리즘 공부,14,"['binary search', 'data structures', 'graph theory', 'graph traversal', 'greedy', 'priority queue']"
17943,1794300,도미노 예측,12,"['mathematics', 'prefix sum']"
17944,1794400,퐁당퐁당 1,3,"['implementation', 'mathematics']"
17945,1794500,통학의 신,3,"['bruteforcing', 'mathematics']"
17946,1794600,피자는 나눌 수록 커지잖아요,4,['mathematics']
17947,1794700,상남자 곽철용,16,"['greedy', 'two-pointer']"
17948,1794800,뜨끈한 돼지국밥,17,['dynamic programming']
17949,1794900,Drop The Byte!,5,"['implementation', 'parsing', 'string']"
17950,1795000,스노우볼,5,['mathematics']
17951,1795100,흩날리는 시험지 속에서 내 평점이 느껴진거야,12,['binary search']
17952,1795200,과제는 끝나지 않아!,8,"['data structures', 'implementation', 'stack']"
17953,1795300,디저트,11,['dynamic programming']
17954,1795400,투튜브,14,"['constructive', 'greedy']"
17955,1795500,Max or Min,23,"['data structures', 'segment tree']"
17956,1795600,Level Up,20,"['dynamic programming', 'greedy']"
17957,1795700,Find the Array,23,['binary search']
17958,1795800,Cycle String?,17,"['ad-hoc', 'constructive']"
17959,1795900,Life Transfer,19,"['greedy', 'sorting']"
17960,1796000,3차원 점과 쿼리,23,"['data structures', 'multidimensional segment tree', 'persistent segment tree', 'segment tree', 'square root decomposition']"
17961,1796100,수열과 쿼리 35,26,"['data structures', 'segment tree', 'splay tree', 'tree']"
17962,1796200,Game on a Tree,22,"['dynamic programming', 'dynamic programming on trees', 'game theory', 'tree']"
17963,1796300,Projection,15,"['constructive', 'implementation']"
17964,1796400,Tree Permutations,24,[]
17965,1796500,Absolute Game,16,['game theory']
17966,1796600,Graph and Cycles,17,"['graph theory', 'greedy', 'sorting']"
17967,1796700,Stranded Robot,22,[]
17968,1796800,Fire on Field,7,"['bruteforcing', 'dynamic programming', 'implementation']"
17969,1796900,Gene Tree,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
17970,1797000,Islands,24,['ad-hoc']
17971,1797100,Ladder Game,21,"['greedy', 'sorting']"
17972,1797200,Network Vulnerability,25,"['data structures', 'dynamic programming', 'segment tree with lazy propagation', 'segment tree']"
17973,1797300,Quadrilaterals,23,"['geometry', 'sweeping']"
17974,1797400,Same Color,21,"['data structures', 'dynamic programming', 'segment tree']"
17975,1797500,Strike Zone,21,"['data structures', 'segment tree', 'sweeping']"
17976,1797600,Thread Knots,13,"['binary search', 'greedy', 'parametric search']"
17977,1797700,Triangulation,14,"['ad-hoc', 'dynamic programming', 'mathematics', 'recursion']"
17978,1797800,Washer,22,"['bruteforcing', 'geometry', 'geometry; 3d', 'mathematics']"
17979,1797900,What’s Mine is Mine,12,['dynamic programming']
17980,1798000,Alehouse,0,[]
17981,1798100,Bus Ticket,13,"['binary search', 'dynamic programming', 'prefix sum']"
17982,1798200,Climbing Stairs,0,[]
17983,1798300,Drive Safely,0,[]
17984,1798400,Equilibrium,13,"['depth-first search', 'graph theory', 'graph traversal']"
17985,1798500,Fence Bowling,0,[]
17986,1798600,Great GDP,18,"['data structures', 'disjoint set', 'greedy', 'priority queue']"
17987,1798700,Howl,4,"['ad-hoc', 'constructive', 'string']"
17988,1798800,Ice Cream,0,[]
17989,1798900,Jane Eyre,10,"['data structures', 'parsing', 'priority queue', 'sorting', 'string']"
17990,1799000,Killing Chaos,16,"['data structures', 'disjoint set', 'offline queries']"
17991,1799100,Carryless Square Root,16,['backtracking']
17992,1799200,Computer Cache,21,"['data structures', 'segment tree with lazy propagation', 'offline queries', 'persistent segment tree', 'segment tree']"
17993,1799300,Elven Efficiency,21,"['bruteforcing', 'mathematics', 'number theory']"
17994,1799400,Swap Free,19,['bipartite matching']
17995,1799500,Fixed Point Permutations,20,"['combinatorics', 'dynamic programming', 'mathematics']"
17996,1799600,Interstellar Travel,19,"['implementation', 'mathematics', 'prefix sum', 'sorting', 'sweeping']"
17997,1799700,Jumping Path,21,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'heavy-light decomposition', 'longest increasing sequence in o(n log n)', 'segment tree', 'tree']"
17998,1799800,Levenshtein Distance,8,"['sorting', 'string']"
17999,1799900,Maze Connect,14,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
18000,1800000,One of Each,19,"['data structures', 'greedy']"
18001,1800100,Windmill Pivot,21,"['bruteforcing', 'geometry', 'graph theory']"
18002,1800200,Balanced Animals,9,"['binary search', 'bruteforcing', 'prefix sum']"
18003,1800300,Checkerboard,6,['implementation']
18004,1800400,From A to B,9,"['greedy', 'mathematics']"
18005,1800500,Even or Odd?,3,"['mathematics', 'number theory']"
18006,1800600,"Glow, Pixel, Glow!",19,"['binary search', 'sorting']"
18007,1800700,Rainbow Strings,9,"['combinatorics', 'mathematics', 'string']"
18008,1800800,ReMorse,9,"['greedy', 'mathematics', 'sorting', 'string']"
18009,1800900,Price Evaluation,7,"['implementation', 'string']"
18010,1801000,Tourism,17,"['dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'topological sorting', 'tree']"
18011,1801100,Exhibition,0,[]
18012,1801200,Easy Sculptural Project,9,"['data structures', 'stack']"
18013,1801300,Hard Sculptural Project,0,[]
18014,1801400,A+B Problem,11,"['implementation', 'mathematics']"
18015,1801500,어려운 계단 수,17,"['dynamic programming', 'inclusion and exclusion']"
18016,1801600,더 어려운 계단 수,0,[]
18017,1801700,총알의 속도,0,"['mathematics', 'physics']"
18018,1801800,Alphabet Animals,7,"['implementation', 'string']"
18019,1801900,Building Boundaries,12,"['bruteforcing', 'implementation', 'mathematics']"
18020,1802000,Cocoa Coalition,12,"['bruteforcing', 'mathematics', 'number theory']"
18021,1802100,Dungeon Dawdler,28,[]
18022,1802200,Eeny Meeny,9,['implementation']
18023,1802300,Flow Finder,22,"['dynamic programming', 'dynamic programming on trees', 'tree']"
18024,1802400,Game of Gnomes,19,"['greedy', 'mathematics']"
18025,1802500,Hot Hike,5,"['bruteforcing', 'implementation']"
18026,1802600,Incremental Induction,19,"['ad-hoc', 'graph theory', 'greedy']"
18027,1802700,Jealous Youngsters,24,"['bipartite matching', 'implementation']"
18028,1802800,Keep it Cool,14,"['bruteforcing', 'greedy']"
18029,1802900,Algorithm Teaching,23,['bipartite matching']
18030,1803000,Build the Perfect House,20,"['geometry', 'parametric search']"
18031,1803100,Cut Inequality Down,21,"['data structures', 'segment tree', 'sparse table']"
18032,1803200,Dazzling Stars,19,['geometry']
18033,1803300,Eggfruit Cake,10,"['binary search', 'combinatorics', 'mathematics']"
18034,1803400,Fabricating Sculptures,18,"['dynamic programming', 'inclusion and exclusion']"
18035,1803500,Gluing Pictures,19,"['greedy', 'string', 'suffix array and lcp array']"
18036,1803600,Hold or Continue?,22,['mathematics']
18037,1803700,Improve SPAM,12,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
18038,1803800,Jumping Grasshopper,21,"['data structures', 'segment tree', 'set / map by trees']"
18039,1803900,Know your Aliens,13,"['divide and conquer', 'mathematics']"
18040,1804000,Leverage MDT,14,"['dynamic programming', 'prefix sum']"
18041,1804100,Mountain Ranges,4,['implementation']
18042,1804200,Assimilation,16,['greedy']
18043,1804300,Little Worm,23,['tree']
18044,1804400,Polygon,8,"['geometry', 'greedy', 'sorting']"
18045,1804500,Frogs,14,['sweeping']
18046,1804600,The Great Drone Show,26,"['binary search', 'data structures', 'disjoint set', 'graph theory', 'offline queries', 'planar graph', 'smaller to larger technique', 'sparse table']"
18047,1804700,Fantastic compression,19,"['backtracking', 'bruteforcing', 'prefix sum']"
18048,1804800,Bookstore,23,"['data structures', 'divide and conquer', 'randomization', 'segment tree', 'stack']"
18049,1804900,Cheese Game,15,['dynamic programming']
18050,1805000,Henry Porter and the Palindromic Radius,18,"[""manacher's"", 'string']"
18051,1805100,Antennas,27,"['data structures', 'geometry', 'line segment intersection check', 'point in convex polygon check', 'segment tree', 'sweeping']"
18052,1805200,Ghost,0,[]
18053,1805300,Donuts,22,"['hashing', 'mathematics']"
18054,1805400,Assessing Genomes,8,"['bipartite matching', 'greedy', 'sorting']"
18055,1805500,Bouldering,19,[]
18056,1805600,Colourful Chameleons,10,[]
18057,1805700,Dungeon Crawler,0,[]
18058,1805800,Election Meddling,10,"['parametric search', 'sorting']"
18059,1805900,Final Standings,0,[]
18060,1806000,Game of Falling Blocks,9,[]
18061,1806100,Historical Maths,0,[]
18062,1806200,Insertion Order,15,"['constructive', 'tree']"
18063,1806300,Jazz Enthusiast,3,"['arithmetic', 'mathematics', 'string']"
18064,1806400,Keeping the Dogs Out,16,[]
18065,1806500,Long-Exposure Photography,0,[]
18066,1806600,Move & Meet,7,['case work']
18067,1806700,Accurate Movement,4,"['bruteforcing', 'implementation', 'mathematics', 'simulation']"
18068,1806800,Bad Treap,17,"['constructive', 'mathematics', 'precomputation']"
18069,1806900,Cross-Stitch,21,"['case work', 'depth-first search', 'eulerian path / circuit', 'graph theory', 'graph traversal']"
18070,1807000,Double Palindrome,24,"['combinatorics', 'mathematics']"
18071,1807100,Equidistant,16,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
18072,1807200,Foreach,25,[]
18073,1807300,Golf Time,25,"['mathematics', 'number theory']"
18074,1807400,High Load Database,16,"['binary search', 'prefix sum']"
18075,1807500,Ideal Pyramid,11,"['geometry', 'mathematics', 'ternary search']"
18076,1807600,Just the Last Digit,16,"['combinatorics', 'dynamic programming', 'graph theory', 'mathematics']"
18077,1807700,King’s Children,19,"['constructive', 'divide and conquer', 'implementation']"
18078,1807800,Lengths and Periods,22,"['smaller to larger technique', 'string', 'suffix array and lcp array']"
18079,1807900,Managing Difficulties,9,"['data structures', 'set / map by hashing']"
18080,1808000,Average Rank,19,"['data structures', 'prefix sum', 'segment tree']"
18081,1808100,Balanced Cut,25,['greedy']
18082,1808200,Canvas Line,13,"['greedy', 'implementation']"
18083,1808300,Disposable Switches,20,"['convex hull trick', 'dynamic programming', 'geometry']"
18084,1808400,Expeditious Cubing,8,"['arithmetic', 'binary search', 'mathematics']"
18085,1808500,Firetrucks Are Red,13,"['data structures', 'disjoint set', 'graph theory', 'minimum spanning tree']"
18086,1808600,Gnoll Hypothesis,16,"['linearity of expectation', 'mathematics', 'probability theory']"
18087,1808700,Height Profile,22,"['binary search', 'data structures', 'mathematics', 'segment tree', 'sorting']"
18088,1808800,Inverted Deck,10,"['constructive', 'sorting']"
18089,1808900,Jackdaws And Crows,21,"['data structures', 'parametric search', 'segment tree', 'sorting']"
18090,1809000,Kitesurfing,24,[]
18091,1809100,ACM,8,"['parsing', 'string']"
18092,1809200,Slagalica,11,"['case work', 'greedy']"
18093,1809300,Checker,13,"['ad-hoc', 'implementation']"
18094,1809400,Popcount,18,"['ad-hoc', 'arbitrary precision / big integers', 'divide and conquer']"
18095,1809500,Zvijezda,21,"['binary search', 'geometry', 'point in convex polygon check']"
18096,1809600,Арифметическая магия,2,['mathematics']
18097,1809700,Большие перемены,6,['graph theory']
18098,1809800,Совпадения,4,"['greedy', 'implementation']"
18099,1809900,Драфт НБА,0,[]
18100,1810000,Думский регламент,7,"['data structures', 'stack']"
18101,1810100,Правильный подмногоугольник,7,"['case work', 'geometry', 'mathematics', 'number theory']"
18102,1810200,Есть ли делитель?,15,"['ad-hoc', 'case work', 'constructive', 'mathematics', 'number theory']"
18103,1810300,ICPC,0,[]
18104,1810400,Составление задач,0,[]
18105,1810500,Порталы,22,[]
18106,1810600,<<Контакт>> для двоих,22,[]
18107,1810700,Ближайшие точки,24,[]
18108,1810800,1998년생인 내가 태국에서는 2541년생?!,1,"['arithmetic', 'mathematics']"
18109,1810900,도깨비불,12,"['case work', 'implementation', 'string']"
18110,1811000,solved.ac,7,"['implementation', 'mathematics', 'sorting']"
18111,1811100,마인크래프트,9,"['bruteforcing', 'implementation']"
18112,1811200,이진수 게임,11,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
18113,1811300,그르다 김가놈,9,['binary search']
18114,1811400,블랙 프라이데이,11,"['binary search', 'bruteforcing', 'sorting']"
18115,1811500,카드 놓기,8,"['data structures', 'deque']"
18116,1811600,로봇 조립,12,"['data structures', 'disjoint set']"
18117,1811700,분수,16,"['exponentiation by squaring', 'mathematics', 'number theory']"
18118,1811800,7-세그먼트 디스플레이,17,['dynamic programming']
18119,1811900,단어 암기,12,"['bitmask', 'bruteforcing']"
18120,1812000,대농부 김상혁,17,"['calculus', 'mathematics', 'prefix sum', 'sorting']"
18121,1812100,문자열 압축,23,"['data structures', 'dynamic programming', 'string', 'tree', 'trie']"
18122,1812200,색깔 하노이 탑,16,"['dynamic programming', 'mathematics']"
18123,1812300,평행우주,22,"['hashing', 'tree', 'tree isomorphism']"
18124,1812400,치삼이의 종이 자르기,8,['mathematics']
18125,1812500,고양이 사료,5,['implementation']
18126,1812600,너구리 구구,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
18127,1812700,모형결정,3,"['arithmetic', 'mathematics']"
18128,1812800,치삼이의 징검다리 건너기,15,"['breadth-first search', 'binary search', 'data structures', ""dijkstra's"", 'disjoint set', 'graph theory', 'graph traversal']"
18129,1812900,이상한 암호코드,5,"['implementation', 'string']"
18130,1813000,여름나기,4,"['arithmetic', 'implementation', 'mathematics']"
18131,1813100,치삼이의 플레이리스트,16,['implementation']
18132,1813200,내 이진트리를 돌려줘!!!,13,['dynamic programming']
18133,1813300,가톨릭대학교에 워터 슬라이드를??,17,"['graph theory', 'strongly connected component']"
18134,1813400,치삼이의 대모험,20,"['maximum flow', 'minimum cost maximum flow']"
18135,1813500,겨울나기,17,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
18136,1813600,다이버전스 미터,26,[]
18137,1813700,나이트의 경로,16,['ad-hoc']
18138,1813800,리유나는 세일러복을 좋아해,17,['bipartite matching']
18139,1813900,Rush Hour Puzzle,17,"['breadth-first search', 'graph theory', 'graph traversal']"
18140,1814000,The Power Monitor System,21,[]
18141,1814100,Are They All Integers?,4,"['bruteforcing', 'mathematics']"
18142,1814200,Tapioka,4,"['implementation', 'string']"
18143,1814300,The League of Sequence Designers,18,"['constructive', 'mathematics']"
18144,1814400,Miss Sloane,24,[]
18145,1814500,Optimal Selection,24,[]
18146,1814600,Mining a,14,['mathematics']
18147,1814700,The Spectrum,24,[]
18148,1814800,Automatic Control Machine,10,['bruteforcing']
18149,1814900,Length of Bundle Rope,11,"['data structures', 'greedy', 'priority queue']"
18150,1815000,Largest Quadrilateral,20,[]
18151,1815100,DivModulo,22,"['chinese remainder theorem', 'exponentiation by squaring', 'mathematics', 'modular multiplicative inverse', 'number theory']"
18152,1815200,Radio Prize,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
18153,1815300,Coloring Contention,12,"['breadth-first search', 'graph theory', 'graph traversal']"
18154,1815400,Speeding,4,"['arithmetic', 'mathematics']"
18155,1815500,Issuing Plates,6,"['implementation', 'string']"
18156,1815600,Black and White,5,['implementation']
18157,1815700,수열과 쿼리 36,26,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
18158,1815800,What an Easy Problem,4,['implementation']
18159,1815900,Have You Ever Sorted an Array?,16,"['mathematics', 'sorting', 'tree']"
18160,1816000,숫자 야구 F,15,"['bruteforcing', 'case work', 'implementation']"
18161,1816100,마스터마인드,16,"['bruteforcing', 'graph theory', 'heuristics', 'implementation', 'precomputation', 'simulation']"
18162,1816200,Adler32,20,"['constructive', 'mathematics']"
18163,1816300,Binary Matrix,29,"['bit set', 'linear algebra', 'mathematics', 'number theory']"
18164,1816400,Count the Bits,21,"['implementation', 'mathematics', 'number theory']"
18165,1816500,Dao Robot,16,"['heuristics', 'randomization']"
18166,1816600,Evaluation,24,"['discrete square root', 'implementation', 'mathematics', 'number theory', 'parsing', 'string']"
18167,1816700,Functional Analysis,23,"['parsing', 'string']"
18168,1816800,Game with Polynomials 2,25,"['divide and conquer', 'fast fourier transform', 'mathematics']"
18169,1816900,Honor kipa00 Award,0,[]
18170,1817000,두 동전 언리미티드,13,"['breadth-first search', 'graph theory', 'graph traversal']"
18171,1817100,ABB,17,"['knuth–morris–pratt', ""manacher's"", 'string']"
18172,1817200,Be Geeks!,21,"['data structures', 'divide and conquer', 'segment tree with lazy propagation', 'segment tree', 'sparse table']"
18173,1817300,Bob in Wonderland,9,['tree']
18174,1817400,Crimson Sexy Jalapeños,18,"['game theory', 'sprague–grundy theorem']"
18175,1817500,Deep800080,17,"['geometry', 'mathematics']"
18176,1817600,Zeldain Garden,12,"['mathematics', 'number theory']"
18177,1817700,Light Emitting Hindenburg,11,['bitmask']
18178,1817800,K==S,21,"['aho-corasick', 'data structures', 'exponentiation by squaring', 'mathematics', 'tree', 'trie']"
18179,1817900,Ponk Warshall,16,['greedy']
18180,1818000,Saba1000kg,19,"['data structures', 'disjoint set', 'square root decomposition']"
18181,1818100,Screamers in the Storm,0,[]
18182,1818200,The Bugs,18,"['case work', 'value / coordinate compression', 'data structures', 'segment tree']"
18183,1818300,Tiling with T-tetrominoes,23,"['berlekamp–massey', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'exponentiation by squaring', 'mathematics', 'precomputation']"
18184,1818400,분할하기,17,"['bitmask', 'constructive', 'mathematics']"
18185,1818500,라면 사기 (Small),21,['greedy']
18186,1818600,라면 사기 (Large),22,['greedy']
18187,1818700,평면 분할,9,"['euler characteristic (χ=v-e+f)', 'geometry', 'mathematics']"
18188,1818800,다오의 데이트,12,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
18189,1818900,참 어려운 문제,21,"['euler tour technique', 'prefix sum', 'tree']"
18190,1819000,촛불과 그림자,26,"['binary search', 'convex hull', 'geometry', 'implementation', 'prefix sum']"
18191,1819100,피아노 연주,18,['binary search']
18192,1819200,보고 정렬,15,"['randomization', 'sorting']"
18193,1819300,비행기 타고 가요,22,"['data structures', ""dijkstra's"", 'graph theory', 'priority queue', 'segment tree']"
18194,1819400,Bad Hair Day와 기댓값,20,"['combinatorics', 'mathematics']"
18195,1819500,정점 찾기,20,"['binary search', 'bitmask', 'constructive']"
18196,1819600,정기 모임,21,"['data structures', 'lowest common ancestor', 'segment tree', 'sparse table', 'tree']"
18197,1819700,분수 계산,21,['mathematics']
18198,1819800,Basketball One-on-One,2,"['implementation', 'string']"
18199,1819900,Commemorative Race,19,"['depth-first search', 'graph theory', 'graph traversal']"
18200,1820000,Convoy,12,"['data structures', 'greedy', 'parametric search', 'priority queue']"
18201,1820100,Crazed Boar,17,"['geometry', 'sweeping']"
18202,1820200,Dance Circle,18,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'prefix sum']"
18203,1820300,Dragon Ball I,14,"['bruteforcing', ""dijkstra's"", 'graph theory']"
18204,1820400,Dragon Ball II,21,"['bitmask', ""dijkstra's"", 'graph theory', 'randomization']"
18205,1820500,Farming Mars,12,"['bruteforcing', 'value / coordinate compression', 'randomization']"
18206,1820600,Soft Passwords,6,"['bruteforcing', 'implementation', 'string']"
18207,1820700,Sum and Product,18,"['backtracking', 'mathematics']"
18208,1820800,True/False Worksheet,18,['dynamic programming']
18209,1820900,Umm Code,7,"['implementation', 'parsing', 'string']"
18210,1821000,Fast Forwarding,9,"['greedy', 'mathematics']"
18211,1821100,Estimating the Flood Risk,11,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
18212,1821200,Wall Painting,23,[]
18213,1821300,Twin Trees Bros.,24,"['geometry', 'geometry; 3d', 'mathematics']"
18214,1821400,Reordering the Documents,19,"['combinatorics', 'mathematics']"
18215,1821500,Halting Problem,26,"['data structures', 'graph theory', 'heavy-light decomposition', 'implementation', 'merge sort tree', 'offline queries', 'prefix sum', 'segment tree', 'sorting', 'tree', 'set / map by trees']"
18216,1821600,Ambiguous Encoding,18,[]
18217,1821700,Parentheses Editor,18,"['data structures', 'segment tree', 'stack']"
18218,1821800,One-Way Conveyors,21,"['articulation points and bridges', 'biconnected component', 'graph theory', 'lowest common ancestor', 'prefix sum', 'tree']"
18219,1821900,Fun Region,28,['geometry']
18220,1822000,Draw in Straight Lines,28,"['maximum flow', 'max-flow min-cut theorem']"
18221,1822100,교수님 저는 취업할래요,6,"['geometry', 'implementation']"
18222,1822200,투에-모스 문자열,9,"['divide and conquer', 'recursion']"
18223,1822300,민준이와 마산 그리고 건우,12,"[""dijkstra's"", 'graph theory']"
18224,1822400,미로에 갇힌 건우,15,"['breadth-first search', 'graph theory', 'graph traversal']"
18225,1822500,당구공을 넣자,14,"['mathematics', 'number theory']"
18226,1822600,안 읽은 사람은 누구?,18,"['combinatorics', 'mathematics', 'number theory']"
18227,1822700,성대나라의 물탱크,18,"['data structures', 'euler tour technique', 'segment tree', 'tree']"
18228,1822800,펭귄추락대책위원회,4,['implementation']
18229,1822900,"내가 살게, 아냐 내가 살게",5,"['implementation', 'simulation']"
18230,1823000,2xN 예쁜 타일링,9,"['greedy', 'sorting']"
18231,1823100,파괴된 도시,11,"['graph theory', 'graph traversal', 'greedy']"
18232,1823200,텔레포트 정거장,9,"['breadth-first search', 'graph theory', 'graph traversal']"
18233,1823300,러버덕을 사랑하는 모임,10,"['bitmask', 'bruteforcing', 'greedy']"
18234,1823400,당근 훔쳐 먹기,13,"['greedy', 'sorting']"
18235,1823500,지금 만나러 갑니다,13,"['breadth-first search', 'graph theory', 'graph traversal']"
18236,1823600,행렬 곱셈 순서 2,30,"['ad-hoc', 'data structures', 'greedy', 'implementation', 'mathematics', 'priority queue', 'smaller to larger technique', 'sorting']"
18237,1823700,행렬 곱셈 순서 3,30,"['ad-hoc', 'data structures', 'greedy', 'implementation', 'mathematics', 'priority queue', 'smaller to larger technique', 'sorting']"
18238,1823800,ZOAC 2,4,"['greedy', 'implementation', 'string']"
18239,1823900,편안한 수열 만들기,13,"['ad-hoc', 'case work']"
18240,1824000,이진 탐색 트리 복원하기,14,"['constructive', 'tree']"
18241,1824100,문자열 게임,18,"['data structures', 'deque', 'implementation', 'stack']"
18242,1824200,네모네모 시력검사,6,"['ad-hoc', 'implementation']"
18243,1824300,Small World Network,9,"['breadth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
18244,1824400,변형 계단 수,13,['dynamic programming']
18245,1824500,이상한 나라의 암호,4,"['implementation', 'string']"
18246,1824600,색종이와 쿼리,20,"['data structures', 'multidimensional segment tree', 'prefix sum', 'segment tree']"
18247,1824700,겨울왕국 티켓 예매,3,"['arithmetic', 'mathematics']"
18248,1824800,제야의 종,9,['sorting']
18249,1824900,욱제가 풀어야 하는 문제,9,['dynamic programming']
18250,1825000,철도 여행,16,"['eulerian path / circuit', 'graph theory', 'graph traversal']"
18251,1825100,내 생각에 A번인 단순 dfs 문제가 이 대회에서 E번이 되어버린 건에 관하여 (Easy),17,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'sweeping']"
18252,1825200,별이 빛나는 밤에,22,"['convex hull', 'geometry', 'two-pointer']"
18253,1825300,최단경로와 쿼리,23,"[""dijkstra's"", 'divide and conquer', 'graph theory']"
18254,1825400,쿼리와 쿼리,26,"['data structures', 'segment tree with lazy propagation', 'offline queries', 'segment tree', 'square root decomposition', 'sweeping']"
18255,1825500,Visible Lattice,10,"['bruteforcing', 'euclidean algorithm', 'mathematics', 'number theory']"
18256,1825600,Interleaved Periodic String,4,"['ad-hoc', 'string']"
18257,1825700,Find The Number,17,"['binary search', 'euclidean algorithm', 'inclusion and exclusion', 'mathematics', 'number theory']"
18258,1825800,큐 2,7,"['data structures', 'queue']"
18259,1825900,Greedy Pie Eaters,22,['dynamic programming']
18260,1826000,Bessie's Snow Cow,21,"['data structures', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
18261,1826100,Tree Depth,26,"['combinatorics', 'dynamic programming', 'mathematics']"
18262,1826200,Milk Pumping,15,"[""dijkstra's"", 'graph theory']"
18263,1826300,Milk Visits,20,"['data structures', 'heavy-light decomposition', 'lowest common ancestor', 'offline queries', 'segment tree', 'tree']"
18264,1826400,Moortal Cowmbat,18,"['dynamic programming', 'floyd–warshall', 'graph theory', 'prefix sum']"
18265,1826500,MooBuzz,6,"['binary search', 'mathematics']"
18266,1826600,Meetings,18,"['ad-hoc', 'binary search', 'sorting']"
18267,1826700,Milk Visits,14,"['data structures', 'disjoint set', 'tree']"
18268,1826800,Cow Gymnastics,5,"['bruteforcing', 'implementation']"
18269,1826900,Where Am I?,5,"['bruteforcing', 'string']"
18270,1827000,Livestock Lineup,9,"['backtracking', 'bruteforcing', 'string']"
18271,1827100,Preokret,5,"['implementation', 'simulation']"
18272,1827200,Grudanje,14,['binary search']
18273,1827300,Drvca,19,"['ad-hoc', 'case work', 'data structures', 'set / map by trees']"
18274,1827400,Lampice,25,"['binary search', '센트로이드', 'centroid decomposition', 'divide and conquer', 'hashing', 'string', 'tree']"
18275,1827500,Sob,20,"['ad-hoc', 'bitmask', 'divide and conquer', 'mathematics', 'recursion']"
18276,1827600,Alergični Aron,15,"['data structures', 'disjoint set', 'greedy', 'sorting']"
18277,1827700,Bliski Brojevi,21,"['data structures', ""mo's"", 'offline queries', 'segment tree']"
18278,1827800,Crni Ceh,17,"['data structures', 'segment tree']"
18279,1827900,Dramatični Dvoboj,21,"['game theory', 'gaussian elimination', 'linear algebra', 'longest increasing sequence in o(n log n)', 'mathematics', 'sprague–grundy theorem', 'sweeping']"
18280,1828000,Elokventni Evaluator,14,"['bruteforcing', 'parsing', 'string']"
18281,1828100,Fantastični Fožgaj,21,"['aho-corasick', 'data structures', 'exponentiation by squaring', 'mathematics', 'string', 'tree', 'trie']"
18282,1828200,Golema Gozba,23,"['bipartite graph', 'constructive', 'depth-first search', 'graph theory', 'graph traversal']"
18283,1828300,Herojski Histogram,23,"['convex hull trick', 'data structures', 'dynamic programming', 'stack']"
18284,1828400,Idilični Instagram,11,"['bruteforcing', 'greedy']"
18285,1828500,Jaki Jovsi,24,"['dynamic programming', 'dynamic programming on trees', 'palindrome tree', 'string', 'tree']"
18286,1828600,직사각형 색칠 2,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'exponentiation by squaring', 'mathematics']"
18287,1828700,체스판 이동,19,"['dynamic programming', 'exponentiation by squaring', 'linear algebra', 'mathematics']"
18288,1828800,팀 연습,14,['dynamic programming']
18289,1828900,팀 연습 더,19,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
18290,1829000,NM과 K (1),10,"['backtracking', 'bruteforcing']"
18291,1829100,비요뜨의 징검다리 건너기,11,"['combinatorics', 'exponentiation by squaring', 'mathematics']"
18292,1829200,NM과 K (2),17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
18293,1829300,Environment-Friendly Travel,17,"[""dijkstra's"", 'graph theory']"
18294,1829400,Biodiversity,7,"['data structures', 'set / map by hashing', 'set / map by trees']"
18295,1829500,Ants,8,"['bruteforcing', 'data structures', 'string', 'set / map by trees']"
18296,1829600,Gnalcats,18,"['data structures', 'implementation']"
18297,1829700,Pixels,23,"['gaussian elimination', 'linear algebra', 'mathematics']"
18298,1829800,Icebergs,11,"['geometry', 'area of a polygon']"
18299,1829900,Swapping Places,19,['greedy']
18300,1830000,Pseudo-Random Number Generator,20,['precomputation']
18301,1830100,Rats,1,"['arithmetic', 'mathematics']"
18302,1830200,Counting Trees,19,"['combinatorics', 'data structures', 'mathematics', 'segment tree']"
18303,1830300,Bird Watching,19,"['graph theory', 'graph traversal', 'strongly connected component']"
18304,1830400,River Game,22,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'game theory', 'graph theory', 'graph traversal', 'sprague–grundy theorem']"
18305,1830500,Splitting DNA,13,['dynamic programming']
18306,1830600,Hiding Nuts,10,"['bruteforcing', 'prefix sum']"
18307,1830700,Visibility,17,"['value / coordinate compression', 'data structures', 'segment tree', 'sweeping']"
18308,1830800,Migration,19,['maximum flow']
18309,1830900,Extreme Temperatures,4,"['implementation', 'mathematics', 'string']"
18310,1831000,안테나,8,"['greedy', 'mathematics', 'sorting']"
18311,1831100,왕복,6,['implementation']
18312,1831200,시각,4,"['bruteforcing', 'implementation']"
18313,1831300,Cave Paintings,19,"['data structures', 'disjoint set', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
18314,1831400,Non-Decreasing Subsequences,22,"['divide and conquer', 'linear algebra', 'mathematics', 'prefix sum']"
18315,1831500,Falling Portals,23,"['convex hull', 'geometry', 'greedy', 'ternary search']"
18316,1831600,Time is Mooney,16,"['dynamic programming', 'graph theory']"
18317,1831700,Farmer John Solves 3SUM,18,"['dynamic programming', 'prefix sum']"
18318,1831800,Springboards,20,"['value / coordinate compression', 'data structures', 'dynamic programming', 'segment tree', 'sweeping']"
18319,1831900,Berry Picking,15,"['bruteforcing', 'greedy']"
18320,1832000,Loan Repayment,16,"['binary search', 'mathematics', 'parametric search']"
18321,1832100,Wormhole Sort,14,"['binary search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal']"
18322,1832200,Word Processor,5,"['implementation', 'string']"
18323,1832300,Photoshoot,6,"['arithmetic', 'bruteforcing', 'mathematics']"
18324,1832400,Race,13,"['binary search', 'greedy', 'mathematics']"
18325,1832500,Pod starim krovovima,9,"['greedy', 'sorting']"
18326,1832600,Spiderman,11,[]
18327,1832700,Holding,19,['dynamic programming']
18328,1832800,Klasika,21,"['data structures', 'euler tour technique', 'offline queries', 'tree', 'trie']"
18329,1832900,Nivelle,15,[]
18330,1833000,Petrol,2,"['arithmetic', 'mathematics']"
18331,1833100,Gold Rush,6,['greedy']
18332,1833200,Valid Emails,7,"['parsing', 'string']"
18333,1833300,Cafebazaar’s Chess Tournament,21,"['fast fourier transform', 'mathematics']"
18334,1833400,The Big Surprise,16,[]
18335,1833500,Lets Burn and Rob Manhootan,19,"['dynamic programming', 'prefix sum']"
18336,1833600,Gift Puzzle,0,[]
18337,1833700,Passport Control Gates,16,['greedy']
18338,1833800,Password,9,"['backtracking', 'bruteforcing']"
18339,1833900,Greedy Termite,18,"['data structures', 'segment tree']"
18340,1834000,Plan B,17,"['articulation points and bridges', 'graph theory']"
18341,1834100,The Assembly Code,14,"['bruteforcing', 'data structures', 'implementation', 'set / map by trees']"
18342,1834200,순례의 시작,24,"['binary search', 'convex hull trick', 'convex hull', 'data structures', 'geometry', 'set / map by trees']"
18343,1834300,신탁,25,"['ad-hoc', 'data structures', 'set / map by trees']"
18344,1834400,가장 짧은 순례,24,"['ad-hoc', 'graph theory', 'meet in the middle']"
18345,1834500,순례자의 기억과 감명받은 신,24,"['dynamic programming', 'mathematics', 'prefix sum']"
18346,1834600,업과 격의 그래프,25,"['case work', 'combinatorics', 'graph theory', 'mathematics']"
18347,1834700,완벽한 순례,22,"['constructive', 'mathematics', 'number theory']"
18348,1834800,질서와 혼돈,22,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
18349,1834900,천지창조,29,"['data structures', 'delaunay triangulation', 'geometry', 'graph theory', 'implementation', 'link/cut tree', 'minimum spanning tree', 'sparse table', 'square root decomposition', 'string', 'suffix array and lcp array', 'tree', 'voronoi diagram']"
18350,1835000,순례의 끝,25,"['combinatorics', 'gaussian elimination', 'linear algebra', 'mathematics']"
18351,1835100,새로운 시작,0,[]
18352,1835200,특정 거리의 도시 찾기,9,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
18353,1835300,병사 배치하기,9,"['dynamic programming', 'longest increasing sequence in o(n log n)']"
18354,1835400,다항식과 쿼리 2,24,"['fast fourier transform', 'mathematics']"
18355,1835500,Sorcerers of the Round Table,23,"['backtracking', 'case work', 'dynamic programming']"
18356,1835600,Movie-goer,19,"['data structures', 'segment tree']"
18357,1835700,Squares,21,"['mathematics', 'number theory']"
18358,1835800,Gluttons,18,['constructive']
18359,1835900,Seal,11,[]
18360,1836000,Logistics,20,"['value / coordinate compression', 'data structures', 'greedy', 'segment tree']"
18361,1836100,Necklace partition,22,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
18362,1836200,Desert,22,"['data structures', 'graph theory', 'segment tree', 'topological sorting']"
18363,1836300,Speed reading course,20,"['mathematics', 'number theory']"
18364,1836400,Three towers,20,"['case work', 'dynamic programming']"
18365,1836500,Visits,21,"['dynamic programming', 'dynamic programming on trees', 'lowest common ancestor', 'square root decomposition', 'tree']"
18366,1836600,Car washes,22,['dynamic programming']
18368,1836800,Trous de loup,19,"['binary search', 'data structures', 'deque', 'prefix sum', 'two-pointer']"
18370,1837000,Highway modernization,22,['tree']
18371,1837100,Trips,23,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
18372,1837200,트리와 쿼리 14,26,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'inclusion and exclusion', 'lowest common ancestor', 'prefix sum', 'sparse table', 'tree']"
18373,1837300,N!!!...! mod P,18,"['ad-hoc', 'case work', 'mathematics', 'number theory']"
18374,1837400,함수의 맛,26,"['link/cut tree', 'tree']"
18375,1837500,착한 말 나쁜 말,22,"['breadth-first search', 'binary search', 'data structures', ""dijkstra's"", 'disjoint set', 'graph theory', 'graph traversal', 'multidimensional segment tree', 'segment tree']"
18376,1837600,트리와 K번째 지름,24,"['data structures', 'segment tree', 'tree']"
18377,1837700,은광,23,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
18378,1837800,SUN인장 분자 만들기,28,"['cactus', 'data structures', 'dynamic programming', 'graph theory', 'heavy-light decomposition', 'implementation', 'link/cut tree', 'segment tree', 'tree']"
18379,1837900,이메이미의 수쿼 노트,23,"['data structures', 'persistent segment tree', 'segment tree']"
18380,1838000,전자식 계산기 (Calculator),19,"['hashing', 'implementation', 'mathematics', 'number theory', 'rabin–karp', 'string']"
18381,1838100,XOR과 집합과 트리와 쿼리,21,"['data structures', 'euclidean algorithm', 'lowest common ancestor', 'mathematics', 'number theory', 'sparse table', 'tree']"
18382,1838200,2048,10,"['implementation', 'simulation']"
18383,1838300,TATCK,18,"['geometry', 'heuristics', 'ternary search']"
18384,1838400,PRIM,7,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
18385,1838500,LJUST,0,[]
18386,1838600,BNKQ,0,[]
18387,1838700,ASLRDR,8,"['greedy', 'string']"
18388,1838800,SECHT,6,"['ad-hoc', 'implementation']"
18389,1838900,PTOFSUG,0,[]
18390,1839000,COPSCH,0,[]
18391,1839100,KBLTRNS,0,[]
18392,1839200,SHOP,9,"['implementation', 'parsing', 'sorting', 'string']"
18393,1839300,TRIP,0,[]
18394,1839400,DUP,0,[]
18395,1839500,CHROM,0,[]
18396,1839600,BNKQ,0,[]
18397,1839700,LTBL,0,[]
18398,1839800,HOMWRK,2,"['arithmetic', 'implementation', 'mathematics']"
18399,1839900,SENTI,0,[]
18400,1840000,DISPER,5,"['implementation', 'mathematics', 'statistics']"
18401,1840100,DISH,17,"['backtracking', 'dynamic programming', 'string']"
18402,1840200,RUN,11,"[""dijkstra's"", 'graph theory']"
18403,1840300,KABISA,4,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
18404,1840400,현명한 나이트,10,"['breadth-first search', 'graph theory', 'graph traversal']"
18405,1840500,경쟁적 전염,11,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
18406,1840600,럭키 스트레이트,4,"['implementation', 'string']"
18407,1840700,가로 블록 쌓기,18,"['value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'segment tree']"
18408,1840800,3 つの整数 (Three Integers),2,['implementation']
18409,1840900,母音を数える (Counting Vowels),2,"['implementation', 'string']"
18410,1841000,マージ (Merge),5,"['implementation', 'sorting']"
18411,1841100,試験 (Exam),2,"['arithmetic', 'implementation', 'mathematics']"
18412,1841200,文字列の反転 (Inversion of a String),3,"['implementation', 'string']"
18413,1841300,最頻値 (Mode),4,['implementation']
18414,1841400,X に最も近い値 (The Nearest Value),2,['implementation']
18415,1841500,キャピタリゼーション (Capitalization),4,"['implementation', 'string']"
18416,1841600,最長昇順連続部分列 (Longest Ascending Contiguous Subsequence),4,"['bruteforcing', 'implementation']"
18417,1841700,ポスター (Poster),7,['implementation']
18418,1841800,いちご (Strawberry),8,"['greedy', 'sorting']"
18419,1841900,桁和 (Digit Sum),10,['dynamic programming']
18420,1842000,テンキー (Tenkey),15,"['breadth-first search', 'graph theory', 'graph traversal']"
18421,1842100,じゃんけん式 (Rock-Scissors-Paper Expression),17,"['dynamic programming', 'dynamic programming on trees', 'parsing', 'string', 'tree']"
18422,1842200,Emacs,7,"['greedy', 'implementation']"
18423,1842300,Političari,14,['implementation']
18424,1842400,Matching,26,"['data structures', 'geometry', 'graph theory', 'segment tree with lazy propagation', 'segment tree', 'smaller to larger technique', 'sweeping']"
18425,1842500,Putovanje,18,"['depth-first search', 'graph theory', 'graph traversal', 'lowest common ancestor', 'prefix sum', 'tree']"
18426,1842600,Zapina,14,"['combinatorics', 'dynamic programming', 'exponentiation by squaring', 'mathematics']"
18427,1842700,함께 블록 쌓기,12,"['dynamic programming', 'knapsack']"
18428,1842800,감시 피하기,11,"['backtracking', 'bruteforcing']"
18429,1842900,근손실,8,"['backtracking', 'bruteforcing']"
18430,1843000,무기 공학,11,['backtracking']
18431,1843100,Just Long Neckties,13,"['prefix sum', 'sorting']"
18432,1843200,JJOOII 2,13,"['binary search', 'two-pointer']"
18433,1843300,Collecting Stamps 3,20,['dynamic programming']
18434,1843400,Olympic Bus,23,"[""dijkstra's"", 'graph theory']"
18435,1843500,Fire,24,"['data structures', 'segment tree with lazy propagation', 'offline queries', 'segment tree', 'sweeping']"
18436,1843600,수열과 쿼리 37,15,"['segment tree', 'data structures']"
18437,1843700,회사 문화 5,18,"['data structures', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
18438,1843800,LCS 5,25,"['divide and conquer', 'dynamic programming', ""hirschberg's""]"
18439,1843900,LCS 6,26,"['bit set', 'dynamic programming', 'string']"
18440,1844000,LCS 7,27,"['bit set', 'divide and conquer', 'dynamic programming', ""hirschberg's"", 'string']"
18441,1844100,제곱 부분문자열,26,"['bit set', 'dynamic programming', 'string']"
18442,1844200,우체국 1,9,['bruteforcing']
18443,1844300,우체국 2,17,['dynamic programming']
18444,1844400,우체국 3,21,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming']"
18445,1844500,우체국 4,25,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'randomization', 'two-pointer']"
18446,1844600,우체국 5,30,[]
18447,1844700,Angle Beats,27,"['general matching', 'graph theory', 'planar graph']"
18448,1844800,Best Subsequence,21,"['data structures', 'dynamic programming', 'greedy', 'parametric search', 'segment tree']"
18449,1844900,Cool Pairs,20,"['constructive', 'greedy', 'sorting']"
18450,1845000,Dates,25,"['data structures', 'greedy', ""hall's theorem"", 'segment tree with lazy propagation', 'segment tree']"
18451,1845100,Expected Value,25,"['berlekamp–massey', 'mathematics']"
18452,1845200,Free Edges,16,"['ad-hoc', 'graph theory', 'graph traversal']"
18453,1845300,Graph Counting,25,"['combinatorics', 'dynamic programming', 'graph theory', 'mathematics']"
18454,1845400,Hall’s Theorem,25,[]
18455,1845500,Interesting Graph,24,"['combinatorics', 'mathematics']"
18456,1845600,Jealous Split,26,"['aliens trick', 'binary search', 'convex hull trick', 'dynamic programming']"
18457,1845700,Knowledge,24,"['bruteforcing', 'exponentiation by squaring', 'hashing', 'mathematics', 'precomputation']"
18458,1845800,Airplane Cliques,25,[]
18459,1845900,Best Tree,19,"['constructive', 'degree sequence', 'graph theory', 'tree']"
18460,1846000,Cells Blocking,22,[]
18461,1846100,Disjoint LIS,27,"['backtracking', 'combinatorics', 'dynamic programming', 'mathematics']"
18462,1846200,Easy Win,23,"['data structures', 'sparse table']"
18463,1846300,Farm of Monsters,23,[]
18464,1846400,Giant Penguin,26,"['breadth-first search', '센트로이드', 'centroid decomposition', 'divide and conquer', 'graph theory', 'graph traversal', 'tree']"
18465,1846500,Horrible Cycles,26,"['combinatorics', 'dynamic programming', 'mathematics']"
18466,1846600,Ignore Submasks,13,"['mathematics', 'number theory']"
18467,1846700,Just Counting,19,['mathematics']
18468,1846800,One Goal,28,[]
18469,1846900,Bitwise Xor,21,"['data structures', 'dynamic programming', 'sorting', 'tree', 'trie']"
18470,1847000,Counting Cactus,23,"['bitmask', 'cactus', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory']"
18471,1847100,Determinant,25,"['biconnected component', 'cactus', 'graph theory', 'linear algebra', 'mathematics']"
18472,1847200,Easy Win,23,"['gaussian elimination', 'greedy', 'linear algebra', 'mathematics']"
18473,1847300,Fast Spanning Tree,26,"['data structures', 'disjoint set', 'priority queue', 'smaller to larger technique']"
18474,1847400,Grammarly,21,"['combinatorics', 'mathematics']"
18475,1847500,Two Teams,23,"['greedy', 'sorting']"
18476,1847600,Interactive Vertex,22,"['binary search', '센트로이드', 'centroid decomposition', 'divide and conquer', 'tree']"
18477,1847700,Jiry Matchings,29,"['divide and conquer', 'dynamic programming', 'dynamic programming on trees', 'heavy-light decomposition', 'tree']"
18478,1847800,K-pop Strings,23,"['bruteforcing', 'dynamic programming', 'inclusion and exclusion', 'precomputation']"
18479,1847900,Three Indices,27,"['data structures', 'segment tree', 'string', 'suffix array and lcp array', 'sweeping']"
18480,1848000,Four Elements,26,"['case work', 'mathematics', 'meet in the middle', 'sorting']"
18481,1848100,Five Points,24,"['bruteforcing', 'combinatorics', 'geometry', 'mathematics']"
18482,1848200,Six Words,23,[]
18483,1848300,Seven Nevers,23,[]
18484,1848400,Eight Sins,21,['binary search']
18485,1848500,Nine Judges,24,"['combinatorics', 'graph theory', 'mathematics', 'randomization', 'sorting']"
18486,1848600,Ten Ranges,0,[]
18487,1848700,Eleven Problems,20,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
18488,1848800,Um_nik’s Algorithm,25,"['bipartite matching', 'bruteforcing', 'maximum flow', 'greedy']"
18489,1848900,String Algorithm,21,"['hashing', 'string', 'suffix array and lcp array']"
18490,1849000,StalinSort Algorithm,22,"['data structures', 'greedy', 'segment tree', 'sorting']"
18491,1849100,FFT Algorithm,24,"['chinese remainder theorem', 'exponentiation by squaring', 'mathematics', 'modular multiplicative inverse', 'number theory', 'pollard rho', 'primality test', 'randomization']"
18493,1849300,Face Recognition Algorithm,14,"['euler characteristic (χ=v-e+f)', 'geometry']"
18494,1849400,Petr’s Algorithm,17,"['ad-hoc', 'randomization']"
18495,1849500,Greedy Algorithm,19,"['dynamic programming', 'greedy', 'knapsack', 'sorting']"
18496,1849600,Euclid’s Algorithm,23,"['mathematics', 'number theory']"
18497,1849700,Closest Pair Algorithm,26,"['geometry', 'rotating calipers', 'sorting']"
18498,1849800,Interactive Algorithm,24,[]
18499,1849900,Not Our Problem,22,"['binary search', 'combinatorics', 'mathematics', 'number theory', 'prefix sum']"
18500,1850000,미네랄 2,15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
18501,1850100,Y-Shaped Knife,24,"['binary search', 'geometry', 'sweeping']"
18502,1850200,Bad Doctor,18,['sweeping']
18503,1850300,Topological Ordering,19,"['bitmask', 'dynamic programming']"
18504,1850400,Bracket Euler Tour,18,"['eulerian path / circuit', 'graph theory']"
18505,1850500,Tree of Charge,24,[]
18506,1850600,Find a Tree,22,"['ad-hoc', 'depth-first search', 'graph theory', 'graph traversal']"
18507,1850700,One Root,21,"['arbitrary precision / big integers', 'binary search', 'calculus', 'mathematics', 'number theory', 'numerical analysis']"
18508,1850800,Delete the Points,14,"['bruteforcing', 'constructive', 'geometry']"
18509,1850900,Hard Times for Your Data,28,[]
18510,1851000,Program,17,['dynamic programming']
18511,1851100,큰 수 구성하기,6,"['bruteforcing', 'recursion']"
18512,1851200,점프 점프,5,"['bruteforcing', 'mathematics', 'number theory']"
18513,1851300,샘터,12,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal']"
18514,1851400,Takeover,20,['case work']
18515,1851500,Unfair Card Deck,25,['randomization']
18516,1851600,Diverse Singing,22,[]
18517,1851700,Pick Your Own Nim,27,['matroid']
18518,1851800,Permutasino,28,[]
18519,1851900,Planar Max Cut,28,['general matching']
18520,1852000,Battle Royale,0,[]
18521,1852100,Jeopardy,15,"['binary search', 'game theory', 'mathematics']"
18522,1852200,Slippers,21,[]
18523,1852300,"The Good, the Bad and the Ugly",20,['ad-hoc']
18524,1852400,Another Coin Weighing Puzzle,21,"['inclusion and exclusion', 'mathematics', 'number theory']"
18525,1852500,Mini Battleship,12,"['bitmask', 'bruteforcing', 'recursion']"
18526,1852600,Bomas,23,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'geometry', 'sweeping', 'tree']"
18527,1852700,All Kill,26,"['combinatorics', 'mathematics']"
18528,1852800,Grid Guardian,25,"['bitmask', 'combinatorics', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics']"
18529,1852900,Hopscotch 50,11,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
18530,1853000,ICPC Camp,17,"['binary search', 'greedy', 'sorting']"
18531,1853100,Letter Wheels,16,"['bruteforcing', 'string']"
18532,1853200,Editing Explosion,24,['dynamic programming']
18533,1853300,Lunchtime Name Recall,24,"['backtracking', 'bruteforcing', 'dynamic programming', 'heuristics']"
18534,1853400,Rooted Subtrees,17,"['lowest common ancestor', 'mathematics', 'tree']"
18535,1853500,Tomb Raider,22,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'greedy', 'implementation']"
18536,1853600,Tritwise Mex,24,"['fast fourier transform', 'mathematics']"
18537,1853700,Associativity Degree,0,[]
18538,1853800,Medium Hadron Collider,0,[]
18539,1853900,Basis Change,22,"['exponentiation by squaring', 'gaussian elimination', 'kitamasa', 'linear algebra', 'mathematics']"
18540,1854000,Scored Nim,15,['game theory']
18541,1854100,Milliarium Aureum,19,"['graph theory', 'minimum spanning tree']"
18542,1854200,Permutant,28,"['linear algebra', 'mathematics']"
18543,1854300,Game Of Chance,18,"['binary search', 'game theory', 'mathematics']"
18544,1854400,Incomparable Pairs,26,[]
18545,1854500,The Zong of the Zee,23,"['combinatorics', 'dynamic programming', 'hashing', 'mathematics', 'permutation cycle decomposition']"
18546,1854600,Expected Value,13,"['combinatorics', 'mathematics', 'probability theory']"
18547,1854700,DIY Radar,14,['mathematics']
18548,1854800,Word Squared,15,['constructive']
18549,1854900,Quoridor,24,"['biconnected component', 'data structures', 'disjoint set', 'divide and conquer', 'graph theory', 'offline dynamic connectivity', 'offline queries', 'planar graph']"
18550,1855000,Game X,17,"['arithmetic', 'binary search', 'mathematics']"
18551,1855100,5-Path,17,['graph theory']
18552,1855200,Nightmare,21,"['binary search', 'convex hull', 'geometry', 'line segment intersection check', 'point in convex polygon check']"
18553,1855300,String Transformation,26,"['bruteforcing', 'case work', 'data structures', 'dynamic programming', 'greedy', 'heuristics', 'implementation', 'priority queue', 'sorting']"
18554,1855400,Employees,20,"['combinatorics', 'mathematics']"
18555,1855500,Modulo-magic squares,23,"['case work', 'combinatorics', 'gaussian elimination', 'linear algebra', 'mathematics']"
18556,1855600,Count the Sequences,26,"['arbitrary precision / big integers', 'combinatorics', 'dynamic programming', 'inclusion and exclusion', 'mathematics']"
18557,1855700,Always Online,25,"['bitmask', 'cactus', 'data structures', 'disjoint set', 'maximum flow', 'graph theory', 'mathematics', 'minimum cost maximum flow', 'max-flow min-cut theorem', 'tree']"
18558,1855800,Beautiful Now,18,[]
18559,1855900,Call It What You Want,26,"['mathematics', 'möbius inversion', 'number theory']"
18560,1856000,Daylight,25,[]
18561,1856100,Everything Has Changed,16,['geometry']
18562,1856200,Fireflies,25,"['combinatorics', 'mathematics', 'meet in the middle']"
18563,1856300,Glad You Came,21,[]
18564,1856400,Hills And Valleys,20,[]
18565,1856500,Innocence,27,"['bitmask', 'combinatorics', 'dynamic programming', 'exponentiation by squaring', 'inclusion and exclusion', 'linear algebra', 'mathematics']"
18566,1856600,Just So You Know,26,[]
18567,1856700,Kaleidoscope,24,"[""burnside's lemma"", 'case work', 'combinatorics', 'dynamic programming', 'mathematics']"
18568,1856800,Lost In The Echo,26,[]
18569,1856900,Alien Invasion,0,[]
18570,1857000,Bus Stop,23,"['calculus', 'combinatorics', 'fast fourier transform', 'mathematics']"
18571,1857100,Calculating Average,23,"['binary search', 'convex hull trick', 'parallel binary search']"
18572,1857200,Data Structure Problem,25,"['bitmask', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'smaller to larger technique']"
18573,1857300,Expected Cost,22,"['combinatorics', 'linearity of expectation', 'mathematics', 'probability theory']"
18574,1857400,Fractional XOR Maximization,26,"['arbitrary precision / big integers', 'greedy', 'mathematics', 'number theory', 'string']"
18575,1857500,Go West,17,"['binary search', 'calculus', 'geometry', 'mathematics']"
18576,1857600,Humongous String,27,"['case work', 'combinatorics', 'mathematics', 'string']"
18577,1857700,Intellectual Prefix Maxima,24,[]
18578,1857800,Jimp Numbers,25,"['mathematics', 'number theory', 'precomputation']"
18579,1857900,K-Triangles,23,"['prefix sum', 'sweeping']"
18580,1858000,Long Game,15,['game theory']
18581,1858100,Cake Distribution,12,[]
18582,1858200,Favourite Number,11,['mathematics']
18583,1858300,Pawn’s Revenge,11,"['breadth-first search', 'case work', 'graph theory', 'graph traversal']"
18584,1858400,Deliveries,0,[]
18585,1858500,XOR Pairing,0,[]
18586,1858600,Salty Fish,24,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'maximum flow', 'max-flow min-cut theorem', 'smaller to larger technique', 'tree', 'set / map by trees']"
18587,1858700,Nonsense Time,20,"['longest increasing sequence in o(n log n)', 'mathematics', 'probability theory']"
18588,1858800,Milk Candy,27,['matroid']
18589,1858900,Radar Scanner,22,"['data structures', 'euler characteristic (χ=v-e+f)', 'geometry', 'prefix sum', 'segment tree']"
18590,1859000,Snowy Smile,21,"['data structures', 'segment tree', 'sweeping']"
18591,1859100,Faraway,18,[]
18592,1859200,Support or Not,27,"['binary search', 'geometry']"
18593,1859300,TDL,15,"['bruteforcing', 'mathematics', 'number theory']"
18594,1859400,Three Investigators,26,['longest increasing sequence in o(n log n)']
18595,1859500,Road Manager,26,[]
18596,1859600,Monster Hunter,25,"['data structures', 'disjoint set', 'greedy', 'priority queue', 'tree']"
18597,1859700,Game Prediction,26,"['data structures', 'segment tree']"
18598,1859800,Minimum Spanning Trees,26,"['combinatorics', 'dynamic programming', 'mathematics']"
18599,1859900,Line Graphs,26,"['case work', 'combinatorics', 'graph theory', 'mathematics']"
18600,1860000,Valentine’s Day,20,"['greedy', 'mathematics', 'sorting']"
18601,1860100,Play Games with Rounddog,26,"['bit set', 'data structures', 'dynamic programming', 'dynamic programming on trees', 'game theory', 'gaussian elimination', 'linear algebra', 'mathematics', 'sprague–grundy theorem', 'string', 'suffix tree', 'tree', 'trie']"
18602,1860200,Welcome Party,17,"['binary search', 'data structures', 'greedy', 'sliding window', 'sorting', 'set / map by trees']"
18603,1860300,Dense Subgraph,22,"['dynamic programming', 'dynamic programming on trees', 'tree']"
18604,1860400,Closest Pair of Segments,24,"['geometry', 'line segment intersection check', 'sweeping']"
18605,1860500,Coins,23,"['data structures', 'greedy', 'priority queue', 'sorting']"
18606,1860600,Block Breaker,14,"['implementation', 'recursion', 'simulation']"
18607,1860700,Domino Covering,29,"['combinatorics', 'exponentiation by squaring', 'mathematics']"
18608,1860800,Make Rounddog Happy,23,[]
18609,1860900,Square Root Partitioning,24,"['discrete square root', 'hashing', 'mathematics', 'meet in the middle', 'modular multiplicative inverse', 'number theory', 'primality test']"
18610,1861000,Yet Another Convolution,23,"['binary search', 'greedy', 'inclusion and exclusion', 'mathematics', 'möbius inversion', 'number theory']"
18611,1861100,Money Sharing,14,"['data structures', 'greedy', 'offline queries', 'priority queue']"
18612,1861200,Magic Strings,27,"['bruteforcing', 'dynamic programming', 'exponentiation by squaring', 'mathematics', 'number theory', 'precomputation']"
18613,1861300,Decimal Expansion,20,"['arbitrary precision / big integers', 'binary search', 'mathematics', 'number theory']"
18614,1861400,Cosmic Crossroads,26,"['divide and conquer', 'geometry', 'geometry; 3d', 'mathematics']"
18615,1861500,Warm Up,0,[]
18616,1861600,Defying Gravity,21,"['geometry', 'hashing', 'physics', 'string']"
18617,1861700,From Modular to Rational,24,"['mathematics', 'number theory']"
18618,1861800,Tree Automorphisms,22,"['bruteforcing', 'hashing', 'permutation cycle decomposition', 'tree', 'tree isomorphism']"
18619,1861900,Alakazam,18,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
18620,1862000,Bulbasaur,28,[]
18621,1862100,Cloyster,22,"['ad-hoc', 'divide and conquer']"
18622,1862200,Dedenne,27,"['binary search', 'convex hull trick', 'convex hull', 'dynamic programming', 'geometry', 'precomputation', 'ternary search']"
18623,1862300,Eevee,23,"['combinatorics', 'dynamic programming', 'mathematics']"
18624,1862400,Flaaffy,25,['dynamic programming']
18625,1862500,Gurdurr,21,"['bitmask', 'case work', 'dynamic programming', 'dynamic programming using bitfield', 'game theory', 'sprague–grundy theorem']"
18626,1862600,Hypno,22,[]
18627,1862700,Dress to Impress,25,[]
18628,1862800,Jigglypuff,19,"['ad-hoc', 'case work']"
18629,1862900,Kecleon,23,[]
18630,1863000,Lati@s,27,"['game theory', 'gaussian elimination', 'linear algebra', 'mathematics']"
18631,1863100,Somewhere Over the Rainbow,23,"['convex hull', 'geometry']"
18632,1863200,Goldberg Machine,27,[]
18633,1863300,Grid Game,28,['game theory']
18634,1863400,k-coloring,23,"['depth-first search', 'eulerian path / circuit', 'graph theory', 'graph traversal']"
18635,1863500,Just Shuffle the Input,23,"['hashing', 'string']"
18636,1863600,Restoring a Permutation,18,"['graph theory', 'topological sorting']"
18637,1863700,Shadow Companion,27,['ad-hoc']
18638,1863800,"The Older We Are, The Worse It Hurts",20,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'prefix sum', 'sorting', 'tree']"
18639,1863900,Three Vectors,19,['constructive']
18640,1864000,AI,22,"['heuristics', 'precomputation', 'string']"
18641,1864100,Bitwise Automaton,20,"['backtracking', 'bruteforcing', 'implementation']"
18642,1864200,Challenge,16,"['constructive', 'tree']"
18643,1864300,Game of Hex,28,"['arbitrary precision / big integers', 'dynamic programming', 'dynamic programming using connection profile']"
18644,1864400,Marketing,23,[]
18645,1864500,Graph Measurement,22,"['mathematics', 'randomization', 'statistics']"
18646,1864600,Quicksort,15,['sorting']
18647,1864700,Spaceship,21,"['geometry', 'geometry; 3d', 'implementation', 'mathematics']"
18648,1864800,Three-Step Tunnels,19,['constructive']
18649,1864900,Lowest Unique,6,"['ad-hoc', 'constructive', 'greedy']"
18650,1865000,Erase Nodes,26,"['divide and conquer', 'fast fourier transform', 'implementation', 'mathematics', 'probability theory']"
18651,1865100,Linear Congruential Generator,21,"['mathematics', 'prefix sum']"
18652,1865200,Fibonacci Strikes Back,0,[]
18653,1865300,Honeycomb,24,['maximum flow']
18654,1865400,Power of Function,19,['greedy']
18655,1865500,Cosmic Cleaner,17,"['calculus', 'mathematics']"
18656,1865600,Quicksort,19,"['combinatorics', 'dynamic programming', 'mathematics']"
18657,1865700,Routes,0,[]
18658,1865800,Square Substrings,27,"['data structures', 'offline queries', 'segment tree', 'string', 'suffix array and lcp array', 'sweeping']"
18659,1865900,Sticks,17,"['bruteforcing', 'dynamic programming']"
18660,1866000,Pyramid,24,"['combinatorics', 'mathematics']"
18661,1866100,The One Polynomial Man,24,"['fast fourier transform', 'mathematics', 'number theory']"
18662,1866200,Alexey the Sage of The Six Paths,27,"['bipartite matching', 'dynamic programming', 'mathematics']"
18663,1866300,Steel Ball Run,23,[]
18664,1866400,Minimums on the Edges,22,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory']"
18665,1866500,IQ Test,16,"['ad-hoc', 'greedy']"
18666,1866600,AtCoder Quality Problem,23,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
18667,1866700,Mex on DAG,24,"['graph theory', 'strongly connected component']"
18668,1866800,Find the Vertex,13,"['ad-hoc', 'breadth-first search', 'graph theory', 'graph traversal']"
18669,1866900,Yet Another Mex Problem,0,[]
18670,1867000,Christmas Tree,0,[]
18671,1867100,The Lion King,0,[]
18672,1867200,Cultivating Mars,0,[]
18673,1867300,Fractionstellar,11,"['mathematics', 'number theory']"
18674,1867400,The Minions Quiz,8,"['ad-hoc', 'bitmask', 'greedy']"
18675,1867500,Uberfication,0,[]
18676,1867600,DNA Evolution,0,[]
18677,1867700,Bingo!,0,[]
18678,1867800,Journey,12,['dynamic programming']
18679,1867900,Banana,6,"['data structures', 'string', 'set / map by trees']"
18680,1868000,Road Network,13,['tree']
18681,1868100,Valar Morghulis,0,[]
18682,1868200,Rains,0,[]
18683,1868300,Man in the middle,0,[]
18684,1868400,Lumbo Jumbo,0,[]
18685,1868500,Scrambled Digits,0,[]
18686,1868600,Andorra,0,[]
18687,1868700,Gotta Catch 'Em All,0,[]
18688,1868800,Military Service,0,[]
18689,1868900,Baklawa,0,[]
18690,1869000,Football Hooliganism,0,[]
18691,1869100,Pokemon Buddy,0,[]
18692,1869200,Shika Bika,0,[]
18693,1869300,Count the Graphs,0,[]
18694,1869400,Game of Nim Everywhere,19,"['dynamic programming', 'game theory', 'mathematics', 'prefix sum', 'sprague–grundy theorem']"
18695,1869500,FIFA World Cup,0,[]
18696,1869600,Crazy LCP,0,[]
18697,1869700,This Means War,0,[]
18698,1869800,The Walking Adam,2,"['implementation', 'string']"
18699,1869900,Darts Game,19,"['geometry', 'sorting']"
18700,1870000,Stock Exchange,0,[]
18701,1870100,Winter is Here,0,[]
18702,1870200,Array Queries,25,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
18703,1870300,Duplicate Files,6,"['data structures', 'set / map by hashing', 'implementation', 'sorting', 'string', 'set / map by trees']"
18704,1870400,Awesome Shawarma,21,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'prefix sum', 'segment tree', 'smaller to larger technique', 'tree']"
18705,1870500,Baklava Tray,9,['mathematics']
18706,1870600,Coffee,6,"['arithmetic', 'data structures', 'set / map by hashing', 'implementation', 'mathematics', 'string', 'set / map by trees']"
18707,1870700,Dull Chocolates,13,"['value / coordinate compression', 'prefix sum']"
18708,1870800,Exciting Menus,21,"['aho-corasick', 'data structures', 'dynamic programming', 'string', 'tree', 'trie']"
18709,1870900,Flipping El-fetiera,17,"['combinatorics', 'dynamic programming', 'linearity of expectation', 'mathematics', 'probability theory']"
18710,1871000,Greatest Chicken Dish,22,"['data structures', 'mathematics', ""mo's"", 'number theory', 'offline queries', 'segment tree']"
18711,1871100,Hawawshi Decryption,21,"['discrete logarithm', 'mathematics', 'number theory']"
18712,1871200,Ice-cream Knapsack,8,['sorting']
18713,1871300,Journey to Jupiter,13,"['geometry', 'geometry; 3d']"
18714,1871400,Khoshaf,0,[]
18715,1871500,Looking for Taste,0,[]
18716,1871600,Instructions (Easy),21,['bitmask']
18717,1871700,Instructions (Hard),22,['bitmask']
18718,1871800,Bags of Candies,24,"['mathematics', 'number theory', 'precomputation', 'primality test', 'sieve of eratosthenes']"
18719,1871900,Binomial,21,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'sum over subsets dynamic programming', 'lucas theorem', 'mathematics', 'number theory']"
18720,1872000,Bookface,23,"['data structures', 'dynamic programming', 'priority queue', 'slope trick']"
18721,1872100,Clique,26,"['data structures', 'dynamic programming', 'greedy', 'segment tree', 'set / map by trees']"
18722,1872200,Contamination,21,[]
18723,1872300,The Halfwitters,0,[]
18724,1872400,Invited Speakers,17,"['constructive', 'data structures', 'stack']"
18725,1872500,Lighthouses,17,"['dynamic programming', 'geometry']"
18726,1872600,Sum of Palindromes,17,"['ad-hoc', 'arbitrary precision / big integers', 'constructive', 'greedy', 'implementation', 'mathematics', 'string']"
18727,1872700,Space Gophers,18,"['data structures', 'disjoint set', 'set / map by trees']"
18728,1872800,"To argue, or not to argue",21,[]
18729,1872900,Wizards Unite,8,"['greedy', 'sorting']"
18730,1873000,Outlier,26,[]
18731,1873100,A Math Problem,20,"['combinatorics', 'mathematics', 'number theory']"
18732,1873200,A Permutation Problem,23,"['constructive', 'divide and conquer']"
18733,1873300,Split in Sets,22,[]
18734,1873400,The Destruction of the Crystals,20,"['graph theory', 'graph traversal', 'inclusion and exclusion']"
18735,1873500,Balls,12,"['ad-hoc', 'sorting']"
18736,1873600,Football Match,18,"['case work', 'constructive', 'mathematics']"
18737,1873700,Hill,21,[]
18738,1873800,Special Game,27,['game theory']
18739,1873900,Even More Exciting Game,22,['game theory']
18740,1874000,Potato Shuffle,20,"['combinatorics', 'data structures', 'mathematics', 'segment tree']"
18741,1874100,Palindrome,21,['dynamic programming']
18742,1874200,Avg,20,"['constructive', 'mathematics']"
18743,1874300,Bin,25,"['divide and conquer', 'fast fourier transform', 'mathematics']"
18744,1874400,Cat,23,[]
18745,1874500,Div,25,"['bruteforcing', 'implementation', 'mathematics', 'number theory']"
18746,1874600,Exp,25,"['dynamic programming', 'mathematics']"
18747,1874700,Flip,23,"['combinatorics', 'mathematics']"
18748,1874800,Grp,25,[]
18749,1874900,Hit,27,"['data structures', 'graph theory', 'greedy', 'segment tree', 'sparse table']"
18750,1875000,Ineq,0,[]
18751,1875100,Joy,0,[]
18752,1875200,Kilk,22,['dynamic programming']
18753,1875300,Alternative Accounts,21,"['case work', 'maximum flow', 'greedy']"
18754,1875400,Bitset Master,26,['data structures']
18755,1875500,Cyclic Distance,25,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'priority queue', 'slope trick', 'smaller to larger technique', 'tree']"
18756,1875600,Data Structure Quiz,27,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
18757,1875700,Evil Subsequence,24,[]
18758,1875800,Fast as Ryser,28,"['ad-hoc', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory']"
18759,1875900,Geometry PTSD,24,"['constructive', 'linear algebra', 'mathematics']"
18760,1876000,Heavy Stones,26,[]
18761,1876100,Interesting Game,0,[]
18762,1876200,Junk Problem,27,"['constructive', 'mathematics']"
18763,1876300,Knowledge-Oriented Problem,30,"['combinatorics', 'exponentiation by squaring', 'graph theory', 'linear algebra', 'mathematics']"
18764,1876400,LCM Sum,28,"['combinatorics', 'mathematics', 'meet in the middle', 'number theory']"
18765,1876500,정*수-를+[만들자!],19,"['ad-hoc', 'heuristics', 'implementation', 'precomputation', 'simulation']"
18766,1876600,카드 바꿔치기,5,"['implementation', 'sorting']"
18767,1876700,조교 배치,16,"['bipartite matching', 'maximum flow']"
18768,1876800,팀 배정,13,"['greedy', 'sorting']"
18769,1876900,그리드 네트워크,12,"['graph theory', 'minimum spanning tree']"
18770,1877000,불안정한 물질,19,"['data structures', 'depth-first search', 'disjoint set', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'implementation', 'tree', 'set / map by trees']"
18771,1877100,오픈소스 버그 잡기,21,"['maximum flow', 'max-flow min-cut theorem']"
18772,1877200,Delightful (Easy),23,"['ad-hoc', 'bitmask']"
18773,1877300,Delightful (Hard),25,"['mathematics', 'miller–rabin', 'number theory', 'primality test']"
18774,1877400,Inverting bits (Easy),11,"['bitmask', 'constructive']"
18775,1877500,Inverting bits (Hard),25,"['ad-hoc', 'bitmask']"
18776,1877600,Xorshift32,20,"['discrete logarithm', 'linear algebra', 'mathematics', 'meet in the middle', 'number theory', 'precomputation']"
18777,1877700,Delegation (Platinum),20,"['binary search', 'dynamic programming', 'dynamic programming on trees', 'greedy', 'parametric search', 'tree']"
18778,1877800,Equilateral Triangles,19,['prefix sum']
18779,1877900,Help Yourself (Platinum),23,"['combinatorics', 'data structures', 'dynamic programming', 'segment tree with lazy propagation', 'mathematics', 'segment tree']"
18780,1878000,Timeline,14,"['dynamic programming', 'graph theory', 'topological sorting']"
18781,1878100,Help Yourself (Gold),18,"['combinatorics', 'data structures', 'mathematics', 'prefix sum', 'segment tree', 'sorting']"
18782,1878200,Delegation (Gold),19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
18783,1878300,Swapity Swapity Swap,14,"['data structures', 'permutation cycle decomposition', 'sparse table']"
18784,1878400,Triangles (Silver),16,"['mathematics', 'prefix sum', 'sweeping']"
18785,1878500,Clock Tree,16,"['depth-first search', 'graph theory', 'graph traversal', 'greedy', 'tree']"
18786,1878600,Triangles (Bronze),5,"['bruteforcing', 'geometry']"
18787,1878700,Mad Scientist,6,"['greedy', 'string']"
18788,1878800,Swapity Swap,9,"['exponentiation by squaring', 'graph theory', 'mathematics']"
18789,1878900,814 - 2,28,"['constructive', 'depth-first search', 'graph theory', 'graph traversal', 'heuristics', 'implementation', 'randomization', 'simulated annealing']"
18790,1879000,N의 배수 (1),14,['dynamic programming']
18791,1879100,N의 배수 (2),22,"['dynamic programming', 'mathematics', 'number theory']"
18792,1879200,N의 배수 (3),25,"['ad-hoc', 'bit set', 'mathematics', 'number theory']"
18793,1879300,팰린드롬 덧셈,30,"['ad-hoc', 'arbitrary precision / big integers', 'case work', 'implementation', 'mathematics']"
18794,1879400,트리와 쿼리 15,27,"['센트로이드', 'centroid decomposition', 'data structures', 'depth-first search', ""dijkstra's"", 'divide and conquer', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'inclusion and exclusion', 'lowest common ancestor', 'sparse table', 'stack', 'tree']"
18795,1879500,이동하기 3,4,"['arithmetic', 'mathematics']"
18796,1879600,이동하기 4,26,"['ad-hoc', 'convex hull', 'geometry', 'greedy']"
18798,1879800,OR과 쿼리,21,"['data structures', 'segment tree']"
18799,1879900,이상한 편집기,21,"['binary search', 'dynamic programming', 'hashing', 'slope trick', 'string', 'suffix array and lcp array']"
18800,1880000,도로 공사,23,"[""mo's"", 'offline queries', 'prefix sum']"
18801,1880100,댐,25,"['data structures', 'divide and conquer', 'geometry', 'line segment intersection check', 'priority queue', 'sweeping', 'set / map by trees']"
18802,1880200,Bridge Construction,23,"['센트로이드', 'combinatorics', 'dynamic programming', 'mathematics', 'tree']"
18803,1880300,방역,26,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'heavy-light decomposition', 'segment tree with lazy propagation', 'segment tree', 'smaller to larger technique', 'tree']"
18804,1880400,대안적 사실,26,"['data structures', ""hall's theorem"", 'segment tree with lazy propagation', 'segment tree']"
18805,1880500,Tree and Easy Queries,25,"['data structures', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
18806,1880600,와일드 카드,26,"['ad-hoc', 'bit set', 'case work', 'fast fourier transform', 'mathematics', 'string']"
18807,1880700,새 방식의 재채점을 테스트하기 위한 문제,0,[]
18808,1880800,스티커 붙이기,13,"['bruteforcing', 'implementation', 'simulation']"
18809,1880900,Gaaaaaaaaaarden,15,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
18810,1881000,Amazing Sushi,6,[]
18811,1881100,Bubble Bucket Sort,12,"['dynamic programming', 'sorting']"
18812,1881200,Cartography,0,[]
18813,1881300,Divisionals Spelling,3,"['implementation', 'string']"
18814,1881400,Entering Rectangles,0,[]
18815,1881500,Fabulous Photos,0,[]
18816,1881600,Grid City,0,[]
18817,1881700,Heroic Heist,18,"['bipartite matching', 'parametric search']"
18818,1881800,Iguana Instructions,11,"['breadth-first search', 'graph theory', 'graph traversal']"
18819,1881900,Jumping Junipers,0,[]
18820,1882000,Karaoke Meetup,0,[]
18821,1882100,홀수와 짝수의 대결,21,"['mathematics', 'number theory', 'precomputation', 'primality test']"
18822,1882200,Beginning the Hunt,0,[]
18823,1882300,Nonogram QR,0,[]
18824,1882400,4차 산업 혁명,0,"['implementation', 'graph theory', 'heuristics']"
18825,1882500,눈치게임 A+B! A-B! A+B! 터렛! A+B! 피보나치 함수! A+B! A-B! A+B! 어린 왕자! A+B! ACM Craft! A+B! A-B! A+B! 습격자 초라기! A+B! 벡터 매칭! A+B! A-B! A+B! A/B! A+B! 터렛! A+B! A-B! A+B! 분산처리! A+B! A+B! 마셔라! 마셔라 마셔라! 마셔라 틀이 들어간다!,0,[]
18826,1882600,A+B (MC),0,[]
18827,1882700,연속합 2147483647,22,"['arbitrary precision / big integers', 'divide and conquer']"
18828,1882800,배중률교,0,[]
18829,1882900,0초 후에 제출할 수 있습니다.,0,[]
18830,1883000,하이퍼 수열과 하이퍼 쿼리,20,"['inclusion and exclusion', 'prefix sum']"
18831,1883100,문제를 푸는 문제,25,"['backtracking', 'breadth-first search', 'bitmask', 'combinatorics', 'data structures', 'depth-first search', 'dynamic programming', 'dynamic programming using bitfield', 'exponentiation by squaring', 'graph theory', 'graph traversal', 'implementation', 'mathematics', 'parsing', 'precomputation', 'probability theory', 'segment tree', 'statistics', 'string']"
18832,1883200,문제를 푸는 문제 (미니 앨범),0,"['modular multiplicative inverse', 'probability theory', 'dynamic programming', 'mathematics', 'number theory']"
18833,1883300,문제를 푸는 문제 (잘못 구현한 오일러 회로),0,"['eulerian path / circuit', 'graph theory']"
18834,1883400,문제를 푸는 문제 (주령구),0,"['implementation', 'simulation']"
18835,1883500,문제를 푸는 문제 (박승원),0,"['dynamic programming', 'bitmask', 'dynamic programming using bitfield']"
18836,1883600,문제를 푸는 문제 (Dequery),0,"['deque', 'segment tree', 'binary search', 'data structures']"
18837,1883700,가장 긴 증가하는 부분 수열 K,23,"['data structures', 'longest increasing sequence in o(n log n)', 'segment tree']"
18838,1883800,가장 긴 증가하는 부분 수열 k,22,"['data structures', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'segment tree']"
18839,1883900,Building 4,20,['dynamic programming']
18840,1884000,Hamburg Steak,26,[]
18841,1884100,Sweeping,26,"['data structures', 'segment tree', 'smaller to larger technique']"
18842,1884200,Chameleon’s Love,23,"['ad-hoc', 'binary search', 'graph theory']"
18843,1884300,Making Friends on Joitter is Fun,22,"['data structures', 'disjoint set', 'smaller to larger technique', 'set / map by trees']"
18844,1884400,Ruins 3,27,"['combinatorics', 'dynamic programming', 'mathematics']"
18845,1884500,Constellation 3,23,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'heavy-light decomposition', 'segment tree', 'tree']"
18846,1884600,Harvest,25,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'offline queries', 'segment tree', 'sweeping', 'tree']"
18847,1884700,Stray Cat,24,[]
18848,1884800,Capital City,23,"['센트로이드', 'centroid decomposition', 'data structures', 'depth-first search', 'divide and conquer', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'heavy-light decomposition', 'queue', 'strongly connected component', 'segment tree', 'topological sorting', 'tree']"
18849,1884900,Legendary Dango Maker 1,19,"['heuristics', 'randomization']"
18850,1885000,Legendary Dango Maker 2,19,['heuristics']
18851,1885100,Legendary Dango Maker 3,19,['heuristics']
18852,1885200,Legendary Dango Maker 4,0,[]
18853,1885300,Legendary Dango Maker 5,0,[]
18854,1885400,Legendary Dango Maker 6,19,['heuristics']
18855,1885500,Treatment Project,24,"['data structures', ""dijkstra's"", 'graph theory', 'priority queue', 'segment tree', 'sweeping']"
18856,1885600,피드백,3,['implementation']
18857,1885700,집 떠나와 열차 타고,21,"['articulation points and bridges', 'biconnected component', 'cactus', 'maximum flow', 'graph theory']"
18858,1885800,훈련소로 가는 날,13,['dynamic programming']
18859,1885900,부모님께 큰절 하고,17,"['data structures', 'greedy', 'sorting']"
18860,1886000,대문 밖을 나설 때,19,"['dynamic programming', 'greedy', 'implementation', 'simulation', 'tree']"
18861,1886100,가슴 속에 무엇인가,26,"['graph theory', 'link/cut tree', 'minimum spanning tree', 'tree']"
18862,1886200,아쉬움이 남지만,22,"['dynamic programming', 'dynamic programming on trees', 'tree']"
18863,1886300,풀 한 포기 친구 얼굴,20,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
18864,1886400,모든 것이 새롭다,23,"['combinatorics', 'mathematics', 'permutation cycle decomposition']"
18865,1886500,이제 다시 시작이다,20,"['data structures', 'geometry', 'inclusion and exclusion', 'mathematics', 'segment tree']"
18866,1886600,젊은 날의 생이여,11,['prefix sum']
18867,1886700,편지 꼭 해다오,9,"['bruteforcing', 'mathematics', 'precomputation']"
18868,1886800,멀티버스 Ⅰ,5,['bruteforcing']
18869,1886900,멀티버스 Ⅱ,11,"['value / coordinate compression', 'sorting']"
18870,1887000,좌표 압축,9,"['value / coordinate compression', 'sorting']"
18871,1887100,Sprinklers 2: Return of the Alfalfa,20,"['combinatorics', 'dynamic programming', 'mathematics']"
18872,1887200,Exercise,24,"['combinatorics', 'dynamic programming', 'mathematics']"
18873,1887300,Circus,27,"['combinatorics', 'data structures', 'disjoint set', 'dynamic programming', 'dynamic programming on trees', 'mathematics', 'segment tree', 'tree']"
18874,1887400,Haircut,17,"['data structures', 'segment tree']"
18875,1887500,Favorite Colors,20,"['data structures', 'disjoint set', 'smaller to larger technique']"
18876,1887600,Exercise,19,"['dynamic programming', 'mathematics', 'number theory', 'permutation cycle decomposition', 'primality test', 'sieve of eratosthenes']"
18877,1887700,Social Distancing,13,"['binary search', 'parametric search']"
18878,1887800,Cereal,16,"['offline queries', 'recursion']"
18879,1887900,The Moo Particle,16,"['data structures', 'sorting', 'sweeping', 'set / map by trees']"
18880,1888000,Social Distancing I,12,"['case work', 'greedy']"
18881,1888100,Social Distancing II,6,"['sorting', 'sweeping']"
18882,1888200,Cowntact Tracing,9,['bruteforcing']
18883,1888300,N M 찍기,3,['implementation']
18884,1888400,New Year and Naming,4,"['implementation', 'string']"
18885,1888500,New Year and Ascent Sequence,12,"['binary search', 'mathematics', 'sorting']"
18886,1888600,New Year and Permutation,13,"['combinatorics', 'mathematics']"
18887,1888700,New Year and Conference,19,"['data structures', 'segment tree', 'sorting', 'sweeping']"
18888,1888800,New Year and Castle Construction,22,"['geometry', 'mathematics', 'sorting', 'two-pointer']"
18889,1888900,New Year and Social Network,26,"['data structures', 'disjoint set', 'greedy', 'lowest common ancestor', 'link/cut tree', 'tree']"
18890,1889000,Seollal,27,"['graph theory', 'matroid']"
18891,1889100,제21대 국회의원 선거,16,['implementation']
18892,1889200,가장 긴 증가하는 부분 수열 ks,17,['dynamic programming']
18893,1889300,남현욱,27,"['dynamic programming', 'mathematics']"
18894,1889400,Alternative Permutations,24,"['backtracking', 'bruteforcing', 'dynamic programming']"
18895,1889500,Cartoons,22,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
18896,1889600,Identifier Sequence,0,[]
18897,1889700,Daycare Children,24,"['ad-hoc', 'constructive', 'mathematics']"
18898,1889800,English,20,"['backtracking', 'heuristics']"
18899,1889900,Encryption Function,15,"['backtracking', 'mathematics']"
18900,1890000,Printer's Head,11,['greedy']
18901,1890100,Passwords,20,"['data structures', 'greedy', 'priority queue']"
18902,1890200,Laser Intensification,21,"['arbitrary precision / big integers', 'dynamic programming', 'inclusion and exclusion']"
18903,1890300,Autumn Cleaning (16 MiB ML!),20,"['dynamic programming', 'fast fourier transform', ""fermat's little theorem"", 'mathematics', 'number theory']"
18904,1890400,Chip Cards (16 MiB ML!),22,['dynamic programming']
18905,1890500,Camping in the woods,20,"['binary search', 'dynamic programming']"
18906,1890600,Minimal Variance Tree,25,"['divide and conquer', 'graph theory', 'link/cut tree', 'mathematics', 'minimum spanning tree', 'tree']"
18907,1890700,Alice and Bob,19,[]
18908,1890800,Brackets,22,"['data structures', 'greedy', 'segment tree']"
18909,1890900,Circles,20,[]
18910,1891000,Deja Vu,29,"['data structures', 'implementation', 'segment tree with lazy propagation', 'segment tree']"
18911,1891100,Easiest Sum,26,"['convex hull trick', 'data structures', 'maximum flow', 'segment tree with lazy propagation', 'mathematics', 'minimum cost maximum flow', 'priority queue', 'segment tree', 'set / map by trees']"
18912,1891200,Funny Salesman,19,"['data structures', 'greedy', 'tree']"
18913,1891300,Graph Coloring,22,"['bitmask', 'combinatorics', 'constructive', 'mathematics']"
18914,1891400,Hidden Graph,0,[]
18915,1891500,Insects,28,[]
18916,1891600,Joining Points,20,['dynamic programming']
18917,1891700,수열과 쿼리 38,8,"['implementation', 'mathematics']"
18918,1891800,피보나치 수의 최대공약수의 합처럼 보이지만... ×25,27,"['fast fourier transform', 'mathematics', 'number theory']"
18919,1891900,Allowed Swaps,18,"['constructive', 'graph theory', 'graph traversal', 'minimum spanning tree']"
18920,1892000,Banned Words,21,"['aho-corasick', 'data structures', 'exponentiation by squaring', 'mathematics', 'tree', 'trie']"
18921,1892100,Cost Of Subtree,15,"['data structures', 'disjoint set', 'greedy', 'sorting']"
18922,1892200,Disk Troubles,21,"['bit set', 'discrete logarithm', 'mathematics', 'meet in the middle', 'number theory', 'precomputation']"
18923,1892300,Embeddings,24,"['dynamic programming', 'palindrome tree', 'string', 'tree']"
18924,1892400,Fox Labeling,22,[]
18925,1892500,Game With Permutations,20,"['backtracking', 'randomization']"
18926,1892600,Histogram and Blue Rectangles,23,['convex hull trick']
18927,1892700,Integer Equation Checker,14,"['bruteforcing', 'implementation', 'parsing', 'string']"
18928,1892800,Joy With Cookies,22,"['game theory', 'gaussian elimination', 'linear algebra', 'longest increasing sequence in o(n log n)', 'mathematics', 'sprague–grundy theorem', 'sweeping']"
18929,1892900,Knights of Round Table,23,"['bipartite graph', 'constructive', 'depth-first search', 'graph theory', 'graph traversal']"
18930,1893000,Lands of Infinistan,0,[]
18931,1893100,Gomoku,0,[]
18932,1893200,트리와 쿼리 16,27,"['센트로이드', 'centroid decomposition', 'data structures', 'depth-first search', 'divide and conquer', 'graph theory', 'graph traversal', 'greedy', 'set / map by hashing', 'smaller to larger technique', 'square root decomposition', 'tree', 'set / map by trees']"
18933,1893300,최소 스패닝 트리와 쿼리,27,"['data structures', 'disjoint set', 'graph theory', 'sweeping']"
18934,1893400,Yet Another Problem on Empodia,27,['dynamic programming']
18935,1893500,Checks Post Facto 스페셜 저지,11,"['implementation', 'parsing', 'simulation', 'string']"
18936,1893600,신기한 공놀이,22,"['exponentiation by squaring', 'mathematics', 'number theory']"
18937,1893700,왕들의 외나무다리 돌게임,18,"['game theory', 'sprague–grundy theorem']"
18938,1893800,돌 술래잡기 게임,24,"['data structures', 'game theory', 'segment tree']"
18939,1893900,경비병 세우기 게임,22,"['game theory', 'mathematics']"
18940,1894000,숫자 카드 제거 게임,20,"['game theory', 'sprague–grundy theorem']"
18941,1894100,평면그래프와 게임,25,"['data structures', 'disjoint set', 'dual graph', 'euler characteristic (χ=v-e+f)', 'geometry', 'graph theory', 'planar graph', 'smaller to larger technique']"
18942,1894200,고인물의 새로운 리듬게임,23,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'monotone queue optimization']"
18943,1894300,지역 꾸미기 게임,28,"['data structures', 'multidimensional segment tree', 'persistent segment tree', 'segment tree']"
18944,1894400,Non-Decreasing Subarray Game,19,"['binary search', 'prefix sum']"
18945,1894500,조작된 ㄱ 폭탄 게임,27,"['case work', 'data structures', 'game theory', 'segment tree']"
18946,1894600,Ciphertext,25,[]
18947,1894700,Tree Hull,21,"['data structures', 'euler tour technique', 'lowest common ancestor', 'tree', 'set / map by trees']"
18948,1894800,Tree Average Weight,0,[]
18949,1894900,Intersection of Parabolas,15,"['calculus', 'geometry', 'mathematics']"
18950,1895000,Hamming,0,[]
18951,1895100,Knapsack,0,[]
18952,1895200,Algebra on Segment,24,[]
18953,1895300,Continue the Sequence,0,[]
18954,1895400,Partition into Teams,0,[]
18955,1895500,Determinant of a Graph,24,"['gaussian elimination', 'linear algebra', 'mathematics', 'smaller to larger technique']"
18956,1895600,Little Q and Big Integers,23,"['fast fourier transform', 'mathematics']"
18957,1895700,Classic Quotation,0,[]
18958,1895800,Counting Divisors,0,[]
18959,1895900,Dirt Ratio,20,"['binary search', 'data structures', 'segment tree with lazy propagation', 'segment tree']"
18960,1896000,Lazy Running,21,"[""dijkstra's"", 'graph theory', 'greedy']"
18961,1896100,Logical Chain,0,[]
18962,1896200,Matching In Multiplication,19,['graph theory']
18963,1896300,Phone Call,22,[]
18964,1896400,Questionnaire,3,"['ad-hoc', 'mathematics']"
18965,1896500,Security Check,0,[]
18966,1896600,Alice and Bob (and string): Double Menace,0,[]
18967,1896700,Bag of Bags,21,"['data structures', 'graph theory', 'segment tree', 'set / map by trees']"
18968,1896800,Circle Union,25,"['binary search', 'calculus', 'geometry', 'mathematics', 'numerical analysis']"
18969,1896900,Different Summands Counting,23,"['combinatorics', 'inclusion and exclusion', 'mathematics']"
18970,1897000,Emerging Tree,24,"['data structures', 'greedy', 'lowest common ancestor', 'segment tree', 'tree']"
18971,1897100,Fast Travel Coloring,22,"['ad-hoc', 'backtracking', 'constructive', 'mathematics']"
18972,1897200,Gnutella Chessmaster,28,"['fast fourier transform', 'mathematics']"
18973,1897300,Halve & Merge,0,[]
18974,1897400,Interpolate,19,"['bit set', 'constructive', 'mathematics']"
18975,1897500,Jaw-Dropping Set,22,"['greedy', 'mathematics']"
18976,1897600,Kingdom Connectivity,19,"['graph theory', 'minimum spanning tree', 'planar graph']"
18977,1897700,Maximum Multiple,9,"['ad-hoc', 'mathematics']"
18978,1897800,Balanced Sequence,19,"['greedy', 'mathematics', 'sorting']"
18979,1897900,Triangle Partition,8,"['constructive', 'sorting']"
18980,1898000,Distinct Values,12,"['data structures', 'greedy', 'set / map by trees']"
18981,1898100,Maximum Weighted Matching,0,[]
18982,1898200,Period Sequence,0,[]
18983,1898300,Chiaki Sequence Revisited,24,"['ad-hoc', 'binary search', 'mathematics']"
18984,1898400,RMQ Similar Sequence,19,"['cartesian tree', 'combinatorics', 'mathematics', 'modular multiplicative inverse', 'number theory', 'tree']"
18985,1898500,Lyndon Substring,27,"['string', 'suffix array and lcp array']"
18986,1898600,Turn Off The Light,26,"['bitmask', 'case work', 'implementation', 'prefix sum']"
18987,1898700,Time Zone,7,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
18988,1898800,Mall,9,['greedy']
18989,1898900,Product,23,"['backtracking', 'heuristics', 'mathematics', 'number theory']"
18990,1899000,Keyboard,22,['dynamic programming']
18991,1899100,Machine Learning,0,[]
18992,1899200,Mosaic,0,[]
18993,1899300,Permutation,20,"['dynamic programming', 'mathematics']"
18994,1899400,Homework,25,"['data structures', 'persistent segment tree', 'segment tree', 'string', 'suffix array and lcp array']"
18995,1899500,Postcards,25,"['depth-first search', 'graph theory', 'graph traversal', 'implementation', 'prefix sum', 'strongly connected component', 'tree', 'tree compression']"
18996,1899600,Addition,0,[]
18997,1899700,Coaches,0,[]
18998,1899800,Pastry shop,22,"['data structures', 'set / map by trees']"
18999,1899900,Rikka with Linker,21,['bruteforcing']
19000,1900000,Rikka with Proper Fractions,24,"['mathematics', 'number theory']"
19001,1900100,Rikka with XOR,15,['precomputation']
19002,1900200,Rikka with Tree Game,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
19003,1900300,Rikka with Equation,24,"['berlekamp–massey', 'mathematics', 'number theory']"
19004,1900400,Rikka with Lines,0,[]
19005,1900500,Rikka with Bridges,0,[]
19006,1900600,Rikka with Mutex,0,[]
19007,1900700,Rikka with Mirror,0,[]
19008,1900800,Rikka with String,0,[]
19009,1900900,Equal Digits,0,[]
19010,1901000,Remove the Tree,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
19011,1901100,Unseen Segments,0,[]
19012,1901200,Road Connectivity,23,"['backtracking', 'dynamic programming', 'exponentiation by squaring', 'graph theory', 'implementation', 'mathematics', 'probability theory']"
19013,1901300,Binary String,0,[]
19014,1901400,Fair Competition,0,[]
19015,1901500,Token and Dice,0,[]
19016,1901600,Convex Region,0,[]
19017,1901700,Automorphism,0,[]
19018,1901800,Border,21,[]
19019,1901900,Convolution,23,"['divide and conquer', 'mathematics', 'number theory']"
19020,1902000,Decomposition,27,"['dynamic programming', 'string', 'suffix array and lcp array']"
19021,1902100,Edit,28,"['dynamic programming', 'heavy-light decomposition', 'tree']"
19022,1902200,Flow,27,"['circulation', 'maximum flow', 'minimum cost maximum flow']"
19023,1902300,Good Game,27,"['gaussian elimination', 'inclusion and exclusion', 'linear algebra', 'mathematics']"
19024,1902400,Hamilton Path,0,[]
19025,1902500,Time to get up!,6,"['implementation', 'string']"
19026,1902600,Jump Jump Jump,28,"['dynamic programming', 'fast fourier transform', 'mathematics', 'probability theory']"
19027,1902700,Knight,0,[]
19028,1902800,Link Cut Digraph,27,"['binary search', 'data structures', 'disjoint set', 'divide and conquer', 'graph theory', 'offline queries', 'parallel binary search', 'strongly connected component']"
19029,1902900,Another FizzBuzz Task,25,"['bruteforcing', 'case work', 'implementation']"
19030,1903000,Bingo,0,[]
19031,1903100,Communication Between Robots,0,[]
19032,1903200,Doublindromes,0,[]
19033,1903300,Exact Arithmetic,0,[]
19034,1903400,Form the Maximal Set,0,[]
19035,1903500,Game With Triangles,0,[]
19036,1903600,Hokusai Artworks,0,[]
19037,1903700,Internet Contents Providing Company,0,[]
19038,1903800,Japanese Food,0,[]
19039,1903900,Knights,0,[]
19040,1904000,Labeled Points,0,[]
19041,1904100,Wavel Sequence,21,[]
19042,1904200,Yuno And Claris,0,[]
19043,1904300,Balance,23,"['hungarian', 'linear programming']"
19044,1904400,Entanglement,25,[]
19045,1904500,Gravity,20,"['data structures', ""dijkstra's"", 'graph theory', 'graph traversal', 'priority queue']"
19046,1904600,Infinite Pattern Matching,19,"['bruteforcing', 'implementation']"
19047,1904700,Inheritance,0,[]
19048,1904800,Movies,0,[]
19049,1904900,Origami,21,"[""manacher's"", 'string']"
19050,1905000,Qnp,0,[]
19051,1905100,Salaj,0,[]
19052,1905200,Taxi,18,"['combinatorics', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'tree']"
19053,1905300,Tris,20,"['case work', 'constructive']"
19054,1905400,Xormites,27,['game theory']
19055,1905500,Nutella's Life,21,"['convex hull trick', 'divide and conquer', 'dynamic programming']"
19056,1905600,Oleg and Data Science,19,[]
19057,1905700,Christmas Garland,0,[]
19058,1905800,Anna and Lucky Tickets,23,"['calculus', 'dynamic programming', 'inclusion and exclusion', 'mathematics']"
19059,1905900,Octopus,21,"['case work', 'graph theory', 'implementation']"
19060,1906000,Secret Permutation,19,[]
19061,1906100,Polygon Rotation,0,[]
19062,1906200,Mikhail's Problem,0,[]
19063,1906300,Rat-O-Matic,0,[]
19064,1906400,Readability,0,[]
19065,1906500,Robotobor,19,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
19066,1906600,Candies,17,['bitmask']
19067,1906700,Binary Strings,0,[]
19068,1906800,Sequence,0,[]
19069,1906900,Rock-Paper-Scissors,23,"['fast fourier transform', 'mathematics', 'number theory']"
19070,1907000,Criminals,0,[]
19071,1907100,Build the Graph,12,"['ad-hoc', 'combinatorics', 'graph theory', 'greedy', 'mathematics']"
19072,1907200,Match,0,[]
19073,1907300,Subsequence Sums,0,[]
19074,1907400,Nice Numbers,0,[]
19075,1907500,K-matching,0,[]
19076,1907600,Competition,9,[]
19077,1907700,A Place For My Head,23,"['data structures', ""hall's theorem""]"
19078,1907800,New Divide,22,"['breadth-first search', 'bitmask', 'dynamic programming', 'graph theory', 'graph traversal', 'mathematics']"
19079,1907900,Lying From You,25,[]
19080,1908000,Don't Stay,0,[]
19081,1908100,In The End,23,[]
19082,1908200,From The Inside,0,[]
19083,1908300,Numb,0,[]
19084,1908400,One Step Closer,0,[]
19085,1908500,Invisible,20,"['bit set', 'data structures', 'segment tree', 'square root decomposition']"
19086,1908600,Leave Out All The Rest,14,"['binary search', 'dynamic programming']"
19087,1908700,Faint,26,['mathematics']
19088,1908800,Biggest Number,19,"['data structures', 'offline queries', 'segment tree']"
19089,1908900,파일 합치기 4,29,"['data structures', 'greedy', 'linked list', 'priority queue', 'splay tree', 'tree']"
19090,1909000,Connectivity,19,"['data structures', 'disjoint set', 'hashing']"
19091,1909100,Hotter-colder,22,"['ad-hoc', 'binary search']"
19092,1909200,Painting,21,"['dynamic programming', 'knuth optimization']"
19093,1909300,Ones,12,"['bitmask', 'constructive']"
19094,1909400,Seats,0,[]
19095,1909500,Ants,0,[]
19096,1909600,Permutation,22,['constructive']
19097,1909700,Primes,0,[]
19098,1909800,Vertex covers,26,[]
19099,1909900,Scheduling,0,[]
19100,1910000,Shuffle,6,"['ad-hoc', 'binary search', 'mathematics', 'number theory']"
19101,1910100,Admiral,19,"['breadth-first search', 'bidirectional search', 'depth-first search', 'graph theory', 'graph traversal', 'hashing', 'heuristics']"
19102,1910200,Array Challenge,21,"['berlekamp–massey', 'precomputation']"
19103,1910300,Boring Game,27,"['data structures', 'game theory', 'segment tree with lazy propagation', 'segment tree', 'sprague–grundy theorem', 'sweeping']"
19104,1910400,Brother and Sister,0,[]
19105,1910500,Cube Summation,25,[]
19106,1910600,Function Counting,23,[]
19107,1910700,Jacana Numbers,22,['case work']
19108,1910800,Monkeys,0,[]
19109,1910900,Rotating Line,24,"['ad-hoc', 'geometry', 'implementation', 'rotating calipers', 'sorting']"
19110,1911000,Schedule,0,[]
19111,1911100,Two Paths,15,"[""dijkstra's"", 'graph theory']"
19112,1911200,Master Zhu and Magic Numbers,0,[]
19113,1911300,Master Zhu and Chessboard,0,[]
19114,1911400,Master Zhu and Candies,18,"['game theory', 'sprague–grundy theorem']"
19115,1911500,Master Zhu and Rikka,0,[]
19116,1911600,Master Zhu and Palindromes,0,[]
19117,1911700,Master Zhu and Video,25,[]
19118,1911800,Master Zhu and Polygons,26,['mathematics']
19119,1911900,Master Zhu and Root,23,"['discrete logarithm', 'exponentiation by squaring', 'extended euclidean algorithm', 'mathematics', 'number theory', 'primality test']"
19120,1912000,Master Zhu and Binary Trees,0,[]
19121,1912100,Master Zhu and Instability,27,"['bitmask', 'dynamic programming']"
19122,1912200,Master Zhu and Math Problem,0,[]
19123,1912300,Master Zhu and the Leaper,0,[]
19124,1912400,Binomial Coefficient,21,"['mathematics', 'number theory']"
19125,1912500,Bipartite Graph Coloring,0,[]
19126,1912600,Random Points,0,[]
19127,1912700,Control Point,0,[]
19128,1912800,Three Points,13,['geometry']
19129,1912900,Independent Set,0,[]
19130,1913000,Long Binary Sequence,0,[]
19131,1913100,Huge Products,26,"['ad-hoc', 'case work', 'mathematics']"
19132,1913200,Substring Query,22,"['binary search', 'data structures', 'hashing', 'set / map by hashing', 'offline queries', 'rabin–karp', 'segment tree', 'square root decomposition', 'string', 'suffix array and lcp array', 'set / map by trees']"
19133,1913300,Subset Sum,21,"['data structures', 'greedy', 'priority queue']"
19134,1913400,$2x + 2$,17,"['arbitrary precision / big integers', 'greedy', 'mathematics']"
19135,1913500,Escape Sequences,18,"['knuth–morris–pratt', 'string']"
19136,1913600,Balls and Holes,0,[]
19137,1913700,Simple Polygon,14,"['constructive', 'mathematics']"
19138,1913800,GCD vs LCM,23,"['data structures', 'mathematics', 'möbius inversion', 'number theory', 'offline queries', 'segment tree']"
19139,1913900,Saddle Point,0,[]
19140,1914000,Or Max,0,[]
19141,1914100,Subspace,0,[]
19142,1914200,Intervals,0,[]
19143,1914300,Power of XOR,0,[]
19144,1914400,Aho,0,[]
19145,1914500,Banach,24,[]
19146,1914600,Conway,24,"['backtracking', 'randomization']"
19147,1914700,Dirichlet,21,"['backtracking', 'dynamic programming', 'implementation']"
19148,1914800,Euclid,0,[]
19149,1914900,Fulkerson,22,"['binary search', 'greedy', 'square root decomposition']"
19150,1915000,Galois,21,['permutation cycle decomposition']
19151,1915100,Harary,16,"['combinatorics', 'mathematics']"
19152,1915200,Ito,22,"['convex hull', 'geometry', 'half plane intersection', 'linear programming']"
19153,1915300,Jordan,21,"['bellman–ford', 'graph theory']"
19154,1915400,Kolmogorov,17,"[""dijkstra's"", 'graph theory', 'mathematics', 'probability theory']"
19155,1915500,Copying Homework,4,"['constructive', 'implementation']"
19156,1915600,Cleaning Robots,21,"['dynamic programming', 'dynamic programming on trees', 'mathematics', 'prefix sum', 'tree']"
19157,1915700,Even Path,11,"['data structures', 'disjoint set', 'graph theory', 'mathematics', 'number theory', 'prefix sum']"
19158,1915800,Find String in a Grid,0,[]
19159,1915900,Songwriter,18,[]
19160,1916000,Regular Forestation,22,"['tree', 'tree isomorphism']"
19161,1916100,Performance Review,19,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
19162,1916200,Twin Buildings,16,['sorting']
19163,1916300,Mission Possible,24,[]
19164,1916400,Tiling Terrace,20,['dynamic programming']
19165,1916500,Addition Robot,20,"['data structures', 'segment tree with lazy propagation', 'linear algebra', 'mathematics', 'segment tree']"
19166,1916600,Road Construction,21,['bipartite matching']
19167,1916700,Azrael,0,[]
19168,1916800,Brainy,0,[]
19169,1916900,Calendar,14,"['ad-hoc', 'case work', 'constructive']"
19170,1917000,Denominations,14,"['bruteforcing', 'mathematics']"
19171,1917100,Euclid,0,[]
19172,1917200,Flowers,0,[]
19173,1917300,Garden,0,[]
19174,1917400,Hamilton,0,[]
19175,1917500,Invigilation,21,"['convex hull', 'geometry', 'greedy']"
19176,1917600,Joke,0,[]
19177,1917700,Klothes,12,"['ad-hoc', 'greedy']"
19178,1917800,(Smurf)Land protection,25,"['dominator tree', 'graph theory', 'strongly connected component', 'tree']"
19179,1917900,Ladder,7,"['case work', 'sorting']"
19180,1918000,36 Puzzle,20,['ad-hoc']
19181,1918100,Message,0,[]
19182,1918200,Arithmetic Sequences,0,[]
19183,1918300,Subsequence,0,[]
19184,1918400,Algebra is Awesome,0,[]
19185,1918500,Bus Lines,0,[]
19186,1918600,Coal Mine,0,[]
19187,1918700,Chocolate is Tasty,0,[]
19188,1918800,Game,0,[]
19189,1918900,Tic-tac-toe,0,[]
19190,1919000,Bermutation,0,[]
19191,1919100,Grid,21,"['maximum flow', 'minimum cost maximum flow']"
19192,1919200,Heap,0,[]
19193,1919300,Lines,0,[]
19194,1919400,Yet Another Problem About Permutations,0,[]
19195,1919500,Strange Sequence,24,"['berlekamp–massey', 'mathematics', 'precomputation']"
19196,1919600,Shortest Accepted Word,0,[]
19197,1919700,Work,21,"['maximum flow', 'minimum cost maximum flow']"
19198,1919800,Ambitious Plan,0,[]
19199,1919900,Borderless Words,0,[]
19200,1920000,Catalan Combinatorial Objects,19,"['combinatorics', 'dynamic programming', 'knapsack', 'mathematics', 'precomputation', 'recursion']"
19201,1920100,Decomposable Single Word Languages,0,[]
19202,1920200,Elegant Square,18,"['constructive', 'mathematics', 'number theory']"
19203,1920300,Four Colors,18,['greedy']
19204,1920400,Greater Number Wins,0,[]
19205,1920500,Higher Math Lesson,0,[]
19206,1920600,Isomorphism,0,[]
19207,1920700,Jinxiety of a Polyomino,0,[]
19208,1920800,Aarelia Mountains,0,[]
19209,1920900,"Bar ""Duck""",0,[]
19210,1921000,Collections In Containers,0,[]
19211,1921100,1D Spreadsheet,0,[]
19212,1921200,Even Separation,19,"['gaussian elimination', 'linear algebra', 'mathematics']"
19213,1921300,Fibonacci's Nightmare,21,"['dynamic programming', 'mathematics', 'probability theory']"
19214,1921400,Guess The String,0,[]
19215,1921500,Hilbert's Maze,0,[]
19216,1921600,Infinite Binary Embedding,0,[]
19217,1921700,Jitterbug,23,"['ad-hoc', 'constructive', 'graph theory', 'mathematics']"
19218,1921800,Apprentice Learning Trajectory,18,"['data structures', 'greedy', 'implementation', 'priority queue']"
19219,1921900,Balls of Buma,10,['greedy']
19220,1922000,Cactus Revenge,26,"['cactus', 'constructive', 'graph theory']"
19221,1922100,DevOps Best Practices,22,[]
19222,1922200,Elections,11,['greedy']
19223,1922300,Foolprüf Security,22,"['combinatorics', 'data structures', 'greedy', 'mathematics', 'priority queue']"
19224,1922400,Game Relics,25,"['combinatorics', 'dynamic programming', 'knapsack', 'mathematics']"
19225,1922500,Help BerLine,27,[]
19226,1922600,Intriguing Selection,22,"['case work', 'constructive', 'graph theory']"
19227,1922700,Just Arrange the Icons,13,"['bruteforcing', 'mathematics']"
19228,1922800,Key Storage,17,"['combinatorics', 'mathematics']"
19229,1922900,Lexicography,16,"['greedy', 'implementation']"
19230,1923000,Datum,7,['bruteforcing']
19231,1923100,Birmingham,11,"['breadth-first search', 'graph theory', 'graph traversal']"
19234,1923400,Trener,0,[]
19235,1923500,모노미노도미노,16,"['implementation', 'simulation']"
19236,1923600,청소년 상어,14,"['backtracking', 'implementation', 'simulation']"
19237,1923700,어른 상어,14,"['implementation', 'simulation']"
19238,1923800,스타트 택시,14,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
19240,1924000,장난감 동맹군,11,"['depth-first search', 'graph theory', 'graph traversal']"
19241,1924100,해적과 보석,13,"['greedy', 'sorting']"
19242,1924200,행렬 합,19,"['value / coordinate compression', 'data structures', 'prefix sum', 'segment tree']"
19243,1924300,팀 가르기,20,"['maximum flow', 'max-flow min-cut theorem']"
19244,1924400,괄호 문자열,17,"['binary search', 'data structures', 'dynamic programming']"
19245,1924500,XOR,21,"['gaussian elimination', 'greedy', 'linear algebra', 'mathematics']"
19246,1924600,Tribute,16,"['bitmask', 'data structures', 'greedy', 'priority queue', 'sorting']"
19247,1924700,Boardroom Meeting,22,"['binary search', 'data structures', 'divide and conquer', 'segment tree', 'set / map by trees']"
19248,1924800,Secret Santa,21,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
19249,1924900,Guessing Game,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
19250,1925000,Flat Earth,6,"['geometry', 'geometry; 3d', 'mathematics']"
19251,1925100,We Need More Managers!,21,"['breadth-first search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal', 'minimum spanning tree']"
19252,1925200,Masterpiece,0,[]
19253,1925300,Don't Split The Atom!,9,"['game theory', 'mathematics']"
19254,1925400,Bobby Tables,0,[]
19255,1925500,Triples,0,[]
19256,1925600,Related Languages,0,[]
19257,1925700,Airport Check-in,0,[]
19258,1925800,Beyond the Rescue,0,[]
19259,1925900,Casino Cheating,0,[]
19260,1926000,DotA Quals,19,"['arbitrary precision / big integers', 'mathematics']"
19261,1926100,Enumeration of Tournaments,20,"['mathematics', 'precomputation']"
19262,1926200,Fresh Matrix,25,"['berlekamp–massey', 'dynamic programming', 'dynamic programming using connection profile']"
19263,1926300,Game of Chairs,17,"['data structures', 'mathematics', 'prefix sum', 'priority queue']"
19264,1926400,Hung Fu,26,"['directed minimum spanning tree', 'graph theory']"
19265,1926500,Is It a p-drome?,25,"['fast fourier transform', 'hashing', 'mathematics', 'rabin–karp', 'randomization', 'string']"
19266,1926600,Journey,0,[]
19267,1926700,Kid's Nightmare,27,"['현 그래프', 'dynamic programming', 'graph theory']"
19268,1926800,Lazy Student,0,[]
19269,1926900,Vacant Seat,14,['binary search']
19270,1927000,Colorful Doors,25,[]
19271,1927100,Construct Point,23,"['geometry', 'mathematics', 'number theory']"
19272,1927200,Knapsack and Queries,25,"['data structures', 'deque', 'dynamic programming', 'knapsack', 'prefix sum']"
19273,1927300,XorTree,22,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'tree']"
19274,1927400,Antennas On Tree,21,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
19275,1927500,Rectangles,28,['mathematics']
19276,1927600,Generalized Insertion Sort,25,[]
19277,1927700,"ADD, DIV, MAX",25,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
19278,1927800,Simple APSP Problem,22,"['breadth-first search', 'value / coordinate compression', 'graph theory', 'graph traversal', 'mathematics']"
19279,1927900,Forest Task,21,['greedy']
19280,1928000,Ability Draft,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
19281,1928100,Short Random Problem,27,"['calculus', 'combinatorics', 'dynamic programming', 'dynamic programming on trees', 'mathematics', 'tree']"
19282,1928200,"Block, Stock and Two Smoking Galaxy Notes",18,"['binary search', 'bipartite matching']"
19283,1928300,Lunch Queue,23,"['data structures', 'offline queries', 'segment tree']"
19284,1928400,Oneness,26,[]
19285,1928500,Shuffle,21,"['knuth–morris–pratt', 'mathematics', 'string']"
19286,1928600,Piecewise Linearity,0,[]
19287,1928700,Sketch,18,"['constructive', 'dynamic programming', 'mathematics']"
19288,1928800,≤ or ≥,22,"['ad-hoc', 'mathematics']"
19289,1928900,Stairways,0,[]
19290,1929000,Hiding a Tree,17,"['case work', 'constructive', 'tree']"
19291,1929100,Donut-shaped Enclosure,20,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
19292,1929200,hi,25,"['combinatorics', 'dynamic programming', 'inclusion and exclusion', 'mathematics']"
19293,1929300,Earthquake,17,"['greedy', 'sorting']"
19294,1929400,Dynamic Input Tool,0,[]
19295,1929500,Central Lake,21,"['data structures', 'geometry', 'segment tree']"
19296,1929600,Computing MDSST,22,[]
19297,1929700,Logistical Metropolis,23,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'lowest common ancestor', 'minimum spanning tree', 'sparse table', 'stack', 'tree', 'tree compression']"
19298,1929800,Number of Cycles,26,[]
19299,1929900,New Occurrences,24,"['data structures', 'divide and conquer', 'segment tree', 'string', 'suffix array and lcp array']"
19300,1930000,Game of Sorting,0,[]
19301,1930100,Repeating Subsequence Tests,26,"['dynamic programming', 'mathematics']"
19302,1930200,Window XOR,22,"['exponentiation by squaring', 'mathematics', 'permutation cycle decomposition']"
19303,1930300,Aftermath,11,"['mathematics', 'number theory']"
19304,1930400,Believer,0,[]
19305,1930500,Chalk Outline,0,[]
19306,1930600,Do I Wanna Know?,23,['mathematics']
19307,1930700,Exit Song,24,"['data structures', 'implementation', 'tree']"
19308,1930800,Forever and Always,15,"['constructive', 'mathematics']"
19309,1930900,Gate 21,21,[]
19310,1931000,Hamilton,23,"['case work', 'constructive', 'implementation']"
19311,1931100,I've Got Friends,0,[]
19312,1931200,Joke,12,[]
19313,1931300,Kids Aren't Alright,20,[]
19314,1931400,Swap,0,[]
19315,1931500,Conic Section,0,[]
19316,1931600,Connected Subgraph,0,[]
19317,1931700,Hanoi,0,[]
19318,1931800,Binary String,0,[]
19319,1931900,Pattern Matching,0,[]
19320,1932000,Interval Tree,0,[]
19321,1932100,Longest Increasing Subsequence,12,"['constructive', 'sorting']"
19322,1932200,Median,0,[]
19323,1932300,Dogs,0,[]
19324,1932400,Three Arrays,17,"['binary search', 'two-pointer']"
19325,1932500,Expected Shopping,0,[]
19326,1932600,Cover the Paths,20,"['data structures', 'graph theory', 'greedy', 'lowest common ancestor', 'segment tree', 'tree']"
19327,1932700,Elevator,20,"['data structures', 'dynamic programming', 'segment tree with lazy propagation', 'priority queue', 'segment tree', 'stack']"
19328,1932800,Code-Cola Plants,23,"['bipartite matching', 'data structures', 'disjoint set', 'greedy']"
19329,1932900,GCD,23,"['mathematics', 'number theory', 'pollard rho', 'randomization']"
19330,1933000,Berland Post,21,"['bellman–ford', 'binary search', 'graph theory', 'parametric search']"
19331,1933100,Compressed Spanning Subtrees,24,['ad-hoc']
19332,1933200,Prefix-free Queries,23,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'string', 'suffix array and lcp array', 'tree', 'trie']"
19333,1933300,Subsequence Sum Queries,20,"['divide and conquer', 'dynamic programming']"
19334,1933400,Consistent Occurrences,21,"['binary search', 'data structures', 'greedy', 'hashing', ""mo's"", 'offline queries', 'string', 'suffix array and lcp array', 'set / map by trees']"
19335,1933500,Increasing Costs,23,"[""dijkstra's"", 'dominator tree', 'graph theory', 'tree']"
19336,1933600,Mines,23,"['data structures', 'graph theory', 'implementation', 'strongly connected component', 'segment tree']"
19337,1933700,Balls,10,"['data structures', 'priority queue', 'set / map by trees']"
19338,1933800,Flip a Coin,20,"['gaussian elimination', 'linear algebra', 'mathematics', 'probability theory']"
19339,1933900,Octagons,14,"['bruteforcing', 'data structures', 'stack', 'string']"
19340,1934000,Tree Paths,24,"['센트로이드', 'centroid decomposition', 'data structures', 'disjoint set', 'divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'segment tree with lazy propagation', 'segment tree', 'tree']"
19341,1934100,Very New York,0,[]
19342,1934200,Sheep,0,[]
19343,1934300,Bin Packing,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'greedy']"
19344,1934400,Statistics,0,[]
19345,1934500,Zigzag,20,['dynamic programming']
19346,1934600,Knapsack,26,[]
19347,1934700,The Catcher in the Rye,18,"['binary search', 'mathematics', 'physics']"
19348,1934800,Dissertation,20,"['dynamic programming', 'greedy']"
19349,1934900,Dominoes,0,[]
19350,1935000,Endgame,0,[]
19351,1935100,Evacuation,0,[]
19352,1935200,Factory,20,"['geometry', 'heuristics', 'mathematics', 'ternary search']"
19353,1935300,Grasshoppers,0,[]
19354,1935400,Education Nightmare,0,[]
19355,1935500,A Really Odd Sequence,10,['dynamic programming']
19356,1935600,Spoonerisms,23,"['data structures', 'hashing', 'set / map by hashing', 'implementation']"
19357,1935700,A Text Problem,0,[]
19358,1935800,Waiter's Problem,8,['sorting']
19359,1935900,Even Three is Odd,0,[]
19360,1936000,Walk of Length 6,0,[]
19361,1936100,City United,0,[]
19362,1936200,Coins 2,0,[]
19363,1936300,Lowest Common Ancestor,23,"['data structures', 'divide and conquer', 'heavy-light decomposition', 'segment tree with lazy propagation', 'lowest common ancestor', 'segment tree', 'tree']"
19364,1936400,Multi-stage Marathon,0,[]
19365,1936500,Matrix Recurrence,0,[]
19366,1936600,Permutation and noitatumreP,22,"['berlekamp–massey', 'precomputation']"
19367,1936700,Compressed LCS,28,"['ad-hoc', 'data structures', 'dynamic programming', 'segment tree']"
19368,1936800,Circular Sectors,28,"['calculus', 'case work', 'geometry', 'implementation', 'mathematics']"
19369,1936900,Welcome to ICPCCamp 2017,0,[]
19370,1937000,Spanning Trees,17,['constructive']
19371,1937100,Triangle,12,"['greedy', 'sorting']"
19372,1937200,Boxes and Balls,25,"[""dijkstra's"", 'maximum flow', 'graph theory', 'minimum cost maximum flow']"
19373,1937300,Bit Operations,0,[]
19374,1937400,Randomized Binary Search Tree,0,[]
19375,1937500,Election,0,[]
19376,1937600,Hash,25,"['constructive', 'hashing', 'mathematics']"
19377,1937700,K-th String,0,[]
19378,1937800,Shortest Path Queries,23,"['data structures', ""dijkstra's"", 'divide and conquer', 'graph theory', 'segment tree']"
19379,1937900,Kitamasa's Counterattack,24,"['duality', 'maximum flow', 'minimum cost maximum flow']"
19380,1938000,Wrapping,0,[]
19381,1938100,Ascending Tree,23,"['dynamic programming', 'dynamic programming on trees', 'slope trick', 'smaller to larger technique', 'tree']"
19382,1938200,Bicycle Race,21,[]
19383,1938300,Those Russian Hackers,0,[]
19384,1938400,Circular Shift,0,[]
19385,1938500,Frogs,0,[]
19386,1938600,HDRF,0,[]
19387,1938700,Counting Orders,0,[]
19388,1938800,UFO Rectangles,0,[]
19389,1938900,Test For An Intern,0,[]
19390,1939000,Coprime Queries,22,"['binary search', 'mathematics', 'number theory']"
19391,1939100,2084,0,[]
19392,1939200,Random Numbers,0,[]
19393,1939300,Defense Tower,0,[]
19394,1939400,Eulerian Orientation,0,[]
19395,1939500,Tube Master II,0,[]
19396,1939600,Palindrome,0,[]
19397,1939700,Median on Binary Tree,0,[]
19398,1939800,Card Shuffling,0,[]
19399,1939900,Independent Events,0,[]
19400,1940000,Territory Game,0,[]
19401,1940100,Ascent Sequences,24,"['dynamic programming', 'mathematics']"
19402,1940200,Buggy Combination Lock,20,[]
19403,1940300,Cyclic Shifts,27,['string']
19404,1940400,Distribution of Prize Money,20,"['dynamic programming', 'greedy', 'knapsack']"
19405,1940500,Exclusive Training,22,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
19406,1940600,Fruit Game,15,"['game theory', 'greedy']"
19407,1940700,Greedy Coach,10,"['constructive', 'greedy']"
19408,1940800,Highly Composite Permutations,7,"['constructive', 'mathematics']"
19409,1940900,Inversions in Lexicographical Order,27,"['arbitrary precision / big integers', 'fast fourier transform', 'mathematics', 'prefix sum']"
19410,1941000,Jogging in the Park,14,"['breadth-first search', 'constructive', 'depth-first search', 'graph theory', 'graph traversal']"
19411,1941100,Keep Distance,23,[]
19412,1941200,Hacker Cups and Balls,0,[]
19413,1941300,Bored Dreamoon,0,[]
19414,1941400,Crazy Dreamoon,0,[]
19415,1941500,Forest Game,0,[]
19416,1941600,Lines Game,0,[]
19417,1941700,Lonely Dreamoon 2,0,[]
19418,1941800,Dreamoon and NightMarket,0,[]
19419,1941900,Split Game,24,[]
19420,1942000,Tree Game,0,[]
19421,1942100,Zero Game,0,[]
19422,1942200,Almost Bobo Number,0,[]
19423,1942300,Connected Spanning Subgraph,0,[]
19424,1942400,Power of Power Partition Function,26,['mathematics']
19425,1942500,Line Counting,25,"['case work', 'inclusion and exclusion', 'mathematics', 'number theory']"
19426,1942600,Maximum Flow,0,[]
19427,1942700,Rectangles Inside Rectangle,22,"['dynamic programming', 'prefix sum']"
19428,1942800,Cute Panda,0,[]
19429,1942900,Order-Preserving Partition,24,"['case work', 'implementation', 'mathematics']"
19430,1943000,Prime Tree,0,[]
19431,1943100,Hamiltonian $k$-vertex-connected Graph,0,[]
19432,1943200,Acperience,11,"['arbitrary precision / big integers', 'calculus', 'mathematics']"
19433,1943300,Born Slippy,22,['dynamic programming']
19434,1943400,Call It What You Want,26,[]
19435,1943500,Differencia,23,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
19436,1943600,Eureka,15,['geometry']
19437,1943700,Fantasia,20,"['articulation points and bridges', 'graph theory']"
19438,1943800,Glorious Brilliance,25,"['constructive', 'depth-first search', 'maximum flow', 'graph theory', 'graph traversal', 'greedy', 'implementation', 'minimum cost maximum flow']"
19439,1943900,Helter Skelter,21,['sorting']
19440,1944000,It's All In The Mind,9,['greedy']
19441,1944100,Join The Future,0,[]
19442,1944200,Keep On Movin,12,['mathematics']
19443,1944300,La Vie En Rose,0,[]
19444,1944400,Memento Mori,0,[]
19445,1944500,Alone in the Cactus,24,"['cactus', 'graph theory', 'linearity of expectation', 'mathematics', 'probability theory']"
19446,1944600,Binary Neural Network,21,[]
19447,1944700,Chess Puzzle,22,"['case work', 'constructive', 'dynamic programming', 'dynamic programming using connection profile', 'implementation']"
19448,1944800,Dominoes,21,"['dynamic programming', 'dynamic programming using connection profile']"
19449,1944900,Experience is Worth It,20,[]
19450,1945000,Fix the Matrix,17,[]
19451,1945100,Guess the Data Structure,24,[]
19452,1945200,Hovercraft,0,[]
19453,1945300,Izhevsk Training Camp,19,[]
19454,1945400,Almost Longest Increasing Subsequence,18,[]
19455,1945500,Bitwise Queries,26,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
19456,1945600,Cocktails,22,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
19457,1945700,Downhill,14,[]
19458,1945800,Expected LCP,23,"['combinatorics', 'linearity of expectation', 'mathematics', 'probability theory']"
19459,1945900,Finite Walking,23,[]
19460,1946000,Guess the Distribution,0,[]
19461,1946100,Hash Table,0,[]
19462,1946200,Immigration,19,[]
19463,1946300,Jumping on a Tree,24,"['data structures', 'disjoint set', 'divide and conquer', 'dynamic programming', 'dynamic programming on trees', 'smaller to larger technique', 'tree']"
19464,1946400,King's Roads,16,[]
19465,1946500,Sequence,15,['sorting']
19466,1946600,Colored Graphs,0,[]
19467,1946700,Graph Coloring 2,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
19468,1946800,Simple Graph,26,"['combinatorics', 'mathematics']"
19469,1946900,Reachable Sequences,28,[]
19470,1947000,Physics,16,"['calculus', 'mathematics', 'physics', 'sorting']"
19471,1947100,Parentheses,21,"['combinatorics', 'mathematics']"
19472,1947200,Array and Operations,25,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
19473,1947300,Value of the Array,24,"['fast fourier transform', 'mathematics']"
19474,1947400,Values on a Tree,16,"['graph theory', 'graph traversal']"
19475,1947500,Dreissig,0,[]
19476,1947600,Mond,0,[]
19477,1947700,Oha,0,[]
19478,1947800,Pruefsumme,27,[]
19479,1947900,Rumpf,0,[]
19480,1948000,Strasse,0,[]
19481,1948100,Tabelle,0,[]
19482,1948200,Unrumpf,0,[]
19483,1948300,Vier,15,"['dynamic programming', 'mathematics', 'number theory', 'randomization']"
19484,1948400,Weltall,0,[]
19485,1948500,Gambling,22,"['implementation', 'prefix sum']"
19486,1948600,Colourings,21,"['ad-hoc', 'constructive', 'graph theory', 'graph traversal']"
19487,1948700,Counter-manifestation,25,[]
19488,1948800,Championships,14,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'greedy', 'sorting']"
19489,1948900,Neon,20,"['dynamic programming', 'inclusion and exclusion']"
19490,1949000,Robots,28,"['bit set', 'chinese remainder theorem', 'dynamic programming', 'mathematics', 'number theory']"
19491,1949100,Equation,11,['bruteforcing']
19492,1949200,Hay,20,"['data structures', 'sorting', 'stack']"
19493,1949300,Gym,0,[]
19494,1949400,Triangles,13,"['bruteforcing', 'geometry', 'sorting', 'two-pointer']"
19495,1949500,Square Function,27,"['bit set', 'gaussian elimination', 'linear algebra', 'mathematics', 'number theory']"
19496,1949600,Guess by Remainder,17,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
19497,1949700,Subtract if Greater!,24,"['splay tree', 'tree']"
19498,1949800,Eastern Subregional,0,[]
19499,1949900,K-transform,24,"['data structures', 'dynamic programming', 'fast fourier transform', 'generating function', 'kitamasa', 'segment tree with lazy propagation', 'mathematics', 'segment tree']"
19500,1950000,Suffix Array for Thue-Morse,26,[]
19501,1950100,XOR Tree,0,[]
19502,1950200,Fence,0,[]
19503,1950300,Friends and Berries - 2,0,[]
19504,1950400,Oleg and Cola,21,"[""dijkstra's"", 'graph theory']"
19505,1950500,Process with Constant Sum,0,[]
19506,1950600,A Poor King,25,"['breadth-first search', 'game theory', 'graph theory', 'graph traversal', 'implementation', 'precomputation']"
19507,1950700,Best Division,0,[]
19508,1950800,Convex Hull,26,"['case work', 'convex hull', 'geometry', 'geometry; 3d', 'half plane intersection', 'implementation']"
19509,1950900,Different Sums,27,"['ad-hoc', 'constructive', 'mathematics', 'precomputation', 'prefix sum']"
19510,1951000,Easy Homework,28,[]
19511,1951100,Flight,0,[]
19512,1951200,Generator,0,[]
19513,1951300,Honey Tour,0,[]
19514,1951400,Intersection is Not Allowed!,25,"['combinatorics', 'gaussian elimination', 'inclusion and exclusion', 'linear algebra', 'mathematics']"
19515,1951500,Jong Hyok and String,22,"['string', 'suffix array and lcp array']"
19516,1951600,K-value,0,[]
19517,1951700,"Less Time, More Profit",22,"['maximum flow', 'max-flow min-cut theorem']"
19518,1951800,Math is Fun,27,[]
19519,1951900,Circles,0,[]
19520,1952000,Point Pairs,0,[]
19521,1952100,House Moving,0,[]
19522,1952200,Nice Set of Points,0,[]
19523,1952300,Eel and Grid,0,[]
19524,1952400,Right Angle Painting,0,[]
19525,1952500,Rectangle-free Grid,18,"['ad-hoc', 'constructive', 'greedy', 'precomputation', 'randomization']"
19526,1952600,Cups and Beans,0,[]
19527,1952700,Edge Coloring,0,[]
19528,1952800,Travel in Sugar Country,19,"['bitmask', 'dynamic programming']"
19529,1952900,카드 놀이,16,['constructive']
19530,1953000,숭고한 마라톤 대회,22,"['combinatorics', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'mathematics', 'tree']"
19531,1953100,적절한 문자열 문제,23,"['aho-corasick', 'data structures', 'hashing', 'knuth–morris–pratt', 'string', 'tree', 'trie']"
19532,1953200,수학은 비대면강의입니다,4,"['bruteforcing', 'mathematics']"
19533,1953300,길이 문자열,22,"['exponentiation by squaring', 'mathematics', 'number theory']"
19534,1953400,삼항 연산자,19,"['bruteforcing', 'graph theory', 'graph traversal', 'implementation', 'parsing', 'string']"
19535,1953500,ㄷㄷㄷㅈ,13,"['combinatorics', 'mathematics', 'tree']"
19536,1953600,감자 농장,20,"['case work', 'implementation', 'prefix sum']"
19537,1953700,전투 시뮬레이션,16,"[""dijkstra's"", 'graph theory', 'implementation', 'simulation']"
19538,1953800,루머,12,"['breadth-first search', 'graph theory', 'graph traversal']"
19539,1953900,사과나무,11,"['greedy', 'mathematics']"
19540,1954000,인버스 ㄷㄷㄷㅈ,21,"['constructive', 'graph theory', 'tree']"
19541,1954100,역학 조사,16,"['greedy', 'implementation', 'simulation']"
19542,1954200,전단지 돌리기,12,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
19543,1954300,던전 지도,16,['two-pointer']
19544,1954400,함수 복원,16,"['combinatorics', 'graph theory', 'mathematics']"
19545,1954500,소가 길을 건너간 이유 2020,20,['dynamic programming']
19546,1954600,지도 설치,24,"['maximum flow', 'max-flow min-cut theorem']"
19547,1954700,애완 트리,23,"['dynamic programming', 'dynamic programming on trees', 'prefix sum', 'tree']"
19548,1954800,그건 망고가 아니라 고양이예요,21,"['binary search', 'case work', 'recursion']"
19549,1954900,레이저 연구소,25,"['mathematics', 'number theory']"
19550,1955000,빛의 전사 크리퓨어,21,"['data structures', 'greedy', 'sparse table']"
19551,1955100,관광 사업,26,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'implementation', 'offline queries', 'tree']"
19552,1955200,데이터 제작,22,"['ad-hoc', 'constructive', 'euler characteristic (χ=v-e+f)', 'geometry', 'graph theory', 'planar graph']"
19553,1955300,피자 배틀,17,['dynamic programming']
19554,1955400,Guess the number,8,['binary search']
19555,1955500,Roses,11,"['bruteforcing', 'mathematics', 'number theory']"
19556,1955600,Colors,24,['binary search']
19557,1955700,Mixture,23,"['data structures', 'geometry', 'mathematics', 'set / map by trees']"
19558,1955800,Joker,24,"['data structures', 'disjoint set', 'divide and conquer', 'divide and conquer optimization', 'dynamic programming']"
19559,1955900,Graph,18,"['depth-first search', 'graph theory', 'graph traversal', 'sorting']"
19560,1956000,Village,21,"['센트로이드', 'greedy', 'tree']"
19561,1956100,Viruses,23,"['aho-corasick', 'data structures', 'dynamic programming', 'implementation', 'tree', 'trie']"
19562,1956200,Matrix and Queries,25,"['gaussian elimination', 'linear algebra', 'mathematics']"
19563,1956300,개구리 1,4,['mathematics']
19564,1956400,반복,5,"['greedy', 'string']"
19565,1956500,수열 만들기,14,"['constructive', 'eulerian path / circuit', 'graph theory']"
19566,1956600,수열의 구간 평균,14,"['data structures', 'prefix sum', 'set / map by trees']"
19567,1956700,개구리 2,15,"['geometry', 'mathematics']"
19568,1956800,직사각형,19,"['constructive', 'mathematics']"
19569,1956900,돌멩이 게임,18,"['dynamic programming', 'game theory', 'mathematics']"
19570,1957000,삼각 분할,24,"['combinatorics', 'divide and conquer', 'fast fourier transform', 'mathematics']"
19571,1957100,탐색 게임,14,['constructive']
19572,1957200,가뭄(Small),4,"['arithmetic', 'mathematics']"
19573,1957300,꿀벌,24,"['dynamic programming', 'dynamic programming using connection profile']"
19574,1957400,케이크 커팅,20,"['binary search', 'geometry', 'mathematics']"
19575,1957500,Polynomial,5,"['implementation', 'mathematics']"
19576,1957600,약수,13,"['dynamic programming', 'mathematics', 'number theory', 'sorting']"
19577,1957700,수학은 재밌어,16,"['euler totient function', 'mathematics', 'number theory']"
19578,1957800,가뭄(Large),22,"['duality', 'maximum flow', 'hungarian', 'linear programming', 'minimum cost maximum flow']"
19579,1957900,물건 가져가기,21,"['maximum flow', 'max-flow min-cut theorem']"
19580,1958000,마스크가 필요해,16,"['data structures', 'greedy', 'priority queue', 'sorting']"
19581,1958100,두 번째 트리의 지름,15,"['graph theory', 'graph traversal', 'tree']"
19582,1958200,200년간 폐관수련했더니 PS 최강자가 된 건에 대하여,12,"['dynamic programming', 'greedy']"
19583,1958300,싸이버개강총회,9,"['data structures', 'set / map by hashing', 'implementation', 'string']"
19584,1958400,난개발,13,"['prefix sum', 'sorting', 'sweeping']"
19585,1958500,전설,18,"['data structures', 'hashing', 'string', 'tree', 'trie']"
19586,1958600,울타리,21,"['convex hull', 'geometry', 'rotating calipers']"
19587,1958700,객실 배치,15,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
19588,1958800,상품권 준비,16,"['greedy', 'prefix sum', 'sorting']"
19589,1958900,카드 셔플,24,"['splay tree', 'tree']"
19590,1959000,비드맨,14,['greedy']
19591,1959100,독특한 계산기,13,"['data structures', 'deque', 'implementation', 'parsing', 'string']"
19592,1959200,장난감 경주,6,"['binary search', 'bruteforcing', 'mathematics']"
19593,1959300,다도해,12,"['data structures', 'disjoint set']"
19594,1959400,슈퍼 컴퓨터,16,['greedy']
19595,1959500,소수 게임,14,"['dynamic programming', 'game theory', 'mathematics', 'number theory', 'prefix sum', 'primality test', 'sieve of eratosthenes']"
19596,1959600,선물 교환,19,"['constructive', 'depth-first search', 'eulerian path / circuit', 'graph theory', 'graph traversal']"
19597,1959700,문자열 뒤집기,11,"['backtracking', 'greedy', 'string']"
19598,1959800,최소 회의실 개수,11,"['data structures', 'greedy', 'priority queue', 'sorting', 'sweeping']"
19599,1959900,이진 삼진 탐색 놀이 1,8,"['binary search', 'ternary search']"
19600,1960000,이진 삼진 탐색 놀이 2,12,"['binary search', 'prefix sum', 'ternary search']"
19601,1960100,이진 삼진 탐색 놀이 3,12,"['mathematics', 'recursion']"
19602,1960200,Dog Treats,2,"['arithmetic', 'mathematics']"
19603,1960300,Epidemiology,5,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
19604,1960400,Art,4,"['arithmetic', 'implementation', 'mathematics', 'sorting']"
19605,1960500,Cyclic Shifts,8,"['bruteforcing', 'string']"
19606,1960600,Escape Room,14,"['breadth-first search', 'graph theory', 'graph traversal']"
19607,1960700,Surmising a Sprinter’s Speed,7,['sorting']
19608,1960800,Searching for Strings,17,"['hashing', 'rabin–karp', 'string']"
19609,1960900,Swapping Seats,16,[]
19610,1961000,Josh’s Double Bacon Deluxe,18,['dynamic programming']
19611,1961100,A Game with Grundy,15,"['mathematics', 'sorting']"
19612,1961200,Exercise Deadlines,19,"['data structures', 'greedy', 'segment tree']"
19613,1961300,Mountains and Valleys,26,"['data structures', 'dynamic programming', 'lowest common ancestor', 'sparse table', 'tree']"
19614,1961400,Travelling Salesperson,21,"['ad-hoc', 'data structures', 'graph theory', 'linked list', 'mathematics']"
19615,1961500,Interval Collection,22,"['data structures', 'divide and conquer', 'priority queue', 'segment tree', 'set / map by trees']"
19616,1961600,Shopping Plans,25,"['data structures', ""dijkstra's"", 'graph theory', 'greedy', 'priority queue']"
19617,1961700,랜덤 게임~~~~~,0,[]
19618,1961800,벽 칠하기,19,"['dynamic programming', 'greedy']"
19619,1961900,자매 도시,22,"['binary search', 'data structures', 'disjoint set', 'graph theory', 'lowest common ancestor', 'minimum spanning tree', 'smaller to larger technique', 'tree']"
19620,1962000,즐거운 행로,24,"['case work', '센트로이드', 'centroid decomposition', 'divide and conquer', 'tree']"
19621,1962100,회의실 배정 2,9,['dynamic programming']
19622,1962200,회의실 배정 3,9,['dynamic programming']
19623,1962300,회의실 배정 4,13,"['binary search', 'value / coordinate compression', 'dynamic programming']"
19624,1962400,Human Error,0,[]
19625,1962500,Sirtet,0,[]
19626,1962600,Winter Driving,0,[]
19627,1962700,Card Scoring,0,[]
19628,1962800,Marshmallow Molecules,0,[]
19629,1962900,Bad Codes,18,[]
19630,1963000,Geese vs. Hawks,0,[]
19631,1963100,Wrong Answer,18,['constructive']
19632,1963200,Fun Palace,0,[]
19634,1963400,Boring Lectures,23,"['data structures', 'priority queue', 'segment tree']"
19635,1963500,Flop Sorting,25,"['constructive', 'divide and conquer', 'sorting']"
19636,1963600,요요 시뮬레이션,6,['implementation']
19637,1963700,IF문 좀 대신 써줘,8,['binary search']
19638,1963800,센티와 마법의 뿅망치,10,"['data structures', 'implementation', 'priority queue', 'simulation']"
19639,1963900,배틀로얄,12,['greedy']
19640,1964000,화장실의 규칙,12,"['data structures', 'implementation', 'priority queue', 'simulation']"
19641,1964100,중첩 집합 모델,11,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
19642,1964200,TORIE,16,"['dynamic programming', 'dynamic programming on trees', 'parsing', 'recursion', 'string', 'tree']"
19643,1964300,좀비 떼가 전역 때보다 먼저 오다니,18,"['backtracking', 'bruteforcing', 'heuristics']"
19644,1964400,좀비 떼가 기관총 진지에도 오다니,13,"['data structures', 'greedy', 'prefix sum']"
19645,1964500,햄최몇?,15,"['dynamic programming', 'knapsack']"
19646,1964600,Random Generator,16,"['binary search', 'data structures', 'segment tree']"
19647,1964700,Unique Solution,19,"['bipartite matching', 'graph theory', 'graph traversal']"
19648,1964800,미하일 2마리,18,"['exponentiation by squaring', 'floyd–warshall', 'graph theory', 'mathematics']"
19649,1964900,미담 전하기,18,"['dynamic programming', 'graph theory', 'strongly connected component', 'topological sorting']"
19650,1965000,개미여행,23,"['convex hull', ""dijkstra's"", 'geometry', 'graph theory', 'point in convex polygon check']"
19651,1965100,수열과 쿼리 39,21,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
19652,1965200,Route,21,"['convex hull trick', 'data structures', 'dynamic programming', 'priority queue']"
19653,1965300,Robot,0,[]
19654,1965400,Sequence,23,"['data structures', 'maximum flow', 'greedy', 'minimum cost maximum flow', 'priority queue']"
19655,1965500,Jump,0,[]
19656,1965600,Landlords,0,[]
19657,1965700,Explore,26,"['ad-hoc', 'binary search', 'case work', 'graph theory', 'randomization']"
19658,1965800,Labels,11,['mathematics']
19659,1965900,Discharging,0,[]
19660,1966000,Progression,0,[]
19661,1966100,Arcade,13,['dynamic programming']
19662,1966200,Aesthetic,0,[]
19663,1966300,Mountains,17,"['data structures', 'dynamic programming', 'segment tree']"
19664,1966400,Visiting Singapore,0,[]
19665,1966500,Solar Storm,0,[]
19666,1966600,Cryptography,17,"['value / coordinate compression', 'data structures', 'segment tree']"
19667,1966700,Fuel Station,0,[]
19668,1966800,Relay Marathon,0,[]
19669,1966900,Firefighting,19,"['depth-first search', 'graph theory', 'graph traversal', 'greedy', 'tree']"
19670,1967000,Pilot,16,"['data structures', 'disjoint set', 'offline queries']"
19671,1967100,Lasers,16,[]
19672,1967200,Feast,22,"['aliens trick', 'binary search', 'dynamic programming']"
19673,1967300,Rigged Roads,21,['greedy']
19674,1967400,Shuffle,18,"['binary search', 'implementation']"
19675,1967500,Sudoku Variant,8,"['backtracking', 'bruteforcing']"
19676,1967600,"Holy cow, Vim! (Easy)",14,"['ad-hoc', 'constructive']"
19677,1967700,"Holy cow, Vim! (Hard)",19,['ad-hoc']
19678,1967800,Internet problem,0,[]
19679,1967900,Fancy Fence,18,"['combinatorics', 'data structures', 'mathematics', 'stack']"
19680,1968000,Roads,0,[]
19681,1968100,Star Trek,24,"['case work', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'exponentiation by squaring', 'game theory', 'graph theory', 'graph traversal', 'mathematics', 'tree']"
19682,1968200,The Potion of Great Power,21,"['bit set', 'square root decomposition']"
19683,1968300,Spring cleaning,22,"['data structures', 'heavy-light decomposition', 'segment tree', 'tree']"
19684,1968400,Chess Rush,26,"['case work', 'exponentiation by squaring', 'mathematics']"
19685,1968500,Palindromic FizzBuzz,4,['implementation']
19686,1968600,Lost Array,10,"['constructive', 'sorting']"
19687,1968700,Experimental Charges,14,"['data structures', 'disjoint set']"
19688,1968800,Square or Rectangle?,0,[]
19689,1968900,Collecting Mushrooms,12,['prefix sum']
19690,1969000,Journey,0,[]
19691,1969100,Lightning Rod,12,['geometry']
19692,1969200,City Mapping,0,[]
19693,1969300,Safety,23,"['dynamic programming', 'slope trick']"
19694,1969400,Sorting,6,"['implementation', 'sorting']"
19695,1969500,Snail,15,"['binary search', 'prefix sum']"
19696,1969600,Knapsack,17,"['dynamic programming', 'knapsack']"
19697,1969700,Island,12,['mathematics']
19698,1969800,헛간 청약,2,"['arithmetic', 'mathematics']"
19699,1969900,소-난다!,10,"['backtracking', 'bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
19700,1970000,수업,15,"['data structures', 'greedy', 'set / map by trees']"
19701,1970100,소 운전한다.,14,"[""dijkstra's"", 'graph theory']"
19702,1970200,친구,21,"['combinatorics', 'constructive', 'graph theory', 'mathematics']"
19703,1970300,실험,21,"['2-sat', 'graph theory', 'strongly connected component']"
19704,1970400,Best Place,10,"['implementation', 'sorting']"
19705,1970500,Roadside Advertisements,0,[]
19706,1970600,Hotspot,0,[]
19707,1970700,RMQ,22,[]
19708,1970800,I want to be the very best too!,0,[]
19709,1970900,LunchBox,6,"['greedy', 'sorting']"
19710,1971000,Fabric,0,[]
19711,1971100,Rock Climbing,0,[]
19712,1971200,Panda Ski,0,[]
19713,1971300,UnluckyFloors,0,[]
19718,1971800,King's Inspection,5,[]
19719,1971900,Cash Gap,6,"['greedy', 'implementation', 'simulation', 'sorting']"
19720,1972000,Jet Trains,0,[]
19721,1972100,Cutting pizza,0,[]
19722,1972200,Unique Solution,17,"['constructive', 'mathematics']"
19723,1972300,Metro 2345,0,[]
19724,1972400,Weight Overflow,18,[]
19725,1972500,Checking Answers to Test,6,[]
19726,1972600,Magic Trick,11,['implementation']
19727,1972700,Superpermutations,18,"['data structures', 'segment tree']"
19728,1972800,Preparing Tests,25,"['link/cut tree', 'tree']"
19729,1972900,Valya and Letter,5,"['greedy', 'mathematics']"
19730,1973000,Sightseeing Tour,0,[]
19731,1973100,How to Fail at Programming Contest,0,[]
19732,1973200,Berland Railroads,0,[]
19733,1973300,Difficult Problems,4,['string']
19734,1973400,Race of robots,0,[]
19735,1973500,Flexible Segments,10,"['constructive', 'mathematics']"
19736,1973600,Secret Code,0,[]
19737,1973700,Torus Travel,9,"['geometry', 'geometry; 3d', 'mathematics']"
19738,1973800,Amalthea's new walk,0,[]
19739,1973900,Formula 42,0,[]
19740,1974000,How Many Tests,5,"['parsing', 'string']"
19741,1974100,Patterns,5,"['bruteforcing', 'mathematics', 'number theory', 'primality test']"
19742,1974200,Interesting excursion,0,[]
19743,1974300,Jump and turn,20,"['ad-hoc', 'case work', 'constructive', 'implementation']"
19744,1974400,Counting in the order,11,"['data structures', 'stack']"
19745,1974500,Different digits,11,['greedy']
19746,1974600,Drawing,0,[]
19747,1974700,The last battle,9,"['ad-hoc', 'implementation']"
19748,1974800,Schedule,0,[]
19749,1974900,Pizza,19,"['bitmask', 'bit set', 'inclusion and exclusion']"
19750,1975000,Retwinting twinter,14,"['binary search', 'bruteforcing', 'implementation', 'string']"
19751,1975100,Fractification,3,"['bruteforcing', 'mathematics']"
19752,1975200,Большой круглый стол,0,[]
19753,1975300,Помеха справа,0,[]
19754,1975400,Древнее заклинание,0,[]
19755,1975500,Эскалатор,9,"['arithmetic', 'mathematics']"
19756,1975600,стандартный ввод,0,[]
19757,1975700,Парадокс с дробями,0,[]
19758,1975800,Головоломка,0,[]
19759,1975900,<<Кто хочет стать миллионером?>>,4,"['arithmetic', 'mathematics', 'precomputation']"
19760,1976000,Операция <<Перестановка>>,16,"['depth-first search', 'graph theory', 'graph traversal']"
19761,1976100,Трудности переписки,0,[]
19762,1976200,"Таня, мячи и <<исключающее или>>",0,[]
19763,1976300,Атомы,0,[]
19764,1976400,День рождения,0,[]
19765,1976500,Шушпанчики и кинотеатр,16,['bruteforcing']
19766,1976600,Доставка футболок,4,[]
19767,1976700,Деление,16,"['bitmask', 'bruteforcing', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics', 'number theory']"
19768,1976800,Милый общий делитель,6,"['euclidean algorithm', 'mathematics', 'number theory']"
19769,1976900,Робот,7,"['greedy', 'sorting']"
19770,1977000,Эстафета,0,[]
19771,1977100,Сапсан,3,['mathematics']
19772,1977200,Звезды на погонах,0,[]
19773,1977300,Пробки,0,[]
19774,1977400,ABCD-код,3,"['arithmetic', 'implementation', 'mathematics']"
19775,1977500,Шахматы,6,"['constructive', 'greedy', 'mathematics']"
19776,1977600,Завоевание,0,[]
19777,1977700,Дюны,5,['implementation']
19778,1977800,Игра,0,[]
19779,1977900,НОД и НОК,14,"['bruteforcing', 'mathematics', 'number theory']"
19780,1978000,Мерлин,7,"['greedy', 'sorting']"
19781,1978100,Регистрация на олимпиаду,0,[]
19782,1978200,Безопасный путь,0,[]
19783,1978300,Преобразование последовательности,0,[]
19784,1978400,Крестики-нолики,0,[]
19785,1978500,Банк,0,[]
19786,1978600,Ставка,4,[]
19787,1978700,Взлом шифра,11,['constructive']
19788,1978800,Болезнь,7,[]
19789,1978900,Разделение королевства,10,['sorting']
19790,1979000,Загадочное уравнение,5,['mathematics']
19791,1979100,Осенний парк,13,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
19792,1979200,Палиндромные числа,0,[]
19793,1979300,Необычный экспонат,0,[]
19794,1979400,Супрематизм,0,[]
19795,1979500,Рекламное объявление,0,[]
19796,1979600,Реклама на заборе,3,"['implementation', 'simulation']"
19797,1979700,Укрепление мостов,10,"['depth-first search', 'graph theory', 'graph traversal']"
19798,1979800,Лягушонок Билли,9,"['greedy', 'sorting', 'two-pointer']"
19799,1979900,Половина,9,['dynamic programming']
19800,1980000,Инициализация массива,0,[]
19801,1980100,Обработка строки,0,[]
19802,1980200,Ребус,5,"['parsing', 'string']"
19803,1980300,Племя тив,0,[]
19804,1980400,День рождения викинга,5,"['constructive', 'geometry', 'mathematics', 'pythagoras theorem']"
19805,1980500,Attractive Flowers,6,"['greedy', 'mathematics', 'number theory', 'sorting']"
19806,1980600,Blocking the View,15,"['geometry', 'line segment intersection check', 'point in convex polygon check']"
19807,1980700,Fermat's Last Theorem,0,[]
19808,1980800,Guess the Path,19,"['binary search', 'divide and conquer']"
19809,1980900,Hide-and-Seek for Robots,0,[]
19810,1981000,Isosceles triangles,8,"['arithmetic', 'mathematics']"
19811,1981100,Too Many Hyphens,0,[]
19812,1981200,Planet Nine,11,"['constructive', 'mathematics', 'number theory']"
19813,1981300,Dates,4,"['implementation', 'string']"
19814,1981400,Factory,0,[]
19815,1981500,RotationAlmostSort,0,[]
19816,1981600,Time Travel,0,[]
19817,1981700,Company Merging,6,"['data structures', 'priority queue']"
19818,1981800,LaTeX Expert,10,"['implementation', 'parsing', 'regular expression', 'string']"
19819,1981900,New Year Presents,0,[]
19820,1982000,Similar Arrays,16,"['constructive', 'graph theory']"
19821,1982100,Horseback Riding,0,[]
19822,1982200,How to Learn You Score,0,[]
19823,1982300,Combostone,0,[]
19824,1982400,Linearization,0,[]
19825,1982500,Minimal Product,16,"['ad-hoc', 'greedy', 'mathematics', 'sorting']"
19826,1982600,Two Prefixes,0,[]
19827,1982700,Right Expansion Of The Mind,17,[]
19828,1982800,Berland University,15,['binary search']
19829,1982900,The Pleasant Walk,6,"['implementation', 'two-pointer']"
19830,1983000,Tourism,9,['ad-hoc']
19831,1983100,Open cup,0,[]
19832,1983200,Configuration file,11,"['data structures', 'set / map by hashing', 'implementation', 'parsing', 'simulation', 'stack', 'string']"
19833,1983300,Equal Maximums,20,"['data structures', 'mathematics', 'stack']"
19834,1983400,School Olympiad,0,[]
19835,1983500,Pandemic 2,0,[]
19836,1983600,Puzzle,10,"['combinatorics', 'mathematics']"
19837,1983700,Game of 2-SAT,21,[]
19838,1983800,Circuit,22,"['data structures', 'dynamic programming', 'graph theory', 'set / map by trees']"
19839,1983900,Entertainment with Javelins,0,[]
19840,1984000,Misha's Product,9,['mathematics']
19841,1984100,Prime Suffixes,12,"['mathematics', 'number theory', 'precomputation', 'primality test']"
19842,1984200,Restoring the Sequence,4,['implementation']
19843,1984300,수면 패턴,5,['implementation']
19844,1984400,단어 개수 세기,7,"['implementation', 'string']"
19845,1984500,넴모넴모 2020,12,['binary search']
19846,1984600,신기한 연산,15,"['ad-hoc', 'constructive']"
19847,1984700,여우 신탁,14,"['dynamic programming', 'mathematics', 'probability theory']"
19848,1984800,빈 문자열 만들기,19,"['data structures', 'greedy', 'stack']"
19849,1984900,문제지 나르기,19,"['backtracking', 'bitmask', 'geometry', 'mathematics']"
19850,1985000,2×M 타일링,20,"['dynamic programming', 'knapsack']"
19851,1985100,버거운 버거,21,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
19852,1985200,공정한 회의,22,"['ad-hoc', 'data structures', 'disjoint set', 'graph theory', 'minimum spanning tree']"
19853,1985300,전국일주,22,"['constructive', 'graph theory']"
19854,1985400,직선형 분자 만들기,26,"['data structures', 'divide and conquer', 'graph theory', 'segment tree with lazy propagation', 'link/cut tree', 'segment tree', 'tree', 'two-pointer']"
19855,1985500,3분 그래프 리턴즈,24,"[""dijkstra's"", 'maximum flow', 'graph theory', 'minimum cost maximum flow']"
19856,1985600,계주 코스 정하기,26,['data structures']
19857,1985700,연금술사,19,"['binary search', 'greedy']"
19858,1985800,Золотые слитки,0,[]
19859,1985900,Автобус,0,[]
19860,1986000,Горные лыжи,0,[]
19861,1986100,IQ тест для роботов,0,[]
19862,1986200,Koosaga's problem,25,"['depth-first search', 'graph theory', 'graph traversal', 'hashing', 'randomization', 'tree']"
19863,1986300,Расшифровка ДНК,0,[]
19864,1986400,Преобразование таблицы,0,[]
19865,1986500,Архивы джедаев,0,[]
19866,1986600,Музей,0,[]
19867,1986700,Обычный мальчик,0,[]
19868,1986800,Полиглоты-интроверты,0,[]
19869,1986900,<<Исключающее или>> наносит ответный удар,0,[]
19870,1987000,Разность квадратов,10,"['case work', 'mathematics']"
19871,1987100,Превышение скорости,0,[]
19872,1987200,Борьба с рутиной,16,"['data structures', 'set / map by hashing', 'segment tree']"
19873,1987300,Олимпиада для роботов,0,[]
19874,1987400,Максимальное произведение,6,"['arbitrary precision / big integers', 'bruteforcing', 'prefix sum']"
19875,1987500,Планировка участка,11,"['bruteforcing', 'dynamic programming', 'mathematics', 'number theory']"
19876,1987600,Банкомат,0,[]
19877,1987700,Плакаты,0,[]
19878,1987800,Летопись,7,"['case work', 'implementation']"
19879,1987900,Икебана,7,['greedy']
19880,1988000,Номер страницы,5,"['bruteforcing', 'string']"
19881,1988100,Пизанская башня,0,[]
19882,1988200,Печать,0,[]
19883,1988300,Квадродерево,0,[]
19884,1988400,Шпаги,0,[]
19885,1988500,Светофор,0,[]
19886,1988600,Гири,0,[]
19887,1988700,Агроном-любитель,6,['implementation']
19888,1988800,Верёвочный парк,0,[]
19889,1988900,Школьная демократия,0,[]
19890,1989000,Полет мечты,0,[]
19891,1989100,Занимательное дежурство,0,[]
19892,1989200,Рукопожатия,0,[]
19893,1989300,Фишки,0,[]
19894,1989400,Отчет об ошибках,0,[]
19895,1989500,Обмен валюты,12,['binary search']
19896,1989600,Простая последовательность цифр,0,[]
19897,1989700,Робот,0,[]
19898,1989800,Два измерения,9,"['mathematics', 'number theory']"
19899,1989900,Полные квадраты,10,['mathematics']
19900,1990000,Автоматизация склада,0,[]
19901,1990100,Машинное обучение,0,[]
19902,1990200,Неисправный марсоход,9,"['case work', 'mathematics']"
19903,1990300,Интервальные тренировки,17,['dynamic programming']
19904,1990400,Экспедиция,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
19905,1990500,Разбиение на пары,0,[]
19906,1990600,Постановочное фото,16,"['constructive', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'sorting']"
19907,1990700,Беспилотное такси,18,"['ad-hoc', 'data structures', 'segment tree']"
19908,1990800,Экспресс 20/19,25,"['ad-hoc', 'dynamic programming', 'graph theory', 'mathematics']"
19909,1990900,Чёрная дыра,29,"['ad-hoc', 'binary search', 'dynamic programming', 'implementation', 'precomputation', 'two-pointer']"
19910,1991000,Гирлянда,17,['binary search']
19911,1991100,Классные парты,23,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'greedy']"
19912,1991200,Робогольф,0,[]
19913,1991300,Поиск идеи,0,[]
19914,1991400,Arranging Shoes,21,"['data structures', 'greedy', 'segment tree']"
19915,1991500,Split the Attractions,27,"['ad-hoc', '센트로이드', 'centroid decomposition', 'data structures', 'depth-first search', 'disjoint set', 'divide and conquer', 'graph theory', 'graph traversal', 'greedy', 'tree']"
19916,1991600,Rectangles,23,"['data structures', 'divide and conquer', 'sorting']"
19917,1991700,Broken Line 01,8,['constructive']
19918,1991800,Broken Line 02,13,"['ad-hoc', 'constructive', 'implementation']"
19919,1991900,Broken Line 03,13,['constructive']
19920,1992000,Broken Line 04,13,['constructive']
19921,1992100,Broken Line 05,0,[]
19922,1992200,Broken Line 06,0,[]
19923,1992300,Broken Line 07,0,[]
19924,1992400,Broken Line 08,0,[]
19925,1992500,Broken Line 09,0,[]
19926,1992600,Broken Line 10,25,"['ad-hoc', 'implementation']"
19927,1992700,Vision Program,21,"['implementation', 'prefix sum']"
19928,1992800,Sky Walking,27,"['data structures', ""dijkstra's"", 'graph theory', 'greedy', 'sweeping', 'set / map by trees']"
19929,1992900,Handcrafted Gift,15,"['constructive', 'data structures', 'disjoint set', 'prefix sum']"
19930,1993000,Jelly Flavours,20,"['greedy', 'knapsack']"
19931,1993100,Finding Routers,19,"['binary search', 'data structures', 'dynamic programming', 'square root decomposition', 'set / map by trees']"
19932,1993200,Painting Squares,23,"['ad-hoc', 'constructive', 'eulerian path / circuit', 'graph theory', 'mathematics']"
19933,1993300,Comparing Plants,26,"['constructive', 'data structures', 'graph theory', 'segment tree with lazy propagation', 'segment tree', 'sparse table', 'topological sorting', 'set / map by trees']"
19934,1993400,Connecting Supertrees,19,"['case work', 'constructive', 'data structures', 'disjoint set', 'graph theory', 'implementation']"
19935,1993500,Carnival Tickets,22,"['data structures', 'dynamic programming', 'greedy', 'priority queue', 'sorting']"
19936,1993600,Packing Biscuits,22,"['dynamic programming', 'mathematics', 'recursion']"
19937,1993700,Counting Mushrooms,26,"['ad-hoc', 'case work', 'implementation', 'square root decomposition']"
19938,1993800,Stations,21,"['euler tour technique', 'tree']"
19939,1993900,박 터뜨리기,6,"['greedy', 'mathematics']"
19940,1994000,피자 오븐,11,"['breadth-first search', 'graph theory', 'graph traversal', 'greedy', 'mathematics']"
19941,1994100,햄버거 분배,8,['greedy']
19942,1994200,다이어트,11,"['backtracking', 'bruteforcing']"
19943,1994300,조명등,21,"['convex hull trick', 'dynamic programming']"
19944,1994400,뉴비의 기준은 뭘까?,2,['implementation']
19945,1994500,새로운 언어 CC,5,"['implementation', 'mathematics']"
19946,1994600,2의 제곱수 계산하기,4,"['arithmetic', 'implementation', 'mathematics']"
19947,1994700,투자의 귀재 배주형,6,"['bruteforcing', 'dynamic programming', 'recursion']"
19948,1994800,음유시인 영재,8,"['implementation', 'string']"
19949,1994900,영재의 시험,8,"['backtracking', 'bruteforcing']"
19950,1995000,3차원 막대기 연결하기,11,"['geometry', 'geometry; 3d', 'greedy']"
19951,1995100,태상이의 훈련소 생활,11,['prefix sum']
19952,1995200,인성 문제 있어??,12,"['breadth-first search', 'graph theory', 'graph traversal']"
19953,1995300,영재의 산책,12,"['mathematics', 'number theory']"
19954,1995400,바나나킥을 잡아라!,16,"['data structures', 'game theory', 'greedy', 'set / map by hashing', 'mathematics']"
19955,1995500,침략전쟁,21,"['breadth-first search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal', 'implementation']"
19956,1995600,Бактерии,15,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'mathematics', 'number theory', 'primality test', 'set / map by trees']"
19957,1995700,Шахматная головоломка,0,[]
19958,1995800,Шоколад,0,[]
19959,1995900,No,0,[]
19960,1996000,Ожерелье,9,['constructive']
19961,1996100,Гонки,5,"['ad-hoc', 'arithmetic', 'case work', 'mathematics']"
19962,1996200,Робот,0,[]
19963,1996300,Санта Клаус,3,['implementation']
19964,1996400,Подстрока,0,[]
19965,1996500,Вода,0,[]
19966,1996600,Мостостроение,12,"['binary search', 'dynamic programming']"
19967,1996700,Кафе,0,[]
19968,1996800,Impossible,8,"['greedy', 'implementation', 'sorting']"
19969,1996900,Сборка компьютеров,5,['implementation']
19970,1997000,Куб,0,[]
19971,1997100,Домашнее задание,6,"['bruteforcing', 'graph theory']"
19972,1997200,Москва 2042,0,[]
19973,1997300,Морской бой,0,[]
19974,1997400,Станция <<Сортировочная>>,0,[]
19975,1997500,Википедия,8,['string']
19976,1997600,Профессор Хаос,0,[]
19977,1997700,Золотые монеты,19,"['eulerian path / circuit', 'graph theory']"
19978,1997800,Вещественные числа,0,[]
19979,1997900,Игра,16,"['binary search', 'greedy', 'parametric search']"
19980,1998000,Гипотеза об обобщенном коне,0,[]
19981,1998100,ЕГЭ,7,['mathematics']
19982,1998200,Генератор паролей,4,"['constructive', 'implementation', 'string']"
19983,1998300,Уборка снега,0,[]
19984,1998400,Черепахи в пруду,0,[]
19985,1998500,Починка забора,0,[]
19986,1998600,Прогулка по зоопарку,0,[]
19987,1998700,Олег и двоичные последовательности,0,[]
19988,1998800,Город Че,0,[]
19989,1998900,Гномы и Одинокая гора,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
19990,1999000,Покраска забора,0,[]
19991,1999100,Телефонные номера,12,"['implementation', 'string']"
19992,1999200,Вращающаяся пластина,0,[]
19993,1999300,Призы,8,['case work']
19994,1999400,Защищенное соединение,0,[]
19995,1999500,Перетягивание каната,0,[]
19996,1999600,Загранпаспорт,0,[]
19997,1999700,Вирус,20,['backtracking']
19998,1999800,스도쿠 (Hard),24,"['backtracking', 'dancing links', ""knuth's x""]"
19999,1999900,일하는 구구,0,[]
20000,2000000,20000 바이트 챌린지,25,"['ad-hoc', 'backtracking', 'bitmask', 'case work', 'constructive', 'depth-first search', 'divide and conquer', 'graph theory', 'graph traversal', 'implementation', 'mathematics', 'number theory', 'parsing', 'precomputation', 'primality test', 'recursion', 'string', 'tree']"
20001,2000100,고무오리 디버깅,5,['implementation']
20002,2000200,사과나무,11,['prefix sum']
20003,2000300,거스름돈이 싫어요,10,"['euclidean algorithm', 'mathematics', 'number theory']"
20004,2000400,베스킨라빈스 31,7,"['game theory', 'mathematics']"
20005,2000500,보스몬스터 전리품,13,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
20006,2000600,랭킹전 대기열,9,"['implementation', 'simulation']"
20007,2000700,떡 돌리기,12,"[""dijkstra's"", 'graph theory']"
20008,2000800,몬스터를 처치하자!,11,"['backtracking', 'bruteforcing']"
20009,2000900,형곤이의 소개팅,20,"['data structures', 'graph theory', 'set / map by hashing', 'parsing', 'stable marriage problem', 'string']"
20010,2001000,악덕 영주 혜유,14,"['depth-first search', 'graph theory', 'graph traversal', 'minimum spanning tree']"
20011,2001100,Рекламный щит,8,"['bitmask', 'implementation', 'sorting']"
20012,2001200,Хаотическая перестановка,8,['implementation']
20013,2001300,Экзамен,0,[]
20014,2001400,Лесопосадки,0,[]
20015,2001500,Академия Джедаев,0,[]
20016,2001600,Спасти котенка,0,[]
20017,2001700,Топот котов,3,"['arithmetic', 'implementation', 'mathematics']"
20018,2001800,Странный город,0,[]
20019,2001900,Длинный питон,11,['mathematics']
20020,2002000,Швабра,0,[]
20021,2002100,Вампирские числа,0,[]
20023,2002300,Advertisement Matching,22,"['data structures', 'mathematics', 'segment tree']"
20024,2002400,Bombs In My Deck,6,"['mathematics', 'probability theory']"
20025,2002500,Economic One-way Roads,25,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory']"
20026,2002600,Fix Wiring,13,"['graph theory', 'greedy', 'minimum spanning tree']"
20027,2002700,LCS 8,23,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
20028,2002800,Min-hashing,15,"['graph theory', 'graph traversal', 'mathematics']"
20029,2002900,Mock Competition Marketing,7,"['backtracking', 'bruteforcing', 'implementation']"
20030,2003000,트리와 쿼리 17,24,"['binary search', 'data structures', 'euler tour technique', 'heavy-light decomposition', 'segment tree with lazy propagation', 'segment tree', 'sparse table', 'tree']"
20031,2003100,Remote Control,19,"['data structures', 'disjoint set', 'dynamic programming', 'set / map by trees']"
20032,2003200,Sewing Graph,14,"['constructive', 'geometry', 'sorting']"
20033,2003300,"Square, Not Rectangle",12,"['binary search', 'data structures', 'stack']"
20034,2003400,Steel Slicing 2,23,"['bipartite matching', 'data structures', 'dynamic programming', 'geometry', 'greedy', 'segment tree', 'stack']"
20035,2003500,이동하기 5,11,['greedy']
20036,2003600,Ball Alignment,20,"['binary search', 'value / coordinate compression', 'dynamic programming', 'sorting']"
20037,2003700,Bit String,21,"['dynamic programming', 'knuth–morris–pratt', 'string']"
20038,2003800,Broken Tiles,0,[]
20039,2003900,Coronavirus Trend,19,"['value / coordinate compression', 'data structures', 'dynamic programming', 'segment tree']"
20040,2004000,사이클 게임,12,"['data structures', 'disjoint set']"
20041,2004100,Escaping,16,"['geometry', 'greedy', 'mathematics']"
20042,2004200,Hotspots,23,"['dynamic programming', 'greedy', 'mathematics']"
20043,2004300,Negative Cycle,0,[]
20044,2004400,Project Teams,7,"['greedy', 'sorting']"
20045,2004500,Trading System,21,"['binary search', 'data structures', 'prefix sum', 'priority queue', 'persistent segment tree', 'segment tree']"
20046,2004600,Road Reconstruction,12,"[""dijkstra's"", 'graph theory', 'graph traversal']"
20047,2004700,동전 옮기기,14,['dynamic programming']
20048,2004800,Paint,26,"['case work', 'data structures', 'disjoint set', 'graph theory', 'smaller to larger technique', 'square root decomposition']"
20049,2004900,Pastiri,24,"['breadth-first search', 'graph theory', 'graph traversal', 'greedy']"
20050,2005000,Semafor,20,"['case work', 'dynamic programming', 'exponentiation by squaring', ""fermat's little theorem"", 'graph theory', 'implementation', 'mathematics', 'number theory']"
20051,2005100,Zagrade,16,"['data structures', 'stack']"
20052,2005200,괄호 문자열 ?,17,"['data structures', 'prefix sum', 'segment tree']"
20053,2005300,"최소, 최대 2",3,['implementation']
20054,2005400,트리 가짓수 세기,16,"['dynamic programming', 'mathematics']"
20055,2005500,컨베이어 벨트 위의 로봇,11,"['implementation', 'simulation']"
20056,2005600,마법사 상어와 파이어볼,12,"['implementation', 'simulation']"
20057,2005700,마법사 상어와 토네이도,13,"['implementation', 'simulation']"
20058,2005800,마법사 상어와 파이어스톰,13,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
20059,2005900,Hotspots 2,25,"['dynamic programming', 'greedy', 'mathematics']"
20060,2006000,Combo,17,['constructive']
20061,2006100,모노미노도미노 2,14,"['implementation', 'simulation']"
20062,2006200,Seats,25,"['ad-hoc', 'data structures', 'geometry', 'segment tree with lazy propagation', 'segment tree']"
20063,2006300,Werewolf,24,"['data structures', 'disjoint set', 'euler tour technique', 'segment tree', 'sorting', 'sparse table', 'tree']"
20064,2006400,Mechanical Doll,22,"['constructive', 'implementation', 'simulation']"
20065,2006500,Highway Tolls,25,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal']"
20066,2006600,Meetings,27,"['cartesian tree', 'data structures', 'offline queries', 'segment tree', 'tree']"
20067,2006700,Nowruz 1,12,"['breadth-first search', 'constructive', 'graph theory', 'graph traversal', 'randomization']"
20068,2006800,Nowruz 2,19,[]
20069,2006900,Nowruz 3,19,[]
20070,2007000,Nowruz 4,20,[]
20071,2007100,Nowruz 5,20,[]
20072,2007200,Nowruz 6,20,[]
20073,2007300,Nowruz 7,21,[]
20074,2007400,Nowruz 8,23,[]
20075,2007500,Nowruz 9,24,[]
20076,2007600,Nowruz 10,24,[]
20077,2007700,Wiring,24,"['dynamic programming', 'greedy']"
20078,2007800,Toy Train,26,"['ad-hoc', 'game theory', 'graph theory']"
20079,2007900,The Big Prize,20,"['binary search', 'divide and conquer', 'square root decomposition']"
20080,2008000,Simurgh,26,"['ad-hoc', 'binary search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
20081,2008100,Ancient Books,23,"['ad-hoc', 'permutation cycle decomposition']"
20082,2008200,Laugh,6,['string']
20083,2008300,Mini Tetris,13,[]
20084,2008400,Martian DNA,22,"['ad-hoc', 'binary search']"
20085,2008500,Detecting Molecules,17,"['greedy', 'prefix sum', 'sorting', 'two-pointer']"
20086,2008600,Roller Coaster Railroad,26,"['data structures', 'disjoint set', 'eulerian path / circuit', 'graph theory', 'minimum spanning tree', 'sweeping']"
20087,2008700,Shortcut,26,"['binary search', 'geometry', 'prefix sum', 'two-pointer']"
20088,2008800,Paint By Numbers,20,"['dynamic programming', 'prefix sum']"
20089,2008900,Unscrambling a Messy Bug,20,['divide and conquer']
20090,2009000,Aliens,25,"['aliens trick', 'binary search', 'convex hull trick', 'dynamic programming']"
20091,2009100,Mountains,22,"['dynamic programming', 'geometry']"
20092,2009200,Cup of Jamshid,21,"['binary search', 'case work', 'mathematics']"
20093,2009300,Coins,18,"['ad-hoc', 'bitmask']"
20094,2009400,Sudoku 1,4,"['heuristics', 'implementation']"
20095,2009500,Sudoku 2,7,['implementation']
20096,2009600,Sudoku 3,8,['implementation']
20097,2009700,Sudoku 4,16,"['ad-hoc', 'backtracking', 'constructive', 'implementation']"
20098,2009800,Sudoku 5,10,['constructive']
20099,2009900,Sudoku 6,12,"['backtracking', 'precomputation']"
20100,2010000,Sudoku 7,21,"['constructive', 'heuristics', 'randomization', 'simulated annealing']"
20101,2010100,Sudoku 8,17,"['ad-hoc', 'constructive', 'implementation']"
20102,2010200,Sudoku 9,17,"['ad-hoc', 'constructive', 'implementation']"
20103,2010300,Sudoku 10,17,"['ad-hoc', 'constructive', 'implementation']"
20104,2010400,Timecard,4,['string']
20105,2010500,Last Supper,24,['ad-hoc']
20106,2010600,Cave,16,['binary search']
20107,2010700,Pebbling odometer 1,8,"['constructive', 'implementation']"
20108,2010800,Pebbling odometer 2,12,[]
20109,2010900,Pebbling odometer 3,9,[]
20110,2011000,Pebbling odometer 4,21,['ad-hoc']
20111,2011100,Pebbling odometer 5,26,"['ad-hoc', 'constructive', 'implementation']"
20112,2011200,사토르 마방진,5,"['implementation', 'string']"
20113,2011300,긴급 회의,5,['implementation']
20114,2011400,미아 노트,7,['string']
20115,2011500,에너지 드링크,8,['greedy']
20116,2011600,상자의 균형,8,"['mathematics', 'physics', 'prefix sum']"
20117,2011700,호반우 상인의 이상한 품질 계산법,10,"['greedy', 'sorting']"
20118,2011800,호반우가 길을 건너간 이유,14,['constructive']
20119,2011900,클레어와 물약,15,"['breadth-first search', 'graph theory', 'graph traversal', 'topological sorting']"
20120,2012000,호반우와 리듬게임,13,['dynamic programming']
20121,2012100,카드 셔플,17,"['constructive', 'mathematics', 'number theory']"
20122,2012200,중2병 호반우,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
20123,2012300,L-트로미노 계단,18,"['case work', 'constructive', 'divide and conquer', 'implementation', 'recursion']"
20124,2012400,모르고리즘 회장님 추천 받습니다,4,"['implementation', 'string']"
20125,2012500,쿠키의 신체 측정,7,['implementation']
20126,2012600,교수님의 기말고사,8,['sorting']
20127,2012700,Y-수열,11,"['ad-hoc', 'case work']"
20128,2012800,Parity Constraint Shortest Path,14,"[""dijkstra's"", 'graph theory']"
20129,2012900,뒤집힌 계산기,13,"['data structures', 'implementation', 'parsing', 'string']"
20130,2013000,Metroidvania Extreme,15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
20131,2013100,트리 만들기,16,"['data structures', 'priority queue', 'tree']"
20132,2013200,Parity Constraint Minimum Spanning Tree,21,"['graph theory', 'lowest common ancestor', 'minimum spanning tree', 'tree']"
20133,2013300,모래시계 2,20,"['combinatorics', 'geometry', 'mathematics', 'sorting', 'two-pointer']"
20134,2013400,소가 연세로를 건너간 이유,20,"['combinatorics', 'data structures', 'mathematics', 'segment tree']"
20135,2013500,연세 마스크 공장,21,"['circulation', 'maximum flow']"
20136,2013600,멀티탭 스케줄링 2,17,"['data structures', 'greedy', 'priority queue', 'set / map by trees']"
20137,2013700,Parrots,21,"['arbitrary precision / big integers', 'combinatorics', 'mathematics']"
20138,2013800,Vista 1,0,[]
20139,2013900,Vista 2,0,[]
20140,2014000,Vista 3,0,[]
20141,2014100,Vista 4,11,"['ad-hoc', 'greedy', 'sorting', 'travelling salesman problem']"
20142,2014200,Vista 5,0,[]
20143,2014300,Vista 6,0,[]
20144,2014400,Vista 7,0,[]
20145,2014500,Vista 8,0,[]
20146,2014600,Vista 9,0,[]
20147,2014700,Vista 10,0,[]
20148,2014800,트리와 쿼리 18,25,"['data structures', 'euler tour technique', 'heavy-light decomposition', 'segment tree with lazy propagation', 'segment tree', 'tree']"
20149,2014900,선분 교차 3,17,"['case work', 'geometry', 'line segment intersection check']"
20150,2015000,선분 교차 4,21,"['data structures', 'geometry', 'line segment intersection check', 'sweeping', 'set / map by trees']"
20151,2015100,선분 교차 5,21,"['data structures', 'geometry', 'line segment intersection check', 'sweeping', 'set / map by trees']"
20152,2015200,Game Addiction,9,"['combinatorics', 'dynamic programming', 'mathematics']"
20153,2015300,영웅이는 2의 거듭 제곱을 좋아해! 영웅이는 2의 거듭 제곱을 좋아해!,9,"['bitmask', 'mathematics']"
20154,2015400,이 구역의 승자는 누구야?!,5,"['mathematics', 'string']"
20155,2015500,우리 집 밑에 편의점이 있는데,4,"['implementation', 'sorting']"
20156,2015600,기왕 이렇게 된 거 암기왕이 되어라,17,"['data structures', 'disjoint set', 'offline queries']"
20157,2015700,화살을 쏘자!,11,"['data structures', 'geometry', 'set / map by hashing', 'mathematics']"
20158,2015800,사장님 달려가고 있습니다,16,"['breadth-first search', 'graph theory', 'graph traversal']"
20159,2015900,동작 그만. 밑장 빼기냐?,11,['prefix sum']
20160,2016000,야쿠르트 아줌마 야쿠르트 주세요,13,"[""dijkstra's"", 'graph theory']"
20161,2016100,왜 동전은 하나씩만 뒤집는 거야,17,"['0-1 bfs', 'bitmask', ""dijkstra's"", 'dynamic programming', 'graph theory', 'implementation']"
20162,2016200,간식 파티,9,['dynamic programming']
20164,2016400,홀수 홀릭 호석,11,"['bruteforcing', 'implementation', 'recursion']"
20165,2016500,인내의 도미노 장인 호석,11,"['implementation', 'simulation']"
20166,2016600,문자열 지옥에 빠진 호석,12,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'string']"
20167,2016700,꿈틀꿈틀 호석 애벌레 - 기능성,10,['dynamic programming']
20168,2016800,골목 대장 호석 - 기능성,11,"['backtracking', 'bruteforcing', ""dijkstra's"", 'graph theory']"
20169,2016900,Autonomous Vehicle,19,"['binary search', 'geometry', 'implementation', 'simulation']"
20170,2017000,Commemorative Dice,5,"['bruteforcing', 'mathematics', 'probability theory']"
20171,2017100,Dessert Café,14,"['dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
20172,2017200,Electric Vehicle,24,['dynamic programming']
20173,2017300,Imprecise Computer,13,"['constructive', 'dynamic programming']"
20174,2017400,Ink Mix,24,"['dominator tree', 'tree']"
20175,2017500,Mobile Robot,14,['mathematics']
20176,2017600,Needle,20,"['fast fourier transform', 'mathematics']"
20177,2017700,Stock Analysis,21,"['data structures', 'multidimensional segment tree', 'offline queries', 'segment tree']"
20178,2017800,Switches,18,"['gaussian elimination', 'linear algebra', 'mathematics']"
20179,2017900,Tiling Polyomino,25,"['constructive', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'tree']"
20180,2018000,Two Buildings,22,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'geometry']"
20181,2018100,꿈틀꿈틀 호석 애벌레 - 효율성,14,"['binary search', 'dynamic programming', 'prefix sum', 'two-pointer']"
20182,2018200,골목 대장 호석 - 효율성 1,13,"[""dijkstra's"", 'graph theory']"
20183,2018300,골목 대장 호석 - 효율성 2,14,"['binary search', ""dijkstra's"", 'graph theory', 'parametric search']"
20184,2018400,BOJ 대회 스코어보드,19,['implementation']
20185,2018500,814 - 3,0,[]
20186,2018600,수 고르기,8,"['greedy', 'mathematics', 'sorting']"
20187,2018700,종이접기,13,['implementation']
20188,2018800,등산 마니아,16,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'mathematics', 'tree']"
20189,2018900,사탕 돌리기,19,"['ad-hoc', 'greedy', 'mathematics']"
20190,2019000,버블버블,20,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
20191,2019100,줄임말,14,"['binary search', 'dynamic programming']"
20192,2019200,순서 섞기,19,['ad-hoc']
20193,2019300,화려한 정사각형,22,"['binary search', 'data structures', 'segment tree with lazy propagation', 'parametric search', 'segment tree', 'sweeping', 'set / map by trees']"
20194,2019400,경계 로봇,23,['greedy']
20195,2019500,Patkice,11,"['implementation', 'simulation']"
20196,2019600,Bajka,14,['dynamic programming']
20197,2019700,3D Histogram,24,"['case work', 'convex hull trick', 'data structures', 'divide and conquer', 'segment tree']"
20198,2019800,Papričice,19,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'smaller to larger technique', 'tree', 'set / map by trees']"
20199,2019900,Tenis,20,"['bitmask', 'case work']"
20200,2020000,Crtanje,5,['implementation']
20201,2020100,Odašiljači,14,"['binary search', 'graph theory', 'graph traversal']"
20202,2020200,Euklid,21,"['constructive', 'mathematics', 'number theory']"
20203,2020300,Sjekira,18,"['data structures', 'disjoint set', 'greedy', 'sorting']"
20204,2020400,Svjetlo,0,[]
20205,2020500,교수님 그림이 깨지는데요?,5,['implementation']
20206,2020600,푸앙이가 길을 건너간 이유,10,"['geometry', 'mathematics']"
20207,2020700,달력,10,"['greedy', 'implementation', 'sorting']"
20208,2020800,진우의 민트초코우유,11,"['backtracking', 'bruteforcing']"
20209,2020900,스트레이트 스위치 게임,13,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing']"
20210,2021000,파일 탐색기,14,"['implementation', 'sorting', 'string']"
20211,2021100,게임 개발자 영우,19,"['binary search', 'prefix sum']"
20212,2021200,나무는 쿼리를 싫어해~,19,"['value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'offline queries', 'segment tree', 'sorting']"
20213,2021300,Adversarial Memory,16,"['greedy', 'implementation', 'simulation']"
20214,2021400,Binary Seating,7,"['combinatorics', 'linearity of expectation', 'mathematics', 'probability theory', 'sorting']"
20215,2021500,Cutting Corners,2,"['geometry', 'mathematics', 'pythagoras theorem']"
20216,2021600,Ducky Debugging,4,"['implementation', 'string']"
20217,2021700,Eightgon,20,"['dynamic programming', 'geometry', 'prefix sum']"
20218,2021800,Figure Skating,5,"['implementation', 'string']"
20219,2021900,Group Project,15,"['breadth-first search', 'bipartite graph', 'graph theory', 'graph traversal', 'greedy']"
20220,2022000,Human Pyramid,18,['dynamic programming']
20221,2022100,In-place Sorting,13,"['greedy', 'implementation']"
20222,2022200,Jam-packed,7,"['binary search', 'mathematics']"
20223,2022300,Kangaroo Commotion,16,"['breadth-first search', 'graph theory', 'graph traversal']"
20224,2022400,Count <s>Down</s> Up 2020,4,['implementation']
20225,2022500,Contact Tracer,5,"['implementation', 'simulation']"
20226,2022600,Luggage,22,"['heuristics', 'mathematics', 'miller–rabin', 'number theory', 'pollard rho', 'primality test']"
20227,2022700,Icpcan Alphabet,0,[]
20228,2022800,Keima,0,[]
20229,2022900,Evacuation Site,0,[]
20230,2023000,Avoiding Three Cs,0,[]
20231,2023100,Idealistic Canister,0,[]
20232,2023200,Archivist,2,['implementation']
20233,2023300,Bicycle,2,"['arithmetic', 'mathematics']"
20234,2023400,Corrupted Sort,15,"['ad-hoc', 'sorting']"
20235,2023500,Display,9,[]
20236,2023600,Easy Compare-and-Set,18,"['eulerian path / circuit', 'graph theory', 'greedy']"
20237,2023700,Futures Market Trends,11,['mathematics']
20238,2023800,Grammar Path,21,['arbitrary precision / big integers']
20239,2023900,Heroes of Coin Flipping,21,[]
20240,2024000,Integer Square,4,"['bruteforcing', 'geometry', 'pythagoras theorem']"
20241,2024100,Joint Password Storage,24,[]
20242,2024200,Keys and Locks Boolean Logic,22,[]
20243,2024300,Lost Permutation,19,"['constructive', 'mathematics']"
20244,2024400,Mind the Gap,6,['sorting']
20245,2024500,Nunchucks Shop,14,"['combinatorics', 'mathematics']"
20246,2024600,Pac-Man,7,['constructive']
20247,2024700,Folding,10,['implementation']
20248,2024800,Circles,15,"['data structures', 'geometry', 'priority queue']"
20249,2024900,Last Will,13,"['euclidean algorithm', 'geometry', 'mathematics', 'number theory']"
20250,2025000,Eric’s Work,0,[]
20251,2025100,Homework,0,[]
20252,2025200,Garden,19,['bipartite matching']
20253,2025300,In The Name Of Confusion,12,"['case work', 'greedy']"
20254,2025400,Site Score,1,"['arithmetic', 'mathematics']"
20255,2025500,Table Tennis,17,"['dynamic programming', 'mathematics', 'probability theory']"
20256,2025600,Right-Coupled Numbers,6,"['bruteforcing', 'mathematics']"
20257,2025700,Make Numbers,11,"['bruteforcing', 'implementation']"
20258,2025800,Pyramid,17,['dynamic programming']
20259,2025900,Quality Monitoring,23,['graph theory']
20260,2026000,A Color Game,0,[]
20261,2026100,Cable Protection,18,"['dynamic programming', 'dynamic programming on trees', 'tree']"
20262,2026200,Graph Cards,23,"['hashing', 'string', 'suffix array and lcp array', 'tree', 'tree isomorphism']"
20263,2026300,Optimization for UltraNet,17,"['data structures', 'disjoint set', 'graph theory', 'minimum spanning tree', 'tree']"
20264,2026400,Critical Structures,18,"['articulation points and bridges', 'biconnected component', 'graph theory']"
20265,2026500,Puzzle Game,25,[]
20266,2026600,Number with Bachelors,0,[]
20267,2026700,Save lives or money,25,[]
20268,2026800,Keystroke,3,['implementation']
20269,2026900,Obélix,13,[]
20270,2027000,Thistle Darkwater,12,"['breadth-first search', 'graph theory', 'graph traversal']"
20271,2027100,Bad-hash students,11,"['bruteforcing', 'hashing']"
20272,2027200,Tournament turn-around,0,[]
20273,2027300,You’ve goat me stumped,0,[]
20274,2027400,256 shades of Gray,0,[]
20275,2027500,Battlecheap,0,[]
20276,2027600,Álbum de Figurinhas,15,"['dynamic programming', 'mathematics', 'probability theory']"
20277,2027700,Batalha Naval,6,['implementation']
20278,2027800,Concatenando Times,0,[]
20279,2027900,Dança da Divisibilidade,0,[]
20280,2028000,Empresa de Festas,0,[]
20281,2028100,Fastminton,5,"['implementation', 'simulation']"
20282,2028200,Game Show!,4,"['implementation', 'prefix sum']"
20283,2028300,Hangar do SBC,19,"['greedy', 'mathematics', 'sorting']"
20284,2028400,Interatividade,0,[]
20285,2028500,Juntando Dados,0,[]
20286,2028600,Ká entre Nós,21,"['gaussian elimination', 'linear algebra', 'mathematics']"
20287,2028700,Lavaspar,11,['bruteforcing']
20288,2028800,Metralhadora,22,[]
20289,2028900,Números Multiplicados,18,"['mathematics', 'number theory']"
20290,2029000,Ônibus Venusiano,0,[]
20291,2029100,파일 정리,8,"['data structures', 'set / map by hashing', 'parsing', 'sorting', 'string', 'set / map by trees']"
20292,2029200,컨설팅,12,"['data structures', 'greedy', 'set / map by hashing', 'implementation', 'set / map by trees']"
20293,2029300,연료가 부족해,14,"['binary search', 'dynamic programming']"
20294,2029400,에어컨 설치,19,['bipartite matching']
20295,2029500,사탕 배달,18,"['data structures', 'lowest common ancestor', 'sparse table', 'tree']"
20296,2029600,폰친구,17,"['combinatorics', ""fermat's little theorem"", 'inclusion and exclusion', 'mathematics', 'number theory']"
20297,2029700,Confuzzle,21,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'smaller to larger technique', 'tree']"
20298,2029800,파인애플 피자,23,"['data structures', 'knuth–morris–pratt', 'segment tree', 'string']"
20299,2029900,3대 측정,4,['implementation']
20300,2030000,서강근육맨,8,"['greedy', 'sorting']"
20301,2030100,반전 요세푸스,8,"['data structures', 'deque', 'implementation', 'simulation']"
20302,2030200,민트 초코,12,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
20303,2030300,할로윈의 양아치,13,"['data structures', 'disjoint set', 'dynamic programming', 'graph theory', 'graph traversal', 'knapsack']"
20304,2030400,비밀번호 제작,16,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
20305,2030500,피보나치와 수열과 쿼리,17,"['dynamic programming', 'offline queries', 'prefix sum', 'sweeping']"
20306,2030600,블랙홀,21,"['geometry', 'mathematics', 'sorting', 'sweeping']"
20307,2030700,"<em><strong><span style=""color:#e74c3c;"">R</span><span style=""color:#f1c40f;"">R</span><span style=""color:#1abc9c;"">E</span><span style=""color:#3498db;"">F</span></strong></em>",18,"['gaussian elimination', 'linear algebra', 'mathematics']"
20308,2030800,SPC 케이크,18,"['geometry', 'sweeping']"
20309,2030900,트리플 소트,8,"['ad-hoc', 'mathematics', 'sorting']"
20310,2031000,타노스,8,"['greedy', 'string']"
20311,2031100,화학 실험,11,"['constructive', 'data structures', 'greedy', 'priority queue', 'sorting']"
20312,2031200,CPU 벤치마킹,9,"['dynamic programming', 'mathematics']"
20313,2031300,출퇴근,13,"[""dijkstra's"", 'graph theory']"
20314,2031400,대홍수,18,"['data structures', 'segment tree', 'two-pointer']"
20315,2031500,야바위,19,"['offline queries', 'smaller to larger technique']"
20316,2031600,ASCII Art,0,[]
20317,2031700,Brzi Biljar,0,[]
20318,2031800,Carska Civilizacija,0,[]
20319,2031900,Drugi Dio,0,[]
20320,2032000,Ekstremna Ekspedicija,23,"['dynamic programming', 'mathematics', 'probability theory']"
20321,2032100,Fenomenalni Fenjer,0,[]
20322,2032200,Gospodar Gljiva,19,"['combinatorics', 'mathematics']"
20323,2032300,Hvalevrijedan Hitac,0,[]
20324,2032400,Izvanredna Isplata,8,['dynamic programming']
20325,2032500,Jači Jovsi,24,"['dynamic programming', 'dynamic programming on trees', 'palindrome tree', 'string', 'tree']"
20326,2032600,Klasična Karantena,8,"['greedy', 'sorting']"
20327,2032700,배열 돌리기 6,13,"['implementation', 'simulation']"
20328,2032800,배열 돌리기 7,17,['implementation']
20329,2032900,Aquarium,23,"['greedy', 'implementation', 'simulation']"
20330,2033000,Bidirectional Code,17,"['ad-hoc', 'constructive', 'greedy']"
20331,2033100,Corrupt Judge,11,"['case work', 'greedy']"
20332,2033200,Divvying Up,3,"['arithmetic', 'implementation', 'mathematics']"
20333,2033300,Elevator Pitch,13,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'greedy', 'sorting']"
20334,2033400,Family Fares,17,"[""dijkstra's"", 'graph theory']"
20335,2033500,Generators,15,"['graph theory', 'minimum spanning tree']"
20336,2033600,Haughty Cuisine,4,"['implementation', 'string']"
20337,2033700,Incomplete Sort,15,"['constructive', 'sorting']"
20338,2033800,Jigsaw,8,"['bruteforcing', 'mathematics', 'number theory']"
20339,2033900,Kleptocrat,21,"['bitmask', 'depth-first search', 'gaussian elimination', 'graph theory', 'graph traversal', 'linear algebra', 'mathematics']"
20340,2034000,Lost Map,21,"['fast fourier transform', 'mathematics', 'string']"
20341,2034100,Moderate Pace,4,['implementation']
20342,2034200,Fountain,0,[]
20343,2034300,Triangulation,0,[]
20344,2034400,Exam,0,[]
20345,2034500,XOR Sort,0,[]
20346,2034600,Card Trick,21,"['mathematics', 'permutation cycle decomposition']"
20347,2034700,Dots and Boxes,0,[]
20348,2034800,Destabilized Drone,19,"['ad-hoc', 'binary search', 'geometry', 'mathematics']"
20349,2034900,Xortest Path,21,"['bitmask', 'graph theory', 'graph traversal', 'linear algebra', 'mathematics']"
20350,2035000,Account Numbers,5,"['implementation', 'string']"
20351,2035100,Brinkmanship,0,[]
20352,2035200,Circus,2,"['geometry', 'mathematics']"
20353,2035300,Atrium,2,"['geometry', 'mathematics']"
20354,2035400,Blackboard Reconstruction,13,"['constructive', 'dynamic programming', 'graph theory', 'knapsack']"
20355,2035500,Caesar Word Salad,4,"['implementation', 'string']"
20358,2035800,Voracious Steve,11,['dynamic programming']
20359,2035900,A simple task,3,"['mathematics', 'number theory']"
20360,2036000,Binary numbers,3,"['implementation', 'mathematics']"
20361,2036100,일우는 야바위꾼,3,"['implementation', 'simulation']"
20362,2036200,유니대전 퀴즈쇼,5,"['implementation', 'string']"
20363,2036300,당근 키우기,7,"['greedy', 'mathematics']"
20364,2036400,부동산 다툼,9,['tree']
20365,2036500,블로그2,8,"['greedy', 'string']"
20366,2036600,같이 눈사람 만들래?,13,"['binary search', 'sorting', 'two-pointer']"
20367,2036700,3 Slot Matching,17,['dynamic programming']
20368,2036800,트리 위의 폴 가이즈,21,"['data structures', 'depth-first search', 'game theory', 'graph theory', 'graph traversal', 'segment tree', 'tree']"
20369,2036900,X부터 시작하는 2세계 생활,20,"['case work', 'dynamic programming']"
20370,2037000,공정한 게임,21,"['data structures', 'greedy', 'priority queue']"
20372,2037200,Late Party,0,[]
20373,2037300,Flood,0,[]
20374,2037400,Big Money,3,"['arithmetic', 'mathematics']"
20375,2037500,Paris Sightseeing for Groups,0,[]
20376,2037600,Counting Monuments,6,"['data structures', 'set / map by hashing', 'sorting', 'string', 'set / map by trees']"
20377,2037700,A Colorful Problem,5,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
20378,2037800,Cyclic Numbers,8,"['arbitrary precision / big integers', 'arithmetic', 'implementation', 'mathematics']"
20379,2037900,Deer Me,8,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
20380,2038000,Matrix Excryption,10,"['implementation', 'linear algebra', 'mathematics', 'string']"
20381,2038100,The Set's the Thing,7,['bruteforcing']
20382,2038200,VCR++ Codes,7,"['bitmask', 'implementation', 'parsing', 'string']"
20383,2038300,The Programmer's Hex,0,[]
20384,2038400,Dart-a-Mania,6,"['bruteforcing', 'implementation']"
20385,2038500,Lost in Space,10,"['bruteforcing', 'implementation', 'string']"
20386,2038600,Gleaming the Cubes,5,"['geometry', 'geometry; 3d', 'implementation']"
20387,2038700,A Logical Problem,17,"['graph theory', 'graph traversal', 'implementation', 'simulation']"
20388,2038800,Soundex Indexing,7,"['case work', 'implementation', 'string']"
20389,2038900,ICC,21,['binary search']
20390,2039000,완전그래프의 최소 스패닝 트리,15,"['graph theory', 'minimum spanning tree']"
20391,2039100,Treasure Hunt,21,"['value / coordinate compression', 'data structures', 'implementation', 'lowest common ancestor', 'sparse table', 'tree']"
20394,2039400,Sail Shreds - 1,0,[]
20395,2039500,Sail Shreds - 2,15,[]
20396,2039600,Sail Shreds - 3,0,[]
20397,2039700,Sail Shreds - 4,0,[]
20398,2039800,Sail Shreds - 5,0,[]
20399,2039900,Sail Shreds - 6,0,[]
20400,2040000,Sail Shreds - 7,0,[]
20401,2040100,Sail Shreds - 8,0,[]
20402,2040200,Sail Shreds - 9,0,[]
20403,2040300,Sail Shreds - 10,0,[]
20405,2040500,Meandian,0,[]
20408,2040800,Blind Walk,11,['backtracking']
20409,2040900,Central Element,0,[]
20410,2041000,추첨상 사수 대작전! (Easy),3,['bruteforcing']
20411,2041100,추첨상 사수 대작전! (Normal),6,"['bruteforcing', 'mathematics', 'number theory']"
20412,2041200,추첨상 사수 대작전! (Hard),14,"['extended euclidean algorithm', ""fermat's little theorem"", 'mathematics', 'modular multiplicative inverse', 'number theory']"
20413,2041300,MVP 다이아몬드 (Easy),9,['greedy']
20414,2041400,MVP 다이아몬드 (Normal),12,['dynamic programming']
20415,2041500,MVP 다이아몬드 (Hard),16,['dynamic programming']
20416,2041600,역전의 제왕 (Easy),9,"['implementation', 'simulation']"
20417,2041700,역전의 제왕 (Normal),10,"['implementation', 'simulation']"
20418,2041800,역전의 제왕 (Hard),19,"['data structures', 'implementation', 'segment tree', 'simulation', 'set / map by trees']"
20419,2041900,화살표 미로 (Easy),13,"['breadth-first search', 'graph theory', 'graph traversal']"
20420,2042000,화살표 미로 (Normal),14,"['breadth-first search', 'graph theory', 'graph traversal']"
20421,2042100,화살표 미로 (Hard),18,"[""dijkstra's"", 'graph theory']"
20422,2042200,퀼린드롬 (Easy),10,"['implementation', 'string']"
20423,2042300,퀼린드롬 (Normal),13,"['implementation', 'string']"
20424,2042400,퀼린드롬 (Hard),19,"['implementation', 'knuth–morris–pratt', ""manacher's"", 'string']"
20425,2042500,아침은 고구마야 (Easy),14,"['depth-first search', 'graph theory', 'graph traversal']"
20426,2042600,아침은 고구마야 (Normal),20,"['cactus', 'dynamic programming', 'graph theory', 'implementation']"
20427,2042700,아침은 고구마야 (Hard),22,"['cactus', 'dynamic programming', 'graph theory', 'implementation', 'prefix sum']"
20428,2042800,Улучшение успеваемости,7,['mathematics']
20429,2042900,Квадраты и кубы,10,['mathematics']
20430,2043000,Лифт,0,[]
20431,2043100,Мониторинг труб,0,[]
20432,2043200,Удаление чисел,11,[]
20433,2043300,Старая книга,0,[]
20434,2043400,Красота фейерверка,16,[]
20435,2043500,Обработка больших данных,0,[]
20436,2043600,ZOAC 3,7,"['implementation', 'precomputation', 'simulation']"
20437,2043700,문자열 게임 2,11,"['sliding window', 'string']"
20438,2043800,출석체크,9,"['implementation', 'mathematics', 'prefix sum']"
20439,2043900,계획왕,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
20440,2044000,🎵니가 싫어 싫어 너무 싫어 싫어 오지 마 내게 찝쩍대지마🎵 - 1,13,"['value / coordinate compression', 'prefix sum', 'sorting']"
20441,2044100,🎵니가 싫어 싫어 너무 싫어 싫어 오지 마 내게 찝쩍대지마🎵 - 2,19,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
20442,2044200,ㅋㅋ루ㅋㅋ,14,"['string', 'two-pointer']"
20443,2044300,배드민턴 대회,14,"['combinatorics', 'dynamic programming', 'mathematics']"
20444,2044400,색종이와 가위,11,"['binary search', 'mathematics']"
20445,2044500,구간 겹치기,17,"['value / coordinate compression', 'dynamic programming', 'floyd–warshall', 'graph theory']"
20446,2044600,Добыча радия,0,[]
20447,2044700,Вирусы,19,['ad-hoc']
20448,2044800,Иннофон,23,"['convex hull trick', 'data structures', 'square root decomposition']"
20449,2044900,Квантовая телепортация,26,"['arbitrary precision / big integers', ""dijkstra's"", 'graph theory', 'implementation']"
20450,2045000,Расшифровка,18,"['data structures', 'segment tree', 'stack']"
20451,2045100,Быстрая сортировка,23,[]
20452,2045200,Робомарафон,23,"['data structures', 'offline queries', 'segment tree']"
20453,2045300,Сложение без переносов,0,[]
20454,2045400,Кампус,0,[]
20455,2045500,Калькулятор,9,"['greedy', 'mathematics']"
20456,2045600,Размещение данных,0,[]
20457,2045700,Полезные ископаемые,0,[]
20458,2045800,Автоматизированное управление доставкой,5,"['mathematics', 'number theory']"
20459,2045900,Большой линейный коллайдер,13,"['data structures', 'stack']"
20460,2046000,Силовые поля,13,"['data structures', 'priority queue']"
20461,2046100,Повышение квалификации,0,[]
20462,2046200,Программирование квадрокоптеров,0,[]
20463,2046300,Иллюзия сортировки,0,[]
20464,2046400,Тигры,22,"['divide and conquer', 'geometry']"
20465,2046500,Путешествие в Метрополис,0,[]
20466,2046600,Накопитель,0,[]
20467,2046700,Серверы на Меркурии,0,[]
20468,2046800,Антивещество,0,[]
20469,2046900,Траектория обучения,0,[]
20470,2047000,Наибольший общий делитель,7,"['constructive', 'mathematics']"
20471,2047100,Защита беженцев,0,[]
20472,2047200,Телефонный номер,0,[]
20473,2047300,Гостиница,3,"['bruteforcing', 'implementation', 'mathematics']"
20474,2047400,Парад,0,[]
20475,2047500,Магазин,8,['greedy']
20476,2047600,Занос,0,[]
20477,2047700,Чай,0,[]
20478,2047800,Командная олимпиада,0,[]
20479,2047900,Поезда,0,[]
20480,2048000,Королевская династия,0,[]
20481,2048100,Арифметическая прогрессия,0,[]
20482,2048200,Бендер,0,[]
20483,2048300,Различные числа,0,[]
20484,2048400,Игра,0,[]
20485,2048500,Огромная парковка,0,[]
20486,2048600,День рождения,0,[]
20487,2048700,Гонка со временем,0,[]
20488,2048800,Скоростной диаметр для кольцевой дороги,0,[]
20489,2048900,Откат,0,[]
20490,2049000,Рыцарский щит,0,[]
20491,2049100,Змея в метро,0,[]
20492,2049200,세금,1,"['arithmetic', 'mathematics']"
20493,2049300,세상은 하나의 손수건,7,"['implementation', 'simulation']"
20494,2049400,스시,4,"['ad-hoc', 'implementation', 'mathematics', 'string']"
20495,2049500,수열과 헌팅,10,['binary search']
20496,2049600,"Amy, Soup is Salty!",15,"['breadth-first search', 'graph theory', 'graph traversal']"
20497,2049700,Bessie's Revolution,11,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
20498,2049800,C = 15,19,"['case work', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
20499,2049900,Darius님 한타 안 함?,2,"['arithmetic', 'mathematics']"
20500,2050000,Ezreal 여눈부터 가네 ㅈㅈ,11,"['dynamic programming', 'mathematics', 'number theory']"
20501,2050100,Facebook,15,['bit set']
20502,2050200,Gum색,7,"['implementation', 'sorting']"
20503,2050300,Haven,22,"['ad-hoc', 'constructive', 'depth-first search', 'divide and conquer', 'graph theory', 'graph traversal', 'minimum spanning tree']"
20504,2050400,I번은 쉬운 문제,17,"['graph theory', 'strongly connected component']"
20505,2050500,John's Math Problem,15,"['combinatorics', 'mathematics']"
20506,2050600,Kaisar - 생존,16,"['dynamic programming', 'dynamic programming on trees', 'mathematics', 'tree']"
20507,2050700,Knjige,7,['constructive']
20508,2050800,Vlak,17,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'game theory', 'tree', 'trie']"
20509,2050900,Sateliti,20,['hashing']
20510,2051000,Selotejp,20,"['bipartite matching', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'maximum flow']"
20511,2051100,Specijacija,23,"['data structures', 'lowest common ancestor', 'merge sort tree', 'persistent segment tree', 'segment tree', 'sorting', 'tree']"
20512,2051200,Призы,4,['implementation']
20513,2051300,Космическое поселение,10,['binary search']
20514,2051400,Странные строки,0,[]
20515,2051500,Поездка на каникулах,0,[]
20516,2051600,Три сына,9,['bruteforcing']
20517,2051700,Счет в гипершашках,0,[]
20518,2051800,Интересные числа,8,['dynamic programming']
20519,2051900,Гармоничная последовательность,0,[]
20520,2052000,Оборона крепости,16,['greedy']
20521,2052100,Экспериментальная робототехника,18,"['constructive', 'graph theory']"
20522,2052200,Ловить или не ловить,21,"['data structures', 'greedy', 'segment tree']"
20523,2052300,Обитаемые горы,24,"['binary search', 'convex hull trick', 'convex hull', 'data structures', 'divide and conquer', 'geometry', 'offline queries', 'segment tree', 'sorting', 'sweeping', 'two-pointer']"
20524,2052400,Управление видеонаблюдением,15,['prefix sum']
20525,2052500,Расшифровка ДНК,0,[]
20526,2052600,Курьерская служба,24,"['euler tour technique', 'lowest common ancestor', 'smaller to larger technique', 'tree', 'tree compression']"
20527,2052700,Тренажёр <<$10_2$-пальцевый набор>>,0,[]
20528,2052800,끝말잇기,4,"['ad-hoc', 'string']"
20529,2052900,가장 가까운 세 사람의 심리적 거리,10,"['bruteforcing', 'mathematics']"
20530,2053000,양분,15,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'tree']"
20531,2053100,인간관계,16,"['combinatorics', 'data structures', 'disjoint set', 'dynamic programming', 'mathematics']"
20532,2053200,정점 간 통신 네트워크,17,"['depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory', 'tree']"
20533,2053300,상금 분배,20,"['binary search', 'data structures', 'greedy', 'segment tree', 'sorting', 'stack']"
20534,2053400,PCB 설계,24,"['2-sat', 'ad-hoc', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'strongly connected component']"
20535,2053500,최소 공통 조상과 쿼리,21,"['data structures', 'euler tour technique', 'lowest common ancestor', 'tree']"
20536,2053600,남부순환로,27,"['data structures', ""dijkstra's"", 'graph theory', 'priority queue']"
20537,2053700,Gap,18,['ad-hoc']
20538,2053800,Beads,0,[]
20539,2053900,Xorshift64,24,"['chinese remainder theorem', 'discrete logarithm', 'linear algebra', 'mathematics', 'number theory']"
20540,2054000,연길이의 이상형,3,"['implementation', 'string']"
20541,2054100,앨범정리,16,"['data structures', 'set / map by hashing', 'implementation', 'string', 'tree', 'set / map by trees']"
20542,2054200,받아쓰기,13,"['dynamic programming', 'string']"
20543,2054300,폭탄 던지는 태영이,14,"['greedy', 'prefix sum']"
20544,2054400,공룡게임,12,['dynamic programming']
20545,2054500,다트게임,18,"['calculus', 'geometry', 'mathematics', 'prefix sum']"
20546,2054600,🐜 기적의 매매법 🐜,6,"['implementation', 'simulation']"
20547,2054700,신입생 청원이,17,"['data structures', ""dijkstra's"", 'dynamic programming', 'floyd–warshall', 'graph theory', 'set / map by hashing', 'parsing', 'string']"
20548,2054800,칠리소스,7,"['bruteforcing', 'mathematics']"
20549,2054900,인덕이의 고민,15,"['bitmask', ""dijkstra's"", 'graph theory']"
20550,2055000,구간 합 구하기 K,18,"['data structures', 'multidimensional segment tree', 'segment tree']"
20551,2055100,Sort 마스터 배지훈의 후계자,7,"['binary search', 'data structures', 'sorting']"
20552,2055200,거리의 기댓값,24,"['dynamic programming', 'mathematics']"
20553,2055300,다오와 디지니의 데이트,14,"['greedy', 'prefix sum']"
20554,2055400,경로 수정하기,17,"['case work', 'ternary search']"
20555,2055500,타자연습,14,"['backtracking', 'dynamic programming']"
20556,2055600,둥둥섬 다리 재정비하기,21,"['data structures', 'offline queries', 'segment tree', 'tree']"
20557,2055700,복잡한 쿼리,22,"['graph theory', 'linear algebra', 'mathematics']"
20558,2055800,쿼리와 수열,23,"['convex hull trick', 'dynamic programming', 'prefix sum']"
20559,2055900,정기 모임 2,21,"['data structures', 'disjoint set', 'priority queue', 'segment tree']"
20560,2056000,맛집 탐방,18,"['dynamic programming', 'graph theory', 'strongly connected component']"
20561,2056100,과제 해결하기,27,"['data structures', 'graph theory', 'greedy', 'priority queue', 'set / map by trees']"
20562,2056200,휴식,18,"['ad-hoc', 'game theory']"
20563,2056300,Counting Stars,24,"['geometry', 'sorting']"
20564,2056400,트리와 쿼리 19,22,"['data structures', 'heavy-light decomposition', 'segment tree with lazy propagation', 'segment tree', 'tree']"
20565,2056500,Painting Pips,6,"['greedy', 'mathematics', 'probability theory']"
20566,2056600,Serious Business,0,[]
20567,2056700,Permutations on the Road: Bob,9,[]
20568,2056800,Recess Rocks,6,"['greedy', 'sorting']"
20569,2056900,Social Dancers,6,"['bitmask', 'greedy', 'mathematics', 'probability theory']"
20570,2057000,Permutations on the Road: Alice,0,[]
20571,2057100,Elevators,4,['case work']
20572,2057200,Rounded Work,13,['mathematics']
20573,2057300,Cactus Shoppe,22,"['cactus', 'euler characteristic (χ=v-e+f)', 'geometry', 'graph theory', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
20574,2057400,General Knight,5,[]
20575,2057500,Buffon's Needle,4,"['mathematics', 'parsing', 'string']"
20576,2057600,Neural Networks,0,[]
20577,2057700,Raid,0,[]
20578,2057800,Broken line,17,['bitmask']
20579,2057900,Territories,20,"['ad-hoc', 'prefix sum']"
20580,2058000,Tea,0,[]
20581,2058100,Three balls,22,"['case work', 'combinatorics', 'mathematics', 'prefix sum']"
20582,2058200,Family photo,20,"['greedy', 'smaller to larger technique']"
20583,2058300,Pop music,20,"['dynamic programming', 'mathematics']"
20584,2058400,Island,26,"['dynamic programming', 'graph theory', 'planar graph', 'strongly connected component']"
20585,2058500,Goldfish and pikes,0,[]
20586,2058600,Tokens,22,"['dynamic programming', 'maximum flow', 'max-flow min-cut theorem']"
20587,2058700,Even rain,0,[]
20588,2058800,Floyd-Warshall,0,[]
20589,2058900,Abstract Circular Cover,0,[]
20590,2059000,Biggest Set Ever,0,[]
20591,2059100,Convex Sets On Graph,0,[]
20592,2059200,Delete Two Vertices Again,26,"['articulation points and bridges', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'priority queue', 'segment tree', 'smaller to larger technique']"
20593,2059300,Easy One,0,[]
20594,2059400,Football,0,[]
20595,2059500,Game On Board,0,[]
20596,2059600,Hardcore String Counting 2,28,[]
20597,2059700,Inv,17,"['dynamic programming', 'mathematics', 'number theory']"
20598,2059800,Justice For Everyone,0,[]
20599,2059900,Keep It Cool,0,[]
20600,2060000,Lower Algorithmics,0,[]
20601,2060100,Total Eclipse,0,[]
20602,2060200,Visual Cube,9,['implementation']
20603,2060300,Count on a Tree II Striking Back,26,"['heavy-light decomposition', 'randomization', 'tree']"
20604,2060400,Diamond Rush,0,[]
20605,2060500,New Equipments,0,[]
20606,2060600,The Missing Pet,0,[]
20607,2060700,In Search of Gold,0,[]
20608,2060800,Dynamic Convex Hull,25,"['convex hull trick', 'data structures', 'multidimensional segment tree', 'offline queries', 'segment tree']"
20609,2060900,It's All Squares,0,[]
20610,2061000,Walking Plan,0,[]
20611,2061100,King of Hot Pot,0,[]
20612,2061200,String Distance,0,[]
20613,2061300,Permutation,0,[]
20614,2061400,Tree Product,16,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
20615,2061500,Distinct Number,0,[]
20616,2061600,Fibonacci Partition,0,[]
20617,2061700,Longest Common Subsequence,0,[]
20618,2061800,Necklace,0,[]
20619,2061900,Paper-cutting,0,[]
20620,2062000,Partition Number,0,[]
20621,2062100,Stirling Number,25,"['divide and conquer', 'fast fourier transform', 'mathematics', 'number theory']"
20622,2062200,Ternary String Counting,0,[]
20623,2062300,Anti-hash Test,0,[]
20624,2062400,Tokens on the Tree,0,[]
20625,2062500,A + B Problem,0,[]
20626,2062600,AiGo,9,"['bruteforcing', 'implementation']"
20627,2062700,Non-Trivial Common Divisor,10,"['bruteforcing', 'data structures', 'set / map by hashing', 'mathematics', 'number theory', 'primality test']"
20628,2062800,Parity Sort,0,[]
20629,2062900,Permutation Sort,18,"['chinese remainder theorem', 'graph theory', 'mathematics', 'number theory', 'permutation cycle decomposition']"
20630,2063000,Consistent Trading,18,"['graph theory', 'hashing', 'mathematics', 'modular multiplicative inverse', 'number theory']"
20631,2063100,All your base are belong to us,18,"['calculus', 'geometry', 'mathematics', 'ternary search']"
20632,2063200,Route Calculator Returns,0,[]
20633,2063300,N-by-M grid calculation,0,[]
20634,2063400,Zombie Land,0,[]
20635,2063500,Rooks Game,18,"['bipartite matching', 'graph theory', 'graph traversal']"
20636,2063600,Bombing,0,[]
20637,2063700,The Spellbook,0,[]
20638,2063800,Universal and Existential Quantifiers,14,"['value / coordinate compression', 'greedy']"
20639,2063900,Cactus,24,"['cactus', '센트로이드', 'centroid decomposition', 'divide and conquer', 'graph theory', 'linear algebra', 'mathematics', 'tree']"
20640,2064000,Towns and Roads,22,"['data structures', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
20641,2064100,Sleeping Cows,22,['dynamic programming']
20642,2064200,Spaceship,22,"['dynamic programming', 'mathematics']"
20643,2064300,Cowmistry,24,"['combinatorics', 'data structures', 'implementation', 'mathematics', 'segment tree', 'tree', 'trie']"
20644,2064400,Replication,19,"['breadth-first search', 'graph theory', 'graph traversal']"
20645,2064500,Bovine Genetics,20,['dynamic programming']
20646,2064600,Square Pasture,0,[]
20647,2064700,Cowntagion,13,"['graph theory', 'graph traversal', 'greedy', 'tree']"
20648,2064800,Rectangular Pasture,16,"['value / coordinate compression', 'data structures', 'prefix sum', 'segment tree', 'sweeping']"
20649,2064900,Stuck in a Rut,16,"['graph theory', 'implementation', 'sorting']"
20650,2065000,Do You Know Your ABCs?,5,"['bruteforcing', 'mathematics', 'sorting']"
20651,2065100,Daisy Chains,5,['bruteforcing']
20652,2065200,Stuck in a Rut,14,"['implementation', 'simulation', 'sorting']"
20653,2065300,롯데 자이언츠와 가희,17,"['combinatorics', 'inclusion and exclusion', 'mathematics', 'number theory']"
20654,2065400,음료수는 사드세요 제발,22,"['binary search', 'data structures', 'greedy', 'parallel binary search', 'segment tree']"
20655,2065500,Wind of Change 2020,26,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'dynamic programming', 'dynamic programming on trees', 'lowest common ancestor', 'tree', 'set / map by trees']"
20656,2065600,지구 종말,29,['ad-hoc']
20657,2065700,가챠를 돌려 동료를 늘리고 최강의 PS 군단을 만들자.,28,"['backtracking', 'graph theory', 'mathematics']"
20658,2065800,파이썬은 너무 느려,22,"['arbitrary precision / big integers', 'divide and conquer', 'fast fourier transform', 'mathematics']"
20659,2065900,해군,26,"['articulation points and bridges', 'graph theory', 'heavy-light decomposition', 'link/cut tree', 'square root decomposition', 'tree']"
20660,2066000,Pizza,4,"['bruteforcing', 'implementation']"
20661,2066100,Vepar,14,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
20662,2066200,Hop,22,"['ad-hoc', 'constructive', 'divide and conquer', 'mathematics', 'number theory']"
20663,2066300,Janjetina,21,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'segment tree', 'tree']"
20664,2066400,Patkice II,15,"['0-1 bfs', ""dijkstra's"", 'graph theory', 'implementation']"
20665,2066500,독서실 거리두기,11,"['implementation', 'simulation']"
20666,2066600,인물이와 정수,13,"['data structures', 'greedy', 'priority queue']"
20667,2066700,크롬,15,"['dynamic programming', 'knapsack']"
20668,2066800,카트라이더,14,"['arbitrary precision / big integers', ""dijkstra's"", 'graph theory']"
20669,2066900,Close to You,16,"['divide and conquer', 'exponentiation by squaring', 'mathematics']"
20670,2067000,미스테리 싸인,18,"['geometry', 'point in convex polygon check']"
20671,2067100,요새 파괴,18,"['binary search', 'data structures', 'disjoint set', 'sweeping']"
20672,2067200,대세는 바이러스야,22,"['dynamic programming', 'dynamic programming on trees', 'mathematics', 'number theory', 'tree']"
20673,2067300,Covid-19,2,['implementation']
20674,2067400,Statistics,3,"['arithmetic', 'implementation', 'mathematics']"
20675,2067500,Science Fiction,14,"['ad-hoc', 'breadth-first search', 'constructive', 'graph theory', 'graph traversal', 'mathematics']"
20676,2067600,Necklace Construction,0,[]
20677,2067700,Social Distancing,15,"['breadth-first search', 'graph theory', 'graph traversal']"
20678,2067800,Hezardastan,0,[]
20679,2067900,JJ Rally,0,[]
20680,2068000,Birds Rituals,6,"['implementation', 'simulation']"
20681,2068100,Black Family Tree,19,"['data structures', 'offline queries', 'segment tree', 'tree']"
20682,2068200,Vaccination Against Corona,8,"['greedy', 'sorting']"
20683,2068300,McFly,0,[]
20684,2068400,The Last Supper,0,[]
20685,2068500,Stabbing Number,0,[]
20686,2068600,Comic Binge,18,['dynamic programming']
20687,2068700,Moon and Sun,17,"['combinatorics', ""fermat's little theorem"", 'mathematics', 'number theory']"
20688,2068800,Cul-De-Sac Parades,18,"['dynamic programming', 'dynamic programming on trees', 'sorting', 'tree']"
20689,2068900,Forbidden Card,20,"['ad-hoc', 'constructive']"
20690,2069000,Exchange Bottleneck,14,"['case work', 'constructive', 'graph theory']"
20691,2069100,Shopping Changes,17,"['data structures', 'segment tree']"
20692,2069200,Permutation Transformation,18,"['euclidean algorithm', ""fermat's little theorem"", 'mathematics', 'number theory', 'permutation cycle decomposition', 'primality test']"
20693,2069300,Writing Tasks,0,[]
20694,2069400,Red Black Ball,0,[]
20695,2069500,Token Distance,23,"['data structures', 'euclidean algorithm', 'mathematics', 'number theory', 'segment tree', 'set / map by trees']"
20696,2069600,Tree Beauty,22,"['data structures', 'depth-first search', 'eulerian path / circuit', 'euler tour technique', 'graph theory', 'graph traversal', 'segment tree with lazy propagation', 'mathematics', 'number theory', 'segment tree', 'tree']"
20697,2069700,Robust Defense,0,[]
20698,2069800,Police Stations,6,"['geometry', 'implementation', 'sorting']"
20699,2069900,Almost Balanced Tree,16,"['ad-hoc', 'case work', 'depth-first search', 'graph theory', 'graph traversal', 'greedy', 'recursion']"
20700,2070000,Brain-teaser,0,[]
20701,2070100,Color the Tree,20,"['constructive', 'depth-first search', 'graph theory', 'graph traversal']"
20702,2070200,Down We Dig,21,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'game theory']"
20703,2070300,Easy Measurements,8,"['implementation', 'mathematics']"
20704,2070400,Find a Square,25,"['discrete square root', 'mathematics', 'number theory']"
20705,2070500,Geometrical Combinatorics,20,"['combinatorics', 'geometry', 'implementation', 'mathematics']"
20706,2070600,Hit the Hay,0,[]
20707,2070700,Interactive Knockout,0,[]
20708,2070800,Jumping Cat,0,[]
20709,2070900,Kate's 2021 Celebration,4,"['implementation', 'string']"
20710,2071000,Lookup Performance,19,"['data structures', 'offline queries', 'segment tree', 'tree']"
20711,2071100,Miser,11,['dynamic programming']
20712,2071200,New Flat,0,[]
20713,2071300,Optimum Server Location,24,"['maximum flow', 'max-flow min-cut theorem']"
20714,2071400,Colored Squares,0,[]
20715,2071500,Island Archipelago,23,"['data structures', 'disjoint set', 'divide and conquer', 'euler characteristic (χ=v-e+f)', 'geometry', 'graph theory', 'offline dynamic connectivity', 'offline queries']"
20716,2071600,Jumping Jack,0,[]
20717,2071700,Modular Reverse Engineering,0,[]
20718,2071800,Paris Escape,0,[]
20719,2071900,Partitions,0,[]
20720,2072000,Premier League,0,[]
20721,2072100,Safe Squares,5,['implementation']
20722,2072200,Spaceman Spoof's Functions,0,[]
20723,2072300,SSB Tournament,0,[]
20724,2072400,Temple Maze,0,[]
20725,2072500,Three Machines,0,[]
20726,2072600,"Well, That's Just Grate",0,[]
20727,2072700,AI Jeopardy,12,"['binary search', 'mathematics']"
20728,2072800,Bling,0,[]
20729,2072900,Friendly Fire,0,[]
20730,2073000,Gaggle,0,[]
20731,2073100,Pitch Performance,0,[]
20732,2073200,Proofs,7,"['data structures', 'set / map by hashing', 'implementation', 'parsing', 'string']"
20733,2073300,Triple Texting,4,['string']
20734,2073400,Winning the Vote,0,[]
20735,2073500,Fifty Shades of Pink,4,['string']
20736,2073600,Social running,5,['implementation']
20737,2073700,Sanic,4,['geometry']
20738,2073800,Tram,9,"['geometry', 'mathematics']"
20739,2073900,Finn the Giant,0,[]
20740,2074000,Flygskam,0,[]
20741,2074100,Subway Map,0,[]
20742,2074200,Arriving on Time,0,[]
20743,2074300,Bus Numbers,4,"['bruteforcing', 'mathematics']"
20744,2074400,Cucumber Conundrum,0,[]
20745,2074500,Distributing Seats,0,[]
20746,2074600,Entering the Time,0,[]
20747,2074700,Fishing Contest,0,[]
20748,2074800,Get-Rich-Quick Schemes,0,[]
20749,2074900,Hide and Seek,0,[]
20750,2075000,#include<scoring>,7,"['implementation', 'sorting']"
20751,2075100,Barsik,6,"['ad-hoc', 'implementation', 'mathematics']"
20752,2075200,The one who works is the one who eats... nothing,0,[]
20753,2075300,Bombs,0,[]
20754,2075400,Fix the heap 8-bit,0,[]
20755,2075500,Fix the heap 32-bit,0,[]
20756,2075600,Fraction,10,"['data structures', 'mathematics', 'number theory', 'set / map by trees']"
20757,2075700,Roadside optimization,12,"['data structures', 'disjoint set', 'graph theory', 'minimum spanning tree']"
20758,2075800,Wooden pipeline,0,[]
20759,2075900,Cape and gun,0,[]
20760,2076000,Ostap and chairs,0,[]
20761,2076100,Alloys,4,"['arithmetic', 'mathematics']"
20762,2076200,Sequential Manufacturing,6,[]
20763,2076300,Closing the Borders,0,[]
20764,2076400,Bonbons,0,[]
20765,2076500,Witch Dance,0,[]
20766,2076600,Complicated documents,5,"['implementation', 'parsing', 'string']"
20767,2076700,Antiwaist,0,[]
20768,2076800,Find the radio operator,0,[]
20769,2076900,Morse code,0,[]
20770,2077000,Loggers Inc.,0,[]
20771,2077100,Caching approximations,0,[]
20772,2077200,Scheduler,12,"['data structures', 'implementation', 'priority queue', 'simulation']"
20773,2077300,Text editor,0,[]
20774,2077400,Crushing blow,0,[]
20775,2077500,Antiplagiarism,6,['string']
20776,2077600,Action Recognition Problem,0,[]
20777,2077700,Bridge,13,"['case work', 'greedy']"
20778,2077800,Combine The Gears,0,[]
20779,2077900,Desk in Heartstone,0,[]
20780,2078000,Evil Problemsetters,18,"['breadth-first search', 'graph theory', 'graph traversal', 'prefix sum']"
20781,2078100,Fewest Moves Count,24,"['implementation', 'mathematics', 'precomputation']"
20782,2078200,Game With Stones,21,[]
20783,2078300,Hotels,0,[]
20784,2078400,Internet Chats,13,"['data structures', 'set / map by trees']"
20785,2078500,Julius Caesar and Kazusa,0,[]
20786,2078600,Key Management,0,[]
20787,2078700,Light Version Of Famous Task,0,[]
20788,2078800,Arrange and Count!,0,[]
20789,2078900,Build More 2020's!,0,[]
20790,2079000,Choose Two Subsequences,0,[]
20791,2079100,Determinant Strikes Back,17,"['linear algebra', 'mathematics']"
20792,2079200,Efficient Data Structure,0,[]
20793,2079300,Fibonnacci Suffix Array,0,[]
20794,2079400,Greatest Square,0,[]
20795,2079500,Hamming Distance,0,[]
20796,2079600,Integers and Ranges,0,[]
20797,2079700,Jailing,0,[]
20798,2079800,Rikka with Game,0,[]
20799,2079900,Rikka with Maximum Subsegment Sum,0,[]
20800,2080000,Rikka with Random Tree,0,[]
20801,2080100,Rikka with New Year's Party,0,[]
20802,2080200,Rikka with Subsequence,0,[]
20803,2080300,Rikka with Lake,0,[]
20804,2080400,Rikka with Game Theory,0,[]
20805,2080500,Rikka with Storehouse,0,[]
20806,2080600,Rikka with RCPC,0,[]
20807,2080700,Rikka with Book,0,[]
20808,2080800,Rikka with Composite Number,0,[]
20809,2080900,Rikka with Generals,0,[]
20810,2081000,Rikka with Employees,0,[]
20811,2081100,Öar,5,"['implementation', 'mathematics']"
20812,2081200,Tebryggning,6,['greedy']
20813,2081300,Zoo,10,['dynamic programming']
20814,2081400,Planet X,0,[]
20815,2081500,Planetbacke,0,[]
20816,2081600,Cykeltävlingen,0,[]
20817,2081700,Konsonantkoll,4,['string']
20818,2081800,Godishalsbandet,6,"['prefix sum', 'sliding window', 'two-pointer']"
20819,2081900,TV-tittande,0,[]
20820,2082000,Rullband,0,[]
20821,2082100,Pariserhjulet,0,[]
20822,2082200,Bonsai,0,[]
20823,2082300,Glasspelet,0,[]
20824,2082400,Björnes Magasin,0,[]
20825,2082500,Stjärnbilder,0,[]
20826,2082600,Gruppindelning,0,[]
20827,2082700,Cellidentifikation,0,[]
20828,2082800,Fåglar i träd,0,[]
20829,2082900,Snurriga stolpar,0,[]
20830,2083000,Fladdermusen,0,[]
20831,2083100,Låssmeden,0,[]
20832,2083200,Lösenordsnoja,0,[]
20833,2083300,Kuber,2,"['arithmetic', 'implementation', 'mathematics']"
20834,2083400,Studschiffret,0,[]
20835,2083500,Renoveringen,7,"['data structures', 'greedy', 'sorting', 'stack']"
20836,2083600,Multationer,0,[]
20837,2083700,Robottävling,9,"['greedy', 'sorting']"
20838,2083800,Avslutningsceremonin,0,[]
20839,2083900,Betygsättning,2,"['case work', 'implementation']"
20840,2084000,Volleybollmatchen,5,"['implementation', 'simulation']"
20841,2084100,Skolavslutningen,8,"['graph theory', 'graph traversal']"
20842,2084200,Eldberget,13,"['breadth-first search', 'graph theory', 'graph traversal']"
20843,2084300,Brevoptimering,0,[]
20844,2084400,Matbeställning,0,[]
20845,2084500,Husbygge,0,[]
20846,2084600,수열과 쿼리 40,26,"['data structures', 'euler tour technique', 'offline queries', 'splay tree', 'string', 'suffix array and lcp array', 'suffix tree', 'tree', 'trie']"
20847,2084700,Födelsedagsmemorisering,0,[]
20848,2084800,Jätten,0,[]
20849,2084900,Kodkraft,0,[]
20850,2085000,Månresor,0,[]
20851,2085100,Skogsbrand,0,[]
20852,2085200,Lampknappar,24,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
20853,2085300,Efterlyst,0,[]
20854,2085400,Poplåtar,0,[]
20855,2085500,Trädreklam,0,[]
20856,2085600,Tunnelbaneplatser,7,"['case work', 'greedy']"
20857,2085700,Köpa matta,7,"['mathematics', 'number theory']"
20858,2085800,Flyttkartonger,9,['parametric search']
20859,2085900,Brickor,0,[]
20860,2086000,DuTub,0,[]
20861,2086100,Skattkartan,6,"['implementation', 'simulation']"
20862,2086200,Femkortspelet,0,[]
20863,2086300,Lisp till C,0,[]
20864,2086400,Frukostbuffé,0,[]
20865,2086500,Byäldsten,0,[]
20866,2086600,Tornbygge,0,[]
20867,2086700,Rulltrappa,2,"['arithmetic', 'mathematics']"
20868,2086800,Fluortanten,7,['prefix sum']
20869,2086900,Trevlig väg,18,"['dynamic programming', 'parametric search']"
20870,2087000,Teleportgång,16,"['breadth-first search', 'graph theory', 'graph traversal', 'parametric search', 'sorting']"
20871,2087100,Vilse i tidtabellen,13,['bruteforcing']
20872,2087200,Cirkelskivevärlden,0,[]
20873,2087300,Företagsrykte,0,[]
20874,2087400,Guitar Hero,0,[]
20875,2087500,Kryssring,0,[]
20876,2087600,Rymdpromenad,0,[]
20877,2087700,Minigolf,3,"['arithmetic', 'implementation', 'mathematics']"
20878,2087800,Sidnumrering,16,['mathematics']
20879,2087900,Armstöd,13,['dynamic programming']
20880,2088000,Bilda ord,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
20881,2088100,Datorköp,0,[]
20882,2088200,Röksignaler,0,[]
20883,2088300,IOI-uttagning,0,[]
20884,2088400,Skidor,0,[]
20885,2088500,Snökaos,0,[]
20886,2088600,Snöbollskrig 2,0,[]
20887,2088700,Snömur,0,[]
20888,2088800,Kubiska boxar,0,[]
20889,2088900,Bitryssland,0,[]
20890,2089000,Bastubad,0,[]
20891,2089100,Snömurskontrollant,0,[]
20892,2089200,Julklappsköp,19,['greedy']
20893,2089300,Snöbollskrig 1,0,[]
20894,2089400,Brobygge,18,"['data structures', 'lowest common ancestor', 'sparse table', 'tree']"
20895,2089500,Hemkör,0,[]
20896,2089600,Pekgälsvalsen,0,[]
20897,2089700,PO-arkivering,0,[]
20898,2089800,Labyrintkonstruktion,0,[]
20899,2089900,Primärfaktor,0,[]
20900,2090000,Nangijala,0,[]
20901,2090100,Adolescent Architecture,10,"['geometry', 'greedy', 'mathematics', 'sorting']"
20902,2090200,Bookshelf Building,14,"['dynamic programming', 'knapsack']"
20903,2090300,Confined Catching,15,['constructive']
20904,2090400,Decorative Dominoes,18,['bipartite matching']
20905,2090500,Exhausting Errands,0,[]
20906,2090600,Flip Flow,5,"['implementation', 'simulation']"
20907,2090700,Gravity Grid,15,"['data structures', 'disjoint set', 'implementation', 'parametric search', 'simulation']"
20908,2090800,Hectic Harbour,0,[]
20909,2090900,Impressive Integers,17,"['case work', 'constructive', 'geometry']"
20910,2091000,Jeopardised Journey,23,"['articulation points and bridges', 'geometry', 'graph theory', 'sweeping']"
20911,2091100,Knightly Knowledge,13,"['ad-hoc', 'bruteforcing', 'value / coordinate compression', 'greedy', 'implementation']"
20912,2091200,Lexicographical Lecturing,17,"['dynamic programming', 'string']"
20913,2091300,Mixtape Management,11,['constructive']
20914,2091400,QWERTY 자판,8,['implementation']
20915,2091500,숫자 카드 놀이,9,"['bruteforcing', 'greedy', 'mathematics']"
20916,2091600,안녕 2020 안녕 2021,10,"['binary search', 'data structures', 'set / map by trees']"
20917,2091700,사회적 거리 두기,11,"['binary search', 'parametric search']"
20918,2091800,좋은 배열 세기,16,"['dynamic programming', 'prefix sum']"
20919,2091900,XOR 자료구조,18,"['data structures', 'segment tree', 'tree', 'set / map by trees', 'trie']"
20920,2092000,영단어 암기는 괴로워,8,"['data structures', 'set / map by hashing', 'sorting', 'string', 'set / map by trees']"
20921,2092100,그렇고 그런 사이,10,"['constructive', 'greedy']"
20922,2092200,겹치는 건 싫어,10,['two-pointer']
20923,2092300,숫자 할리갈리 게임,10,"['data structures', 'deque', 'implementation', 'simulation']"
20924,2092400,트리의 기둥과 가지,12,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
20925,2092500,메이플스토리,14,['dynamic programming']
20926,2092600,얼음 미로,14,"[""dijkstra's"", 'graph theory', 'implementation']"
20927,2092700,Degree Bounded Minimum Spanning Tree,14,"['backtracking', 'bruteforcing', 'data structures', 'disjoint set']"
20928,2092800,걷는 건 귀찮아,12,['greedy']
20929,2092900,중간,15,"['binary search', 'divide and conquer']"
20930,2093000,우주 정거장,16,"['data structures', 'disjoint set', 'sorting', 'sweeping']"
20931,2093100,혹 떼러 갔다 혹 붙여 온다,17,"['data structures', 'sparse table', 'tree']"
20932,2093200,약수 의식,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics', 'probability theory']"
20933,2093300,마스크펑크 2077,17,"['binary search', 'data structures', 'segment tree']"
20934,2093400,카드 모래성,18,"['game theory', 'sprague–grundy theorem']"
20935,2093500,Parity Constraint Perfect Matching,21,"['bipartite matching', 'graph theory', 'graph traversal']"
20936,2093600,우선순위 계산기,17,"['data structures', 'implementation', 'linked list', 'parsing', 'priority queue', 'string', 'set / map by trees']"
20937,2093700,떡국,7,"['ad-hoc', 'greedy']"
20938,2093800,반짝반짝,15,"['dynamic programming', 'mathematics', 'probability theory']"
20939,2093900,달고나,21,"['euler characteristic (χ=v-e+f)', 'geometry', 'implementation']"
20940,2094000,시철이가 사랑한 수식,22,"['mathematics', 'möbius inversion', 'number theory']"
20941,2094100,성싶당,15,"['constructive', 'greedy']"
20942,2094200,신촌지역 초중고등학생 프로그래밍 대회 동아리 연합 대회,21,"['2-sat', 'graph theory', 'strongly connected component']"
20943,2094300,카카오톡,12,"['combinatorics', 'data structures', 'mathematics', 'sorting', 'set / map by trees']"
20944,2094400,팰린드롬 척화비,3,"['ad-hoc', 'string']"
20945,2094500,의자 게임,18,"['binary search', 'data structures', 'deque', 'segment tree', 'set / map by trees', 'two-pointer']"
20946,2094600,합성인수분해,11,"['greedy', 'mathematics', 'number theory', 'primality test']"
20947,2094700,습격받은 도시,12,"['ad-hoc', 'implementation']"
20948,2094800,Go와 함께하는 전화망 서비스,23,"['maximum flow', 'max-flow min-cut theorem']"
20949,2094900,효정과 새 모니터,6,['sorting']
20950,2095000,미술가 미미,9,"['backtracking', 'bruteforcing']"
20951,2095100,유아와 곰두리차,11,"['dynamic programming', 'graph theory']"
20952,2095200,게임 개발자 승희,12,"['mathematics', 'prefix sum']"
20953,2095300,고고학자 예린,4,['mathematics']
20954,2095400,택배 기사 민서,8,['mathematics']
20955,2095500,민서의 응급 수술,12,"['data structures', 'disjoint set', 'graph theory', 'tree']"
20956,2095600,아이스크림 도둑 지호,11,"['data structures', 'sorting']"
20957,2095700,농부 비니,12,"['dynamic programming', 'mathematics', 'number theory']"
20958,2095800,아린과 슬롯머신,16,"['greedy', 'mathematics', 'number theory', 'primality test']"
20959,2095900,Šifra,4,"['parsing', 'string']"
20960,2096000,Po,14,"['data structures', 'stack']"
20961,2096100,Magenta,0,[]
20962,2096200,Planine,21,"['dynamic programming', 'geometry']"
20963,2096300,Sjeckanje,20,[]
20964,2096400,Sum of Distances,21,"['breadth-first search', 'graph theory', 'graph traversal', 'inclusion and exclusion', 'mathematics']"
20965,2096500,Minimum Cost Paths,23,"['dynamic programming', 'mathematics', 'slope trick']"
20966,2096600,Paint by Letters,25,"['euler characteristic (χ=v-e+f)', 'geometry', 'graph theory', 'planar graph', 'prefix sum']"
20967,2096700,Uddered but not Herd,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
20968,2096800,Telephone,17,"[""dijkstra's"", 'graph theory', 'graph traversal']"
20969,2096900,Dance Mooves,18,"['depth-first search', 'graph theory', 'graph traversal', 'implementation', 'permutation cycle decomposition', 'two-pointer']"
20970,2097000,Dance Mooves,15,"['depth-first search', 'graph theory', 'graph traversal', 'permutation cycle decomposition']"
20971,2097100,No Time to Paint,14,"['data structures', 'prefix sum']"
20972,2097200,Spaced Out,15,"['ad-hoc', 'greedy']"
20973,2097300,Uddered but not Herd,5,['string']
20974,2097400,Even More Odd Photos,7,['greedy']
20975,2097500,Just Stalling,9,"['combinatorics', 'greedy', 'mathematics', 'sorting']"
20976,2097600,2 番目に大きい整数 (The Second Largest Integer),2,['implementation']
20977,2097700,JOI ソート (JOI Sort),5,"['implementation', 'sorting', 'string']"
20978,2097800,共通要素 (Common Elements),4,['implementation']
20979,2097900,往復すごろく (Round Sugoroku),12,"['data structures', 'implementation', 'stack', 'two-pointer']"
20980,2098000,パンケーキ (Pancake),16,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal', 'string']"
20981,2098100,イベント巡り (Event Hopping),18,"['binary search', 'dynamic programming']"
20982,2098200,安全点検 (Safety Inspection),19,"['binary search', 'parametric search']"
20983,2098300,スパイ 2 (Spy 2),21,"['graph theory', 'greedy', 'topological sorting']"
20984,2098400,Growing Vegetables is Fun 4,15,"['dynamic programming', 'greedy', 'prefix sum', 'two-pointer']"
20985,2098500,Snowball,18,"['binary search', 'dynamic programming', 'prefix sum']"
20986,2098600,Group Photo,20,"['dynamic programming', 'prefix sum']"
20987,2098700,Robot,23,"[""dijkstra's"", 'graph theory', 'greedy']"
20988,2098800,Dungeon 3,27,"['ad-hoc', 'data structures', 'sweeping']"
20989,2098900,Drawing Circles,0,[]
20990,2099000,Perfect Path Patrol,16,"['greedy', 'tree']"
20991,2099100,Sky’s the Limit,0,[]
20992,2099200,Using Digits,11,['dynamic programming']
20993,2099300,Furniture,20,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
20994,2099400,Monochrome Points,24,"['binary search', 'data structures', 'greedy', 'ternary search']"
20995,2099500,Power Plant,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
20996,2099600,Edit Distance Yet Again,24,[]
20997,2099700,(Almost) Fair Cake-Cutting,20,['geometry']
20998,2099800,Jellyfish,18,"['case work', 'graph theory']"
20999,2099900,Flat Organization,23,"[""dijkstra's"", 'graph theory', 'strongly connected component']"
21000,2100000,Archer Vlad,17,"['calculus', 'mathematics', 'physics']"
21001,2100100,A Very Different Word,10,"['ad-hoc', 'implementation', 'string']"
21002,2100200,Cactus,19,"['cactus', 'combinatorics', 'graph theory', 'mathematics']"
21003,2100300,Social Distancing,27,"['constructive', 'dynamic programming', 'greedy', 'tree']"
21004,2100400,GCD vs. XOR,17,"['mathematics', 'number theory']"
21005,2100500,Civilizations,22,[]
21006,2100600,We apologize for any inconvenience,21,"['floyd–warshall', 'graph theory']"
21007,2100700,Patrol Drone,26,[]
21008,2100800,Social Justice,19,"['greedy', 'two-pointer']"
21009,2100900,Visible Trees,5,"['bruteforcing', 'implementation']"
21010,2101000,Slow Down,19,"[""dijkstra's"", 'maximum flow', 'graph theory', 'max-flow min-cut theorem']"
21011,2101100,Instruction Anagram,0,[]
21012,2101200,Project Team,0,[]
21013,2101300,Occult Square,16,"['constructive', 'mathematics']"
21014,2101400,Special Substring,10,"['prefix sum', 'sliding window', 'string']"
21015,2101500,Hallway and Butler,18,"['combinatorics', 'dynamic programming', 'dynamic programming on trees', 'mathematics', 'tree']"
21016,2101600,Auction Market,17,"['binary search', 'data structures', 'segment tree']"
21017,2101700,Forming Compounds,0,[]
21018,2101800,Power Link,0,[]
21019,2101900,All Subsequences,0,[]
21020,2102000,Combination Lock,16,['dynamic programming']
21021,2102100,Prize Coupon,8,['greedy']
21022,2102200,Three Points for a Win,4,['implementation']
21023,2102300,Door of the Ancient,17,"['dynamic programming', 'knapsack']"
21024,2102400,Jumping Stones,0,[]
21025,2102500,Healthy Lifestyle,18,"['articulation points and bridges', 'biconnected component', 'graph theory']"
21026,2102600,Shortsighted,20,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
21027,2102700,Presidential Game,6,"['ad-hoc', 'mathematics']"
21028,2102800,Goofy Golf,0,[]
21029,2102900,Collecting Apples,18,['dynamic programming']
21030,2103000,Frequent Alphabet,6,['string']
21031,2103100,Grid City,0,[]
21032,2103200,Odd GCD Matching,7,"['greedy', 'mathematics', 'number theory']"
21033,2103300,Sending Blessings,20,"['data structures', 'implementation', 'lowest common ancestor', 'segment tree', 'sparse table', 'tree']"
21034,2103400,Go To Goal,17,"['combinatorics', 'exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'modular multiplicative inverse', 'number theory']"
21035,2103500,Simple Operations in Matrix,5,['implementation']
21036,2103600,Mini Market,18,"['data structures', 'greedy', 'priority queue', 'set / map by trees']"
21037,2103700,Polygonal Query,0,[]
21038,2103800,Galatea’s Diet,18,"['combinatorics', 'exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'number theory']"
21039,2103900,Flip and Combos,21,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
21040,2104000,Maximum Subset,12,"['binary search', 'parametric search', 'sorting']"
21041,2104100,Largest Exotic Number,10,['sweeping']
21042,2104200,Triangle of Safety,8,"['bruteforcing', 'constructive', 'implementation', 'mathematics']"
21043,2104300,Domino Line,15,"['eulerian path / circuit', 'graph theory']"
21044,2104400,Inverse Common Superstring,5,"['ad-hoc', 'string']"
21045,2104500,Adding Numbers,19,"['case work', 'dynamic programming', 'mathematics', 'prefix sum']"
21046,2104600,Pretty Table,0,[]
21047,2104700,Array of Discord,7,"['bruteforcing', 'constructive']"
21048,2104800,Big Brother,22,"['geometry', 'half plane intersection']"
21049,2104900,Coin Stacks,9,"['data structures', 'game theory', 'greedy', 'priority queue', 'sorting']"
21050,2105000,Dams in Distress,14,"['dynamic programming', 'dynamic programming on trees', 'tree']"
21051,2105100,Exhaustive Experiment,19,['sweeping']
21052,2105200,Film Critics,0,[]
21053,2105300,Gig Combinatorics,11,['dynamic programming']
21054,2105400,Hiring and Firing,0,[]
21055,2105500,Infection Estimation,21,"['bayes theorem', 'mathematics', 'probability theory', 'simulated annealing']"
21056,2105600,Joining Flows,14,"['greedy', 'mathematics']"
21057,2105700,Keep Calm And Carry Off,15,"['arbitrary precision / big integers', 'greedy']"
21058,2105800,Language Survey,0,[]
21059,2105900,Methodic Multiplication,4,"['parsing', 'string']"
21060,2106000,Adjacent Rooks,19,['dynamic programming']
21061,2106100,Beautiful Permutation,24,['constructive']
21062,2106200,Cartesian MST,18,"['data structures', 'disjoint set', 'graph theory', 'minimum spanning tree']"
21063,2106300,Display of Springs,0,[]
21064,2106400,Even Intervals,21,"['value / coordinate compression', 'data structures', ""mo's"", 'offline queries', 'segment tree']"
21065,2106500,Friendship Circles,24,"['delaunay triangulation', 'geometry', 'half plane intersection']"
21066,2106600,Game on a Tree,0,[]
21067,2106700,Hackerman,20,"['chinese remainder theorem', 'mathematics', 'number theory']"
21068,2106800,Interesting Scoring Systems,13,['case work']
21069,2106900,Joyful Numbers,13,"['mathematics', 'number theory']"
21070,2107000,Königsberg Bridges,19,"['articulation points and bridges', 'biconnected component', 'graph theory', 'graph traversal', 'tree']"
21071,2107100,Long Grid Covering,20,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
21072,2107200,Color,0,[]
21073,2107300,Final Exam,0,[]
21074,2107400,Travel around China,0,[]
21075,2107500,Minimal Cut,0,[]
21076,2107600,Longest Loose Segment,0,[]
21077,2107700,Insects,0,[]
21078,2107800,Minimum Spanning Tree,23,"['combinatorics', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics']"
21079,2107900,Horses,0,[]
21080,2108000,Revenue,25,"['data structures', 'greedy', 'priority queue']"
21081,2108100,Wandering,16,"['calculus', 'mathematics']"
21082,2108200,Assignment Problem,20,['bruteforcing']
21083,2108300,Lockout vs tourist,23,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'duality', 'game theory']"
21084,2108400,Multiple?,21,"['bruteforcing', 'combinatorics', 'euler totient function', 'mathematics', 'number theory']"
21085,2108500,Output Limit Exceeded,26,"['constructive', 'graph theory', 'graph traversal']"
21086,2108600,Smol Vertex Cover,25,"['2-sat', 'general matching', 'graph theory', 'strongly connected component']"
21087,2108700,Thanks to MikeMirzayanov,22,"['ad-hoc', 'constructive', 'sorting']"
21088,2108800,Remove the Prime,23,"['game theory', 'mathematics', 'miller–rabin', 'number theory', 'pollard rho', 'primality test', 'sprague–grundy theorem']"
21089,2108900,Excluded Min,28,"['data structures', 'segment tree with lazy propagation', 'offline queries', 'segment tree']"
21090,2109000,Trade,18,"['dynamic programming', 'greedy', 'sorting', 'square root decomposition']"
21091,2109100,Increasing or Decreasing,18,"['ad-hoc', 'constructive', 'sorting']"
21092,2109200,Rectangle Painting,29,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'set / map by trees']"
21093,2109300,Extreme Wealth,23,['mathematics']
21094,2109400,Discrete Logarithm is a Joke,14,"['arbitrary precision / big integers', 'exponentiation by squaring', 'mathematics']"
21095,2109500,Best Subsequence,26,[]
21096,2109600,Binary Search Tree,0,[]
21097,2109700,Circle,20,"['case work', 'geometry', 'line segment intersection check', 'mathematics']"
21098,2109800,Composite Sequence,12,"['case work', 'mathematics', 'number theory', 'primality test']"
21099,2109900,Four XOR,16,"['mathematics', 'pigeonhole principle']"
21100,2110000,Game,20,"['convex hull', 'geometry', 'mathematics', 'probability theory']"
21101,2110100,GPA,16,['dynamic programming']
21102,2110200,Local Maxima,23,"['combinatorics', 'dynamic programming', 'mathematics', 'modular multiplicative inverse', 'number theory']"
21103,2110300,Maximum Subsequence,18,"['binary search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'parametric search']"
21104,2110400,Miner,17,"['combinatorics', 'data structures', 'mathematics', 'sweeping', 'set / map by trees']"
21105,2110500,New Financial Year,3,"['arithmetic', 'mathematics']"
21106,2110600,One More Problem About DFT,26,"['fast fourier transform', 'mathematics']"
21107,2110700,Robot,14,[]
21108,2110800,The Hash Table,27,"['inclusion and exclusion', 'mathematics', 'number theory']"
21109,2110900,Happiness,24,"['fast fourier transform', 'mathematics', 'square root decomposition']"
21110,2111000,Attractions On Plane,22,[]
21111,2111100,Measuring WAC-ness,0,[]
21112,2111200,Easter Gift,12,"['ad-hoc', 'sorting']"
21113,2111300,Returning Lights To Box,0,[]
21114,2111400,Into Cactus,14,"['ad-hoc', 'constructive', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'greedy', 'tree']"
21115,2111500,Colorful Components,25,[]
21116,2111600,Almost Free Falling,0,[]
21117,2111700,Number of Colorful Matchings,28,"['graph theory', 'linear algebra', 'mathematics']"
21118,2111800,100 Boxes Per Hour...,0,[]
21119,2111900,Belarusian State University,0,[]
21120,2112000,Beautiful Sequence Unraveling,0,[]
21121,2112100,Brave Seekers of Unicorns,21,['dynamic programming']
21122,2112200,Bank Security Unification,19,"['bitmask', 'dynamic programming', 'greedy']"
21123,2112300,Brief Statements Union,0,[]
21124,2112400,Border Similarity Undertaking,0,[]
21125,2112500,Biological Software Utilities,17,"['combinatorics', 'mathematics']"
21126,2112600,Bytelandia States Union,0,[]
21127,2112700,Binary Supersonic Utahraptors,9,['mathematics']
21128,2112800,Burnished Security Updates,13,"['graph theory', 'graph traversal']"
21129,2112900,Bookcase Solidity United,0,[]
21130,2113000,Business Semiconductor Units,28,"['ad-hoc', 'implementation']"
21131,2113100,Brilliant Sequence of Umbrellas,16,"['constructive', 'mathematics', 'number theory']"
21132,2113200,Best Solution Unknown,20,"['data structures', 'disjoint set', 'greedy', 'segment tree', 'smaller to larger technique']"
21133,2113300,N-Queen 2,18,"['case work', 'constructive']"
21134,2113400,Ant Typing,12,['bruteforcing']
21135,2113500,Bad Packing,15,"['dynamic programming', 'knapsack', 'sorting']"
21136,2113600,Bitonic Ordering,17,"['data structures', 'segment tree', 'sorting']"
21137,2113700,Condorcet,22,"['bruteforcing', 'graph theory', 'mathematics']"
21138,2113800,Dominating Duos,13,"['data structures', 'sorting', 'stack']"
21139,2113900,Exam Manipulation,9,"['bitmask', 'bruteforcing']"
21140,2114000,Exciting Tournament,21,[]
21141,2114100,Kth Subtree,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
21142,2114200,Longest Common Subsequence,15,"['dynamic programming', 'graph theory', 'topological sorting']"
21143,2114300,Magic Trick,4,"['implementation', 'string']"
21144,2114400,Missing Number,4,"['implementation', 'string']"
21145,2114500,Rainbow Numbers,18,"['dynamic programming', 'prefix sum']"
21146,2114600,Rating Problems,3,"['arithmetic', 'greedy', 'mathematics']"
21147,2114700,Triangular Collection,12,"['bruteforcing', 'combinatorics', 'greedy', 'mathematics']"
21148,2114800,TripTik,20,"['breadth-first search', 'binary search', 'data structures', 'graph theory', 'graph traversal', 'segment tree']"
21149,2114900,Unread Messages,8,"['data structures', 'set / map by hashing', 'set / map by trees']"
21150,2115000,All in the Family,14,"['case work', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation', 'lowest common ancestor', 'tree']"
21151,2115100,Kinky Word Searches,12,['dynamic programming']
21152,2115200,Math Trade,10,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing']"
21153,2115300,Oreperations Research,0,[]
21154,2115400,"Over the Hill, Part 1",8,"['implementation', 'linear algebra', 'mathematics', 'string']"
21155,2115500,"Over the Hill, Part 2",0,[]
21156,2115600,A Rank Problem,5,['implementation']
21157,2115700,Restroom Monitor,11,"['greedy', 'sorting']"
21158,2115800,Scholar's Lawn,0,[]
21159,2115900,Simply Sudoku,12,['implementation']
21160,2116000,Weighty Tomes,0,[]
21161,2116100,Workers of the World Unite! Just Not Too Close.,0,[]
21162,2116200,뒤집기 K,18,"['hashing', 'string', 'suffix array and lcp array']"
21163,2116300,LogDB,0,[]
21164,2116400,Ride-Hailing,20,"['bipartite matching', 'floyd–warshall', 'graph theory']"
21165,2116500,Redundant Binary Notation,13,['dynamic programming']
21166,2116600,Substring Characters,10,"['bruteforcing', 'data structures', 'set / map by hashing', 'string', 'two-pointer']"
21167,2116700,Curve Speed,3,"['implementation', 'mathematics']"
21168,2116800,Agamemnon's Odyssey,15,"['graph theory', 'graph traversal', 'tree']"
21169,2116900,Safest Taxi,0,[]
21170,2117000,Digital Speedometer,9,"['case work', 'implementation']"
21171,2117100,Staggering to the Finish,0,[]
21172,2117200,Ada Loveslaces,0,[]
21173,2117300,ICPC Record Matching,11,"['implementation', 'parsing', 'sorting', 'string']"
21174,2117400,Codenames,18,[]
21175,2117500,Painted Corridors,19,"['depth-first search', 'graph theory', 'graph traversal']"
21176,2117600,Smoothie Stand,5,"['arithmetic', 'bruteforcing', 'greedy', 'implementation', 'mathematics']"
21177,2117700,No Thanks!,6,"['implementation', 'sorting']"
21178,2117800,Basic Basis,18,"['arbitrary precision / big integers', 'bitmask', 'greedy', 'implementation']"
21179,2117900,Derangement Rotations,18,"['ad-hoc', 'euler totient function', 'mathematics', 'number theory']"
21180,2118000,Reconstruct Sum,4,"['bruteforcing', 'mathematics']"
21181,2118100,Kangaroo Party,6,"['bruteforcing', 'implementation']"
21182,2118200,"Weird Flecks, But OK",21,"['geometry', 'minimum enclosing circle']"
21183,2118300,Code Names,19,['bipartite matching']
21184,2118400,New Maths,12,"['arithmetic', 'backtracking', 'bruteforcing', 'mathematics']"
21185,2118500,Some Sum,3,"['mathematics', 'number theory']"
21186,2118600,Early Orders,18,"['data structures', 'greedy', 'stack', 'set / map by trees']"
21187,2118700,Pulling Their Weight,9,"['binary search', 'bruteforcing', 'prefix sum']"
21188,2118800,Birthday Paradox,14,"['combinatorics', 'mathematics']"
21189,2118900,On Average They're Purple,11,"['breadth-first search', 'graph theory', 'graph traversal']"
21190,2119000,Full Depth Morning Show,0,[]
21191,2119100,This Ain't Your Grandpa's Checkerboard,6,['implementation']
21192,2119200,Solar Energy,0,[]
21193,2119300,Magic Scale,17,"['data structures', 'priority queue', 'sorting', 'set / map by trees']"
21194,2119400,Meditation,6,"['greedy', 'sorting']"
21195,2119500,Rounds,13,"['data structures', 'greedy', 'implementation', 'mathematics']"
21196,2119600,Statues,13,['dynamic programming']
21197,2119700,Stopwatch,3,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
21198,2119800,Arithmetic Decoding,6,"['implementation', 'mathematics', 'string']"
21199,2119900,Paper Snowflakes,0,[]
21200,2120000,Forced Choice,3,['implementation']
21201,2120100,Interview Queue,16,"['data structures', 'linked list']"
21202,2120200,Conquest,11,"['data structures', 'graph theory', 'greedy', 'priority queue']"
21203,2120300,Distance,8,"['combinatorics', 'geometry', 'mathematics', 'sorting']"
21204,2120400,Antimatter Rain,0,[]
21205,2120500,Vaccine Efficacy,5,"['arithmetic', 'implementation', 'mathematics', 'probability theory', 'string']"
21206,2120600,Pegs and Legs,0,[]
21207,2120700,Train Boarding,5,"['bruteforcing', 'case work', 'implementation', 'mathematics']"
21208,2120800,Gratitude,8,"['data structures', 'set / map by hashing', 'sorting', 'string', 'set / map by trees']"
21209,2120900,Rule 110,0,[]
21210,2121000,Safe Distance,18,"['data structures', 'disjoint set', 'geometry', 'graph theory']"
21211,2121100,Jogging,13,"['ad-hoc', ""dijkstra's"", 'graph theory']"
21212,2121200,Cakes,3,"['arithmetic', 'implementation', 'mathematics']"
21213,2121300,Mentors,20,"['combinatorics', 'dynamic programming', 'mathematics']"
21214,2121400,Decoration,20,"['data structures', 'graph theory', 'mathematics', 'number theory', 'sparse table']"
21215,2121500,Figurines,20,"['data structures', 'persistent segment tree', 'segment tree']"
21216,2121600,Emails,19,"['ad-hoc', 'breadth-first search', 'graph theory', 'graph traversal']"
21217,2121700,Daisy’s Mazes,24,"['dynamic programming', 'graph theory', 'graph traversal']"
21218,2121800,Unique Activities,19,"['binary search', 'hashing', 'parametric search', 'rabin–karp', 'string', 'suffix array and lcp array']"
21219,2121900,Restaurants,21,"['greedy', 'stable marriage problem']"
21220,2122000,Fantasmagorie,0,[]
21221,2122100,Bold,6,['implementation']
21222,2122200,Alias,12,"[""dijkstra's"", 'graph theory']"
21223,2122300,Anagramistica,0,[]
21224,2122400,Geometrija,23,[]
21225,2122500,Index,20,"['binary search', 'data structures', 'parallel binary search', 'persistent segment tree', 'segment tree']"
21226,2122600,No Time to Dry,21,"['data structures', 'offline queries', 'segment tree']"
21227,2122700,Minimizing Edges,24,"['ad-hoc', 'data structures', 'graph theory', 'set / map by trees']"
21228,2122800,Counting Graphs,24,[]
21229,2122900,Stone Game,0,[]
21230,2123000,Modern Art 3,19,['dynamic programming']
21231,2123100,Count the Cows,19,['mathematics']
21232,2123200,Comfortable Cows,15,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'implementation', 'queue', 'simulation']"
21233,2123300,Year of the Cow,13,"['greedy', 'sorting']"
21234,2123400,Just Green Enough,16,"['dynamic programming', 'prefix sum', 'sweeping']"
21235,2123500,Year of the Cow,10,"['implementation', 'mathematics', 'parsing', 'string']"
21236,2123600,Comfortable Cows,7,"['ad-hoc', 'implementation']"
21237,2123700,Clockwise Fence,11,"['ad-hoc', 'breadth-first search', 'geometry', 'graph theory', 'graph traversal', 'implementation']"
21238,2123800,Absenteeism,0,[]
21239,2123900,Fakes and Shidget,0,[]
21240,2124000,Cyclically Shifted Maze,22,['implementation']
21241,2124100,Two Pirates - 2,0,[]
21242,2124200,Powerless Mage,0,[]
21243,2124300,Exactly One Point,0,[]
21244,2124400,Lexicographically Minimal Subsequence,13,"['binary search', 'greedy']"
21245,2124500,Video Reviews - 2,0,[]
21246,2124600,Chess Tournament,0,[]
21247,2124700,Lost Island,0,[]
21248,2124800,Bloodseeker,15,['greedy']
21249,2124900,Not the Longest Increasing Subsequence,0,[]
21250,2125000,Binary Search Tree,0,[]
21251,2125100,Premove Checkmate,22,"['ad-hoc', 'case work', 'constructive']"
21252,2125200,"Ah, It's Yesterday Once More",19,"['ad-hoc', 'randomization']"
21253,2125300,Baby's First Suffix Array Problem,0,[]
21254,2125400,Certain Scientific Railgun,0,[]
21255,2125500,Degree of Spanning Tree,0,[]
21256,2125600,Evil Coordinate,15,['implementation']
21257,2125700,Fireworks,15,"['binary search', 'calculus', 'mathematics', 'probability theory']"
21258,2125800,Go,0,[]
21259,2125900,Harmonious Rectangle,0,[]
21260,2126000,Interested in Skiing,0,[]
21261,2126100,Just Another Game of Stones,0,[]
21262,2126200,K Co-prime Permutation,13,"['ad-hoc', 'constructive', 'mathematics', 'number theory']"
21263,2126300,Let's Play Curling,0,[]
21264,2126400,Monster Hunter,0,[]
21265,2126500,Ascending Matrix,28,"['combinatorics', 'dynamic programming', 'gaussian elimination', 'linear algebra', 'mathematics']"
21266,2126600,Bit Operation,20,"['combinatorics', 'mathematics']"
21267,2126700,Count Min Ratio,29,[]
21268,2126800,Do Use FFT,26,"['divide and conquer', 'fast fourier transform', 'generating function', 'mathematics']"
21269,2126900,Edge Subsets,26,"['ad-hoc', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics', 'number theory']"
21270,2127000,Find the LCA,25,[]
21271,2127100,Games,24,[]
21272,2127200,Harsh Comments,22,[]
21273,2127300,Inverse Problem,0,[]
21274,2127400,Japanese Knowledge,28,"['divide and conquer', 'fast fourier transform', 'mathematics']"
21275,2127500,폰 호석만,9,"['bruteforcing', 'mathematics']"
21276,2127600,계보 복원가 호석,13,"['data structures', 'graph theory', 'set / map by hashing', 'sorting', 'topological sorting']"
21277,2127700,짠돌이 호석,13,"['bruteforcing', 'implementation']"
21278,2127800,호석이 두 마리 치킨,11,"['breadth-first search', 'bruteforcing', 'floyd–warshall', 'graph theory', 'graph traversal']"
21279,2127900,광부 호석,16,"['data structures', 'priority queue', 'segment tree', 'two-pointer']"
21280,2128000,Förvirrad föreläsare,3,['implementation']
21281,2128100,Siffersumma,10,"['implementation', 'mathematics']"
21282,2128200,Kulramen,8,"['implementation', 'mathematics']"
21283,2128300,Cherimoyor,0,[]
21284,2128400,Rätblocket,13,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
21285,2128500,Namnsdag,5,"['implementation', 'string']"
21286,2128600,Brandvägg,0,[]
21287,2128700,Färgrobot,5,"['greedy', 'implementation', 'string']"
21288,2128800,Bokstavstärningar,17,"['bipartite matching', 'bitmask', 'depth-first search', 'graph theory', 'graph traversal', 'string']"
21289,2128900,Solnedgång,21,"['binary search', 'data structures', 'disjoint set']"
21290,2129000,Robotoptimering,0,[]
21291,2129100,ABC,19,['dynamic programming']
21292,2129200,le français,13,"['case work', 'mathematics', 'string']"
21293,2129300,No Description 2,0,[]
21294,2129400,와 쿼리,0,['implementation']
21295,2129500,두 천재들의 대결,0,['implementation']
21296,2129600,팩토리얼,0,[]
21297,2129700,"댓글, 구독, 크리에이터와의 교류",0,['implementation']
21298,2129800,하이퍼 배열 돌리기,22,"['geometry', 'geometry; hyperdimensional', 'implementation']"
21299,2129900,진짜 최종 구데기컵 1 경품 당첨자,0,[]
21300,2130000,Bottle Return,1,"['arithmetic', 'mathematics']"
21301,2130100,Comfy Deviations,4,[]
21302,2130200,Arthur's Table,0,[]
21303,2130300,Magic Drone,0,[]
21304,2130400,Marbles,11,[]
21305,2130500,Chocolate Bar Game,18,"['game theory', 'mathematics', 'number theory', 'primality test']"
21306,2130600,Three Triangles,0,[]
21307,2130700,ICPC Standings,10,"['implementation', 'simulation', 'sorting']"
21308,2130800,Ternary Machine,20,"['data structures', 'implementation', 'parsing', 'simulation', 'stack', 'string']"
21309,2130900,Cardinal Adjacencies,5,['implementation']
21310,2131000,Stern’s Sequence,14,"['mathematics', 'recursion']"
21311,2131100,Evenly Separated Strings,8,[]
21312,2131200,홀짝 칵테일,3,"['arithmetic', 'implementation', 'mathematics']"
21313,2131300,문어,4,"['ad-hoc', 'greedy']"
21314,2131400,민겸 수,9,"['greedy', 'implementation']"
21315,2131500,카드 섞기,11,"['bruteforcing', 'implementation', 'simulation']"
21316,2131600,스피카,8,"['ad-hoc', 'graph theory']"
21317,2131700,징검다리 건너기,9,['dynamic programming']
21318,2131800,피아노 체조,10,['prefix sum']
21319,2131900,챔피언 (Easy),14,['binary search']
21320,2132000,순간이동 여행,15,"['dynamic programming', 'tree']"
21321,2132100,클레이 사격 게임,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
21322,2132200,격자 돌리기,15,"['implementation', 'mathematics', 'number theory', 'simulation']"
21323,2132300,챔피언 (Hard),20,"['data structures', 'divide and conquer', 'segment tree']"
21324,2132400,Mars Message,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
21325,2132500,Free food,9,"['depth-first search', 'graph theory', 'graph traversal']"
21326,2132600,Lab planning,0,[]
21327,2132700,Quiz,15,"['dynamic programming', 'knapsack', 'sorting']"
21328,2132800,Vvvvvv,13,[]
21329,2132900,Candy,0,[]
21330,2133000,Solitaire chess,0,[]
21331,2133100,T-shirts,14,"['data structures', 'greedy', 'priority queue', 'sorting', 'set / map by trees']"
21332,2133200,Magic Show,18,[]
21333,2133300,Friends,17,"['data structures', 'set / map by trees']"
21334,2133400,Cities,20,[]
21335,2133500,Another Eruption,2,"['geometry', 'mathematics']"
21336,2133600,Cheating,12,"['bruteforcing', 'implementation']"
21337,2133700,Atomic Energy,18,"['dynamic programming', 'greedy']"
21338,2133800,Bulldozer,28,[]
21339,2133900,Contest Struggles,3,"['arithmetic', 'mathematics']"
21340,2134000,Dragon Balls,16,"['geometry', 'mathematics', 'pigeonhole principle', 'pythagoras theorem', 'randomization']"
21341,2134100,Endgame,20,"['meet in the middle', 'randomization']"
21342,2134200,Flight Collision,17,"['data structures', 'linked list', 'mathematics', 'priority queue', 'set / map by trees']"
21343,2134300,Great Expectations,22,"['binary search', 'dynamic programming', 'knapsack', 'mathematics', 'parametric search', 'probability theory']"
21344,2134400,Hot Springs,9,"['constructive', 'greedy', 'sorting']"
21345,2134500,Island Tour,18,"['binary search', 'implementation']"
21346,2134600,Joint Excavation,23,"['ad-hoc', 'depth-first search', 'graph theory', 'graph traversal']"
21347,2134700,Keyboardd,5,"['implementation', 'string']"
21348,2134800,Video Clips,15,"['data structures', 'sparse table']"
21349,2134900,Kingdom Division,0,[]
21350,2135000,Kattis,0,[]
21351,2135100,Mafia,0,[]
21352,2135200,Fibonacci Strings,0,[]
21353,2135300,Surveillance,0,[]
21354,2135400,Äpplen och päron,2,"['arithmetic', 'implementation', 'mathematics']"
21355,2135500,Personnummer,4,"['case work', 'string']"
21356,2135600,Hundraelva kronor,6,['greedy']
21357,2135700,Lavapaddling,14,[]
21358,2135800,Klockan,13,[]
21359,2135900,Kodlås,16,[]
21360,2136000,Biosalong,5,"['implementation', 'string']"
21361,2136100,Robotdammsugaren,7,"['implementation', 'simulation']"
21362,2136200,Robotdammsugaren 2,0,[]
21363,2136300,Kontringsattack,11,['prefix sum']
21364,2136400,Köpa tavlor,11,['dynamic programming']
21365,2136500,Stökiga känguruungar,14,"['binary search', 'string']"
21366,2136600,Bikupor,0,[]
21367,2136700,Vaccin,0,[]
21368,2136800,Ekorren i trädet,0,[]
21369,2136900,Social distansering,0,[]
21370,2137000,Minigolf,0,[]
21371,2137100,Flyga Drönare,0,[]
21372,2137200,Återuppfinnande av matematiken,0,[]
21373,2137300,Känd klartext,15,"['implementation', 'parsing', 'string']"
21374,2137400,Xorxorxor,0,[]
21375,2137500,Konamikoden,11,[]
21376,2137600,Rektangelmagi,0,[]
21377,2137700,Listtestning,0,[]
21378,2137800,Email-parsing,0,[]
21379,2137900,3-i-rad,0,[]
21380,2138000,Rätta fel,0,[]
21381,2138100,Bowling,0,[]
21382,2138200,Decompression,0,[]
21383,2138300,Make it Manhattan,0,[]
21384,2138400,Average distance,0,[]
21385,2138500,Bus Pass,0,[]
21386,2138600,Cutting Banknotes,9,"['mathematics', 'number theory']"
21387,2138700,Dice Password Security,0,[]
21388,2138800,Lingo,21,"['bitmask', 'dynamic programming']"
21389,2138900,Splitting the Loot,0,[]
21390,2139000,Pachinko,9,[]
21391,2139100,Hiking,0,[]
21392,2139200,Ranking,0,[]
21393,2139300,Stock,0,[]
21394,2139400,숫자 카드,5,['implementation']
21395,2139500,연속한 소수 만들기,9,"['bruteforcing', 'greedy', 'mathematics', 'number theory', 'primality test']"
21396,2139600,이진수 더하기,9,"['bitmask', 'data structures', 'set / map by hashing', 'set / map by trees']"
21397,2139700,긴 수,14,"['implementation', 'mathematics']"
21398,2139800,동생에게 져주기,15,['dynamic programming']
21399,2139900,장난감 묶음 할인,16,"['data structures', 'greedy', 'priority queue']"
21400,2140000,Интернет-банкинг,0,[]
21401,2140100,Большой огромный коллайдер,0,[]
21402,2140200,Фитнесс-клуб,0,[]
21403,2140300,Электрик-ковбой Джо,0,[]
21404,2140400,Счастливый билетик,0,[]
21405,2140500,Циклические палиндромы,5,"['bruteforcing', 'implementation', 'string']"
21406,2140600,Строка,0,[]
21407,2140700,Театр,0,[]
21408,2140800,Провода,0,[]
21409,2140900,Шахматные баталии,6,"['case work', 'implementation']"
21410,2141000,Сумма цифр,10,"['constructive', 'greedy', 'mathematics', 'string']"
21411,2141100,Играйте в футбол!,0,[]
21412,2141200,Дробь,4,"['bruteforcing', 'euclidean algorithm', 'mathematics', 'number theory']"
21413,2141300,<<Болото 2>>,0,[]
21414,2141400,Вычислительная ихтиология,0,[]
21415,2141500,Замóк с шестеренками,0,[]
21416,2141600,Гонки,0,[]
21417,2141700,Перемешивание,7,"['implementation', 'simulation', 'string']"
21418,2141800,Прогулка,0,[]
21419,2141900,Атака инопланетян,10,['geometry']
21420,2142000,Монетки,3,['implementation']
21421,2142100,Белоснежка и $n$ гномов,14,[]
21422,2142200,Игра с графом,0,[]
21423,2142300,Про любовь...,0,[]
21424,2142400,Спички детям не игрушка,0,[]
21425,2142500,Лабиринт,10,"['breadth-first search', 'graph theory', 'graph traversal']"
21426,2142600,Число,14,"['bruteforcing', 'mathematics', 'number theory', 'primality test']"
21427,2142700,Красивые номера,8,"['bruteforcing', 'case work', 'implementation']"
21428,2142800,Зоопарк,11,"['combinatorics', 'mathematics']"
21429,2142900,Скобки,12,[]
21430,2143000,Свечки,0,[]
21431,2143100,N-угольники,10,"['dynamic programming', 'geometry']"
21432,2143200,Нефть,4,"['arithmetic', 'bruteforcing', 'mathematics']"
21433,2143300,Перестановки,0,[]
21434,2143400,Непростая задача,14,['dynamic programming']
21435,2143500,Головоломка,0,[]
21436,2143600,Экспериментатор,0,[]
21437,2143700,Перевод времени,6,['implementation']
21438,2143800,Стена,16,[]
21439,2143900,Поедание сыра,0,[]
21440,2144000,Соревнования по программированию,0,[]
21441,2144100,Распил,0,[]
21442,2144200,Электричество,0,[]
21443,2144300,Адронные коллайдеры,0,[]
21444,2144400,Космические захватчики,5,"['implementation', 'mathematics']"
21445,2144500,Пробежки по Манхэттену,0,[]
21446,2144600,Следующее разбиение на слагаемые,0,[]
21447,2144700,Самодвойственный документ,0,[]
21448,2144800,Цирковое шоу,0,[]
21449,2144900,Красивая таблица результатов,6,"['implementation', 'mathematics']"
21450,2145000,"Место у прохода, пожалуйста",0,[]
21451,2145100,Мост,0,[]
21452,2145200,Почти беспрефиксные коды,0,[]
21453,2145300,Обход в глубину,0,[]
21454,2145400,Драгоценные камни,0,[]
21455,2145500,Интересные числа,0,[]
21456,2145600,Оптимизация,0,[]
21457,2145700,Шкафы,0,[]
21458,2145800,Архимедова спираль,0,[]
21459,2145900,Сумма,13,['arbitrary precision / big integers']
21460,2146000,Пузырьки 1D,0,[]
21461,2146100,Клетка для хомячка,0,[]
21462,2146200,Выпуклая оболочка,0,[]
21463,2146300,Выражение,0,[]
21464,2146400,Справедливая последовательность,0,[]
21465,2146500,Развлечения с измерителем,0,[]
21466,2146600,Жребий Крижановского,0,[]
21467,2146700,Программа психологического исследования программистов,0,[]
21468,2146800,Головоломка,0,[]
21469,2146900,Гражданская оборона,0,[]
21470,2147000,Движение по полосам,0,[]
21471,2147100,Шахматный детектив,0,[]
21472,2147200,Кинотеатр,9,"['implementation', 'mathematics']"
21473,2147300,Цифровое табло,0,[]
21474,2147400,Выборы,0,[]
21475,2147500,Треугольная рамка,11,"['geometry', 'mathematics']"
21476,2147600,Форматирование документа,0,[]
21477,2147700,Максимальная сумма,0,[]
21478,2147800,Метро,0,[]
21479,2147900,Число,16,"['greedy', 'sorting']"
21480,2148000,Переключение между окнами,0,[]
21481,2148100,Раскраска в три цвета,0,[]
21482,2148200,Эльфы и олени,0,[]
21483,2148300,Эксперимент,0,[]
21484,2148400,Шоссе,0,[]
21485,2148500,Автомобильные номера,8,['backtracking']
21486,2148600,Планета Плюк,0,[]
21487,2148700,Полигон,0,[]
21488,2148800,Красно-черные деревья,0,[]
21489,2148900,Изображение таблицы,10,['implementation']
21490,2149000,Неправильная считалка,6,"['mathematics', 'number theory']"
21491,2149100,Выбор зала,11,['mathematics']
21492,2149200,Призы,11,['prefix sum']
21493,2149300,Река,0,[]
21494,2149400,Чемпионат по поиску в сети Меганет,0,[]
21495,2149500,Кольцевая линия,0,[]
21496,2149600,Вырубка леса,0,[]
21497,2149700,Укладка плитки,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
21498,2149800,Магические порталы,0,[]
21499,2149900,Автоматические друзья,0,[]
21500,2150000,Памятник,0,[]
21501,2150100,Вышивка жемчугом,0,[]
21502,2150200,Пингвиноведение,0,[]
21503,2150300,Поможем дикой природе,0,[]
21504,2150400,Подводная лодка,0,[]
21505,2150500,Фонари,0,[]
21506,2150600,Сигнализация,0,[]
21507,2150700,POBEDA-2014,3,['mathematics']
21508,2150800,Список школ,8,"['data structures', 'set / map by hashing', 'parsing', 'regular expression', 'string']"
21509,2150900,Межрегиональная олимпиада,0,[]
21510,2151000,Дом Мэра,0,[]
21511,2151100,Светофоры,10,"['arithmetic', 'mathematics']"
21512,2151200,Кондиционеры,11,"['binary search', 'sorting']"
21513,2151300,Конфеты,0,[]
21514,2151400,Волонтеры,0,[]
21515,2151500,Автомат с игрушками,0,[]
21516,2151600,Робинзон и крокодилы,0,[]
21517,2151700,Петя и Робот,0,[]
21518,2151800,Коллайдер 2.0,0,[]
21519,2151900,Киноакадемия,0,[]
21520,2152000,Съезд кинозвёзд - 1,0,[]
21521,2152100,Съезд кинозвёзд - 2,0,[]
21522,2152200,Съезд кинозвёзд - 3,0,[]
21523,2152300,Съезд кинозвёзд - 4,0,[]
21524,2152400,Съезд кинозвёзд - 5,0,[]
21525,2152500,Съезд кинозвёзд - 6,0,[]
21526,2152600,Съезд кинозвёзд - 7,0,[]
21527,2152700,Здоровое питание,0,[]
21528,2152800,Магистраль <<Урал>>,0,[]
21529,2152900,Кастинг,5,"['arithmetic', 'mathematics']"
21530,2153000,Города,5,"['ad-hoc', 'implementation']"
21531,2153100,A + B = C,15,['dynamic programming']
21532,2153200,Березовая аллея,0,[]
21533,2153300,Игральные кубики,6,"['arithmetic', 'constructive', 'mathematics']"
21534,2153400,Имена,12,"['data structures', 'priority queue', 'string']"
21535,2153500,Две окружности,0,[]
21536,2153600,Столицы,0,[]
21537,2153700,Хоккей на Урале,0,[]
21538,2153800,Робот-сборщик,0,[]
21539,2153900,Графический редактор <<Хамелеон>>,0,[]
21540,2154000,Древние династии,0,[]
21541,2154100,Звёздный путь,0,[]
21542,2154200,Морской бой,0,[]
21543,2154300,Массовый прогноз,22,"['divide and conquer', 'prefix sum']"
21544,2154400,Флешмоб,0,[]
21545,2154500,Перфокарты,12,[]
21546,2154600,Родные просторы,25,"['data structures', 'dynamic programming', 'hashing', 'sparse table']"
21547,2154700,Игра с тайным смыслом,0,[]
21548,2154800,Доклад инвесторам,25,[]
21549,2154900,Московские числа,15,[]
21550,2155000,Гаджеты на дереве,19,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
21551,2155100,Вырубка деревьев,26,"['data structures', 'dynamic programming']"
21552,2155200,Блогеры-путешественники,26,"['biconnected component', 'data structures', 'disjoint set', 'lowest common ancestor', 'segment tree', 'sparse table', 'sweeping', 'tree']"
21553,2155300,암호 만들기,3,['ad-hoc']
21554,2155400,마법의 돌 장난감,7,"['constructive', 'sorting']"
21555,2155500,빛의 돌 옮기기,9,['dynamic programming']
21556,2155600,우물 파기,15,"['binary search', 'parametric search']"
21557,2155700,불꽃놀이,6,['greedy']
21558,2155800,전쟁 준비하기,10,"['mathematics', 'number theory']"
21559,2155900,암호 찾기,16,"['hashing', 'string']"
21560,2156000,마법의 돌 조각 연구,21,"['ad-hoc', 'case work', 'constructive']"
21561,2156100,빛의 돌 시뮬레이션,0,[]
21562,2156200,우물 유적 발굴하기,19,[]
21563,2156300,원형 불꽃놀이,15,[]
21564,2156400,평화롭게 전쟁하기,23,[]
21565,2156500,논리의 돌,19,"['constructive', 'sorting']"
21566,2156600,트리 정리하기,18,"['ad-hoc', 'constructive', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
21567,2156700,숫자의 개수 2,4,"['arithmetic', 'implementation', 'mathematics']"
21568,2156800,Ax+By=C,0,[]
21569,2156900,Цапли,4,['mathematics']
21570,2157000,Круглый стол,9,['constructive']
21571,2157100,Поврежденный XML,14,"['backtracking', 'data structures', 'parsing', 'stack', 'string']"
21572,2157200,Игра с числами,0,[]
21573,2157300,Кондиционер,3,"['case work', 'implementation', 'string']"
21574,2157400,Праздничный ужин,0,[]
21575,2157500,Космический кегельбан,0,[]
21576,2157600,«Abracadabra»,0,[]
21577,2157700,Пароль,0,[]
21578,2157800,Вирусы и антивирусы,0,[]
21579,2157900,Урюк,0,[]
21580,2158000,Древний календарь,0,[]
21581,2158100,Мозаика,0,[]
21582,2158200,Театр начинается с актеров,0,[]
21583,2158300,Ёжик в тумане,0,[]
21584,2158400,Ордынское войско,0,[]
21585,2158500,Alien Microwave,13,[]
21586,2158600,Another Substring Query Problem,19,"['binary search', 'data structures', 'hashing', ""mo's"", 'offline queries', 'segment tree', 'string', 'suffix array and lcp array']"
21587,2158700,Borders,18,[]
21588,2158800,Circle of Friends,21,[]
21589,2158900,Finding Polly,22,[]
21590,2159000,Investigating Imposters,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
21591,2159100,Laptop Sticker,2,"['arithmetic', 'implementation', 'mathematics']"
21592,2159200,Longest Common Substring,6,"['bruteforcing', 'string']"
21593,2159300,Simple Cron Spec,0,[]
21594,2159400,Surveillance,23,"['calculus', 'geometry', 'mathematics']"
21595,2159500,Train Line,25,[]
21596,2159600,Window Shopping,25,[]
21597,2159700,You Be the Judge!,6,[]
21598,2159800,SciComLove,1,['implementation']
21599,2159900,아이템 배치하기,9,"['greedy', 'sorting']"
21600,2160000,계단,10,"['dynamic programming', 'greedy', 'sweeping']"
21601,2160100,수건 돌리기,15,"['mathematics', 'recursion']"
21602,2160200,Array and Easy Queries,0,[]
21603,2160300,K 2K 게임,3,['implementation']
21604,2160400,겹강 찾기,5,['constructive']
21605,2160500,아름다운 수열,10,['constructive']
21606,2160600,아침 산책,13,"['combinatorics', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'tree']"
21607,2160700,Polynomial and Easy Queries,20,"['ad-hoc', 'data structures', 'mathematics', 'segment tree', 'sparse table']"
21608,2160800,상어 초등학교,11,['implementation']
21609,2160900,상어 중학교,14,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
21610,2161000,마법사 상어와 비바라기,11,"['implementation', 'simulation']"
21611,2161100,마법사 상어와 블리자드,15,"['implementation', 'simulation']"
21612,2161200,Boiling Water,2,"['arithmetic', 'implementation', 'mathematics']"
21613,2161300,Silent Auction,4,"['implementation', 'string']"
21614,2161400,Secret Instructions,3,"['arithmetic', 'implementation', 'mathematics']"
21615,2161500,Arranging Books,13,['greedy']
21616,2161600,Modern Art,8,"['ad-hoc', 'mathematics']"
21617,2161700,Crazy Fencing,4,"['geometry', 'mathematics']"
21618,2161800,Lunch Concert,12,['ternary search']
21619,2161900,Daily Commute,16,[]
21620,2162000,Math Homework,18,"['data structures', 'greedy', 'segment tree']"
21621,2162100,Jumping Machine,14,"['dynamic programming', 'knapsack', 'mathematics']"
21622,2162200,Triangles and a Circle,0,[]
21623,2162300,Game,4,['implementation']
21624,2162400,Fence,0,[]
21625,2162500,Flag with Stars,0,[]
21626,2162600,String Art,13,"['graph theory', 'graph traversal']"
21627,2162700,Ice Cream,11,[]
21628,2162800,Perfect Round Dance,0,[]
21629,2162900,Walk of Three,9,"['depth-first search', 'graph theory', 'graph traversal']"
21630,2163000,Boring Lesson,17,['dynamic programming']
21631,2163100,Checkers,2,"['implementation', 'mathematics']"
21632,2163200,Magnets,18,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
21633,2163300,Bank Transfer,2,"['arithmetic', 'implementation', 'mathematics']"
21634,2163400,Bacteria,15,['ad-hoc']
21635,2163500,Check Markers,17,"['greedy', ""hall's theorem""]"
21636,2163600,Multiple Subject Lessons,12,"['combinatorics', 'dynamic programming', 'mathematics']"
21637,2163700,Prank at IKEA,17,"['ad-hoc', 'graph theory', 'graph traversal', 'implementation']"
21638,2163800,SMS from MCHS,2,['implementation']
21639,2163900,Cooking,26,"['ad-hoc', 'eulerian path / circuit', 'maximum flow', 'general matching', 'graph theory', 'minimum cost maximum flow']"
21640,2164000,Hard Work,23,['dynamic programming']
21641,2164100,Points and Segments,17,"['game theory', 'geometry', 'greedy', 'line segment intersection check']"
21642,2164200,Straight,12,[]
21643,2164300,New Level,24,"['ad-hoc', 'data structures', 'disjoint set', 'priority queue', 'smaller to larger technique']"
21644,2164400,The Firm Knapsack Problem,20,"['greedy', 'sorting']"
21645,2164500,Ролевая игра,3,"['arithmetic', 'mathematics']"
21646,2164600,«Колесо Фортуны»,11,"['implementation', 'simulation']"
21647,2164700,Форматирование текста,0,[]
21648,2164800,Космические исследования,0,[]
21649,2164900,Шахматная доска,5,"['case work', 'mathematics']"
21650,2165000,Чемпионат по стрельбе,7,"['implementation', 'sorting']"
21651,2165100,Делители,0,[]
21652,2165200,Дом у дороги,0,[]
21653,2165300,Скобки,0,[]
21654,2165400,Школа олимпийского резерва,0,[]
21655,2165500,Снова в космос,0,[]
21656,2165600,Почта,0,[]
21657,2165700,Парк аттракционов,0,[]
21658,2165800,Велогонка,0,[]
21659,2165900,Сад пермского периода,0,[]
21660,2166000,Распил бревен,0,[]
21661,2166100,Соревнование картингистов,4,"['implementation', 'string']"
21662,2166200,Дипломы,9,['binary search']
21663,2166300,Булева функция,0,[]
21664,2166400,Кольцевая автодорога,0,[]
21665,2166500,Миша и негатив,2,"['implementation', 'string']"
21666,2166600,Треугольник Максима,0,[]
21667,2166700,Производство деталей,0,[]
21668,2166800,Новое слово в рекламе,0,[]
21669,2166900,Подарок,0,[]
21670,2167000,ЮграНефтеТранс,0,[]
21671,2167100,Москва – Ханты-Мансийск,0,[]
21672,2167200,Ханты-Мансийск – Париж,0,[]
21673,2167300,А олени — лучше!,0,[]
21674,2167400,Земледелие 2.0,0,[]
21675,2167500,Черно-белая графика,4,['implementation']
21676,2167600,Газон,11,"['bruteforcing', 'geometry', 'mathematics']"
21677,2167700,Трамвай,0,[]
21678,2167800,Треугольники,10,"['combinatorics', 'geometry', 'mathematics']"
21679,2167900,Клавиатура,3,['implementation']
21680,2168000,Неправильное сложение,6,"['sorting', 'string']"
21681,2168100,Числа,11,['dynamic programming']
21682,2168200,Перестановки,0,[]
21683,2168300,Две строки,5,"['arbitrary precision / big integers', 'arithmetic', 'bruteforcing', 'mathematics', 'parsing', 'string']"
21684,2168400,Скользящая симметрия,0,[]
21685,2168500,Трехмерный тетрис,0,[]
21686,2168600,Таблица,0,[]
21687,2168700,Гомотетия,0,[]
21688,2168800,Информатизация садоводства,0,[]
21691,2169100,Цифры и числа,0,[]
21692,2169200,Легкоатлетический манеж НГУ,0,[]
21695,2169500,Школа танцев,13,"['data structures', 'set / map by hashing', 'prefix sum']"
21696,2169600,Стеклянный забор,0,[]
21697,2169700,Несчастливые номера,0,[]
21698,2169800,Счастливые цифры,0,[]
21699,2169900,Тапкодер,0,[]
21700,2170000,Сочи-2014,0,[]
21701,2170100,Маджонг,0,[]
21702,2170200,Дом оригинальности и гармонии,0,[]
21703,2170300,Цепочка слов,0,[]
21704,2170400,Забор,7,"['implementation', 'mathematics']"
21705,2170500,Окопы и траншеи,0,[]
21706,2170600,Планировка кухни,16,"['arbitrary precision / big integers', 'dynamic programming']"
21707,2170700,Урок физкультуры,0,[]
21708,2170800,Электрички на перегонах не меняют,0,[]
21709,2170900,Ударим мостом по бездорожью,0,[]
21710,2171000,"То березка, то рябина…",0,[]
21711,2171100,Теория цифр,0,[]
21712,2171200,Интернет на черный день,0,[]
21713,2171300,Фигурное программирование,8,[]
21714,2171400,Пекка развлекается,0,[]
21715,2171500,Гадание по-карельски,0,[]
21716,2171600,Операции,7,"['implementation', 'mathematics']"
21717,2171700,Кенгуренок Лео,0,[]
21718,2171800,Студенческие годы Пекки,0,[]
21719,2171900,Банковские карты,0,[]
21720,2172000,Файловый менеджер,0,[]
21721,2172100,Приключение,0,[]
21722,2172200,Автобусы,0,[]
21723,2172300,Полимино,0,[]
21724,2172400,Треугольная реформа,0,[]
21725,2172500,더치페이,18,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'prefix sum', 'smaller to larger technique']"
21726,2172600,운전 브이로그,22,"['value / coordinate compression', 'dynamic programming', 'graph theory', 'implementation', 'sorting', 'string']"
21727,2172700,아즈텍의 섬,27,['matroid']
21728,2172800,트리와 2개의 지름,0,[]
21729,2172900,Inversion Statistics,25,"['combinatorics', 'mathematics']"
21730,2173000,불순 분자 만들기,22,"['ad-hoc', 'data structures', 'euler tour technique', 'heavy-light decomposition', 'segment tree with lazy propagation', 'lowest common ancestor', 'segment tree', 'tree']"
21731,2173100,메시라이브,29,"[""dijkstra's"", 'divide and conquer', 'dual graph', 'maximum flow', 'graph theory', 'planar graph']"
21732,2173200,SAT-2,19,"['depth-first search', 'graph theory', 'graph traversal']"
21733,2173300,2차원 점과 쿼리,22,"['data structures', 'segment tree']"
21734,2173400,SMUPC의 등장,4,"['implementation', 'string']"
21735,2173500,눈덩이 굴리기,8,"['backtracking', 'bruteforcing']"
21736,2173600,헌내기는 친구가 필요해,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
21737,2173700,SMUPC 계산기,10,"['implementation', 'parsing', 'string']"
21738,2173800,얼음깨기 펭귄,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
21739,2173900,펭귄 네비게이터,14,"['combinatorics', 'dynamic programming', 'mathematics']"
21740,2174000,도도의 수학놀이,18,"['greedy', 'sorting', 'string']"
21741,2174100,Ожерелье,0,[]
21742,2174200,Менеджер памяти,0,[]
21743,2174300,Казино,0,[]
21744,2174400,Красивые числа,16,"['case work', 'constructive', 'mathematics']"
21745,2174500,Сетевая игра,0,[]
21746,2174600,Сталкер,0,[]
21747,2174700,Катание на автобусах,0,[]
21748,2174800,Старая крепость,7,"['geometry', 'sorting']"
21749,2174900,Гистограмма,5,"['implementation', 'string']"
21750,2175000,Два коня,10,"['breadth-first search', 'graph theory', 'graph traversal']"
21751,2175100,Сапер,12,"['constructive', 'greedy', 'implementation']"
21752,2175200,Интересное число,0,[]
21753,2175300,Треугольник Паскаля,12,['mathematics']
21754,2175400,Два прямоугольника,15,"['case work', 'constructive', 'greedy']"
21755,2175500,Цветные нули,0,[]
21756,2175600,지우개,4,"['implementation', 'mathematics', 'simulation']"
21757,2175700,나누기,14,"['dynamic programming', 'prefix sum']"
21758,2175800,꿀 따기,11,"['case work', 'greedy', 'prefix sum']"
21759,2175900,두 개의 팀,18,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
21760,2176000,야구 시즌,5,"['combinatorics', 'mathematics']"
21761,2176100,초직사각형,15,"['greedy', 'mathematics', 'sorting']"
21762,2176200,공통 부분 수열 확장,16,"['greedy', 'prefix sum']"
21763,2176300,Bingo,9,"['ad-hoc', 'case work', 'constructive']"
21764,2176400,Histogram Sequence 2,8,"['combinatorics', 'mathematics']"
21765,2176500,Opinion Pool,13,"['binary search', 'mathematics', 'sorting']"
21766,2176600,Three Slices,20,"['binary search', 'data structures', 'segment tree']"
21767,2176700,Factory Balls,18,"['breadth-first search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal']"
21768,2176800,AND PLUS OR,22,"['bitmask', 'mathematics']"
21769,2176900,Endless Road,27,"['data structures', 'implementation', 'segment tree with lazy propagation', 'segment tree', 'set / map by trees']"
21770,2177000,Fake Plastic Trees 2,27,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'mathematics', 'tree']"
21771,2177100,가희야 거기서 자는 거 아니야,5,['string']
21772,2177200,가희의 고구마 먹방,11,"['backtracking', 'bruteforcing', 'implementation']"
21773,2177300,가희와 프로세스 1,11,"['data structures', 'priority queue']"
21774,2177400,가희와 로그 파일,13,"['binary search', 'implementation', 'parsing', 'string']"
21775,2177500,가희와 자원 놀이,11,"['data structures', 'implementation', 'queue', 'simulation', 'set / map by trees']"
21776,2177600,가희와 읽기 쓰기 놀이,12,"['backtracking', 'bruteforcing', 'implementation', 'parsing', 'string']"
21777,2177700,리버스 가희와 프로세스 1,15,"['constructive', 'greedy']"
21778,2177800,가희와 프로세스 2,16,"['binary search', 'data structures', 'physics', 'priority queue']"
21779,2177900,Aerobatics - 1,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'geometry', 'travelling salesman problem']"
21780,2178000,Aerobatics - 2,0,[]
21781,2178100,Aerobatics - 3,0,[]
21782,2178200,Aerobatics - 4,0,[]
21783,2178300,Aerobatics - 5,0,[]
21784,2178400,Aerobatics - 6,0,[]
21785,2178500,IOI Fever,25,"[""dijkstra's"", 'graph theory', 'greedy', 'implementation']"
21786,2178600,Food Court,22,"['ad-hoc', 'data structures', 'offline queries', 'segment tree', 'sweeping']"
21787,2178700,Escape Route,26,"[""dijkstra's"", 'graph theory', 'offline queries', 'sorting', 'two-pointer']"
21788,2178800,Road Construction,21,"['binary search', 'data structures', 'persistent segment tree', 'segment tree']"
21789,2178900,Shopping,29,"['ad-hoc', 'bitmask', 'case work', 'depth-first search', 'divide and conquer', 'graph theory', 'graph traversal', 'implementation', 'tree']"
21790,2179000,Ancient Machine,24,"['ad-hoc', 'dynamic programming', 'greedy', 'mathematics']"
21791,2179100,Bodyguard,24,"['convex hull trick', 'dynamic programming']"
21792,2179200,Meetings 2,22,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'lowest common ancestor', 'segment tree', 'sparse table', 'tree']"
21793,2179300,Event Hopping 2,22,"['data structures', 'sparse table']"
21794,2179400,Navigation 2,25,['ad-hoc']
21795,2179500,Worst Reporter 4,23,"['data structures', 'dynamic programming', 'implementation', 'smaller to larger technique', 'set / map by trees']"
21796,2179600,Road Service 2,20,[]
21797,2179700,Road Service 3,20,[]
21798,2179800,Road Service 4,20,[]
21799,2179900,Road Service 5,20,[]
21800,2180000,Road Service 6,20,[]
21801,2180100,Праздники,0,[]
21802,2180200,Опечатки,0,[]
21803,2180300,Горнолыжные соревнования,0,[]
21804,2180400,Pinball,0,[]
21806,2180600,Красная Шапочка,0,[]
21807,2180700,Autobahn,19,"['prefix sum', 'sorting', 'sweeping']"
21808,2180800,Cigle,20,"['dynamic programming', 'prefix sum']"
21809,2180900,Izvanzemaljci,0,[]
21810,2181000,MalnaRISC,24,"['ad-hoc', 'sorting']"
21811,2181100,United Cows of Farmer John,22,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
21812,2181200,Routing Schemes,0,[]
21813,2181300,Balanced Subsets,22,['dynamic programming']
21814,2181400,United Cows of Farmer John,18,"['data structures', 'segment tree']"
21815,2181500,Portals,18,"['graph theory', 'minimum spanning tree']"
21816,2181600,Permutation,20,"['combinatorics', 'dynamic programming', 'geometry', 'mathematics']"
21817,2181700,Maze Tac Toe,17,"['breadth-first search', 'bitmask', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
21818,2181800,Do You Know Your ABCs?,17,"['bruteforcing', 'implementation', 'mathematics']"
21819,2181900,Acowdemia,13,"['binary search', 'greedy', 'parametric search']"
21820,2182000,Acowdemia I,11,"['greedy', 'parametric search']"
21821,2182100,Acowdemia II,9,"['bruteforcing', 'data structures', 'graph theory', 'implementation', 'sorting', 'string']"
21822,2182200,Acowdemia III,13,['greedy']
21823,2182300,Swap Swap Sort,20,"['ad-hoc', 'data structures', 'offline queries', 'segment tree', 'square root decomposition']"
21824,2182400,Weird Numeral System,21,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'mathematics']"
21825,2182500,Through Another Maze Darkly,23,"['data structures', 'depth-first search', 'euler tour technique', 'graph theory', 'graph traversal', 'offline queries', 'segment tree', 'tree']"
21826,2182600,Travelling Merchant,22,"['data structures', 'graph theory', 'priority queue']"
21827,2182700,Bread First Search,20,"['data structures', 'dynamic programming', 'segment tree with lazy propagation', 'segment tree']"
21828,2182800,Loop Town,29,"['value / coordinate compression', 'data structures', 'greedy', 'mathematics', 'segment tree', 'sorting']"
21829,2182900,Secret,17,['divide and conquer']
21830,2183000,Vote-Value Disparity 2,8,"['ad-hoc', 'constructive', 'heuristics']"
21831,2183100,Vote-Value Disparity 3,16,"['breadth-first search', 'graph theory', 'graph traversal', 'heuristics']"
21832,2183200,Vote-Value Disparity 4,0,[]
21833,2183300,Vote-Value Disparity 5,0,[]
21834,2183400,Contact Tracing,0,[]
21835,2183500,Coronavirus Testing,0,[]
21836,2183600,Quarantine Math,0,[]
21837,2183700,Border Restrictions,10,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'parsing', 'sparse table', 'string']"
21838,2183800,One-way Sidewalks,18,"['articulation points and bridges', 'biconnected component', 'depth-first search', 'graph theory', 'graph traversal']"
21839,2183900,Mutant Vaccine,19,"['string', 'suffix array and lcp array']"
21840,2184000,Sorting Device,16,[]
21841,2184100,Bubbles,5,"['combinatorics', 'mathematics']"
21842,2184200,Physical Distancing,14,['binary search']
21843,2184300,Game Show,0,[]
21844,2184400,Keyboard,21,"['bit set', 'knapsack', 'tree']"
21845,2184500,A Difficult(y) Choice,19,"['ad-hoc', 'binary search', 'mathematics']"
21846,2184600,Inside information,23,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'offline queries', 'segment tree', 'tree']"
21847,2184700,From Hacks to Snitches,26,"[""dijkstra's"", 'graph theory', 'implementation']"
21848,2184800,The short shank; Redemption,23,"['data structures', 'disjoint set', 'dynamic programming', 'dynamic programming on trees', 'greedy', 'priority queue', 'tree']"
21849,2184900,The Collection Game,24,"['ad-hoc', 'sorting']"
21850,2185000,The Xana coup,18,"['dynamic programming', 'dynamic programming on trees', 'tree']"
21851,2185100,육각형 영역,0,[]
21852,2185200,밀림 점프,21,"['data structures', 'greedy', 'sparse table']"
21853,2185300,도로 폐쇄,23,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'segment tree', 'tree']"
21854,2185400,Monsters,9,"['exponentiation by squaring', 'mathematics']"
21855,2185500,DNA,10,['constructive']
21856,2185600,Promotion,0,[]
21857,2185700,Comeback,0,[]
21858,2185800,Walk,0,[]
21860,2186000,XorSum,21,"['bitmask', 'sorting', 'two-pointer']"
21861,2186100,Binary Subsequences,0,[]
21862,2186200,Permutation Recovery,0,[]
21863,2186300,__builtout_popcount,20,"['bitmask', 'implementation']"
21864,2186400,이산로그가 장난이냐?,23,"['discrete logarithm', 'mathematics', 'number theory', 'precomputation']"
21865,2186500,Railroad,22,"['2-sat', 'graph theory', 'strongly connected component']"
21866,2186600,추첨을 통해 커피를 받자,3,['implementation']
21867,2186700,Java Bitecode,4,"['implementation', 'string']"
21868,2186800,미적분학 입문하기,9,"['calculus', 'mathematics']"
21869,2186900,Maximum Bishop,9,"['ad-hoc', 'constructive']"
21870,2187000,시철이가 사랑한 GCD,11,"['bruteforcing', 'divide and conquer', 'euclidean algorithm', 'mathematics', 'number theory', 'recursion']"
21871,2187100,화석 발굴 이벤트,15,['mathematics']
21872,2187200,Deque Game,16,"['ad-hoc', 'combinatorics', 'mathematics']"
21873,2187300,개구리 징검다리 건너기,15,"['ad-hoc', 'constructive']"
21874,2187400,모자 게임,14,"['ad-hoc', 'mathematics']"
21875,2187500,Innohorse,0,[]
21876,2187600,Squarow,0,[]
21877,2187700,Innoforest,0,[]
21878,2187800,Stones Distribution,21,"['dynamic programming', 'greedy']"
21879,2187900,XOR sum,22,['case work']
21880,2188000,The Game,4,"['constructive', 'implementation']"
21881,2188100,Innome,0,[]
21882,2188200,Coins on a tree,15,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'tree']"
21883,2188300,Game of Wizards,23,"['binary search', 'dynamic programming']"
21884,2188400,Boolean Expression,25,"['data structures', 'dynamic programming', 'heavy-light decomposition', 'parsing', 'segment tree', 'string', 'tree']"
21885,2188500,New Puzzle,0,[]
21886,2188600,Countdown,0,[]
21887,2188700,Railroad,0,[]
21888,2188800,Math Candies,20,"['mathematics', 'string', 'suffix array and lcp array']"
21889,2188900,K-th order statistic,19,['ad-hoc']
21890,2189000,File names,5,"['implementation', 'string']"
21891,2189100,Neatness,0,[]
21892,2189200,Tax Collection,0,[]
21893,2189300,Road Building,0,[]
21894,2189400,The Expert,0,[]
21895,2189500,Rock-Paper-Scissors for three,4,"['implementation', 'string']"
21896,2189600,Life in Innopolis,0,[]
21897,2189700,Barrels,0,[]
21898,2189800,Wedding cake,15,['constructive']
21899,2189900,Magical hourglass store,18,"['dynamic programming', 'square root decomposition']"
21900,2190000,String Game,0,[]
21901,2190100,Bitwise Formula,0,[]
21902,2190200,Peterson Polyglot,20,"['data structures', 'smaller to larger technique', 'tree', 'trie']"
21903,2190300,Parquet Re-laying,21,[]
21904,2190400,Selling Numbers,0,[]
21905,2190500,Archeologists,21,"['data structures', 'dynamic programming', 'greedy', 'prefix sum', 'priority queue', 'slope trick']"
21906,2190600,Reverse Game,16,"['ad-hoc', 'game theory']"
21907,2190700,3-colorings,25,"['constructive', 'graph theory']"
21908,2190800,Disk Sort,20,"['ad-hoc', 'case work', 'constructive']"
21909,2190900,Divisible by 3,15,"['dynamic programming', 'mathematics', 'prefix sum']"
21910,2191000,Fence Job,22,"['dynamic programming', 'prefix sum']"
21911,2191100,Simple Hull,0,[]
21912,2191200,AND = OR,21,"['bitmask', 'case work', 'data structures', 'segment tree']"
21913,2191300,Modulo Permutations,19,"['dynamic programming', 'mathematics', 'number theory']"
21914,2191400,One Piece,0,[]
21915,2191500,Codenames,23,['bitmask']
21916,2191600,Neo-Robin Hood,20,"['binary search', 'data structures', 'greedy', 'parametric search', 'priority queue']"
21917,2191700,Mistake,9,['greedy']
21918,2191800,전구,4,"['implementation', 'simulation']"
21919,2191900,소수 최소 공배수,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
21920,2192000,서로소 평균,7,"['euclidean algorithm', 'mathematics', 'number theory']"
21921,2192100,블로그,8,"['prefix sum', 'sliding window']"
21922,2192200,학부 연구생 민상,11,"['graph theory', 'graph traversal', 'implementation', 'simulation']"
21923,2192300,곡예 비행,12,['dynamic programming']
21924,2192400,도시 건설,12,"['graph theory', 'minimum spanning tree']"
21925,2192500,짝수 팰린드롬,13,"['dynamic programming', 'greedy']"
21926,2192600,Three-Axis Views,11,"['greedy', 'implementation']"
21927,2192700,Secrets of Legendary Treasure,13,"['dynamic programming', 'greedy']"
21928,2192800,Short Coding,18,"['backtracking', 'bruteforcing', 'constructive', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
21929,2192900,Colorful Rectangle,25,"['value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
21930,2193000,Jewelry Size,19,"['binary search', 'geometry', 'mathematics']"
21931,2193100,Solar Car,0,[]
21932,2193200,"To be Connected, or not to be, that is the Question",20,"['data structures', 'disjoint set', 'greedy']"
21933,2193300,LCM of GCDs,21,"['data structures', 'mathematics', 'number theory', 'segment tree']"
21934,2193400,High-Tech Detective,22,"['case work', 'combinatorics', 'dynamic programming', 'mathematics']"
21935,2193500,Formica Sokobanica,15,"['depth-first search', 'graph theory', 'graph traversal']"
21936,2193600,Suffixes may Contain Prefixes,23,"['knuth–morris–pratt', 'string']"
21937,2193700,작업,10,"['depth-first search', 'graph theory', 'graph traversal']"
21938,2193800,영상처리,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
21939,2193900,문제 추천 시스템 Version 1,12,"['data structures', 'priority queue', 'set / map by trees']"
21940,2194000,가운데에서 만나기,12,"['floyd–warshall', 'graph theory']"
21941,2194100,문자열 제거,12,"['dynamic programming', 'string']"
21942,2194200,부품 대여장,14,"['data structures', 'set / map by hashing', 'implementation', 'parsing', 'string']"
21943,2194300,연산 최대로,14,"['bruteforcing', 'greedy']"
21944,2194400,문제 추천 시스템 Version 2,14,"['data structures', 'set / map by trees']"
21945,2194500,Palindromes,4,"['implementation', 'mathematics', 'string']"
21946,2194600,Norela,10,"['bitmask', 'bruteforcing']"
21947,2194700,Shell,0,[]
21948,2194800,The Grade,0,[]
21949,2194900,Cambridge,0,[]
21950,2195000,MaxComp,0,[]
21951,2195100,DEL13,0,[]
21952,2195200,Hidden Sequence,0,[]
21953,2195300,Balanced Tree,0,[]
21954,2195400,D-균형 트리,20,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
21955,2195500,Split,4,['string']
21956,2195600,Treasure,11,"['data structures', 'stack', 'string']"
21957,2195700,Mean,13,[]
21958,2195800,Simple,18,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
21959,2195900,Subway,10,"['combinatorics', 'constructive', 'mathematics', 'tree']"
21960,2196000,Consul,11,['randomization']
21961,2196100,Costinland,0,[]
21962,2196200,Cat,0,[]
21963,2196300,Mouse,0,[]
21964,2196400,선린인터넷고등학교 교가,3,['string']
21965,2196500,드높은 남산 위에 우뚝 선,5,['implementation']
21966,2196600,(중략),6,"['case work', 'implementation', 'string']"
21967,2196700,세워라 반석 위에,8,['bruteforcing']
21968,2196800,선린의 터를,8,"['mathematics', 'number theory']"
21969,2196900,Cheerleader,0,[]
21970,2197000,Football,18,"['game theory', 'mathematics']"
21971,2197100,Table Tennis,0,[]
21972,2197200,Trampoline,16,"['data structures', 'sparse table']"
21973,2197300,남극 탐험,25,"['link/cut tree', 'tree']"
21974,2197400,MJESEC,0,[]
21975,2197500,NIZOVI,0,[]
21976,2197600,Crossing,20,"['data structures', 'hashing', 'segment tree with lazy propagation', 'segment tree']"
21977,2197700,Financial Report,20,"['data structures', 'disjoint set', 'dynamic programming', 'segment tree']"
21978,2197800,Monster Game,23,"['ad-hoc', 'case work', 'divide and conquer', 'graph theory', 'sorting']"
21979,2197900,16진수 쪼개기,8,['bruteforcing']
21980,2198000,비슷한 번호판,8,"['combinatorics', 'mathematics', 'string']"
21981,2198100,고장난 시계,17,"['chinese remainder theorem', 'extended euclidean algorithm', 'mathematics', 'number theory']"
21982,2198200,상자 빌리기,15,"['data structures', 'deque', 'greedy', 'two-pointer']"
21983,2198300,Basalt Breakdown,3,"['arithmetic', 'geometry', 'mathematics']"
21984,2198400,나무 징검다리,17,['dynamic programming']
21985,2198500,ASCII Automata Art,21,"['implementation', 'parsing', 'recursion', 'string']"
21986,2198600,Button Lock,22,"['bipartite matching', 'maximum flow', 'graph theory', 'minimum cost maximum flow']"
21987,2198700,Cactus Not Enough,22,[]
21988,2198800,Digits,18,"['dynamic programming', 'implementation', 'mathematics', 'number theory']"
21989,2198900,Equilibrium Point /\/\,22,[]
21990,2199000,Fiber Shape,27,[]
21991,2199100,Guide,17,"['depth-first search', 'graph theory', 'graph traversal', 'greedy', 'implementation', 'tree']"
21992,2199200,Hard Optimization,26,[]
21993,2199300,Is It Rated?,21,"['calculus', 'heuristics', 'mathematics', 'statistics']"
21994,2199400,Japanese Game,22,"['ad-hoc', 'case work', 'constructive', 'implementation']"
21995,2199500,King’s Task,12,"['ad-hoc', 'implementation', 'simulation']"
21996,2199600,DNA Manipulator,0,[]
21997,2199700,Light-Cycle Race,0,[]
21998,2199800,BUKA,0,[]
21999,2199900,svemir,0,[]
22007,2200700,Zeros,9,"['mathematics', 'number theory']"
22008,2200800,Luna Likes Love,18,"['data structures', 'greedy', 'segment tree']"
22010,2201000,Lanterns,23,"['data structures', 'dynamic programming', 'segment tree']"
22011,2201100,Shopping Fever,11,"['dynamic programming', 'greedy']"
22012,2201200,Railway,0,[]
22014,2201400,Double Move,0,[]
22015,2201500,金平糖 (Konpeito),2,"['arithmetic', 'implementation', 'mathematics']"
22016,2201600,巻物 (Scroll),4,"['implementation', 'string']"
22017,2201700,イルミネーション 2 (Illumination 2),7,['prefix sum']
22018,2201800,展覧会 2 (Exhibition 2),12,"['binary search', 'greedy']"
22019,2201900,パレード (Parade),14,"[""dijkstra's"", 'graph theory']"
22020,2202000,デジタルアート (Digital Art),19,"['value / coordinate compression', 'sliding window', 'sweeping', 'two-pointer']"
22021,2202100,자동분무기,17,['mathematics']
22022,2202200,Robot,14,"['breadth-first search', 'graph theory', 'graph traversal']"
22023,2202300,Distributing Candies,23,"['binary search', 'data structures', 'segment tree with lazy propagation', 'offline queries', 'prefix sum', 'segment tree']"
22024,2202400,Keys,25,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'strongly connected component', 'smaller to larger technique']"
22025,2202500,Fountain Parks,25,"['ad-hoc', 'constructive', 'data structures', 'disjoint set', 'graph theory']"
22026,2202600,카드 뒤집기 게임,14,['ad-hoc']
22027,2202700,통신망,29,"['articulation points and bridges', 'biconnected component', 'case work', 'data structures', 'depth-first search', 'disjoint set', 'euler tour technique', 'graph theory', 'graph traversal', 'implementation', 'segment tree', 'sweeping', 'tree']"
22028,2202800,렉,24,"['data structures', 'implementation', 'segment tree', 'sweeping']"
22029,2202900,철도,18,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
22030,2203000,총 쏘기,30,"['data structures', 'graph theory', 'segment tree', 'set / map by trees']"
22031,2203100,회의실,21,"['value / coordinate compression', 'data structures', 'dynamic programming', 'priority queue', 'sorting']"
22032,2203200,원숭이,16,['dynamic programming']
22033,2203300,가로등,28,"['data structures', 'divide and conquer', 'implementation', 'offline queries', 'segment tree']"
22034,2203400,Alto Singing,9,['bruteforcing']
22035,2203500,Bus Lines,6,"['constructive', 'graph theory']"
22036,2203600,Costly Contest,15,['knapsack']
22037,2203700,DEX Save,9,"['bruteforcing', 'recursion']"
22038,2203800,Even Electricity,18,"['binary search', 'implementation', 'parametric search', 'simulation']"
22039,2203900,Forgotten Homework,21,['berlekamp–massey']
22040,2204000,Guessing Circle,0,[]
22041,2204100,Alphabet Contest,0,[]
22042,2204200,Need More T-shirts!,18,"['dynamic programming', 'knapsack', 'mathematics', 'number theory']"
22043,2204300,The Final Countdown,0,[]
22044,2204400,Painting,0,[]
22045,2204500,Chicken Farm,0,[]
22046,2204600,Mutating DNA,15,"['greedy', 'prefix sum']"
22047,2204700,Dungeons Game,25,"['data structures', 'dynamic programming', 'sparse table']"
22048,2204800,Bit Shift Registers,26,"['ad-hoc', 'bitmask', 'sorting']"
22049,2204900,Сгибание ленточки,0,[]
22050,2205000,Сбор монет,0,[]
22051,2205100,Топологическая сортировка и дети,0,[]
22052,2205200,Правильный сад,21,"['data structures', 'geometry', 'segment tree']"
22053,2205300,Междуречье,0,[]
22054,2205400,Робот на дереве,0,[]
22055,2205500,Игра со строками,0,[]
22056,2205600,Разбиение на команды,0,[]
22057,2205700,Карта,0,[]
22058,2205800,Декартовы деревья,0,[]
22059,2205900,Аллея,0,[]
22060,2206000,Освещение сцены,0,[]
22061,2206100,Покупка велосипеда,3,"['arithmetic', 'mathematics']"
22062,2206200,Цифровые корни,7,"['mathematics', 'number theory']"
22063,2206300,Две улитки,0,[]
22064,2206400,Игровые автоматы,0,[]
22065,2206500,Интернетопровод,0,[]
22066,2206600,Турникеты в метро,5,[]
22067,2206700,Игра,0,[]
22068,2206800,Палочки и Шарниры,0,[]
22069,2206900,Числа Фибоначчи,0,[]
22070,2207000,Телепорты,0,[]
22071,2207100,Магические карточки,5,"['greedy', 'sorting']"
22072,2207200,Домашнее задание,0,[]
22073,2207300,Конгресс юных любителей,0,[]
22074,2207400,Расшифровка,21,[]
22075,2207500,Занимательная криптография,0,[]
22076,2207600,Воздушные шарики,6,"['constructive', 'data structures', 'set / map by hashing', 'implementation']"
22077,2207700,Контрольная закупка,0,[]
22078,2207800,Торжественный парад,0,[]
22079,2207900,Миньоны развлекаются,0,[]
22080,2208000,Лотерея,0,[]
22081,2208100,Игра,0,[]
22082,2208200,Покраска здания,0,[]
22083,2208300,Задача о рюкзаке,0,[]
22084,2208400,Организация сети,0,[]
22085,2208500,Булево дерево,0,[]
22086,2208600,Робот,0,[]
22087,2208700,Разбор задач,10,"['bruteforcing', 'greedy', 'implementation']"
22088,2208800,На далекой Амазонке,0,[]
22089,2208900,Лабораторная по физике,0,[]
22090,2209000,Конструктор пил,16,"['dynamic programming', 'prefix sum']"
22091,2209100,Зарплата,0,[]
22092,2209200,Робот,0,[]
22093,2209300,Соцопрос,3,"['arithmetic', 'implementation', 'mathematics']"
22094,2209400,Сто,0,[]
22095,2209500,Поход в гости,6,"['data structures', 'implementation']"
22096,2209600,СНМ,0,[]
22097,2209700,Нанороботы,0,[]
22098,2209800,Треугольники,4,"['geometry', 'pythagoras theorem']"
22099,2209900,Оригами,6,"['mathematics', 'number theory', 'primality test']"
22100,2210000,Митя и граф,14,"['cactus', 'case work', 'constructive', 'graph theory']"
22101,2210100,Призы,15,"['dynamic programming', 'knapsack', 'prefix sum']"
22102,2210200,Криптостойкие ключи,0,[]
22103,2210300,Командная олимпиада,5,"['arithmetic', 'bruteforcing', 'mathematics']"
22104,2210400,Три ладьи,13,['case work']
22105,2210500,Король и королева,7,['mathematics']
22106,2210600,Дерево,0,[]
22107,2210700,Налог на проезд,0,[]
22108,2210800,Игра,4,['implementation']
22109,2210900,Таймер,0,[]
22110,2211000,Обратная задача о наибольшей возрастающей подпоследовательности,12,"['constructive', 'sorting']"
22111,2211100,Трехцветные шахматы,0,[]
22112,2211200,Как проложить сеть,0,[]
22113,2211300,창영이와 버스,5,['implementation']
22114,2211400,창영이와 점프,9,"['dynamic programming', 'two-pointer']"
22115,2211500,창영이와 커피,11,"['dynamic programming', 'knapsack']"
22116,2211600,창영이와 퇴근,12,"['binary search', ""dijkstra's"", 'graph theory', 'graph traversal', 'minimum spanning tree']"
22117,2211700,Две башни,0,[]
22118,2211800,Депозит,14,"['dynamic programming', 'greedy']"
22119,2211900,Кеплер,0,[]
22120,2212000,Тест,0,[]
22121,2212100,Лазеры,0,[]
22122,2212200,Колесо,0,[]
22123,2212300,Экзамен,3,"['arithmetic', 'implementation', 'mathematics']"
22124,2212400,Сообщение,10,"['case work', 'combinatorics', 'mathematics']"
22125,2212500,Матч века,0,[]
22126,2212600,Разбиение на массивы,0,[]
22127,2212700,Лесной феномен,0,[]
22128,2212800,Молекула,8,['string']
22129,2212900,Морской бой,0,[]
22130,2213000,Пробка,0,[]
22131,2213100,Таблица,0,[]
22132,2213200,Космическая экспедиция,0,[]
22133,2213300,Олимпиада,10,"['bruteforcing', 'inclusion and exclusion', 'mathematics']"
22134,2213400,Трапецоидная карта и трапеции,0,[]
22135,2213500,Хранение млурана,0,[]
22136,2213600,Защита планеты,0,[]
22137,2213700,Телепорты,0,[]
22138,2213800,Злые птицы,0,[]
22139,2213900,Трисолианцы,0,[]
22140,2214000,Процессор,0,[]
22141,2214100,Осада,0,[]
22142,2214200,Перемешивание колоды,0,[]
22143,2214300,Гоночная трасса,0,[]
22144,2214400,Епрестановка,0,[]
22145,2214500,Коронация,0,[]
22146,2214600,Социофоб,0,[]
22147,2214700,Монеты,0,[]
22148,2214800,Разбор строки,0,[]
22149,2214900,Принц,0,[]
22150,2215000,Шоколадка,3,"['implementation', 'mathematics']"
22151,2215100,Игра,4,['game theory']
22152,2215200,Часы,0,[]
22153,2215300,ГАС «Очередь»,0,[]
22154,2215400,Помехи,0,[]
22155,2215500,Простая задача,2,['implementation']
22156,2215600,Ключ к шифру,0,[]
22157,2215700,Тетраэдр,0,[]
22158,2215800,Задачи,0,[]
22159,2215900,Текстовый редактор,0,[]
22160,2216000,Параллелепипед,5,[]
22161,2216100,Перестройка,0,[]
22162,2216200,Война,0,[]
22163,2216300,Этикетка,0,[]
22164,2216400,Джавайское оружие,0,[]
22165,2216500,Перевод времени,0,[]
22166,2216600,Обратная задача о черепашке,0,[]
22167,2216700,Разбиения таблицы,0,[]
22168,2216800,Архиватор,16,['two-pointer']
22169,2216900,Блэкджон,0,[]
22170,2217000,Разрезание торта,0,[]
22171,2217100,Телешоу,6,"['mathematics', 'probability theory']"
22172,2217200,Веревочная почта,5,"['greedy', 'implementation']"
22173,2217300,Квадрат,0,[]
22174,2217400,Парад,0,[]
22175,2217500,Транзакции,0,[]
22176,2217600,Вирусы,0,[]
22177,2217700,Универсальная розетка,5,[]
22178,2217800,Граница,4,"['implementation', 'string']"
22179,2217900,Загранпаспорт,5,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
22180,2218000,Почтовое отправление,0,[]
22181,2218100,Сортировка очередями,0,[]
22182,2218200,Круговая диаграмма,4,"['arithmetic', 'geometry', 'mathematics']"
22183,2218300,Приготовление десертов,5,['bruteforcing']
22184,2218400,Восстановление строки,0,[]
22185,2218500,Убей свинью,0,[]
22186,2218600,Чаепитие,0,[]
22187,2218700,Конкатенация строк,6,"['implementation', 'parsing', 'string']"
22188,2218800,Тарифы,4,"['arithmetic', 'implementation', 'mathematics']"
22189,2218900,K-cортировка,9,['sorting']
22190,2219000,Рельсы,0,[]
22191,2219100,Угадай число,0,[]
22193,2219300,Multiply,1,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
22194,2219400,Museum,0,[]
22195,2219500,Necklace 4,22,"['dynamic programming', 'knuth–morris–pratt', 'string']"
22196,2219600,Political Development,21,"['graph theory', 'mathematics']"
22197,2219700,Railway,20,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'lowest common ancestor', 'smaller to larger technique', 'sparse table', 'tree', 'tree decomposition']"
22198,2219800,Toll,19,"['data structures', 'segment tree', 'sparse table']"
22199,2219900,Cat in a tree,23,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'dynamic programming', 'tree']"
22200,2220000,Plus Minus,20,"['graph theory', 'mathematics']"
22201,2220100,Tiny - 1,13,"['ad-hoc', 'case work', 'constructive', 'heuristics', 'implementation', 'mathematics']"
22202,2220200,Tiny - 2,15,"['ad-hoc', 'constructive', 'implementation', 'string']"
22203,2220300,Tiny - 3,25,"['ad-hoc', 'backtracking', 'bitmask', 'constructive', 'data structures', 'set / map by hashing', 'heuristics', 'implementation', 'string']"
22204,2220400,Tiny - 4,18,"['ad-hoc', 'backtracking', 'breadth-first search', 'bitmask', 'constructive', 'graph theory', 'graph traversal', 'heuristics', 'implementation']"
22205,2220500,Tiny - 5,18,"['ad-hoc', 'backtracking', 'breadth-first search', 'bitmask', 'constructive', 'graph theory', 'graph traversal', 'heuristics', 'implementation']"
22206,2220600,Mines - 1,19,"['ad-hoc', 'constructive', 'graph theory', 'graph traversal', 'mathematics']"
22207,2220700,Mines - 2,19,"['ad-hoc', 'constructive', 'graph theory', 'graph traversal', 'mathematics']"
22208,2220800,Mines - 3,19,"['ad-hoc', 'constructive', 'graph theory', 'graph traversal', 'mathematics']"
22209,2220900,Mines - 4,19,"['ad-hoc', 'constructive', 'graph theory', 'graph traversal', 'mathematics']"
22210,2221000,Mines - 5,19,"['ad-hoc', 'constructive', 'graph theory', 'graph traversal', 'mathematics']"
22211,2221100,Mines - 6,19,"['ad-hoc', 'constructive', 'graph theory', 'graph traversal', 'mathematics']"
22212,2221200,Mines - 7,19,"['ad-hoc', 'constructive', 'graph theory', 'graph traversal', 'mathematics']"
22213,2221300,Mines - 8,19,"['ad-hoc', 'constructive', 'graph theory', 'graph traversal', 'mathematics']"
22214,2221400,Mines - 9,19,"['ad-hoc', 'constructive', 'graph theory', 'graph traversal', 'mathematics']"
22215,2221500,Mines - 10,19,"['ad-hoc', 'constructive', 'graph theory', 'graph traversal', 'mathematics']"
22216,2221600,Ships,0,[]
22217,2221700,Scales,9,['mathematics']
22218,2221800,Repeats,22,"['string', 'suffix array and lcp array']"
22219,2221900,Rectangles,0,[]
22220,2222000,Car Park,0,[]
22221,2222100,Table 1,4,"['constructive', 'mathematics']"
22222,2222200,지애 상수,0,[]
22223,2222300,Table 2,7,"['bruteforcing', 'constructive', 'precomputation']"
22224,2222400,Table 3,11,"['bruteforcing', 'constructive', 'mathematics', 'number theory', 'randomization']"
22225,2222500,Table 4,13,"['constructive', 'mathematics', 'number theory']"
22226,2222600,Table 5,11,"['bruteforcing', 'constructive', 'mathematics', 'precomputation']"
22227,2222700,Table 6,11,"['bruteforcing', 'constructive', 'mathematics', 'precomputation']"
22228,2222800,Table 7,10,"['constructive', 'mathematics', 'number theory']"
22229,2222900,Table 8,16,"['bruteforcing', 'constructive', 'implementation', 'mathematics', 'number theory', 'precomputation', 'randomization']"
22230,2223000,Table 9,15,"['bruteforcing', 'constructive', 'mathematics', 'precomputation', 'randomization']"
22231,2223100,Table 10,16,"['bruteforcing', 'constructive', 'implementation', 'mathematics', 'number theory', 'randomization']"
22232,2223200,가희와 파일 탐색기,8,['sorting']
22233,2223300,가희와 키워드,9,"['data structures', 'set / map by hashing', 'parsing', 'string']"
22234,2223400,가희와 은행,11,"['data structures', 'implementation', 'queue', 'simulation']"
22235,2223500,가희와 수인 분당선 1,14,"['dynamic programming', 'implementation']"
22236,2223600,가희와 비행기,12,"['combinatorics', 'dynamic programming', 'mathematics']"
22237,2223700,가희와 거북이 인형,16,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'mathematics', 'physics']"
22238,2223800,가희와 btd5,12,"['binary search', 'euclidean algorithm', 'geometry', 'mathematics', 'number theory', 'sorting']"
22239,2223900,가희와 읽기 쓰기 놀이 2,15,"['backtracking', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'set / map by trees']"
22240,2224000,CIRCUS,0,[]
22241,2224100,HAPPINESS,0,[]
22242,2224200,Map,7,"['geometry', 'parsing', 'string']"
22243,2224300,Piles of books,7,['implementation']
22244,2224400,Cataloguing numbers,5,"['implementation', 'parsing', 'string']"
22245,2224500,Boats,9,"['greedy', 'sorting']"
22246,2224600,Chairs,7,['implementation']
22251,2225100,빌런 호석,11,"['bruteforcing', 'implementation']"
22252,2225200,정보 상인 호석,11,"['data structures', 'set / map by hashing', 'priority queue', 'set / map by trees']"
22253,2225300,트리 디자이너 호석,15,"['dynamic programming', 'dynamic programming on trees', 'tree']"
22254,2225400,공정 컨설턴트 호석,12,"['binary search', 'data structures', 'parametric search', 'priority queue']"
22255,2225500,호석사우루스,14,"[""dijkstra's"", 'graph theory']"
22256,2225600,Competition,9,"['greedy', 'implementation', 'sorting']"
22257,2225700,Departure,0,[]
22258,2225800,Truck,0,[]
22259,2225900,Fraud,12,"['implementation', 'mathematics']"
22260,2226000,Archaeologist,23,"['ad-hoc', 'dynamic programming', 'dynamic programming on trees', 'tree']"
22261,2226100,Password,23,"['dynamic programming', 'slope trick']"
22262,2226200,Tiles,23,"['case work', 'data structures', 'dynamic programming', 'segment tree']"
22263,2226300,Pond,0,[]
22264,2226400,Almost Origami,23,['constructive']
22265,2226500,Beautiful Mountains,19,"['binary search', 'data structures', 'segment tree', 'two-pointer']"
22266,2226600,Crisis at the Wedding,14,"['greedy', 'implementation', 'simulation']"
22267,2226700,Dividing Candy,11,"['data structures', 'greedy', 'mathematics', 'priority queue']"
22268,2226800,Excellent Views,17,"['data structures', 'prefix sum', 'sorting', 'stack', 'set / map by trees']"
22269,2226900,Fascinating Partitions,21,"['data structures', 'dynamic programming', 'stack']"
22270,2227000,Game of Slots,21,"['combinatorics', 'dynamic programming', 'game theory', 'mathematics', 'probability theory']"
22271,2227100,Halting Wolf,18,"['maximum flow', 'graph theory']"
22272,2227200,Impenetrable Wall,21,"['convex hull', 'dynamic programming', 'geometry']"
22273,2227300,Job Allocator,17,"['bitmask', 'bruteforcing', 'data structures']"
22274,2227400,Keylogger,17,"['binary search', 'dynamic programming', 'prefix sum']"
22275,2227500,Lola’s Schedule,12,"['bruteforcing', 'mathematics']"
22276,2227600,May I Add a Letter?,0,[]
22277,2227700,Non-Integer Donuts,5,"['mathematics', 'parsing', 'string']"
22278,2227800,두 최단 경로,30,"[""dijkstra's"", 'maximum flow', 'graph theory', 'minimum cost maximum flow', 'smaller to larger technique', 'tree']"
22279,2227900,Quality-Adjusted Life-Year,3,"['arithmetic', 'mathematics']"
22280,2228000,Gwen's Gift,0,[]
22281,2228100,Forest for the Trees,8,"['arithmetic', 'mathematics', 'number theory']"
22282,2228200,H-Index,6,"['bruteforcing', 'sorting']"
22283,2228300,Driving Lanes,14,"[""dijkstra's"", 'graph theory']"
22284,2228400,Treasure Spotting,16,['geometry']
22285,2228500,Neighborhood Watch,7,['sorting']
22286,2228600,Small Schedule,12,"['data structures', 'priority queue']"
22287,2228700,Mr. Plow King,0,[]
22288,2228800,Rainbow Road Race,15,"['bitmask', ""dijkstra's"", 'graph theory']"
22289,2228900,큰 수 곱셈 (3),20,"['fast fourier transform', 'mathematics']"
22290,2229000,lattice,7,"['euclidean algorithm', 'geometry', 'mathematics', 'number theory']"
22291,2229100,squarePrime,6,"['mathematics', 'number theory', 'primality test']"
22292,2229200,shortestpathcube,8,"['case work', 'geometry', 'geometry; 3d', 'mathematics', 'pythagoras theorem']"
22293,2229300,base2i,10,"['mathematics', 'number theory']"
22294,2229400,SMH,12,"['bruteforcing', 'geometry', 'mathematics']"
22295,2229500,twOBoOgEr,14,['physics']
22296,2229600,cubic,15,"['bruteforcing', 'case work', 'mathematics', 'number theory']"
22297,2229700,Map Puzzle,0,[]
22298,2229800,Ancient Numerals,0,[]
22299,2229900,Cipher,10,"['data structures', 'set / map by hashing', 'implementation', 'string']"
22300,2230000,Runners,0,[]
22301,2230100,Palindrome Numbers,11,['case work']
22302,2230200,Factorial Factors,7,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
22303,2230300,Chuck's Challenge,0,[]
22304,2230400,Optic Communications,0,[]
22305,2230500,Resources,0,[]
22306,2230600,트리의 색깔과 쿼리 2,21,"['data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'segment tree', 'smaller to larger technique', 'tree', 'set / map by trees']"
22307,2230700,Maze 2,19,"['ad-hoc', 'constructive', 'graph theory', 'graph traversal', 'implementation']"
22308,2230800,Maze 3,0,[]
22309,2230900,Maze 4,0,[]
22310,2231000,Maze 5,0,[]
22311,2231100,Maze 6,12,"['ad-hoc', 'constructive', 'graph theory', 'graph traversal', 'implementation']"
22312,2231200,Maze 7,8,"['ad-hoc', 'constructive']"
22313,2231300,Maze 8,11,"['ad-hoc', 'constructive']"
22314,2231400,Maze 9,12,"['ad-hoc', 'constructive']"
22315,2231500,Maze 10,0,[]
22316,2231600,Regions,22,"['depth-first search', 'euler tour technique', 'graph theory', 'graph traversal', 'square root decomposition', 'tree']"
22317,2231700,Aliens,19,['binary search']
22327,2232700,Divisor game,14,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
22329,2232900,Trail Maintenance,16,"['bruteforcing', 'graph theory', 'graph traversal', 'minimum spanning tree', 'tree']"
22330,2233000,Reverse,0,[]
22331,2233100,Guess Which Cow,19,"['backtracking', 'bitmask', 'constructive', 'dynamic programming', 'greedy']"
22341,2234100,사각형 면적,4,"['arithmetic', 'implementation', 'mathematics']"
22342,2234200,계산 로봇,10,['dynamic programming']
22343,2234300,괄호의 값 비교,14,"['arbitrary precision / big integers', 'data structures', 'implementation', 'stack']"
22344,2234400,그래프 균형 맞추기,18,"['depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'sorting']"
22345,2234500,누적 거리,14,"['binary search', 'mathematics', 'prefix sum', 'sorting']"
22346,2234600,일이 이어져야 좋다,20,['divide and conquer']
22347,2234700,공통 괄호 문자열 사전,23,"['binary search', 'string', 'suffix array and lcp array']"
22348,2234800,헬기 착륙장,17,"['dynamic programming', 'prefix sum']"
22349,2234900,가장 긴 공통 괄호 문자열,22,"['binary search', 'data structures', 'hashing', 'parametric search', 'segment tree', 'string', 'suffix array and lcp array']"
22350,2235000,맛집 추천,24,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'dynamic programming', 'dynamic programming on trees', 'tree']"
22351,2235100,수학은 체육과목 입니다 3,7,"['bruteforcing', 'implementation', 'string']"
22352,2235200,항체 인식,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
22353,2235300,헤이카카오,10,"['mathematics', 'probability theory']"
22354,2235400,돌 가져가기,18,"['greedy', 'sorting']"
22355,2235500,말뚝,19,"['binary search', 'data structures', 'segment tree', 'ternary search']"
22356,2235600,"종이, 펜, 삼각형",22,"['fast fourier transform', 'mathematics', 'prefix sum']"
22357,2235700,경품 추첨,17,"['constructive', 'mathematics', 'number theory', 'primality test']"
22358,2235800,스키장,14,"['dynamic programming', 'graph theory']"
22359,2235900,흔한 타일 색칠 문제,19,"['constructive', 'divide and conquer', 'implementation']"
22360,2236000,UCPC 만들기,21,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'smaller to larger technique', 'tree', 'set / map by trees']"
22361,2236100,nmマス計算,4,"['bruteforcing', 'implementation']"
22362,2236200,爆発の連鎖,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
22363,2236300,忍ぶべし,0,[]
22364,2236400,そこそこバランスのとれた括弧列,0,[]
22365,2236500,Edamame Energy Engineering,0,[]
22366,2236600,アローダイス,0,[]
22367,2236700,競プロは小惑星探査の役に立つ,0,[]
22368,2236800,辺が先か，頂点が先か,0,[]
22369,2236900,On-Call,7,[]
22370,2237000,Warp Points,16,"['bruteforcing', 'data structures', 'dynamic programming', 'priority queue']"
22371,2237100,Rebound Sequences,0,[]
22372,2237200,Surround the Castle,17,"['bruteforcing', ""dijkstra's"", 'graph theory']"
22373,2237300,Buttons,15,"[""dijkstra's"", 'graph theory']"
22374,2237400,Mountain View,0,[]
22375,2237500,Yet Another Expression Mining,0,[]
22376,2237600,Aggressive Traveller,0,[]
22377,2237700,Irreversible Reactions,0,[]
22378,2237800,X-percent Blooming,0,[]
22379,2237900,Feed candies,0,[]
22380,2238000,割り勘,3,"['arithmetic', 'implementation', 'mathematics']"
22381,2238100,毒の沼地,8,"['geometry', 'mathematics']"
22382,2238200,避けるべし,0,[]
22383,2238300,文字列の魔法,0,[]
22384,2238400,成績上昇大作戦,0,[]
22385,2238500,全宇宙生命ゲノムデータベース リターンズ,0,[]
22386,2238600,Kは多角形のケイ,0,[]
22387,2238700,不思議なボタン,0,[]
22388,2238800,改元,3,['implementation']
22389,2238900,一般化うるう年,4,"['implementation', 'mathematics']"
22390,2239000,知識の証明,14,"['bruteforcing', 'data structures', 'parsing', 'recursion', 'stack', 'string']"
22391,2239100,短歌数,15,"['combinatorics', 'dynamic programming', 'mathematics']"
22392,2239200,分割統治,14,"['bipartite graph', 'graph theory']"
22393,2239300,対空シールド,0,[]
22394,2239400,カジノ,0,[]
22395,2239500,NINJA GAME,0,[]
22396,2239600,カレー作り,3,['mathematics']
22397,2239700,jfen,8,"['implementation', 'parsing', 'string']"
22398,2239800,カーテン,0,[]
22399,2239900,夏合宿の朝は早い,16,"['graph theory', 'strongly connected component']"
22400,2240000,ぼくのかんがえたさいきょうのおふとん,15,['dynamic programming']
22401,2240100,百人一首,0,[]
22402,2240200,野球観戦,18,"['combinatorics', 'mathematics']"
22403,2240300,阿吽の呼吸,5,"['data structures', 'implementation', 'stack', 'string']"
22404,2240400,豪邸と宅配便,4,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
22405,2240500,みさわさんの根付き木,12,"['implementation', 'parsing', 'string', 'tree']"
22406,2240600,インビジブル,17,"['dynamic programming', 'game theory']"
22407,2240700,選挙活動,0,[]
22408,2240800,土地相続,0,[]
22409,2240900,リングと紐,0,[]
22410,2241000,幾何問題を解こう,10,"['euclidean algorithm', 'mathematics', 'number theory']"
22411,2241100,監獄,8,"['mathematics', 'parametric search']"
22412,2241200,ABC Gene,14,"['bruteforcing', 'string']"
22413,2241300,真っ暗な部屋,17,"['breadth-first search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal']"
22414,2241400,坑道数式,13,['dynamic programming']
22415,2241500,ほぼ周期文字列,0,[]
22416,2241600,Escape,0,[]
22417,2241700,Bit Operation Game,0,[]
22418,2241800,ツインリバース,0,[]
22419,2241900,連結,0,[]
22420,2242000,Leapfrog,0,[]
22421,2242100,Koto Municipal Subway,3,"['bruteforcing', 'geometry', 'mathematics', 'pythagoras theorem']"
22422,2242200,Airport Codes,8,"['bruteforcing', 'string']"
22423,2242300,Falling Block Puzzle,0,[]
22424,2242400,Alternate Escape,0,[]
22425,2242500,Dice Stamp,0,[]
22426,2242600,Stamp Rally,0,[]
22427,2242700,Kuru Kuru Door,0,[]
22428,2242800,Step Aerobics,6,['implementation']
22429,2242900,JAG-channel,10,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'stack', 'string', 'two-pointer']"
22430,2243000,Broken Cipher Generator,14,"['data structures', 'greedy', 'parsing', 'recursion', 'stack', 'string']"
22431,2243100,1 Day Passport,0,[]
22432,2243200,Wish upon a shooting star,0,[]
22433,2243300,Elevator Hall Number,0,[]
22434,2243400,Golf,0,[]
22435,2243500,Koto Distance,11,['prefix sum']
22436,2243600,Evacuation Route,14,"['data structures', 'priority queue']"
22437,2243700,Apples,0,[]
22438,2243800,TiMe Table,0,[]
22439,2243900,Pattern Language,15,"['data structures', 'disjoint set']"
22440,2244000,Social Monsters,0,[]
22441,2244100,Perm Query,18,"['mathematics', 'permutation cycle decomposition']"
22442,2244200,Invest Master,13,"['dynamic programming', 'knapsack']"
22443,2244300,Minus One,14,"['breadth-first search', 'combinatorics', 'graph theory', 'graph traversal', 'mathematics', 'meet in the middle']"
22444,2244400,Wave Attack,16,"['geometry', 'mathematics', 'pythagoras theorem']"
22445,2244500,Fast Division,14,"[""fermat's little theorem"", 'mathematics', 'number theory']"
22446,2244600,順位付け,0,[]
22447,2244700,Phutball,0,[]
22448,2244800,Unordered Operators,15,"['bruteforcing', 'data structures', 'mathematics', 'parsing', 'recursion', 'stack', 'string']"
22449,2244900,Almost Same Substring,18,"['string', 'z']"
22450,2245000,くるくるくるりん,0,[]
22451,2245100,Air Pollution,19,[]
22452,2245200,京都旅行,0,[]
22453,2245300,A + B,0,[]
22454,2245400,Save Your Privacy!,6,['bruteforcing']
22455,2245500,You Are the Judge,8,"['implementation', 'simulation', 'sorting']"
22456,2245600,Equation,8,"['bruteforcing', 'implementation', 'string']"
22457,2245700,Milky Way,18,"['bruteforcing', ""dijkstra's"", 'floyd–warshall', 'geometry', 'graph theory', 'line segment intersection check']"
22458,2245800,The Enemy of My Enemy is My Friend,18,[]
22459,2245900,Dog Food,0,[]
22460,2246000,Sister Ports,26,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'dynamic programming on trees', 'graph theory', 'tree', 'tree decomposition']"
22461,2246100,Kakezan,6,"['implementation', 'mathematics', 'simulation']"
22462,2246200,A Holiday of Miss Brute Force,15,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
22463,2246300,Treasure Hunt,16,"['binary search', 'value / coordinate compression', 'prefix sum']"
22464,2246400,hosonagaitokoro,0,[]
22465,2246500,Lost Number,0,[]
22466,2246600,marukaite,18,"['maximum flow', 'minimum cost maximum flow']"
22467,2246700,Longest Increasing Sequence,0,[]
22468,2246800,House Moving,17,"['data structures', 'dynamic programming', 'segment tree']"
22469,2246900,Sports Days 2.0,0,[]
22470,2247000,Final Defense Line,0,[]
22471,2247100,Audition,0,[]
22472,2247200,Zero Division Checker,14,"['data structures', 'dynamic programming', 'stack']"
22473,2247300,Card,0,[]
22474,2247400,DNA,0,[]
22475,2247500,YAML,0,[]
22476,2247600,Hakone,13,['dynamic programming']
22477,2247700,Kagisys,5,"['bruteforcing', 'data structures', 'set / map by hashing', 'implementation', 'string']"
22478,2247800,FizzBuzz,16,"['mathematics', 'parametric search']"
22479,2247900,ConvexCut,15,['geometry']
22480,2248000,ReverseSort,16,"['breadth-first search', 'graph theory', 'graph traversal', 'meet in the middle']"
22481,2248100,Substring,19,"['hashing', 'mathematics', 'number theory', 'rabin–karp', 'string']"
22482,2248200,MinimumCostPath,0,[]
22483,2248300,Enumeration,12,"['bruteforcing', 'inclusion and exclusion', 'mathematics', 'probability theory', 'recursion']"
22484,2248400,A Two Floors Dungeon,16,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
22485,2248500,Area Folding,0,[]
22486,2248600,Connect,0,[]
22487,2248700,Do use segment tree,23,"['data structures', 'heavy-light decomposition', 'implementation', 'segment tree with lazy propagation', 'segment tree', 'tree']"
22488,2248800,Move on Dice,0,[]
22489,2248900,Pipeline Plans,0,[]
22490,2249000,Presentation,0,[]
22491,2249100,Repairing,0,[]
22492,2249200,Sun and Moon,0,[]
22493,2249300,Usoperanto,0,[]
22494,2249400,Attack the Moles,0,[]
22495,2249500,Brilliant Stars,0,[]
22496,2249600,Common Palindromes,0,[]
22497,2249700,Dangerous Tower,19,"['maximum flow', 'minimum cost maximum flow']"
22498,2249800,Entangled with Lottery,15,['dynamic programming']
22499,2249900,Power of Power,18,"['case work', 'greedy', 'mathematics', 'sorting']"
22500,2250000,Quest of Merchant,16,"['dynamic programming', 'travelling salesman problem']"
22501,2250100,Rectangular Stamps,17,"['breadth-first search', 'bitmask', 'bruteforcing', 'graph theory', 'graph traversal']"
22502,2250200,Starting Line,12,['greedy']
22503,2250300,Tiles are Colorful,14,"['bruteforcing', 'case work', 'implementation', 'simulation']"
22504,2250400,Calender Colors,10,['bruteforcing']
22505,2250500,Sleeping Time,13,"['divide and conquer', 'mathematics', 'probability theory', 'recursion']"
22506,2250600,On or Off,16,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'greedy', 'tree']"
22507,2250700,Marathon Match,13,"['bruteforcing', 'combinatorics', 'dynamic programming', 'mathematics', 'probability theory']"
22508,2250800,Reverse Roads,17,['maximum flow']
22509,2250900,Beautiful Currency,0,[]
22510,2251000,Rabbit Party,0,[]
22511,2251100,Palindrome Generator,0,[]
22512,2251200,White Bird,0,[]
22513,2251300,Vector Compression,0,[]
22514,2251400,Rose Garden Witch,15,"['geometry', 'sweeping']"
22515,2251500,Dessert Witch,12,"['implementation', 'simulation']"
22516,2251600,Magical Girl Sayaka-chan,17,"['dynamic programming', 'greedy']"
22517,2251700,Box Witch,19,['maximum flow']
22518,2251800,Scribbling witch,24,"['dynamic programming', 'dynamic programming using connection profile']"
22519,2251900,Shadow Witch,0,[]
22520,2252000,Mermaid Witch,19,"['case work', 'geometry', 'mathematics']"
22521,2252100,Class Representative Witch,15,"['binary search', 'prefix sum']"
22522,2252200,Set-constructing Witch,0,[]
22523,2252300,Soul Gem Game,0,[]
22524,2252400,koukyoukoukokukikou,4,"['implementation', 'string']"
22525,2252500,Brave Force Story,11,"['breadth-first search', 'graph theory', 'graph traversal']"
22526,2252600,Fastest Route,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
22527,2252700,6÷2(1+2),16,"['bruteforcing', 'data structures', 'dynamic programming', 'set / map by hashing', 'parsing', 'recursion', 'stack', 'string']"
22528,2252800,Divide the Cake,0,[]
22529,2252900,Sakura Poetry,0,[]
22530,2253000,Intelligent Circular Perfect Cleaner,0,[]
22531,2253100,Carpenters' Language,7,['implementation']
22532,2253200,Kth Sentence,0,[]
22533,2253300,Light Road,17,"['breadth-first search', 'graph theory', 'graph traversal']"
22534,2253400,Matrix Operation,0,[]
22535,2253500,Multi Ending Story,0,[]
22536,2253600,Network Reliability,0,[]
22537,2253700,Runaway Domino,0,[]
22538,2253800,Sunny Graph,0,[]
22539,2253900,Testing Circuits,0,[]
22540,2254000,World Trip,0,[]
22541,2254100,Sum of Consecutive Integers,5,"['bruteforcing', 'mathematics']"
22542,2254200,Moonlight Farm,8,"['mathematics', 'sorting']"
22543,2254300,Differential Pulse Code Modulation,11,['dynamic programming']
22544,2254400,Mr. Rito Post Office,0,[]
22545,2254500,Immortal Jewels,0,[]
22546,2254600,Canal: Water Going Up and Down,0,[]
22547,2254700,Magical Island 2,0,[]
22548,2254800,雅先生の地球侵略日誌,6,"['ad-hoc', 'mathematics']"
22549,2254900,友だちの誘い方,7,"['bruteforcing', 'prefix sum']"
22550,2255000,時空のスゴロク・ロード,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
22551,2255100,僕の友達は小さい,0,[]
22552,2255200,街を駆ける道,0,[]
22553,2255300,１０歳の動的計画,19,"['combinatorics', 'mathematics']"
22554,2255400,スプリング・タイル,0,[]
22555,2255500,ねこ鍋改造計画（仮）,0,[]
22556,2255600,よくわかる二重魔法,0,[]
22557,2255700,問題文担当者は働かない！,0,[]
22558,2255800,Ennichi,11,"['bruteforcing', 'implementation', 'simulation']"
22559,2255900,Carrot Tour,15,"['dynamic programming', 'geometry']"
22560,2256000,Usagitobi,0,[]
22561,2256100,Graph Construction,0,[]
22562,2256200,Rabbit Plays Games!,0,[]
22563,2256300,The Castle,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics', 'probability theory']"
22564,2256400,Nurie,0,[]
22565,2256500,Nearest Station,0,[]
22566,2256600,Lapin Noir,0,[]
22567,2256700,Usaneko Matrix,13,"['ad-hoc', 'implementation', 'simulation']"
22568,2256800,Alien's Counting,0,[]
22569,2256900,Kaeru Jump,10,['backtracking']
22570,2257000,Save your cats,12,"['graph theory', 'minimum spanning tree']"
22571,2257100,Dungeon Wall,0,[]
22572,2257200,Psychic Accelerator,0,[]
22573,2257300,Bouldering,0,[]
22574,2257400,DON'T PANIC!,0,[]
22575,2257500,Ropeway,12,"['mathematics', 'recursion']"
22576,2257600,How to Create a Good Game,0,[]
22577,2257700,Cruel Bingo,0,[]
22578,2257800,CatChecker,13,['dynamic programming']
22579,2257900,RabbitWalking,0,[]
22580,2258000,TransferTrain,0,[]
22581,2258100,IkaNumber,18,"['binary search', 'exponentiation by squaring', 'mathematics', 'number theory']"
22582,2258200,HullMarathon,0,[]
22583,2258300,RabbitLunch,0,[]
22584,2258400,CarrotBreeding,0,[]
22585,2258500,DisconnectedGame,16,"['case work', 'depth-first search', 'dynamic programming', 'game theory', 'graph theory', 'graph traversal']"
22586,2258600,ThreeRooks,21,"['case work', 'inclusion and exclusion', 'mathematics']"
22587,2258700,SolveMe,0,[]
22588,2258800,Bicube,0,[]
22589,2258900,Bubble Puzzle,0,[]
22590,2259000,Fair Game,0,[]
22591,2259100,King Slime,14,"['data structures', 'disjoint set', 'greedy']"
22592,2259200,Rabbit Game Playing,14,"['binary search', 'combinatorics', 'dynamic programming', 'mathematics', 'sorting']"
22593,2259300,Rabbit Jumping,19,"['dynamic programming', 'maximum flow', 'minimum cost maximum flow']"
22594,2259400,Shelter,0,[]
22595,2259500,Sightseeing Tour,13,"['ad-hoc', 'graph theory', 'greedy']"
22596,2259600,Tampopo Machine,0,[]
22597,2259700,Top of the Hill,0,[]
22598,2259800,Approximate Circle,0,[]
22599,2259900,Blame Game,19,"['bipartite matching', 'game theory']"
22600,2260000,Earn Big,15,"['dynamic programming', 'mathematics', 'probability theory']"
22601,2260100,Exportation in Space,0,[]
22602,2260200,Laser Puzzle,0,[]
22603,2260300,Magnum Tornado,0,[]
22604,2260400,Nezumi's Treasure,0,[]
22605,2260500,Testing Sorting Networks,0,[]
22606,2260600,Train King,0,[]
22607,2260700,Tree Construction,0,[]
22608,2260800,Luck Manipulator,6,"['implementation', 'mathematics', 'simulation']"
22609,2260900,Matsuzaki Number,8,"['implementation', 'mathematics', 'number theory', 'primality test', 'sorting']"
22610,2261000,Brave Princess Revisited,15,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
22611,2261100,Restrictive Filesystem,15,"['binary search', 'data structures', 'set / map by trees']"
22612,2261200,Mirror Cave,13,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
22613,2261300,Shore Erosion,0,[]
22614,2261400,Infected Computer,6,"['implementation', 'simulation', 'sorting']"
22615,2261500,Magic Slayer,15,"['bruteforcing', 'dynamic programming', 'knapsack']"
22616,2261600,Dial Lock,16,"['backtracking', 'dynamic programming']"
22617,2261700,Double Sorting,0,[]
22618,2261800,Symmetry,0,[]
22619,2261900,Voronoi Island,21,"['bruteforcing', 'case work', 'geometry', 'implementation', 'line segment intersection check', 'area of a polygon', 'voronoi diagram']"
22620,2262000,Defend the Bases,18,"['binary search', 'bipartite matching', 'parametric search']"
22621,2262100,Galaxy Wide Web Service,0,[]
22622,2262200,Tatami,16,"['backtracking', 'case work', 'combinatorics', 'dynamic programming', 'mathematics']"
22623,2262300,Revenge of the Round Table,0,[]
22624,2262400,Strange String Manipulation,9,"['bruteforcing', 'mathematics']"
22625,2262500,Erratic Sleep Habits,11,['dynamic programming']
22626,2262600,Find the Point,0,[]
22627,2262700,Luigi’s Tavern,0,[]
22628,2262800,Colored Octahedra,14,"['bruteforcing', 'data structures', 'geometry', 'geometry; 3d', 'set / map by hashing']"
22629,2262900,Marked Ancestor,14,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'offline queries']"
22630,2263000,Strange Couple,0,[]
22631,2263100,Queen’s Case,0,[]
22632,2263200,Wind Passages,0,[]
22633,2263300,Secret Operation,0,[]
22634,2263400,Adhoc Translation,0,[]
22635,2263500,Artistic Art Museum,0,[]
22636,2263600,Complex Integer Solutions,13,"['mathematics', 'number theory']"
22637,2263700,Dial Key,7,"['euclidean algorithm', 'mathematics', 'number theory']"
22638,2263800,Dungeon Master,0,[]
22639,2263900,Exciting Bicycle,0,[]
22640,2264000,Fuel Problem,0,[]
22641,2264100,Magic Walls,0,[]
22642,2264200,Sort by Hand,0,[]
22643,2264300,Substring Expression,10,"['ad-hoc', 'combinatorics', 'mathematics', 'string']"
22644,2264400,Up Above the World So High,0,[]
22645,2264500,Cache Control,11,"['data structures', 'set / map by hashing', 'linked list']"
22646,2264600,Cover Time,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory']"
22647,2264700,Craftsman,0,[]
22648,2264800,Divide the Water,0,[]
22649,2264900,Mickle's Beam,0,[]
22650,2265000,Poor Computer,0,[]
22651,2265100,Riffle Swap,0,[]
22652,2265200,Round Table,0,[]
22653,2265300,Strange Currency System,9,"['greedy', 'sorting']"
22654,2265400,Tangram,0,[]
22655,2265500,Trading Ship,12,"['binary search', 'graph theory', 'graph traversal', 'parametric search']"
22656,2265600,Princess' Gamble,4,"['implementation', 'mathematics']"
22657,2265700,Princess' Marriage,7,"['greedy', 'sorting']"
22658,2265800,Princess's Japanese,17,"['case work', 'implementation', 'parsing', 'string']"
22659,2265900,Princess in Danger,14,"[""dijkstra's"", 'graph theory']"
22660,2266000,"Princess, a Cryptanalyst",18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'string']"
22661,2266100,"Princess, a Strategist",0,[]
22662,2266200,Pi is Three,6,"['implementation', 'mathematics']"
22663,2266300,Left Hand Rule,0,[]
22664,2266400,Alice and Bob,0,[]
22665,2266500,Deadly Dice Game,12,['dynamic programming']
22666,2266600,Reverse a Road,13,"[""dijkstra's"", 'graph theory']"
22667,2266700,Webby Subway,0,[]
22668,2266800,Time Trial,0,[]
22669,2266900,Vending Machine,0,[]
22670,2267000,Memory Match,0,[]
22671,2267100,Tile Puzzle,0,[]
22672,2267200,Girls' Party,0,[]
22673,2267300,Bitwise Kingdom,14,"['combinatorics', 'mathematics']"
22674,2267400,Adaptive Time Slicing Quantization,0,[]
22675,2267500,Reaction,0,[]
22676,2267600,Magical Island,0,[]
22677,2267700,Ninja Legend,0,[]
22678,2267800,Do It,0,[]
22679,2267900,Robot Communication,0,[]
22680,2268000,Space Coconut Crab,4,"['bruteforcing', 'mathematics']"
22681,2268100,Osaki,10,"['greedy', 'sorting']"
22682,2268200,Surrounding Area,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
22683,2268300,Square Route,10,"['combinatorics', 'mathematics', 'prefix sum']"
22684,2268400,Lifeguard in the Pool,0,[]
22685,2268500,Karakuri Doll,0,[]
22686,2268600,Dance Dance Revolution,5,"['implementation', 'string']"
22687,2268700,Compress Files,0,[]
22688,2268800,Save the Energy,0,[]
22689,2268900,Goofy Converter,11,"['ad-hoc', 'bruteforcing']"
22690,2269000,Black Force,0,[]
22691,2269100,Hit and Blow,8,['implementation']
22692,2269200,Turn Left,0,[]
22693,2269300,!,13,['mathematics']
22694,2269400,Speed,0,[]
22695,2269500,Spirograph,0,[]
22696,2269600,Mysterious Dungeons,0,[]
22697,2269700,Repeated Subsequences,0,[]
22698,2269800,Petoris,0,[]
22699,2269900,Pythagoraslope,0,[]
22700,2270000,Election,0,[]
22701,2270100,Jaggie Spheres,0,[]
22702,2270200,Nagashi Soumen,0,[]
22703,2270300,Private Teacher,0,[]
22704,2270400,Triangles,14,"['geometry', 'mathematics']"
22705,2270500,Two-finger Programming,0,[]
22706,2270600,Walk under a Scorching Sun,0,[]
22707,2270700,Defend the Nation,0,[]
22708,2270800,Electrophoretic,0,[]
22709,2270900,Median Filter,0,[]
22710,2271000,Life Game,0,[]
22711,2271100,Subdividing a Land,0,[]
22712,2271200,Connect Line Segments,0,[]
22713,2271300,Oil Company,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
22714,2271400,Finding the Top RPS Player,0,[]
22715,2271500,Revenge of Voronoi,0,[]
22716,2271600,Castle Wall,0,[]
22717,2271700,Optimization of Combinatorial Circuits,0,[]
22718,2271800,Divisor Function,14,"['data structures', 'mathematics', 'number theory', 'precomputation', 'priority queue']"
22719,2271900,Magical Dungeon,0,[]
22720,2272000,Land Mark,0,[]
22721,2272100,Networking Company,0,[]
22722,2272200,Alien Pianist,0,[]
22723,2272300,Japanese Style Pub,0,[]
22724,2272400,Two Rings,0,[]
22725,2272500,Text Justification,0,[]
22726,2272600,Billion Million Thousand,0,[]
22727,2272700,Misterious Gems,8,"['implementation', 'simulation']"
22728,2272800,"Amida, the City of Miracle",6,['implementation']
22729,2272900,X-Ray Screening System,14,"['graph theory', 'topological sorting']"
22730,2273000,Railroad Conflict,17,"['case work', 'geometry', 'line segment intersection check', 'mathematics', 'sorting']"
22731,2273100,Data Center on Fire,0,[]
22732,2273200,Water Pipe Construction,13,"['bruteforcing', ""dijkstra's"", 'floyd–warshall', 'graph theory']"
22733,2273300,Monkey Business,6,"['mathematics', 'number theory']"
22734,2273400,The Closest Circle,26,"['binary search', 'divide and conquer', 'geometry', 'sweeping']"
22735,2273500,Sort that Queue,0,[]
22736,2273600,Moduic Squares,12,"['backtracking', 'bruteforcing']"
22737,2273700,Restaurant,0,[]
22738,2273800,Tetrahedra,19,"['backtracking', 'bruteforcing', 'geometry', 'geometry; 3d', 'linear algebra', 'mathematics']"
22739,2273900,International Party,0,[]
22740,2274000,Hide-and-seek,0,[]
22741,2274100,TV Watching,0,[]
22742,2274200,Make Friendships,17,[]
22743,2274300,Slippy Floors,0,[]
22744,2274400,Roads in a City,0,[]
22745,2274500,Rolling Cubes,0,[]
22746,2274600,Reading Brackets in English,0,[]
22747,2274700,Grated Radish,0,[]
22748,2274800,"Greedy, Greedy.",18,"['dynamic programming', 'greedy']"
22749,2274900,First Experience,6,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
22750,2275000,Web 0.5,0,[]
22751,2275100,Philosopher's Stone,0,[]
22752,2275200,Cells,0,[]
22753,2275300,The Phantom,0,[]
22754,2275400,Rakunarok,0,[]
22755,2275500,Dock to the Future,0,[]
22756,2275600,Widget Factory,0,[]
22757,2275700,Hills,0,[]
22758,2275800,Flame of Nucleus,0,[]
22759,2275900,Safe Packing,0,[]
22760,2276000,Resource,0,[]
22761,2276100,Exact Arithmetic,0,[]
22762,2276200,Counting Triangles,0,[]
22763,2276300,Wireing Assistant,0,[]
22764,2276400,Keitai Message,5,"['implementation', 'string']"
22765,2276500,Make Purse Light,9,"['bruteforcing', 'greedy']"
22766,2276600,Dragon Fantasy,0,[]
22767,2276700,Area Separation,19,"['bruteforcing', 'geometry', 'line segment intersection check']"
22768,2276800,Poor Mail Forwarding,0,[]
22769,2276900,Gather the Maps!,16,['dynamic programming']
22770,2277000,Ellipse Intersection,16,"['calculus', 'geometry', 'mathematics']"
22771,2277100,Garbage Collection,0,[]
22772,2277200,Painting,0,[]
22773,2277300,Building Bridges,0,[]
22774,2277400,Lego Land,0,[]
22775,2277500,Trees,0,[]
22776,2277600,Colors,0,[]
22777,2277700,A Treasure Or A Bomb,0,[]
22778,2277800,Up and Down,0,[]
22779,2277900,Help the Museum,0,[]
22780,2278000,How Many Days Are There?,0,[]
22781,2278100,Cut out,0,[]
22782,2278200,Opened-up Die,10,"['backtracking', 'bruteforcing']"
22783,2278300,Game Fan,0,[]
22784,2278400,The Revolution of the Ants,0,[]
22785,2278500,Polygon Revolution,0,[]
22786,2278600,Minimum Coin Exchange Problem,12,[]
22787,2278700,Crop Circles,0,[]
22788,2278800,Prime Digital Roots,6,"['implementation', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes', 'simulation']"
22789,2278900,Ski Slopes,0,[]
22790,2279000,Inside Information,0,[]
22791,2279100,Auburn Courier and Messages,0,[]
22792,2279200,Similarity,0,[]
22793,2279300,Radix 3,8,"['implementation', 'mathematics']"
22794,2279400,Dice Instant Insanity,0,[]
22795,2279500,Visible Squares,0,[]
22796,2279600,Disappearance No.0,0,[]
22797,2279700,Walk an Equation,0,[]
22798,2279800,Permutation,17,"['combinatorics', 'dynamic programming', 'mathematics']"
22799,2279900,Get out!,0,[]
22800,2280000,Dancing Cube,0,[]
22801,2280100,Move the Object,0,[]
22802,2280200,Organization Chart,0,[]
22803,2280300,Poke Poker Pokest,0,[]
22804,2280400,Art of War,0,[]
22805,2280500,Insecure in Prague,0,[]
22806,2280600,Image is Everything,0,[]
22807,2280700,Merging Maps,0,[]
22808,2280800,Carl the Ant,0,[]
22809,2280900,Suspense!,0,[]
22810,2281000,When Can We Meet?,5,['implementation']
22811,2281100,Get Many Persimmon Trees,6,['bruteforcing']
22812,2281200,The Secret Number,10,"['arbitrary precision / big integers', 'dynamic programming']"
22813,2281300,Building a Space Station,13,"['geometry', 'geometry; 3d', 'graph theory', 'minimum spanning tree']"
22814,2281400,Square Carpets,0,[]
22815,2281500,Exploring Caves,0,[]
22816,2281600,Pile Up!,0,[]
22817,2281700,Kanglish : Analysis on Artificial Language,0,[]
22818,2281800,What is the Number in my Mind ?,0,[]
22819,2281900,Enclosing Circles,0,[]
22820,2282000,Get a Rectangular Field,6,"['bruteforcing', 'implementation']"
22821,2282100,Multi-column List,0,[]
22822,2282200,Jigsaw Puzzles for Computers,12,"['backtracking', 'bruteforcing']"
22823,2282300,Missing Numbers,0,[]
22824,2282400,Nets of Dice,0,[]
22825,2282500,Fermat's Last Theorem,4,['bruteforcing']
22826,2282600,Patience,0,[]
22827,2282700,Cyber Guardian,0,[]
22828,2282800,Strange Key,0,[]
22829,2282900,File Compression,0,[]
22830,2283000,Lost in Space,0,[]
22831,2283100,Family Tree,0,[]
22832,2283200,Push!!,14,"['breadth-first search', 'graph theory', 'graph traversal']"
22833,2283300,Pump up Batteries,0,[]
22834,2283400,The Devil of Gravity,0,[]
22835,2283500,Numoeba,0,[]
22836,2283600,Telescope,0,[]
22837,2283700,Ether Geometry,0,[]
22838,2283800,Rational Irrationals,0,[]
22839,2283900,Square Coins,11,"['dynamic programming', 'knapsack']"
22840,2284000,Die Game,5,['implementation']
22841,2284100,Trapezoids,0,[]
22842,2284200,Mirror Illusion,10,"['geometry', 'implementation', 'simulation']"
22843,2284300,Heavenly Jewels,16,"['geometry', 'line segment intersection check', 'area of a polygon']"
22844,2284400,Walking Ant,12,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
22845,2284500,Co-occurrence Search,0,[]
22846,2284600,인증된 쉬운 게임,13,"['dynamic programming', 'game theory']"
22847,2284700,루미너스와 모험 중 마주친 퍼즐게임,28,"['ad-hoc', 'case work', 'constructive']"
22848,2284800,조화로운 마법 농구 게임,20,"['prefix sum', 'sweeping']"
22849,2284900,수식 알아맞히기 퀴즈 게임,25,"['fast fourier transform', 'mathematics', 'number theory']"
22850,2285000,초콜릿 쪼개기 게임,20,"['game theory', 'precomputation', 'sprague–grundy theorem']"
22851,2285100,흑왕과 어둠의 게임 대진표,22,"['ad-hoc', 'case work']"
22852,2285200,다리 건너기 게임,19,"['breadth-first search', 'game theory', 'graph theory', 'graph traversal']"
22853,2285300,기둥과 성벽 디펜스 게임,24,"['convex hull', 'geometry', 'mathematics']"
22854,2285400,고장난 계산기 (Calculator) 게임,25,"['case work', 'data structures', 'segment tree with lazy propagation', 'segment tree']"
22855,2285500,고인물의 두번째 리듬게임,19,"['dynamic programming', 'prefix sum', 'two-pointer']"
22856,2285600,트리 순회,12,"['graph theory', 'graph traversal', 'tree']"
22857,2285700,가장 긴 짝수 연속한 부분 수열 (small),9,"['dynamic programming', 'two-pointer']"
22858,2285800,원상 복구 (small),8,"['implementation', 'simulation']"
22859,2285900,HTML 파싱,13,"['implementation', 'parsing', 'string']"
22860,2286000,폴더 정리 (small),13,"['data structures', 'set / map by hashing', 'implementation', 'string']"
22861,2286100,폴더 정리 (large),14,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation', 'parsing', 'recursion', 'simulation', 'string', 'tree', 'set / map by trees']"
22862,2286200,가장 긴 짝수 연속한 부분 수열 (large),11,['two-pointer']
22863,2286300,원상 복구 (large),14,"['data structures', 'permutation cycle decomposition', 'sparse table']"
22864,2286400,피로도,4,"['arithmetic', 'greedy', 'implementation', 'mathematics', 'simulation']"
22865,2286500,가장 먼 곳,12,"[""dijkstra's"", 'graph theory']"
22866,2286600,탑 보기,13,"['data structures', 'stack']"
22867,2286700,종점,11,"['parsing', 'sorting', 'string', 'sweeping']"
22868,2286800,산책 (small),13,"['breadth-first search', 'graph theory', 'graph traversal']"
22869,2286900,징검다리 건너기 (small),10,['dynamic programming']
22870,2287000,산책 (large),16,"['depth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
22871,2287100,징검다리 건너기 (large),10,"['binary search', 'dynamic programming']"
22872,2287200,공 옮기기,28,"['ad-hoc', 'constructive', 'recursion']"
22873,2287300,A+B와 쿼리,19,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
22874,2287400,Distance on Triangulation 2,25,"['ad-hoc', 'constructive', 'data structures', 'disjoint set', 'dual graph', 'graph theory', 'hashing', 'mathematics', 'planar graph', 'segment tree', 'stack']"
22875,2287500,UCP-Clustering,20,"['data structures', 'dynamic programming', 'geometry']"
22876,2287600,츠바메가에시,18,"['data structures', 'segment tree', 'sweeping']"
22877,2287700,가위바위보 버블 정렬,19,['ad-hoc']
22878,2287800,간단한 문제,19,"['data structures', 'mathematics', 'segment tree', 'sorting']"
22879,2287900,돌 가져가기 2,23,"['combinatorics', 'fast fourier transform', 'mathematics', 'prefix sum']"
22880,2288000,봉화대,13,"['combinatorics', 'dynamic programming', 'mathematics']"
22881,2288100,붉은색 푸른색,24,"['circulation', 'data structures', 'disjoint set', 'maximum flow']"
22882,2288200,시험 문제 출제,20,"['binary search', 'meet in the middle']"
22883,2288300,은퇴한 자들의 게임,24,['game theory']
22884,2288400,Make Different,26,"['ad-hoc', 'data structures', 'hashing', 'implementation', 'sparse table', 'string', 'suffix array and lcp array']"
22885,2288500,Reversort,5,"['implementation', 'simulation', 'sorting']"
22886,2288600,Moons and Umbrellas,11,['dynamic programming']
22887,2288700,Reversort Engineering,11,"['constructive', 'sorting']"
22889,2288900,Cheating Detection,0,[]
22890,2289000,Append Sort,13,"['arbitrary precision / big integers', 'greedy', 'string']"
22891,2289100,Prime Time,19,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
22893,2289300,Broken Clock,17,"['extended euclidean algorithm', 'implementation', 'mathematics', 'number theory']"
22894,2289400,Subtransmutation,15,['greedy']
22896,2289600,Closest Pick,13,"['greedy', 'mathematics', 'probability theory']"
22897,2289700,Roaring Years,16,"['arbitrary precision / big integers', 'binary search', 'case work', 'mathematics']"
22898,2289800,Double or NOTing,20,"['case work', 'implementation', 'two-pointer']"
22899,2289900,오렌지컵 출제하기,14,"['data structures', 'greedy', 'priority queue', 'sorting']"
22900,2290000,나의 라임 오렌지 나무,19,"['dynamic programming', 'dynamic programming on trees', 'game theory', 'graph theory', 'graph traversal', 'tree']"
22901,2290100,ko_orange,19,['binary search']
22902,2290200,오렌지 섬 여행하기,19,"['constructive', 'greedy', 'mathematics', 'number theory']"
22903,2290300,오렌지 농장 시뮬레이션,23,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'heavy-light decomposition', 'tree', 'trie']"
22904,2290400,오렌지 수,17,"['ad-hoc', 'constructive', 'mathematics', 'number theory']"
22905,2290500,오렌지 리프의 특별 훈련,23,"['data structures', 'segment tree', 'string', 'suffix array and lcp array']"
22906,2290600,장난감 오렌지 만들기,26,"['data structures', 'eulerian path / circuit', 'graph theory', 'hashing', 'link/cut tree', 'minimum spanning tree', 'prefix sum', 'randomization', 'segment tree', 'tree']"
22907,2290700,오렌지 키우기,19,"['data structures', 'dynamic programming', 'segment tree', 'two-pointer']"
22908,2290800,브루와 오렌지 나누기,18,"['constructive', 'greedy']"
22910,2291000,Matrygons,16,"['dynamic programming', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
22911,2291100,Hidden Pancakes,19,"['combinatorics', 'data structures', 'dynamic programming', 'dynamic programming on trees', 'mathematics', 'tree']"
22912,2291200,Retiling,21,"['maximum flow', 'minimum cost maximum flow']"
22913,2291300,Build-A-Pair,19,"['backtracking', 'greedy']"
22914,2291400,Square Free,21,"['constructive', 'maximum flow']"
22915,2291500,Fence Design,0,[]
22916,2291600,Binary Search Game,23,"['dynamic programming', 'dynamic programming on trees', 'mathematics', 'tree']"
22917,2291700,Cutting Cake,20,"['arbitrary precision / big integers', 'calculus', 'fast fourier transform', 'mathematics', 'sweeping']"
22918,2291800,Slide Circuits,22,"['data structures', 'hashing', 'prefix sum', 'square root decomposition', 'set / map by trees']"
22920,2292000,Divisible Divisions,0,[]
22921,2292100,Infinitree,0,[]
22922,2292200,AND Permutation,25,"['ad-hoc', 'bitmask', 'divide and conquer']"
22923,2292300,Apple Orchard,27,"['geometry', 'mathematics', 'voronoi diagram']"
22924,2292400,Cleaning Robot,17,"['binary search', 'depth-first search', 'graph theory', 'graph traversal', 'parametric search', 'prefix sum']"
22925,2292500,Contest Construction,12,[]
22926,2292600,Ketek Counting,20,['dynamic programming']
22927,2292700,Mountainous Palindromic Subarray,14,"['data structures', 'stack']"
22928,2292800,Permutation CFG,22,[]
22929,2292900,Special Cycle,27,"['biconnected component', 'general matching', 'recursion']"
22930,2293000,The King's Guards,24,"['bipartite matching', 'matroid']"
22931,2293100,The Paladin,13,"['dynamic programming', 'graph theory']"
22932,2293200,Token Game,26,[]
22933,2293300,TraveLog,17,"['binary search', ""dijkstra's"", 'dynamic programming', 'graph theory']"
22934,2293400,"You be The Judge, Again",7,['implementation']
22935,2293500,이진 딸기,6,"['implementation', 'mathematics']"
22936,2293600,주간 달력,12,"['bruteforcing', 'implementation', 'prefix sum']"
22937,2293700,교수님 계산기가 고장났어요!,9,"['arbitrary precision / big integers', 'arithmetic', 'mathematics', 'string']"
22938,2293800,백발백준하는 명사수,3,"['geometry', 'mathematics', 'pythagoras theorem']"
22939,2293900,쿠키크루,10,"['bruteforcing', 'implementation']"
22940,2294000,선형 연립 방정식,15,"['gaussian elimination', 'linear algebra', 'mathematics']"
22941,2294100,RPG 마스터 오명진,9,['mathematics']
22942,2294200,데이터 체커,12,"['data structures', 'geometry', 'sorting', 'stack', 'sweeping']"
22943,2294300,수,11,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
22944,2294400,죽음의 비,12,"['backtracking', 'bruteforcing', 'graph theory', 'graph traversal']"
22945,2294500,팀 빌딩,12,"['sorting', 'two-pointer']"
22946,2294600,원 이동하기 1,14,"['depth-first search', 'geometry', 'graph theory', 'graph traversal', 'sorting', 'tree']"
22947,2294700,실행 시간,14,"['bruteforcing', 'graph theory', 'topological sorting']"
22948,2294800,원 이동하기 2,13,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'stack']"
22949,2294900,회전 미로 탐색,15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
22950,2295000,이진수 나눗셈,5,"['mathematics', 'number theory', 'string']"
22951,2295100,송이의 카드 게임,6,"['implementation', 'simulation']"
22952,2295200,permutation making,8,"['constructive', 'mathematics']"
22953,2295300,도도의 음식 준비,11,"['backtracking', 'binary search', 'bruteforcing', 'parametric search']"
22954,2295400,그래프 트리 분할,14,"['case work', 'constructive', 'data structures', 'disjoint set', 'graph theory', 'graph traversal', 'tree']"
22955,2295500,고양이 도도의 탈출기,13,"[""dijkstra's"", 'graph theory', 'implementation']"
22956,2295600,소나기,15,"['data structures', 'disjoint set']"
22957,2295700,짝수싫어수,16,"['combinatorics', 'dynamic programming', 'mathematics']"
22958,2295800,안산 탐지기,15,"['ad-hoc', 'divide and conquer']"
22959,2295900,신촌 수열과 쿼리,17,"['binary search', 'data structures', 'segment tree']"
22960,2296000,미팅,19,"['bipartite matching', ""hall's theorem""]"
22961,2296100,여행사 운영하기,18,"['graph theory', 'strongly connected component', 'topological sorting']"
22962,2296200,신촌방위본부,20,"['convex hull', 'geometry', ""pick's theorem"", 'point in convex polygon check']"
22963,2296300,3초 정렬,14,['dynamic programming']
22964,2296400,conv1d,13,['mathematics']
22965,2296500,k개의 부분 배열,12,"['ad-hoc', 'sorting']"
22966,2296600,가장 쉬운 문제를 찾는 문제,4,['implementation']
22967,2296700,구름다리,14,"['constructive', 'graph theory']"
22968,2296800,균형,11,['dynamic programming']
22969,2296900,대나무숲,17,"['graph theory', 'graph traversal', 'implementation', 'tree']"
22970,2297000,문제 재탕,6,"['bruteforcing', 'implementation']"
22971,2297100,증가하는 부분 수열의 개수,9,['dynamic programming']
22972,2297200,테러,18,"['backtracking', 'data structures', 'set / map by trees']"
22973,2297300,점프 숨바꼭질,9,"['constructive', 'mathematics']"
22974,2297400,2D 큐브,17,"['ad-hoc', 'constructive', 'implementation']"
22975,2297500,도시 계획,18,"['dynamic programming', 'geometry', 'sorting']"
22976,2297600,계산 최적화,18,"['data structures', 'segment tree']"
22977,2297700,달팽이는 그늘에서 쉬고 싶다,17,"['ad-hoc', 'geometry', 'mathematics']"
22978,2297800,압축 프로그램,19,"['ad-hoc', 'constructive']"
22979,2297900,색종이 붙이기,26,"['ad-hoc', 'case work', 'data structures', 'dynamic programming', 'greedy', 'prefix sum', 'stack']"
22980,2298000,테스트케이스 만들기,18,"['bitmask', 'constructive']"
22981,2298100,휴먼 파이프라인,11,"['greedy', 'mathematics', 'sorting']"
22982,2298200,선인장의 독립집합,22,"['biconnected component', 'cactus', 'dynamic programming', 'graph theory', 'greedy']"
22983,2298300,조각 체스판,14,['dynamic programming']
22984,2298400,반짝반짝 2,11,"['linearity of expectation', 'mathematics', 'probability theory']"
22985,2298500,문자열 조작의 달인,15,['dynamic programming']
22986,2298600,Flat Earth,5,['mathematics']
22987,2298700,기지국 업그레이드,20,"['value / coordinate compression', 'data structures', 'dynamic programming', 'greedy', 'segment tree', 'set / map by trees']"
22988,2298800,재활용 캠페인,15,"['greedy', 'sorting', 'two-pointer']"
22989,2298900,브런치북,20,"['implementation', 'parametric search', 'recursion']"
22990,2299000,사이클,20,"['maximum flow', 'minimum cost maximum flow']"
22991,2299100,수요응답형 버스,16,"['data structures', 'greedy', 'sorting', 'sweeping', 'set / map by trees']"
22992,2299200,다꾸,22,"['data structures', 'segment tree']"
22993,2299300,서든어택 3,7,"['greedy', 'sorting']"
22994,2299400,이미지 축소,9,"['bruteforcing', 'euclidean algorithm', 'implementation', 'mathematics', 'number theory']"
22995,2299500,증가하는 부분 수열의 개수 K,14,"['constructive', 'mathematics']"
22996,2299600,유니온 파인드 복원,13,"['constructive', 'data structures', 'disjoint set', 'graph theory', 'graph traversal', 'tree']"
22997,2299700,미사일 폭격,19,"['data structures', 'multidimensional segment tree', 'segment tree']"
22998,2299800,증가하는 부분 수열의 개수 814K,20,"['ad-hoc', 'combinatorics', 'constructive', 'mathematics']"
22999,2299900,K-Goodness String,4,"['greedy', 'string']"
23000,2300000,L Shaped Plots,14,"['implementation', 'mathematics', 'prefix sum', 'sweeping']"
23001,2300100,Rabbit House,13,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'greedy', 'priority queue']"
23002,2300200,Checksum,18,"['graph theory', 'minimum spanning tree']"
23003,2300300,Increasing Substring,5,"['implementation', 'string']"
23004,2300400,Longest Progression,15,"['case work', 'dynamic programming']"
23005,2300500,Consecutive Primes,17,"['mathematics', 'number theory', 'primality test']"
23006,2300600,Truck Delivery,19,"['data structures', 'euclidean algorithm', 'euler tour technique', 'implementation', 'segment tree with lazy propagation', 'mathematics', 'number theory', 'offline queries', 'segment tree', 'tree']"
23007,2300700,Smaller Strings,13,"['combinatorics', 'mathematics', 'string']"
23008,2300800,Alien Generator,12,"['mathematics', 'number theory']"
23009,2300900,Rock Paper Scissors,16,"['dynamic programming', 'mathematics', 'probability theory']"
23010,2301000,Binary Operator,19,"['parsing', 'randomization', 'string']"
23011,2301100,Arithmetic Square,6,"['case work', 'implementation', 'mathematics']"
23012,2301200,Cutting Intervals,15,"['data structures', 'greedy', 'set / map by hashing', 'prefix sum', 'priority queue', 'sweeping']"
23013,2301300,Final Exam,16,"['binary search', 'data structures', 'implementation']"
23014,2301400,Primes and Queries,20,"['data structures', 'mathematics', 'number theory', 'segment tree']"
23015,2301500,Shuffled Anagrams,15,"['greedy', 'string']"
23016,2301600,Birthday Cake,17,['mathematics']
23017,2301700,Palindromic Crossword,16,[]
23018,2301800,Increasing Sequence Card Game,18,"['calculus', 'combinatorics', 'mathematics']"
23019,2301900,소용돌이,12,"['backtracking', 'bruteforcing', 'implementation', 'sorting', 'string']"
23021,2302100,등산로,17,"['binary search', 'bitmask', 'combinatorics', 'mathematics']"
23022,2302200,숙제,14,"['data structures', 'greedy', 'priority queue']"
23023,2302300,소수 카드 게임,19,"['bitmask', 'dynamic programming', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
23024,2302400,보트 정박,17,"['data structures', 'segment tree']"
23026,2302600,물건 포장하기,16,"['implementation', 'mathematics', 'pigeonhole principle']"
23027,2302700,1번부터 문제의 상태가…?,4,"['implementation', 'string']"
23028,2302800,5학년은 다니기 싫어요,6,['greedy']
23029,2302900,시식 코너는 나의 것,9,['dynamic programming']
23030,2303000,후다다닥을 이겨 츄르를 받자!,12,"[""dijkstra's"", 'graph theory', 'implementation']"
23031,2303100,으어어… 에이쁠 주세요..,12,"['implementation', 'simulation']"
23032,2303200,서프라이즈~,13,"['binary search', 'prefix sum', 'two-pointer']"
23033,2303300,집에 빨리 가고 싶어!,13,"[""dijkstra's"", 'graph theory']"
23034,2303400,조별과제 멈춰!,16,"['breadth-first search', 'graph theory', 'graph traversal', 'minimum spanning tree']"
23035,2303500,가톨릭대는 고양이를 사랑해,16,"['longest increasing sequence in o(n log n)', 'sorting']"
23036,2303600,CAN WIN,17,"['value / coordinate compression', 'data structures', 'mathematics', 'prefix sum', 'segment tree']"
23037,2303700,5의 수난,4,"['implementation', 'mathematics']"
23038,2303800,박스 그림 문자,7,['implementation']
23039,2303900,실 전화기,14,"['case work', 'graph theory', 'planar graph']"
23040,2304000,누텔라 트리 (Easy),13,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'tree']"
23041,2304100,뛰는 기물,15,"['euclidean algorithm', 'mathematics', 'number theory']"
23042,2304200,AND와 OR,15,"['bitmask', 'greedy', 'mathematics']"
23043,2304300,트리 찾기,18,"['binary search', 'tree']"
23044,2304400,트리 조각하기,16,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal', 'parametric search', 'tree']"
23045,2304500,별 보는 교준이,18,['geometry']
23046,2304600,큰 수 뒤집기,19,"['data structures', 'mathematics', 'prefix sum']"
23047,2304700,여우 국수,22,['greedy']
23048,2304800,자연수 색칠하기,11,"['constructive', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
23049,2304900,고슴도치 그래프,23,"['ad-hoc', 'mathematics', 'number theory', 'square root decomposition']"
23050,2305000,데칼코마니 트리,22,"['센트로이드', 'hashing', 'tree', 'tree isomorphism']"
23051,2305100,RMQ,25,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'square root decomposition', 'sweeping']"
23052,2305200,두 트리,27,"['ad-hoc', 'breadth-first search', 'graph theory', 'graph traversal', 'matroid']"
23053,2305300,문자열 X,23,"['data structures', 'disjoint set', 'sliding window', 'smaller to larger technique', 'string', 'suffix array and lcp array']"
23054,2305400,누텔라 트리 (Hard),25,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'segment tree', 'tree']"
23055,2305500,공사장 표지판,4,['implementation']
23056,2305600,참가자 명단,7,['sorting']
23057,2305700,도전 숫자왕,9,"['bruteforcing', 'data structures', 'set / map by hashing', 'set / map by trees']"
23058,2305800,뒤집기 게임,12,"['bitmask', 'bruteforcing']"
23059,2305900,리그 오브 레게노,14,"['data structures', 'graph theory', 'set / map by hashing', 'topological sorting']"
23060,2306000,백남이의 여행,17,"['constructive', 'depth-first search', 'graph theory', 'graph traversal']"
23061,2306100,백남이의 여행 준비,12,"['dynamic programming', 'knapsack']"
23062,2306200,백남이의 여행 준비의 준비,17,"['chinese remainder theorem', 'extended euclidean algorithm', 'mathematics', 'number theory']"
23063,2306300,Diversity,23,"['greedy', 'mathematics', ""mo's"", 'offline queries', 'square root decomposition']"
23064,2306400,L-triominoes,23,"['breadth-first search', 'bitmask', 'dynamic programming', 'graph theory', 'graph traversal', 'mathematics', 'strongly connected component']"
23065,2306500,Newspapers,22,"['constructive', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
23066,2306600,Stones,18,"['dynamic programming', 'game theory', 'greedy']"
23067,2306700,Tortoise,0,[]
23068,2306800,Wells,29,"['ad-hoc', 'data structures', 'dynamic programming', 'segment tree']"
23069,2306900,Aa,0,[]
23070,2307000,Arboriculture,0,[]
23071,2307100,Ligatures,0,[]
23072,2307200,Secret Sequence,0,[]
23073,2307300,Uuu,0,[]
23074,2307400,자연수 색칠하기 2,14,"['constructive', 'mathematics', 'number theory']"
23075,2307500,삼각형만들기 2,13,"['case work', 'mathematics']"
23076,2307600,Trash Bins,7,['mathematics']
23077,2307700,Festival,15,"['data structures', 'greedy', 'priority queue', 'segment tree', 'sweeping']"
23078,2307800,Star Trappers,18,"['bruteforcing', 'geometry', 'point in convex polygon check']"
23079,2307900,Graph Travel,0,[]
23080,2308000,스키테일 암호,3,"['implementation', 'string']"
23081,2308100,오델로,8,"['bruteforcing', 'implementation']"
23082,2308200,균형 삼진법,9,"['implementation', 'mathematics']"
23083,2308300,꿀벌 승연이,11,['dynamic programming']
23084,2308400,IUPC와 비밀번호,12,"['case work', 'sliding window', 'string']"
23085,2308500,판치기,11,"['breadth-first search', 'graph theory', 'graph traversal']"
23086,2308600,두 반으로 나누기,14,"['depth-first search', 'graph theory', 'graph traversal', 'parametric search']"
23087,2308700,최단최단경로,14,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
23088,2308800,Aging,14,"['data structures', 'priority queue']"
23089,2308900,사탕나무,17,"['dynamic programming', 'dynamic programming on trees', 'tree']"
23090,2309000,난민,15,"['data structures', 'priority queue']"
23091,2309100,Calculate! 3,19,"['data structures', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
23092,2309200,Art Transaction,0,[]
23093,2309300,Bank Robbery,22,"['ad-hoc', 'constructive', 'game theory', 'tree']"
23094,2309400,Pizzo Collectors,0,[]
23095,2309500,Excavation,0,[]
23096,2309600,Tobacco Growing,0,[]
23097,2309700,Rescue Mission,10,"['mathematics', 'number theory', 'prefix sum']"
23098,2309800,Offices,0,[]
23099,2309900,Pickpockets,0,[]
23100,2310000,Storage Problems,19,"['divide and conquer', 'dynamic programming', 'knapsack', 'recursion']"
23101,2310100,Roof Escape,20,"['case work', 'geometry', 'implementation']"
23102,2310200,Screamers,25,"['data structures', 'segment tree with lazy propagation', 'link/cut tree', 'segment tree', 'tree', 'two-pointer']"
23103,2310300,Academic Distance,3,"['arithmetic', 'implementation', 'mathematics']"
23104,2310400,Bunch of Paper,13,"['dynamic programming', 'prefix sum', 'two-pointer']"
23105,2310500,Character Grid,14,['constructive']
23106,2310600,Distribute the Bars,18,"['constructive', 'mathematics', 'number theory']"
23107,2310700,Efficient Partitioning,17,"['binary search', 'parametric search']"
23108,2310800,Find the MST for Grid,19,"['ad-hoc', 'binary search', 'graph theory', 'minimum spanning tree', 'prefix sum', 'sorting']"
23109,2310900,Generate the Sequences,19,"['combinatorics', 'dynamic programming', 'mathematics']"
23110,2311000,How to Move the Beans,23,"['data structures', 'dynamic programming', 'game theory', 'segment tree', 'sprague–grundy theorem']"
23111,2311100,Interesting Coloring,0,[]
23112,2311200,Joy with Permutations,0,[]
23113,2311300,Kingdoms and Quarantine,29,"['circulation', 'constructive', 'eulerian path / circuit', 'maximum flow', 'graph theory', 'minimum cost maximum flow']"
23114,2311400,Lazy Judge,0,[]
23115,2311500,Multiple Parentheses,26,"['combinatorics', 'mathematics', 'modular multiplicative inverse', 'number theory']"
23116,2311600,AND,15,"['bitmask', 'constructive']"
23117,2311700,Bruteforce,22,"['data structures', 'implementation', 'segment tree with lazy propagation', 'mathematics', 'segment tree']"
23118,2311800,Crab's Cannon,29,[]
23119,2311900,Deleting,20,"['bit set', 'dynamic programming', 'implementation', 'sorting']"
23120,2312000,Eulerian?,17,"['eulerian path / circuit', 'graph theory', 'randomization']"
23121,2312100,Fancy Formulas,18,"['mathematics', 'number theory']"
23122,2312200,Glory Graph,0,[]
23123,2312300,Hamiltonian,20,['constructive']
23124,2312400,Intellectual Implementation,24,"['combinatorics', 'data structures', 'implementation', 'segment tree with lazy propagation', 'mathematics', 'segment tree', 'sweeping']"
23125,2312500,Joke,22,"['combinatorics', 'dynamic programming', 'mathematics']"
23126,2312600,K-onstruction,0,[]
23127,2312700,Little LCS,23,[]
23128,2312800,Math,13,"['mathematics', 'number theory']"
23129,2312900,Counting Pairs,21,"['chinese remainder theorem', 'fast fourier transform', 'mathematics', 'number theory']"
23130,2313000,Cactus,0,[]
23131,2313100,Permute,0,[]
23132,2313200,Nimber Sequence,28,"['generating function', 'mathematics']"
23133,2313300,Elephants,0,[]
23134,2313400,Interval Shuffle,20,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
23135,2313500,Magic Box,0,[]
23136,2313600,Directed Acyclic Graph,0,[]
23137,2313700,Paint,0,[]
23138,2313800,Swapping Inversions,17,"['data structures', 'mathematics', 'segment tree']"
23139,2313900,Hamiltonian Path,18,['constructive']
23140,2314000,Minimal Cyclic Shift,0,[]
23141,2314100,Interval,0,[]
23142,2314200,PlayerUnknown's Battlegrounds,17,"['data structures', 'divide and conquer', 'dynamic programming', 'stack', 'sweeping']"
23143,2314300,Sum,0,[]
23144,2314400,Reasonable Workplace Relationship,19,"['data structures', 'euler tour technique', 'merge sort tree', 'segment tree', 'sorting', 'tree']"
23145,2314500,Historic Breakthrough,26,"['mathematics', 'number theory']"
23146,2314600,Nondeterministic Finite Automaton,0,[]
23147,2314700,Texas Hold 'em,0,[]
23148,2314800,"Yes, Prime Minister",0,[]
23149,2314900,Might and Magic,0,[]
23150,2315000,0 Tree,22,"['ad-hoc', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
23151,2315100,Decomposition,0,[]
23152,2315200,Median,0,[]
23153,2315300,The Struggle,28,"['fast fourier transform', 'mathematics']"
23154,2315400,Power Station of Art,0,[]
23155,2315500,Command and Conquer: Red Alert 2,0,[]
23156,2315600,Typing Contest,0,[]
23157,2315700,Game,0,[]
23158,2315800,Array,0,[]
23159,2315900,Goldberg Machine 2,0,[]
23160,2316000,Nein,0,[]
23161,2316100,MIPT: Connecting People,0,[]
23162,2316200,Matryoshka Dolls,23,[]
23163,2316300,No Rest for the Wicked,26,"['data structures', 'disjoint set', 'divide and conquer', 'graph theory', 'offline dynamic connectivity', 'offline queries']"
23164,2316400,The Last Samurai,0,[]
23165,2316500,Nikanor Loves Games,0,[]
23166,2316600,Roads of the Empire,0,[]
23167,2316700,Drunkards,0,[]
23168,2316800,Rational Dimasik,0,[]
23169,2316900,Mission Impossible: Grand Theft Auto,0,[]
23170,2317000,Automatic Sprayer 2,19,"['ad-hoc', 'constructive', 'greedy', 'mathematics']"
23171,2317100,Dynamic Short Path,25,"['bit set', 'divide and conquer', 'floyd–warshall', 'graph theory', 'linear algebra', 'mathematics']"
23172,2317200,Equivalent Pipelines,19,"['data structures', 'disjoint set', 'hashing', 'tree', 'tree isomorphism']"
23173,2317300,Flowerbed Redecoration,21,"['exponentiation by squaring', 'mathematics', 'permutation cycle decomposition']"
23174,2317400,Goose Coins,21,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
23175,2317500,Histogram Sequence 3,4,['implementation']
23176,2317600,Lamb’s Respite,21,"['data structures', 'segment tree']"
23177,2317700,Or Machine,18,"[""dijkstra's"", 'graph theory']"
23178,2317800,Organizing Beads,12,"['data structures', 'greedy', 'set / map by trees']"
23179,2317900,Periodic Ruler,18,"['mathematics', 'number theory']"
23180,2318000,Three Competitions,23,"['data structures', 'graph theory', 'strongly connected component', 'segment tree', 'topological sorting']"
23181,2318100,Utilitarianism 2,25,"[""dijkstra's"", 'maximum flow', 'graph theory', 'minimum cost maximum flow']"
23182,2318200,APL Lives!,0,[]
23183,2318300,Barcodes,0,[]
23184,2318400,Tracking Bio-bots,0,[]
23185,2318500,Castles,0,[]
23186,2318600,Contour Mapping,0,[]
23187,2318700,The Islands,0,[]
23188,2318800,Rain,0,[]
23189,2318900,Robots on Ice,0,[]
23190,2319000,Sharing Chocolate,0,[]
23191,2319100,Paperweight,0,[]
23192,2319200,Cardiology,16,['mathematics']
23193,2319300,The Cost of Speed Limits,21,"['dynamic programming', 'dynamic programming on trees', 'tree']"
23194,2319400,Domes,22,"['convex hull', 'geometry', 'half plane intersection']"
23195,2319500,Gene Folding,19,"['greedy', ""manacher's"", 'string']"
23196,2319600,Landscape Generator,15,['prefix sum']
23197,2319700,Ley Lines,24,"['binary search', 'geometry', 'parametric search', 'sweeping']"
23198,2319800,Opportunity Cost,20,['mathematics']
23199,2319900,QC QC,28,['ad-hoc']
23200,2320000,Quests,22,"['bit set', 'dynamic programming', 'greedy']"
23201,2320100,’S No Problem,21,"['dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'greedy', 'tree']"
23202,2320200,Space Walls,0,[]
23203,2320300,Sweep Stakes,27,"['data structures', 'fast fourier transform', 'mathematics', 'segment tree']"
23204,2320400,Trailing Digits,18,"['mathematics', 'number theory']"
23205,2320500,"What’s Our Vector, Victor?",28,"['linear algebra', 'mathematics']"
23206,2320600,Which Planet is This?!,19,"['arbitrary precision / big integers', 'knuth–morris–pratt', 'sorting', 'string']"
23207,2320700,Preludes,5,"['implementation', 'string']"
23208,2320800,Limited Correspondence,0,[]
23209,2320900,Heliocentric,0,[]
23210,2321000,In or Out,0,[]
23211,2321100,Polish Notation,0,[]
23212,2321200,Prime Spiral,0,[]
23213,2321300,Sierpiński circumference,0,[]
23214,2321400,Towers of Powers 2: Power Harder,0,[]
23215,2321500,Matrix Inverse,0,[]
23216,2321600,Reversing Roads,0,[]
23217,2321700,Counting Stars,0,[]
23218,2321800,Statistics,0,[]
23219,2321900,Does Not Compute,0,[]
23220,2322000,Formatting Text,0,[]
23221,2322100,Genetic Search,0,[]
23222,2322200,Unique Shapes,13,"['backtracking', 'bruteforcing']"
23223,2322300,A Careful Approach,0,[]
23224,2322400,My Bad,0,[]
23225,2322500,The Return of Carl,0,[]
23226,2322600,Conduit Packing,0,[]
23227,2322700,Fare and Balanced,0,[]
23228,2322800,Deer-Proof Fence,0,[]
23229,2322900,House of Cards,0,[]
23230,2323000,The Ministers’ Major Mess,0,[]
23231,2323100,Struts and Springs,0,[]
23232,2323200,Subway Timing,0,[]
23233,2323300,Suffix-Replacement Grammars,0,[]
23234,2323400,The World Responds,1,['implementation']
23235,2323500,The Fastest Sorting Algorithm In The World,2,['implementation']
23236,2323600,Fikapaus,0,[]
23237,2323700,How Many Subtrees?,12,"['bitmask', 'bruteforcing', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
23238,2323800,Best Student,21,"[""mo's"", 'offline queries', 'square root decomposition']"
23239,2323900,당근 밭,15,"['case work', 'geometry', 'mathematics']"
23240,2324000,Colorful Tower of Hanoi,19,"['case work', 'dynamic programming', 'mathematics']"
23241,2324100,Drones,22,"['data structures', 'dynamic programming', 'segment tree']"
23242,2324200,Histogram,14,"['dynamic programming', 'mathematics', 'prefix sum']"
23243,2324300,Logistical Warehouse,22,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'parametric search', 'tree']"
23244,2324400,Moving Logs,22,"['data structures', 'dynamic programming', 'geometry', 'graph theory', 'sweeping', 'topological sorting', 'set / map by trees']"
23245,2324500,Similarity,17,"['data structures', 'segment tree', 'sorting']"
23246,2324600,Sport Climbing Combined,6,['sorting']
23247,2324700,Ten,10,"['bruteforcing', 'prefix sum']"
23248,2324800,Treasure Hunter,17,"['data structures', 'greedy', 'longest increasing sequence in o(n log n)']"
23249,2324900,Triangles,19,"['geometry', 'sorting', 'sweeping']"
23250,2325000,하노이 탑 K,11,"['mathematics', 'recursion']"
23251,2325100,스물셋,4,"['ad-hoc', 'arithmetic', 'mathematics']"
23252,2325200,블록,8,['case work']
23253,2325300,자료구조는 정말 최고야,6,"['ad-hoc', 'data structures', 'implementation', 'stack']"
23254,2325400,나는 기말고사형 인간이야,11,"['data structures', 'greedy', 'priority queue']"
23255,2325500,구름다리 2,12,"['graph theory', 'greedy']"
23256,2325600,성인 게임,12,['dynamic programming']
23257,2325700,비트코인은 신이고 나는 무적이다,13,"['dynamic programming', 'knapsack']"
23258,2325800,밤편지,15,"['dynamic programming', 'floyd–warshall', 'graph theory']"
23259,2325900,Celebrity,15,"['bitmask', 'bruteforcing', 'graph theory']"
23260,2326000,최대공약수가 뭔데,19,"['inclusion and exclusion', 'mathematics', 'number theory']"
23261,2326100,Dogs and Cats,6,"['implementation', 'simulation']"
23262,2326200,Staying Hydrated,9,"['greedy', 'sorting', 'ternary search']"
23263,2326300,Banana Bunches,14,"['dynamic programming', 'prefix sum']"
23264,2326400,Simple Polygon,18,"['constructive', 'geometry']"
23265,2326500,Antenna Analysis,13,['mathematics']
23266,2326600,Breaking Bars,0,[]
23267,2326700,Customs Controls,19,"['ad-hoc', ""dijkstra's"", 'graph theory', 'topological sorting']"
23268,2326800,Deceptive Directions,14,"['breadth-first search', 'graph theory', 'graph traversal']"
23269,2326900,Eavesdropper Evasion,26,"['dynamic programming', 'greedy']"
23270,2327000,Fortune From Folly,18,"['bitmask', 'gaussian elimination', 'linear algebra', 'mathematics', 'probability theory']"
23271,2327100,Grazed Grains,12,"['geometry', 'mathematics', 'probability theory', 'randomization']"
23272,2327200,Hiring Help,21,"['convex hull', 'data structures', 'geometry', 'offline queries', 'set / map by trees']"
23273,2327300,Intact Intervals,21,"['hashing', 'rabin–karp', 'string']"
23274,2327400,Joint Jog Jam,4,"['geometry', 'mathematics']"
23275,2327500,Knot Knowledge,4,['implementation']
23276,2327600,Locust Locus,5,"['euclidean algorithm', 'mathematics', 'number theory']"
23277,2327700,Marvelous Marathon,27,[]
23278,2327800,영화 평가,5,"['arithmetic', 'mathematics', 'sorting']"
23279,2327900,서열 사회,9,['sorting']
23280,2328000,엔토피아의 기억강화,13,['dynamic programming']
23281,2328100,촘프 게임,16,"['dynamic programming', 'game theory']"
23282,2328200,Line Fighter 2,19,['convex hull trick']
23283,2328300,사탕 봉지,18,"['greedy', 'sorting']"
23284,2328400,모든 스택 수열,10,"['backtracking', 'bruteforcing', 'data structures', 'stack']"
23285,2328500,단말 수열,14,"['data structures', 'priority queue', 'tree']"
23286,2328600,허들 넘기,13,"[""dijkstra's"", 'floyd–warshall', 'graph theory']"
23287,2328700,제곱수,19,"['constructive', 'mathematics', 'number theory']"
23288,2328800,주사위 굴리기 2,13,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
23289,2328900,온풍기 안녕!,16,"['implementation', 'simulation']"
23290,2329000,마법사 상어와 복제,15,"['implementation', 'simulation']"
23291,2329100,어항 정리,16,"['implementation', 'simulation']"
23292,2329200,코딩 바이오리듬,4,"['arithmetic', 'implementation', 'mathematics']"
23293,2329300,아주 서바이벌,10,"['data structures', 'implementation', 'simulation', 'set / map by trees']"
23294,2329400,웹 브라우저 1,12,"['data structures', 'deque', 'implementation', 'simulation']"
23295,2329500,스터디 시간 정하기 1,13,"['prefix sum', 'sweeping']"
23296,2329600,엘리베이터 조작,14,"['depth-first search', 'graph theory', 'graph traversal', 'greedy', 'topological sorting']"
23297,2329700,전파와 병합 1,18,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'parsing', 'strongly connected component', 'string']"
23298,2329800,W3W (What 3 Words),18,"['hashing', 'string']"
23299,2329900,화질 - 자동 (480p),22,"['data structures', 'disjoint set', 'divide and conquer', 'graph theory', 'knapsack', 'offline dynamic connectivity', 'offline queries']"
23300,2330000,웹 브라우저 2,11,"['data structures', 'deque', 'implementation', 'stack']"
23301,2330100,스터디 시간 정하기 2,7,"['bruteforcing', 'implementation']"
23302,2330200,전파와 병합 2,12,"['depth-first search', 'graph theory', 'graph traversal', 'implementation', 'parsing', 'string']"
23303,2330300,이 문제는 D2 입니다.,3,"['implementation', 'string']"
23304,2330400,아카라카,9,"['recursion', 'string']"
23305,2330500,수강변경,7,"['greedy', 'implementation']"
23306,2330600,binary는 호남선,9,['ad-hoc']
23307,2330700,드디어 시작한 화석 발굴 이벤트,13,"['case work', 'implementation']"
23308,2330800,셔틀버스,18,"['case work', 'data structures', 'set / map by hashing', 'mathematics', 'sliding window']"
23309,2330900,철도 공사,11,"['data structures', 'implementation', 'linked list']"
23310,2331000,즐거운 과제 라이프,14,"['binary search', 'euclidean algorithm', 'mathematics', 'number theory']"
23311,2331100,세포 분열,16,['dynamic programming']
23312,2331200,빌라봉 행성의 섬나라,12,"['ad-hoc', 'binary search', 'tree']"
23313,2331300,K-계산기,17,"['data structures', ""fermat's little theorem"", 'mathematics', 'modular multiplicative inverse', 'number theory', 'segment tree']"
23314,2331400,Minimum Spanning Cactus,19,"['biconnected component', 'cactus', 'data structures', 'graph theory', 'set / map by trees']"
23315,2331500,GIANT MIN COST BIPARTITE MATCHING,23,"['data structures', 'greedy', 'priority queue']"
23316,2331600,팀 배틀,13,"['linearity of expectation', 'mathematics', 'prefix sum', 'probability theory', 'two-pointer']"
23317,2331700,구슬 굴리기,11,"['combinatorics', 'dynamic programming', 'mathematics', 'sorting']"
23318,2331800,행렬분할,11,"['backtracking', 'bitmask', 'bruteforcing', 'prefix sum']"
23319,2331900,화학 약품 옮기기,0,[]
23320,2332000,홍익 절대평가,4,"['arithmetic', 'implementation', 'mathematics']"
23321,2332100,홍익 댄스파티,5,"['implementation', 'string']"
23322,2332200,초콜릿 뺏어 먹기,9,"['ad-hoc', 'greedy']"
23323,2332300,황소 다마고치,9,"['greedy', 'mathematics']"
23324,2332400,어려운 모든 정점 쌍 최단 거리,12,"['graph theory', 'graph traversal']"
23325,2332500,마법천자문,12,['dynamic programming']
23326,2332600,홍익 투어리스트,13,"['binary search', 'data structures', 'set / map by trees']"
23327,2332700,리그전 오브 레전드,12,"['mathematics', 'prefix sum']"
23328,2332800,마을 구하기,15,"['ad-hoc', 'case work', 'string']"
23329,2332900,구슬 발사기,17,"[""dijkstra's"", 'geometry', 'graph theory', 'sorting']"
23330,2333000,거리의 합 2,8,"['mathematics', 'sorting']"
23331,2333100,행렬분할 2,17,"['binary search', 'bitmask', 'bruteforcing', 'greedy', 'parametric search', 'prefix sum']"
23332,2333200,칩 만들기 2,13,['dynamic programming']
23333,2333300,Digion,14,['recursion']
23334,2333400,Olympic Ranking,4,"['implementation', 'string']"
23335,2333500,Aliquot Sum,6,"['mathematics', 'number theory']"
23336,2333600,A Sorting Problem,16,"['data structures', 'divide and conquer', 'segment tree']"
23337,2333700,Drunk Passenger,11,"['dynamic programming', 'mathematics', 'probability theory']"
23338,2333800,Eatcoin,15,"['arbitrary precision / big integers', 'binary search', 'mathematics', 'parametric search']"
23339,2333900,Flip,20,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
23340,2334000,Garden Park,17,"['dynamic programming', 'dynamic programming on trees', 'sorting', 'tree']"
23341,2334100,A Hard Problem,22,"['bitmask', 'bit set', 'bruteforcing', 'maximum flow', 'max-flow min-cut theorem']"
23342,2334200,ICPC Kingdom,0,[]
23343,2334300,JavaScript,3,"['arithmetic', 'implementation', 'mathematics', 'string']"
23344,2334400,등산가,0,[]
23345,2334500,알파벳 분수,15,"['constructive', 'data structures', 'implementation', 'stack']"
23347,2334700,수열 연산,25,"['ad-hoc', 'constructive', 'implementation']"
23348,2334800,스트릿 코딩 파이터,3,"['arithmetic', 'implementation', 'mathematics']"
23349,2334900,졸업 사진,9,"['data structures', 'set / map by hashing', 'implementation', 'sorting', 'string', 'set / map by trees']"
23350,2335000,K 물류창고,9,"['data structures', 'implementation', 'simulation']"
23351,2335100,물 주기,8,"['greedy', 'implementation', 'simulation']"
23352,2335200,방탈출,11,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
23353,2335300,승부 조작,13,['dynamic programming']
23354,2335400,군탈체포조,13,"['bruteforcing', ""dijkstra's"", 'graph theory']"
23355,2335500,공사,17,"['lowest common ancestor', 'tree']"
23356,2335600,Gets and Puts (Easy),18,"['ad-hoc', 'sorting']"
23357,2335700,Gets and Puts (Hard),19,"['ad-hoc', 'constructive']"
23358,2335800,Quack Strikes Back (Easy),13,"['dynamic programming', 'implementation']"
23359,2335900,Quack Strikes Back (Hard),22,['ad-hoc']
23360,2336000,QuackQuack (Easy),16,"['mathematics', 'number theory', 'primality test']"
23361,2336100,QuackQuack (Hard),21,['ad-hoc']
23362,2336200,Rasterized Lines,22,"['euler totient function', 'mathematics', 'miller–rabin', 'möbius inversion', 'number theory', 'pollard rho', 'primality test']"
23363,2336300,HQ0-9+-INCOMPUTABLE?!,18,"['ad-hoc', 'constructive', 'mathematics', 'number theory', 'precomputation']"
23364,2336400,Almost Always,12,"['birthday problem', 'mathematics', 'number theory', 'randomization']"
23365,2336500,Buffered Buffet,8,"['greedy', 'mathematics']"
23366,2336600,Candy Contribution,12,"[""dijkstra's"", 'graph theory']"
23367,2336700,Dickensian Dictionary,4,"['implementation', 'string']"
23368,2336800,Entering Enemy Encampment,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'game theory']"
23369,2336900,Fridge Distraction,9,['greedy']
23370,2337000,<code>git mv</code>,10,"['implementation', 'parsing', 'string']"
23371,2337100,Histogram,5,"['implementation', 'simulation']"
23372,2337200,Ice Growth,11,"['binary search', 'prefix sum', 'sorting']"
23373,2337300,Jack the Mole,15,['knapsack']
23374,2337400,Kudzu Kniving,15,"['ad-hoc', 'data structures', 'set / map by hashing', 'mathematics']"
23375,2337500,Arm Coordination,2,"['arithmetic', 'geometry', 'mathematics']"
23376,2337600,BnPC,14,"['data structures', 'greedy', 'priority queue']"
23377,2337700,Cangaroo,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
23378,2337800,Decelerating Jump,13,['dynamic programming']
23379,2337900,Evolutionary Excerpt,14,"['dynamic programming', 'mathematics', 'probability theory']"
23380,2338000,Fair Play,9,"['data structures', 'set / map by hashing']"
23381,2338100,Gyrating Glyphs,20,"['bruteforcing', 'randomization']"
23382,2338200,Hamiltooonian Hike,17,"['constructive', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
23383,2338300,Implementation Irregularities,9,"['mathematics', 'sorting']"
23384,2338400,Jail or Joyride,0,[]
23385,2338500,Kinking Cables,14,"['case work', 'constructive', 'geometry']"
23386,2338600,Lopsided Lineup,17,"['mathematics', 'sorting']"
23387,2338700,Alocação de Prêmios,0,[]
23388,2338800,Belas Palavras,21,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'string', 'suffix array and lcp array', 'sweeping']"
23389,2338900,Criando Multiplos,13,"['mathematics', 'number theory']"
23390,2339000,Dividindo o Reino,21,"['data structures', 'disjoint set', 'inclusion and exclusion', 'two-pointer']"
23391,2339100,Escada Rolante,6,"['implementation', 'simulation']"
23392,2339200,Fuga da Prisão,23,"['data structures', 'depth-first search', 'geometry', 'graph theory', 'graph traversal', 'sweeping', 'tree', 'set / map by trees']"
23393,2339300,Garantindo o Treino,16,"['backtracking', 'dynamic programming', 'mathematics']"
23394,2339400,Haja Ordenação,7,['sorting']
23395,2339500,Invertendo Ferrovias,22,"['bit set', 'graph theory', 'graph traversal', 'tree']"
23396,2339600,Jogo Duro,22,"['maximum flow', 'max-flow min-cut theorem']"
23397,2339700,Katmandu,3,['implementation']
23398,2339800,Lembre sua Senha,22,[]
23399,2339900,Monarquia em Vertigem,14,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'stack']"
23400,2340000,Na Trave!,17,"['binary search', 'data structures', 'merge sort tree', 'offline queries', 'segment tree', 'sorting', 'sweeping']"
23401,2340100,Ljeto,4,"['implementation', 'simulation']"
23402,2340200,Kamenčići,16,"['dynamic programming', 'game theory', 'prefix sum']"
23403,2340300,Logičari,17,"['dynamic programming', 'dynamic programming on trees', 'tree']"
23404,2340400,Set,0,[]
23405,2340500,Volontiranje,24,"['ad-hoc', 'maximum flow']"
23406,2340600,Polynomial in a Black Box,0,[]
23407,2340700,Board Trick,0,[]
23408,2340800,Connectivity,0,[]
23409,2340900,Absolute Pairwise Distance,0,[]
23410,2341000,Multiplication and Division by 2,9,"['breadth-first search', 'bitmask', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'mathematics', 'string']"
23411,2341100,Festive Baobab,0,[]
23412,2341200,Flatland Elections,0,[]
23413,2341300,Eggs,0,[]
23414,2341400,Removing Pairs,6,"['implementation', 'string']"
23415,2341500,Boxes on a Shelf,7,"['greedy', 'implementation', 'physics', 'sorting']"
23416,2341600,Two Slicers,8,"['mathematics', 'number theory']"
23417,2341700,Ants,0,[]
23418,2341800,Blend,0,[]
23419,2341900,Backup,0,[]
23420,2342000,bit gisect,0,[]
23421,2342100,Slots,0,[]
23422,2342200,Tea Sort,0,[]
23423,2342300,Shooting,0,[]
23424,2342400,Accelerometers calibration,0,[]
23425,2342500,Trees,0,[]
23426,2342600,Team order,0,[]
23427,2342700,Ostap's dream,0,[]
23428,2342800,Painting roofs,6,['bruteforcing']
23429,2342900,Game map,0,[]
23430,2343000,Cone lights,0,[]
23431,2343100,Cubic polynomials,0,[]
23432,2343200,Steve's perfectionism,16,"['dynamic programming', 'mathematics']"
23433,2343300,Tote,0,[]
23434,2343400,Olmec,0,[]
23435,2343500,Cloud computing,0,[]
23436,2343600,Game of strings,0,[]
23437,2343700,Symmetric matrix,0,[]
23438,2343800,Wooden pipeline,0,[]
23439,2343900,Kick Start,0,[]
23440,2344000,Infimum of Paths,0,[]
23441,2344100,Mr. Panda and Typewriter,0,[]
23442,2344200,Pulse Nova,0,[]
23443,2344300,Non-Maximum Suppression,0,[]
23444,2344400,Ferry,0,[]
23445,2344500,Game on the Tree,0,[]
23446,2344600,Mr. Panda and SAD,0,[]
23447,2344700,Mr. Panda and Blocks,0,[]
23448,2344800,Wire-compatible Protocol buffer,0,[]
23449,2344900,Russian Dolls on the Christmas Tree,0,[]
23450,2345000,Spiral Matrix,11,"['ad-hoc', 'case work']"
23451,2345100,City,0,[]
23452,2345200,Black and White,24,['mathematics']
23453,2345300,Dirichlet $k$-th root,0,[]
23454,2345400,Fire,0,[]
23455,2345500,Flow,0,[]
23456,2345600,Game,0,[]
23457,2345700,Happiness,0,[]
23458,2345800,King,20,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
23459,2345900,Moon,29,"['convex hull', 'geometry', 'geometry; 3d']"
23460,2346000,Permutation,0,[]
23461,2346100,All Pair Maximum Flow,0,[]
23462,2346200,Travel,0,[]
23463,2346300,Value,0,[]
23464,2346400,Boys don't cry!,0,[]
23465,2346500,The Witcher,0,[]
23466,2346600,What a sequence!,0,[]
23467,2346700,Two Kilers,28,[]
23468,2346800,All in good fun!,0,[]
23469,2346900,Five Nights at Freddy's,0,[]
23470,2347000,Choreography,22,['bipartite matching']
23471,2347100,Cheat,0,[]
23472,2347200,Yosupo's Algorithm,27,"['ad-hoc', 'data structures', 'segment tree', 'sweeping']"
23473,2347300,Planet of the singles,24,"['dynamic programming', 'greedy']"
23474,2347400,Shadow,0,[]
23475,2347500,Boss of all bosses,0,[]
23476,2347600,Cookies,0,[]
23477,2347700,Evacuation,0,[]
23478,2347800,Sum Modulo,0,[]
23479,2347900,Xor Sum,0,[]
23480,2348000,Count Modulo 2,0,[]
23481,2348100,Robots,0,[]
23482,2348200,Matrix Inversion,0,[]
23483,2348300,Construct Points,12,"['constructive', 'mathematics']"
23484,2348400,Amidakuji,0,[]
23485,2348500,Median Replace Hard,0,[]
23486,2348600,Game and Queries,0,[]
23487,2348700,Triangle Tiling,0,[]
23488,2348800,Balanced Binary String,0,[]
23489,2348900,Digital Root,0,[]
23490,2349000,Ternary String Revolution,0,[]
23491,2349100,Chiaki Chain Counting,0,[]
23492,2349200,Subset Sum,26,"['dynamic programming', 'greedy', 'heuristics']"
23493,2349300,Back and Forth,23,[]
23494,2349400,Stone Game,0,[]
23495,2349500,Longest Lyndon Prefix,20,"['string', 'suffix array and lcp array']"
23496,2349600,Program Optimization,19,['prefix sum']
23497,2349700,Determination,0,[]
23498,2349800,Fraction Reduction,17,"['euclidean algorithm', 'mathematics', 'number theory']"
23499,2349900,Farmer,15,"['constructive', 'mathematics']"
23500,2350000,MST Camera,22,"['data structures', 'graph theory', 'minimum spanning tree']"
23501,2350100,Winning Ballot,0,[]
23502,2350200,JAG Strikes Back,0,[]
23503,2350300,My Number,0,[]
23504,2350400,Knocking Down,0,[]
23505,2350500,Rats,0,[]
23506,2350600,Coins,11,"['greedy', 'sorting']"
23507,2350700,Marbles,21,"['2-sat', 'case work', 'graph theory', 'implementation', 'strongly connected component']"
23508,2350800,Notebook,21,"['linear algebra', 'mathematics']"
23509,2350900,Aunts,18,[]
23510,2351000,Wise man,21,"['data structures', 'dynamic programming', 'implementation', 'sparse table']"
23511,2351100,Cakes,0,[]
23512,2351200,Interesting Permutations,0,[]
23513,2351300,Blocking Crosses,20,"['case work', 'constructive']"
23514,2351400,Exact Number of Calls,0,[]
23515,2351500,Parity Scam,0,[]
23516,2351600,Least Common Divisor,7,"['bruteforcing', 'string']"
23517,2351700,Beautiful Automata,0,[]
23518,2351800,Divisible Inversions,12,"['mathematics', 'number theory']"
23519,2351900,Negative Base,10,['mathematics']
23520,2352000,Same Songs,0,[]
23521,2352100,Inelastic Balls,0,[]
23522,2352200,Make Spoiled Binary Tree a Tree Again!,0,[]
23523,2352300,Template for Search,0,[]
23524,2352400,Redistribution of Digits,0,[]
23525,2352500,Partial Sums,0,[]
23526,2352600,Lis on Circle,0,[]
23527,2352700,Very Simple Sum,0,[]
23528,2352800,Random XOR,0,[]
23529,2352900,Sum of Distances in Cactus,0,[]
23530,2353000,Not A + B,3,"['constructive', 'mathematics']"
23531,2353100,Cutting,0,[]
23532,2353200,Paternity Testing,0,[]
23533,2353300,Chess Positions,0,[]
23534,2353400,Avoid Anagrams,7,"['combinatorics', 'mathematics']"
23535,2353500,Broken Sequence,0,[]
23536,2353600,Chains Solitaire,0,[]
23537,2353700,Double-Slit Experiment,0,[]
23538,2353800,Easy Equation,13,"['binary search', 'meet in the middle']"
23539,2353900,Format a Table,0,[]
23540,2354000,Game with Dominoes,0,[]
23541,2354100,Heracles,0,[]
23542,2354200,IQ,8,"['greedy', 'sorting']"
23543,2354300,Jack and Jill,0,[]
23544,2354400,Kinder Surprise,5,"['data structures', 'set / map by hashing', 'set / map by trees']"
23545,2354500,Liquid Cats,0,[]
23546,2354600,Everyone Loves Playing Games,0,[]
23547,2354700,Gifted Composer,0,[]
23548,2354800,An Unsure Catch,0,[]
23549,2354900,String Theory,0,[]
23550,2355000,Road Construction,0,[]
23551,2355100,Girlfriend,0,[]
23552,2355200,Blackjack,0,[]
23553,2355300,Yet Another Geometry Problem,0,[]
23554,2355400,A Math Problem,0,[]
23555,2355500,Gaokao,14,"['combinatorics', 'mathematics']"
23556,2355600,Data Structure,0,[]
23557,2355700,Landlord,0,[]
23558,2355800,Travel Dream,0,[]
23559,2355900,밥,10,"['greedy', 'sorting']"
23560,2356000,약,9,"['dynamic programming', 'mathematics']"
23561,2356100,Young한 에너지는 부족하다,9,"['greedy', 'sorting']"
23562,2356200,ㄷ 만들기,11,"['bruteforcing', 'implementation']"
23563,2356300,벽 타기,13,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
23564,2356400,재귀 문자열,14,"['ad-hoc', 'constructive', 'string']"
23565,2356500,"1, 2, 3, 4",20,"['ad-hoc', 'case work', 'implementation', 'mathematics', 'number theory']"
23566,2356600,Ant Colonies,23,"['data structures', 'heavy-light decomposition', 'lowest common ancestor', 'offline queries', 'segment tree', 'tree']"
23567,2356700,Double Rainbow,11,['two-pointer']
23568,2356800,Find the House,7,"['data structures', 'set / map by hashing', 'implementation', 'simulation']"
23569,2356900,Friendship Graphs,18,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'knapsack']"
23570,2357000,Grid Triangle,17,"['case work', 'mathematics']"
23571,2357100,John’s Gift,18,"['dynamic programming', 'greedy', 'sorting']"
23572,2357200,Logistical Warehouse 2,18,"['dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'greedy', 'tree']"
23573,2357300,Postman,25,"['case work', 'data structures', 'greedy', 'implementation', 'priority queue', 'sorting', 'set / map by trees']"
23574,2357400,Security System,26,"['value / coordinate compression', 'data structures', 'dynamic programming', 'geometry', 'greedy', 'stack']"
23575,2357500,Squid Game,25,"['ad-hoc', 'euclidean algorithm', 'mathematics', 'number theory']"
23576,2357600,Stock Price Prediction,23,"['data structures', 'knuth–morris–pratt', 'segment tree', 'string']"
23577,2357700,Trio,19,['inclusion and exclusion']
23578,2357800,비 오는 날,16,"['data structures', 'greedy', 'priority queue', 'tree']"
23579,2357900,Create the Best Pet,0,[]
23580,2358000,Graph and Machine,26,[]
23581,2358100,Clique Festival,0,[]
23582,2358200,Distance in Crosses,0,[]
23583,2358300,Lui and Lines,0,[]
23584,2358400,Dominating Subarray,0,[]
23585,2358500,Least Number,9,"['case work', 'greedy']"
23586,2358600,Galactic Governments,0,[]
23587,2358700,Multiplication,19,"['constructive', 'exponentiation by squaring', 'extended euclidean algorithm', 'implementation', 'mathematics', 'modular multiplicative inverse', 'number theory', 'randomization']"
23588,2358800,Guess Two Strings,0,[]
23589,2358900,Beautiful Tables,0,[]
23590,2359000,Three Balls,0,[]
23591,2359100,Trampler,0,[]
23592,2359200,Video buffering,0,[]
23593,2359300,Package,0,[]
23594,2359400,Vasya's graph,0,[]
23595,2359500,Quadratic equation,6,"['case work', 'constructive', 'mathematics']"
23596,2359600,Alignment,0,[]
23597,2359700,Rocket,0,[]
23598,2359800,Cabbage,0,[]
23599,2359900,Segments,0,[]
23600,2360000,Civilization,0,[]
23601,2360100,Ecliptic,0,[]
23602,2360200,Drone With a Camera,0,[]
23603,2360300,Fibonaccis’ vouchers,20,"['binary search', 'dynamic programming', 'mathematics', 'parametric search']"
23604,2360400,Chinese Remainder Theorem,8,"['euclidean algorithm', 'mathematics', 'number theory']"
23605,2360500,Road,0,[]
23606,2360600,Evaluation,0,[]
23607,2360700,Baking Pans,0,[]
23608,2360800,Taste in Art,0,[]
23609,2360900,Hobby,0,[]
23610,2361000,Grade Book,0,[]
23611,2361100,Identical Scarves,0,[]
23612,2361200,Pocket Money,0,[]
23613,2361300,Lines,0,[]
23614,2361400,Magical Maze,24,[]
23615,2361500,Product,10,"['case work', 'implementation', 'mathematics']"
23616,2361600,Driving the Gnu,13,['ternary search']
23617,2361700,Crazy minesweeper,0,[]
23618,2361800,Error in code,13,"['dynamic programming', 'floyd–warshall', 'graph theory']"
23619,2361900,Birthday,0,[]
23620,2362000,Gas penalties,0,[]
23621,2362100,Level check,0,[]
23622,2362200,Intersection Graph,0,[]
23623,2362300,In search of the chair,27,[]
23624,2362400,Subsequences,17,"['bitmask', 'dynamic programming']"
23625,2362500,Office,0,[]
23626,2362600,Recursive circuit,0,[]
23627,2362700,driip,4,"['implementation', 'string']"
23628,2362800,악마의 연차 계산기,5,['implementation']
23629,2362900,이 얼마나 끔찍하고 무시무시한 수식이니,11,"['implementation', 'string']"
23630,2363000,가장 긴 부분 수열 구하기,9,"['ad-hoc', 'bitmask']"
23631,2363100,진심 좌우 반복뛰기,10,"['binary search', 'mathematics', 'parametric search']"
23632,2363200,쿠키런 킹덤,14,"['graph theory', 'topological sorting']"
23633,2363300,소수 징글벨,13,"['dynamic programming', 'game theory', 'greedy', 'mathematics', 'number theory', 'primality test']"
23634,2363400,미안하다 이거 보여주려고 어그로 끌었다,16,"['breadth-first search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal']"
23635,2363500,산타로부터의 선물,13,"['binary search', 'greedy', 'prefix sum']"
23636,2363600,배열 알아맞히기,19,"['arithmetic', 'mathematics', 'randomization']"
23637,2363700,뤼 신,19,"['data structures', 'geometry', 'multidimensional segment tree', 'segment tree']"
23638,2363800,도로 점검,19,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
23639,2363900,Color Numbers,0,[]
23640,2364000,Guess Matrix,0,[]
23641,2364100,Array,0,[]
23642,2364200,Modular Knapsack,0,[]
23643,2364300,Tower Defense,0,[]
23644,2364400,String Product,0,[]
23645,2364500,Automaton,0,[]
23646,2364600,Handsome multisets,0,[]
23647,2364700,Fence,0,[]
23648,2364800,Polynomial,23,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics']"
23649,2364900,Alice and Path,8,"['ad-hoc', 'geometry', 'string']"
23650,2365000,John and the Magic Box,0,[]
23651,2365100,Anti-Distance,0,[]
23652,2365200,Machines on the Moon,29,"['ad-hoc', 'graph theory', 'implementation']"
23653,2365300,Coin Tournament,0,[]
23654,2365400,Fizz and Buzz,9,"['ad-hoc', 'mathematics', 'probability theory']"
23655,2365500,Game on Tree,0,[]
23656,2365600,Jack and Jill,8,"['binary search', 'greedy']"
23657,2365700,Laws,0,[]
23658,2365800,Cubic Path,13,"['backtracking', 'bitmask', 'constructive', 'precomputation']"
23659,2365900,Red-Black Tree,0,[]
23660,2366000,Algorithm Was Applied,0,[]
23661,2366100,Mysterious … Host,0,[]
23662,2366200,Heretical Möbius,22,"['bit set', 'mathematics', 'number theory', 'precomputation', 'primality test', 'sieve of eratosthenes']"
23663,2366300,Deja vu of Go Players,3,"['game theory', 'greedy', 'implementation']"
23664,2366400,Immortal Universe,0,[]
23665,2366500,Interstellar Fantasy,16,"['geometry', 'geometry; 3d', 'mathematics']"
23666,2366600,Omnipotent Garland,0,[]
23667,2366700,Saintly Coins,28,[]
23668,2366800,Misunderstood Missing,20,['dynamic programming']
23669,2366900,Philosophical Balance,23,"['data structures', 'divide and conquer', 'dynamic programming', 'game theory', 'mathematics', 'probability theory', 'segment tree', 'string', 'suffix array and lcp array']"
23670,2367000,Desperate Fire Survive,25,"['data structures', 'set / map by trees']"
23671,2367100,Eventual Journey,13,['case work']
23672,2367200,Dstorv,25,['dynamic programming']
23673,2367300,Interesting Drug,22,"['data structures', 'dynamic programming', 'graph theory', 'segment tree', 'sweeping']"
23674,2367400,Balanced Rainbow Sequence,0,[]
23675,2367500,Called Convergient,0,[]
23676,2367600,Doesn't Contain Loops or Multiple Edges,0,[]
23677,2367700,Equal Adjacent Elements,0,[]
23678,2367800,"Formally, You Choose Three Integers",18,"['mathematics', 'permutation cycle decomposition']"
23679,2367900,Game,28,"['binary search', 'bipartite matching', 'game theory', 'greedy', 'two-pointer']"
23680,2368000,Hat With An Integer,0,[]
23681,2368100,Intersect With Other Balls,0,[]
23682,2368200,$J$ The Attacker Has,0,[]
23683,2368300,$K$ Integers,0,[]
23684,2368400,Labeled Connected Graphs,0,[]
23685,2368500,Moves You Need to Make,0,[]
23686,2368600,Number Of Vertices,0,[]
23687,2368700,Kaučuk,5,"['implementation', 'simulation']"
23688,2368800,Kutije,12,"['data structures', 'disjoint set']"
23689,2368900,Hiperkocka,19,"['constructive', 'tree']"
23690,2369000,Magneti,0,[]
23691,2369100,Osumnjičeni,21,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'sparse table']"
23692,2369200,Array,0,[]
23693,2369300,Chiaki Chain,0,[]
23694,2369400,Cut The Plane,0,[]
23695,2369500,Edges Counting,0,[]
23696,2369600,Equanimous,0,[]
23697,2369700,Fighting Against Monsters,0,[]
23698,2369800,Mysterious Triple Sequence,0,[]
23699,2369900,Inner Product,26,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'dynamic programming', 'tree', 'tree compression']"
23700,2370000,Counting Polygons,0,[]
23701,2370100,Square Graph,25,"['data structures', 'disjoint set', 'string', 'suffix array and lcp array']"
23702,2370200,Three Dimensions,0,[]
23703,2370300,Anatoly Shalyto,0,[]
23704,2370400,Basirovich Maxim,0,[]
23705,2370500,CTAHKEB** ANDREW,0,[]
23706,2370600,Dr. Bill Poucher,0,[]
23707,2370700,Elena Andreeva,0,[]
23708,2370800,Filipp Rukhovich,0,[]
23709,2370900,Gleb Evstropov,0,[]
23710,2371000,Hristenko Oleg,0,[]
23711,2371100,Ivan Smirnov,0,[]
23712,2371200,Juke Artem,0,[]
23713,2371300,Kunyavskiy Pavel,0,[]
23714,2371400,Lidia Perovskaya,0,[]
23715,2371500,Mikhail Tikhomirov,0,[]
23716,2371600,Transform the String,4,['string']
23717,2371700,Painter,7,['string']
23718,2371800,Silly Substitutions,17,"['implementation', 'simulation']"
23719,2371900,Dependent Events,24,"['lowest common ancestor', 'mathematics', 'probability theory', 'tree']"
23720,2372000,움얌얌,21,"['ad-hoc', 'data structures', 'dynamic programming', 'set / map by trees']"
23721,2372100,k개의 부분 배열과 쿼리,14,"['ad-hoc', 'prefix sum']"
23722,2372200,Marbles Tell Your Lucky Number,5,"['implementation', 'mathematics', 'number theory', 'simulation']"
23723,2372300,Hundred-Cell Calculation Puzzles,8,['mathematics']
23724,2372400,Tree Transformation Puzzle,0,[]
23725,2372500,Handing out Balloons,0,[]
23726,2372600,Time is Money,0,[]
23727,2372700,Princess' Perfectionism,24,"['bipartite matching', 'constructive', 'graph theory', 'strongly connected component']"
23728,2372800,Positioning the Lights,0,[]
23729,2372900,Ninja Escape,0,[]
23730,2373000,Guessing Answers,6,"['constructive', 'greedy', 'implementation']"
23731,2373100,Physics Experiment,6,"['greedy', 'implementation', 'mathematics']"
23732,2373200,Successful String,11,"['combinatorics', 'mathematics', 'two-pointer']"
23733,2373300,Subnumber Sum,13,['dynamic programming']
23734,2373400,Miswritten DFS,16,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'recursion', 'tree']"
23735,2373500,Two Dots,18,"['data structures', 'geometry', 'stack']"
23736,2373600,Vertex Merge Game,19,"['game theory', 'graph theory', 'greedy', 'minimum spanning tree']"
23737,2373700,Rock Paper Scissors Strategy,22,"['gaussian elimination', 'linear algebra', 'mathematics']"
23738,2373800,Ресторан,4,"['implementation', 'string']"
23739,2373900,벼락치기,5,"['implementation', 'mathematics']"
23740,2374000,버스 노선 개편하기,11,"['sorting', 'sweeping']"
23741,2374100,야바위 게임,12,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
23742,2374200,Player-based Team Distribution,12,"['greedy', 'sorting']"
23743,2374300,방탈출,14,"['graph theory', 'minimum spanning tree']"
23744,2374400,알고리즘 과외,18,"['data structures', 'segment tree', 'sweeping']"
23745,2374500,내가 몇 등이었지??,23,"['geometry', 'half plane intersection']"
23746,2374600,문자열 압축 해제,5,"['implementation', 'string']"
23747,2374700,와드,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
23748,2374800,방문 판매,14,"['dynamic programming', 'knapsack']"
23749,2374900,카드컨트롤,12,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
23750,2375000,Leader-based Team Distribution,19,"['data structures', 'greedy', 'priority queue', 'sorting']"
23751,2375100,던전 릴레이,19,"['binary search', 'value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'prefix sum', 'segment tree', 'sorting']"
23752,2375200,카드 잘 섞기,17,"['exponentiation by squaring', 'mathematics']"
23753,2375300,연결 요소와 쿼리,25,"['ad-hoc', 'data structures', 'implementation', 'segment tree']"
23754,2375400,방문 판매 (Hard),17,"['dynamic programming', 'graph theory', 'knapsack', 'topological sorting']"
23755,2375500,카드컨트롤 (Hard),18,"['ad-hoc', 'case work']"
23756,2375600,노브 돌리기,4,"['implementation', 'mathematics']"
23757,2375700,아이들과 선물 상자,9,"['data structures', 'priority queue']"
23758,2375800,중앙값 제거,10,"['greedy', 'mathematics', 'sorting']"
23759,2375900,비슷한 문자열,14,['dynamic programming']
23760,2376000,까다로운 아이들과 선물 상자,16,"['data structures', 'segment tree']"
23761,2376100,Counterfeit Coin,7,"['ad-hoc', 'case work']"
23762,2376200,배드민턴 복식 팀 만들기,14,"['dynamic programming', 'greedy', 'sorting']"
23763,2376300,괄호 문자열 이동하기,19,"['ad-hoc', 'constructive']"
23764,2376400,서로소 게임,21,"['game theory', 'mathematics', 'number theory']"
23765,2376500,다각형의 넓이,18,"['convex hull', 'dynamic programming', 'geometry']"
23766,2376600,간단한 트리 문제,23,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'heavy-light decomposition', 'segment tree', 'tree']"
23767,2376700,Access Denied,9,"['bruteforcing', 'implementation', 'mathematics', 'string']"
23768,2376800,Boredom Buster,23,"['ad-hoc', 'case work', 'implementation']"
23769,2376900,Cutting Edge,0,[]
23770,2377000,Dyson Circle,15,"['ad-hoc', 'convex hull', 'geometry', 'mathematics']"
23771,2377100,Exchange Students,19,"['data structures', 'segment tree', 'sorting']"
23772,2377200,Flatland Olympics,16,"['data structures', 'geometry', 'segment tree', 'sweeping']"
23773,2377300,Glossary Arrangement,17,"['dynamic programming', 'parametric search']"
23774,2377400,Heating Up,18,"['data structures', 'divide and conquer', 'segment tree']"
23775,2377500,IXth Problem,0,[]
23776,2377600,Jet Set,10,"['geometry', 'implementation']"
23777,2377700,Knitpicking,10,"['case work', 'data structures', 'set / map by hashing', 'implementation', 'mathematics', 'pigeonhole principle', 'set / map by trees']"
23778,2377800,Lucky Shirt,0,[]
23779,2377900,Silver Star Stands Alone,8,"['dynamic programming', 'mathematics', 'number theory', 'primality test']"
23780,2378000,TomTom Cruise,15,"[""dijkstra's"", 'graph theory', 'randomization']"
23781,2378100,Mad Diamond,0,[]
23782,2378200,Burizon Fort,9,"['mathematics', 'number theory', 'sorting']"
23783,2378300,Terrace Hill,11,"['data structures', 'stack']"
23784,2378400,Eidam-Sand Lair,5,"['case work', 'mathematics']"
23785,2378500,Organ-free Man,7,"['greedy', 'mathematics', 'number theory']"
23786,2378600,Bread Pit,16,"['depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory', 'tree']"
23787,2378700,Cyanide Rivers,4,"['implementation', 'string']"
23788,2378800,Screamers in the Storm,15,"['exponentiation by squaring', 'mathematics', 'number theory']"
23789,2378900,Tone Banks,0,[]
23790,2379000,Win Diesel,17,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'lowest common ancestor', 'priority queue', 'tree']"
23791,2379100,K번째 음식 찾기 1,13,"['binary search', 'parametric search']"
23792,2379200,K번째 음식 찾기 2,13,"['binary search', 'parametric search']"
23793,2379300,두 단계 최단 경로 1,12,"[""dijkstra's"", 'graph theory']"
23794,2379400,골뱅이 찍기 - 정사각형,3,['implementation']
23795,2379500,사장님 도박은 재미로 하셔야 합니다,2,"['arithmetic', 'implementation', 'mathematics']"
23796,2379600,"2,147,483,648 게임",11,['implementation']
23797,2379700,개구리,9,"['greedy', 'string']"
23798,2379800,올바른 괄호 문자열,21,"['combinatorics', 'data structures', 'mathematics', 'segment tree']"
23799,2379900,리브 매칭,21,"['data structures', 'heavy-light decomposition', 'segment tree with lazy propagation', 'segment tree', 'tree']"
23800,2380000,많이 튼튼한 금고 테스트,20,"['arbitrary precision / big integers', 'combinatorics', 'mathematics']"
23801,2380100,두 단계 최단 경로 2,12,"[""dijkstra's"", 'graph theory']"
23802,2380200,골뱅이 찍기 - 뒤집힌 ㄱ,3,['implementation']
23803,2380300,골뱅이 찍기 - ㄴ,3,['implementation']
23804,2380400,골뱅이 찍기 - ㄷ,3,['implementation']
23805,2380500,골뱅이 찍기 - 돌아간 ㄹ,3,['implementation']
23806,2380600,골뱅이 찍기 - ㅁ,3,['implementation']
23807,2380700,두 단계 최단 경로 3,13,"['bruteforcing', ""dijkstra's"", 'graph theory']"
23808,2380800,골뱅이 찍기 - ㅂ,3,['implementation']
23809,2380900,골뱅이 찍기 - 돌아간 ㅈ,3,['implementation']
23810,2381000,골뱅이 찍기 - 뒤집힌 ㅋ,3,['implementation']
23811,2381100,골뱅이 찍기 - ㅌ,3,['implementation']
23812,2381200,골뱅이 찍기 - 돌아간 ㅍ,3,['implementation']
23813,2381300,회전,4,"['arithmetic', 'mathematics', 'string']"
23814,2381400,아 저는 볶음밥이요,8,"['arithmetic', 'case work', 'mathematics']"
23815,2381500,똥게임,12,"['dynamic programming', 'greedy']"
23816,2381600,옷걸이걸이걸이,13,"['dynamic programming', 'knapsack']"
23817,2381700,포항항,15,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
23818,2381800,원수의 원수,15,"['bipartite graph', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
23819,2381900,묻고 더블로 마셔,15,"['exponentiation by squaring', 'mathematics']"
23820,2382000,MEX,14,"['mathematics', 'number theory']"
23821,2382100,땅따먹기,16,"['breadth-first search', 'graph theory', 'graph traversal', 'prefix sum']"
23822,2382200,Black Friday,22,"['maximum flow', 'graph theory']"
23823,2382300,초코칩 케이크,10,"['ad-hoc', 'mathematics']"
23824,2382400,서버 증축,21,"['combinatorics', 'generating function', 'inclusion and exclusion', 'lucas theorem', 'mathematics', 'number theory']"
23825,2382500,SASA 모형을 만들어보자,2,"['arithmetic', 'mathematics']"
23826,2382600,와이파이,7,"['bruteforcing', 'implementation']"
23827,2382700,수열 (Easy),7,"['mathematics', 'prefix sum']"
23828,2382800,수열 (Hard),13,"['dynamic programming', 'mathematics']"
23829,2382900,인문예술탐사주간,12,"['binary search', 'prefix sum']"
23830,2383000,제기차기,12,"['binary search', 'parametric search']"
23831,2383100,나 퇴사임?,13,['dynamic programming']
23832,2383200,서로소 그래프,15,"['euler totient function', 'mathematics', 'number theory']"
23833,2383300,F1ow3rC0n,17,"['data structures', 'segment tree']"
23834,2383400,커여운 키위,18,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque', 'prefix sum', 'segment tree']"
23835,2383500,어떤 우유의 배달목록 (Easy),12,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
23836,2383600,어떤 우유의 배달목록 (Hard),21,"['data structures', 'heavy-light decomposition', 'segment tree with lazy propagation', 'segment tree', 'tree']"
23837,2383700,구사과 시티,24,"['data structures', 'implementation', 'segment tree']"
23838,2383800,웜뱃,26,"['data structures', 'dynamic programming', 'knuth optimization', 'segment tree', 'square root decomposition']"
23839,2383900,바자와 샤자,23,"['data structures', 'multidimensional segment tree', 'segment tree']"
23840,2384000,두 단계 최단 경로 4,16,"['bitmask', ""dijkstra's"", 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'travelling salesman problem']"
23841,2384100,데칼코마니,5,"['implementation', 'string']"
23842,2384200,성냥개비,7,['bruteforcing']
23843,2384300,콘센트,11,"['data structures', 'greedy', 'priority queue', 'sorting']"
23844,2384400,트리 정리하기,14,"['greedy', 'tree']"
23845,2384500,마트료시카,13,['greedy']
23846,2384600,징검다리 건너기,14,"['dynamic programming', 'mathematics', 'probability theory']"
23847,2384700,INU 막대기,14,"['ad-hoc', 'case work', 'graph theory']"
23848,2384800,등비수열의 합,13,"['bruteforcing', 'mathematics']"
23849,2384900,Lampice,12,[]
23850,2385000,Cijanobakterije,14,"['graph theory', 'graph traversal', 'tree']"
23851,2385100,Akcija,23,"['binary search', 'dynamic programming']"
23852,2385200,Ekoeko,0,[]
23853,2385300,Kućice,0,[]
23854,2385400,The Battle of Giants,4,"['arithmetic', 'greedy', 'mathematics']"
23855,2385500,Tetris Remastered,11,"['data structures', 'mathematics', 'stack']"
23856,2385600,Optimal Truck,15,"['binary search', 'prefix sum', 'sorting']"
23857,2385700,Bookshelf Sorting,20,"['data structures', 'segment tree']"
23858,2385800,Nice Shape,22,"['case work', 'square root decomposition']"
23859,2385900,Snowman,5,"['greedy', 'string']"
23860,2386000,Teacher Sorting,0,[]
23861,2386100,Garbage Robot,0,[]
23862,2386200,Digidivisible Numbers,0,[]
23863,2386300,Yet Another Minimax Problem,24,"['geometry', 'sweeping']"
23864,2386400,Parking Problem,0,[]
23865,2386500,Diamond Hands,13,"['constructive', 'implementation', 'simulation']"
23866,2386600,RPS string,0,[]
23867,2386700,Long puzzle,0,[]
23868,2386800,Rooted MST,26,"['data structures', 'disjoint set', 'divide and conquer', 'dynamic programming', 'offline queries', 'segment tree']"
23869,2386900,Tickets,22,"['data structures', ""dijkstra's"", 'graph theory', 'segment tree']"
23870,2387000,Paired Up,24,['dynamic programming']
23871,2387100,HILO,20,"['combinatorics', 'dynamic programming', 'mathematics', 'prefix sum']"
23872,2387200,Paired Up,19,"['binary search', 'case work', 'dynamic programming']"
23873,2387300,HILO,19,"['data structures', 'segment tree']"
23874,2387400,Bracelet Crossings,17,"['ad-hoc', 'case work', 'data structures', 'geometry', 'implementation', 'stack', 'tree']"
23875,2387500,Closest Cow Wins,18,"['data structures', 'greedy', 'priority queue', 'sorting', 'sweeping', 'two-pointer']"
23876,2387600,Connecting Two Barns,16,"['binary search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal']"
23877,2387700,Convoluted Intervals,15,"['combinatorics', 'mathematics', 'prefix sum']"
23878,2387800,Lonely Photo,12,"['combinatorics', 'mathematics']"
23879,2387900,Air Cownditioning,12,"['data structures', 'greedy', 'stack']"
23880,2388000,Walking Home,11,['dynamic programming']
23881,2388100,알고리즘 수업 - 선택 정렬 1,5,"['implementation', 'simulation', 'sorting']"
23882,2388200,알고리즘 수업 - 선택 정렬 2,5,"['implementation', 'simulation', 'sorting']"
23883,2388300,알고리즘 수업 - 선택 정렬 3,12,"['data structures', 'sorting', 'set / map by trees']"
23884,2388400,알고리즘 수업 - 선택 정렬 4,12,"['value / coordinate compression', 'data structures', 'sorting', 'set / map by trees']"
23885,2388500,비숍 투어,4,"['ad-hoc', 'case work']"
23886,2388600,알프수,5,"['implementation', 'string']"
23887,2388700,프린트 전달,13,"['breadth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
23888,2388800,등차수열과 쿼리,10,"['euclidean algorithm', 'mathematics', 'number theory']"
23889,2388900,돌 굴러가유,11,"['greedy', 'sorting']"
23890,2389000,달팽이팽이,13,"['geometry', 'mathematics']"
23891,2389100,타이어 끌기,14,"['dynamic programming', 'knapsack']"
23892,2389200,바코드 찢기,14,"['mathematics', 'string']"
23893,2389300,알프스의 힘,16,['mathematics']
23894,2389400,합성함수와 쿼리 2,18,"['data structures', 'graph theory', 'graph traversal', 'sparse table']"
23895,2389500,Allocation,6,"['greedy', 'sorting']"
23896,2389600,Plates,14,"['dynamic programming', 'knapsack']"
23897,2389700,Workout,13,['binary search']
23898,2389800,Bundling,17,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'tree', 'trie']"
23899,2389900,알고리즘 수업 - 선택 정렬 5,5,"['implementation', 'simulation', 'sorting']"
23900,2390000,알고리즘 수업 - 선택 정렬 6,13,"['value / coordinate compression', 'data structures', 'sorting', 'set / map by trees']"
23901,2390100,Bike Tour,4,['implementation']
23902,2390200,Bus Routes,10,"['binary search', 'parametric search']"
23903,2390300,Robot Path Decoding,0,[]
23904,2390400,Wandering Robot,0,[]
23905,2390500,Countdown,5,"['bruteforcing', 'implementation', 'knuth–morris–pratt', 'string']"
23906,2390600,Stable Wall,12,"['graph theory', 'topological sorting']"
23907,2390700,Perfect Subarray,16,"['mathematics', 'prefix sum']"
23908,2390800,Candies,0,[]
23909,2390900,Record Breaker,5,[]
23910,2391000,Alien Piano,8,['dynamic programming']
23911,2391100,Beauty of tree,17,"['data structures', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'linearity of expectation', 'mathematics', 'probability theory', 'sparse table', 'tree']"
23912,2391200,Locked Doors,19,"['binary search', 'offline queries']"
23913,2391300,Longest Arithmetic,5,['implementation']
23914,2391400,High Buildings,7,['case work']
23915,2391500,Toys,0,[]
23916,2391600,Golden Stone,0,[]
23917,2391700,ATM Queue,9,"['ad-hoc', 'mathematics', 'sorting']"
23918,2391800,Metal Harvest,7,['greedy']
23919,2391900,Painters' Duel,19,"['graph theory', 'implementation', 'recursion']"
23920,2392000,Yeetzhee,0,[]
23921,2392100,Kick_Start,8,"['combinatorics', 'mathematics', 'string']"
23922,2392200,Maximum Coins,6,['bruteforcing']
23923,2392300,Combination Lock,15,[]
23924,2392400,Merge Cards,0,[]
23925,2392500,Retype,3,"['arithmetic', 'mathematics']"
23926,2392600,Boring Numbers,15,['mathematics']
23927,2392700,Rugby,16,"['implementation', 'mathematics', 'ternary search']"
23928,2392800,Friends,0,[]
23929,2392900,Training,7,[]
23930,2393000,Parcels,16,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal', 'parametric search']"
23931,2393100,Contention,0,[]
23932,2393200,Building Palindromes,10,"['ad-hoc', 'prefix sum', 'string']"
23933,2393300,Energy Stones,17,"['dynamic programming', 'greedy', 'knapsack', 'sorting']"
23934,2393400,Diverse Subarray,19,"['data structures', 'segment tree', 'sliding window']"
23935,2393500,Wiggle Walk,0,[]
23936,2393600,Circuit Board,17,"['data structures', 'stack', 'two-pointer']"
23937,2393700,Catch Some,0,[]
23938,2393800,X or What?,0,[]
23939,2393900,Latest Guests,14,[]
23940,2394000,Food Stalls,0,[]
23941,2394100,Cherries Mesh,13,"['graph theory', 'minimum spanning tree']"
23942,2394200,Code-Eat Switcher,0,[]
23943,2394300,Street Checkers,15,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
23944,2394400,Flattening,0,[]
23945,2394500,Teach Me,0,[]
23946,2394600,Spectating Villages,0,[]
23947,2394700,Book Reading,7,['mathematics']
23948,2394800,The Equation,14,"['backtracking', 'bitmask', 'greedy', 'mathematics']"
23949,2394900,Shifts,19,"['dynamic programming', 'sum over subsets dynamic programming']"
23950,2395000,H-index,12,"['ad-hoc', 'data structures', 'priority queue']"
23951,2395100,Diagonal Puzzle,0,[]
23952,2395200,Elevanagram,0,[]
23953,2395300,Even Digits,12,"['greedy', 'mathematics']"
23954,2395400,Lucky Dip,0,[]
23955,2395500,Scrambled Words,0,[]
23956,2395600,No Nine,14,"['mathematics', 'number theory']"
23958,2395800,King's Circle,0,[]
23959,2395900,Planet Distance,10,[]
23960,2396000,Fairies and Witches,0,[]
23961,2396100,Kickstart Alarm,0,[]
23962,2396200,Candies,0,[]
23963,2396300,Paragliding,0,[]
23964,2396400,Funniest Word Search,0,[]
23965,2396500,Board Game,0,[]
23966,2396600,Milk Tea,0,[]
23967,2396700,Yogurt,7,"['greedy', 'sorting']"
23968,2396800,알고리즘 수업 - 버블 정렬 1,5,"['implementation', 'simulation', 'sorting']"
23969,2396900,알고리즘 수업 - 버블 정렬 2,5,"['implementation', 'simulation', 'sorting']"
23970,2397000,알고리즘 수업 - 버블 정렬 3,11,"['ad-hoc', 'implementation', 'sorting']"
23971,2397100,ZOAC 4,3,"['arithmetic', 'mathematics']"
23972,2397200,악마의 제안,3,['mathematics']
23973,2397300,표적지 옮기기,9,"['bruteforcing', 'implementation']"
23974,2397400,짝수 게임,13,"['dynamic programming', 'game theory']"
23975,2397500,정훈이는 민트초코맛 짜장라면이 먹고 싶다,16,"['data structures', ""dijkstra's"", 'disjoint set', 'graph theory']"
23976,2397600,문자열 나누기,13,['dynamic programming']
23977,2397700,To Find Password,9,"['mathematics', 'number theory']"
23978,2397800,급상승,11,"['binary search', 'mathematics', 'parametric search']"
23979,2397900,트리의 재구성,19,"['data structures', 'implementation', 'lowest common ancestor', 'sparse table', 'tree']"
23980,2398000,Common Anagrams,8,[]
23981,2398100,Specializing Villages,0,[]
23982,2398200,Palindromic Sequence,0,[]
23983,2398300,Product Triplets,11,[]
23984,2398400,Combining Classes,0,[]
23986,2398600,Big Buttons,12,"['bruteforcing', 'combinatorics', 'mathematics', 'string']"
23987,2398700,Mural,14,['ad-hoc']
23988,2398800,Let Me Count The Ways,18,"['combinatorics', 'inclusion and exclusion', 'mathematics']"
23989,2398900,Square Counting,10,"['combinatorics', 'mathematics']"
23990,2399000,Pattern Overlap,0,[]
23991,2399100,Two Cubes,0,[]
23992,2399200,Math Encoder,11,"['combinatorics', 'mathematics']"
23993,2399300,Center,14,[]
23994,2399400,Christmas Tree,0,[]
23995,2399500,Ambiguous Cipher,11,"['implementation', 'mathematics', 'string']"
23996,2399600,X Squared,13,['ad-hoc']
23997,2399700,Magical Thinking v2,0,[]
23998,2399800,The 4M Corporation,0,[]
23999,2399900,Sightseeing,0,[]
24000,2400000,Sherlock and Matrix Game,0,[]
24001,2400100,Trash,0,[]
24002,2400200,Trapezoid Counting,17,"['binary search', 'case work', 'combinatorics', 'data structures', 'geometry', 'set / map by hashing', 'mathematics', 'prefix sum', 'sorting']"
24003,2400300,Copy & Paste,0,[]
24004,2400400,Blackhole,0,[]
24005,2400500,Cake,9,['dynamic programming']
24006,2400600,Kicksort,0,[]
24007,2400700,Dance Battle,0,[]
24008,2400800,Catch Them All,0,[]
24009,2400900,Huge Numbers,11,"['exponentiation by squaring', 'mathematics', 'number theory']"
24010,2401000,Cards Game,13,"['graph theory', 'minimum spanning tree']"
24011,2401100,Matrix Cutting,0,[]
24012,2401200,Ticket Trouble,0,[]
24013,2401300,Understudies,0,[]
24014,2401400,Word Search,0,[]
24015,2401500,Where Ya Gonna Call?,0,[]
24016,2401600,Burger Optimization,0,[]
24017,2401700,CEO Search,0,[]
24018,2401800,Centrists,0,[]
24019,2401900,Tricky Trios,0,[]
24020,2402000,Saturnalia,0,[]
24021,2402100,Zathras,0,[]
24022,2402200,Seating Chart,0,[]
24023,2402300,아기 홍윤,11,"['bitmask', 'greedy']"
24024,2402400,삼색 그래프,17,"[""dijkstra's"", 'graph theory', 'ternary search']"
24025,2402500,돌의 정령 줄세우기,12,"['constructive', 'greedy']"
24026,2402600,기차 여행,19,"['data structures', 'segment tree', 'sparse table']"
24027,2402700,두 트리,27,"['ad-hoc', 'breadth-first search', 'constructive', 'graph theory', 'graph traversal', 'recursion', 'tree']"
24028,2402800,사진 촬영,23,['dynamic programming']
24029,2402900,정기 모임 3,18,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
24030,2403000,향수,24,"['aliens trick', 'binary search', 'data structures', 'dynamic programming', 'segment tree with lazy propagation', 'segment tree']"
24031,2403100,카카오 택시,18,"['graph theory', 'implementation', 'simulation']"
24032,2403200,깔때기와 비커,23,"['data structures', 'offline queries', 'segment tree', 'sparse table', 'sweeping']"
24033,2403300,맥스웰의 악마,17,"['mathematics', 'number theory']"
24034,2403400,선형대수학,22,"['binary search', 'convex hull', 'data structures', 'geometry', 'implementation', 'point in convex polygon check', 'segment tree']"
24035,2403500,Impartial Offerings,8,"['value / coordinate compression', 'sorting']"
24036,2403600,Inconstant Ordering,8,"['greedy', 'string']"
24037,2403700,Introductions Organization,0,[]
24038,2403800,Irrefutable Outcome,17,"['case work', 'game theory', 'greedy']"
24039,2403900,2021은 무엇이 특별할까?,6,"['mathematics', 'number theory', 'primality test']"
24040,2404000,예쁜 케이크,9,"['mathematics', 'number theory']"
24041,2404100,성싶당 밀키트,12,"['binary search', 'greedy', 'parametric search', 'sorting']"
24042,2404200,횡단보도,15,"[""dijkstra's"", 'graph theory']"
24043,2404300,XOR 기계,17,"['bitmask', 'graph theory', 'graph traversal', 'linear algebra', 'mathematics']"
24044,2404400,미로 설계,22,"['constructive', 'dynamic programming', 'graph theory', 'mathematics', 'topological sorting']"
24045,2404500,극장 좌석 배치,26,"['ad-hoc', 'case work', 'data structures', 'greedy', 'priority queue']"
24046,2404600,알고리즘 수업 - 버블 정렬 4,16,"['ad-hoc', 'data structures', 'implementation', 'sorting']"
24047,2404700,알고리즘 수업 - 버블 정렬 5,16,"['ad-hoc', 'data structures', 'implementation', 'segment tree', 'sorting']"
24048,2404800,알고리즘 수업 - 버블 정렬 6,16,"['ad-hoc', 'greedy', 'implementation', 'parametric search', 'sorting']"
24049,2404900,정원 (Easy),5,['implementation']
24050,2405000,정원 (Hard),16,"['combinatorics', 'lucas theorem', 'mathematics', 'number theory']"
24051,2405100,알고리즘 수업 - 삽입 정렬 1,5,"['implementation', 'simulation', 'sorting']"
24052,2405200,알고리즘 수업 - 삽입 정렬 2,5,"['implementation', 'simulation', 'sorting']"
24053,2405300,알고리즘 수업 - 삽입 정렬 3,11,"['ad-hoc', 'implementation', 'sorting']"
24054,2405400,알고리즘 수업 - 삽입 정렬 4,16,"['data structures', 'segment tree', 'sorting']"
24055,2405500,알고리즘 수업 - 삽입 정렬 5,17,"['data structures', 'segment tree', 'sorting']"
24056,2405600,알고리즘 수업 - 삽입 정렬 6,14,"['ad-hoc', 'implementation', 'sorting']"
24057,2405700,실수,9,"['euclidean algorithm', 'implementation', 'mathematics', 'number theory']"
24058,2405800,Coprime,15,"['arbitrary precision / big integers', 'euler totient function', 'inclusion and exclusion', 'mathematics', 'number theory']"
24059,2405900,Function,14,"['exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'number theory']"
24060,2406000,알고리즘 수업 - 병합 정렬 1,7,"['implementation', 'recursion', 'sorting']"
24061,2406100,알고리즘 수업 - 병합 정렬 2,7,"['implementation', 'sorting']"
24062,2406200,알고리즘 수업 - 병합 정렬 3,10,"['ad-hoc', 'implementation', 'sorting']"
24063,2406300,Guessing,19,"['breadth-first search', 'case work', 'depth-first search', 'graph theory', 'graph traversal', 'greedy', 'mathematics']"
24064,2406400,Intersections,6,['mathematics']
24065,2406500,Present,9,"['combinatorics', 'mathematics']"
24066,2406600,AddK,0,[]
24067,2406700,KPart,0,[]
24068,2406800,XCopy,22,"['bitmask', 'combinatorics', 'constructive', 'mathematics']"
24069,2406900,BinSearch,20,['constructive']
24070,2407000,Dungeons,0,[]
24071,2407100,Waterfront,0,[]
24072,2407200,帰省 (Homecoming),2,['implementation']
24073,2407300,ビ太郎と IOI (Bitaro and IOI),4,['string']
24074,2407400,分割 (Split),4,['implementation']
24075,2407500,計算 (Calculation),2,"['arithmetic', 'implementation', 'mathematics']"
24076,2407600,IOI 文字列 (IOI String),4,"['implementation', 'string']"
24077,2407700,比較 (Comparison),4,"['bruteforcing', 'implementation']"
24078,2407800,余り (Remainder),1,"['arithmetic', 'mathematics']"
24079,2407900,移動 (Moving),2,"['arithmetic', 'mathematics']"
24080,2408000,複雑な文字列 (Complex String),4,"['implementation', 'string']"
24081,2408100,箱と鍵 (Boxes and Keys),4,"['bruteforcing', 'implementation']"
24082,2408200,立方体 (Cube),1,"['arithmetic', 'mathematics']"
24083,2408300,短針 (Hour Hand),2,"['arithmetic', 'mathematics']"
24084,2408400,次の文字 (Next Character),4,"['implementation', 'string']"
24085,2408500,希少な数 (Rare Number),4,['implementation']
24086,2408600,身長 (Height),1,"['arithmetic', 'mathematics']"
24087,2408700,アイスクリーム (Ice Cream),2,"['arithmetic', 'mathematics']"
24088,2408800,運動会 (Sports Day),4,"['implementation', 'string']"
24089,2408900,ボールの移動 (Moving Balls),4,"['implementation', 'simulation']"
24090,2409000,알고리즘 수업 - 퀵 정렬 1,6,"['implementation', 'sorting']"
24091,2409100,알고리즘 수업 - 퀵 정렬 2,6,"['implementation', 'sorting']"
24092,2409200,알고리즘 수업 - 퀵 정렬 3,10,"['ad-hoc', 'implementation', 'sorting']"
24093,2409300,横断幕 (Banner),13,"['combinatorics', 'mathematics', 'prefix sum']"
24094,2409400,ドラゴン (Dragon),22,[]
24095,2409500,ジョイッター (Joitter),20,[]
24097,2409700,カードキー (Keycards),18,[]
24098,2409800,しりとり (Shiritori),22,"['ad-hoc', 'depth-first search', 'graph theory', 'graph traversal']"
24099,2409900,解読 (Deciphering),16,[]
24100,2410000,報告 (Report),22,[]
24101,2410100,UFO の飛行場 (UFO) 1,17,"['bipartite matching', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
24102,2410200,UFO の飛行場 (UFO) 2,19,['bipartite matching']
24103,2410300,UFO の飛行場 (UFO) 3,0,[]
24104,2410400,UFO の飛行場 (UFO) 4,0,[]
24105,2410500,UFO の飛行場 (UFO) 5,0,[]
24107,2410700,本棚 (Bookshelf),17,"['data structures', 'dynamic programming', 'segment tree']"
24108,2410800,国際情報オリンピック (IOI),13,[]
24109,2410900,オリエンテーリング (Orienteering),20,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
24110,2411000,JOI ポスター (JOI Poster),8,"['divide and conquer', 'implementation', 'recursion']"
24111,2411100,戦国時代 (Sengoku),17,[]
24112,2411200,階段 (Stairs),13,"['binary search', 'dynamic programming', 'prefix sum', 'two-pointer']"
24113,2411300,足し算 (a+b problem),17,[]
24114,2411400,DNA の合成 (DNA synthesizer),13,"['data structures', 'dynamic programming', 'set / map by hashing', 'string', 'tree', 'trie']"
24115,2411500,地域 (Regions),22,[]
24116,2411600,本選会場 (Finals),15,[]
24117,2411700,かくれんぼ (Hide-and-seek),20,"['data structures', 'segment tree with lazy propagation', 'offline queries', 'segment tree', 'sweeping']"
24118,2411800,シムロード (SimRoad) 1,0,[]
24119,2411900,シムロード (SimRoad) 2,0,[]
24120,2412000,シムロード (SimRoad) 3,0,[]
24121,2412100,シムロード (SimRoad) 4,0,[]
24122,2412200,シムロード (SimRoad) 5,0,[]
24123,2412300,コンテスト (Contest),6,"['implementation', 'simulation']"
24124,2412400,高速道路 (Highway),22,[]
24125,2412500,湖 (Lake),18,[]
24126,2412600,プラグ (Plugs),20,"['bipartite matching', 'prefix sum']"
24127,2412700,数列 (Sequence),18,"['mathematics', 'precomputation']"
24128,2412800,判子 (はんこ) (Stamp),19,['greedy']
24129,2412900,貫きピラミッド (Pyramid),17,[]
24130,2413000,誘拐 (Abduction),20,[]
24131,2413100,宣伝 (Advertisement),16,"['graph theory', 'strongly connected component']"
24132,2413200,コンテスト (Contest),21,[]
24133,2413300,縄張り (Territory),22,[]
24134,2413400,スキー (Ski),20,[]
24135,2413500,ロゴマーク (Logo),0,[]
24136,2413600,冊子の配布 (Distribution),17,[]
24137,2413700,塗り箸 (Chopsticks),18,['dynamic programming']
24138,2413800,星空 (Starry Sky),0,[]
24139,2413900,委員会 (Committee),14,"['dynamic programming', 'dynamic programming on trees', 'tree']"
24140,2414000,色紙 (Sheet),16,[]
24141,2414100,インフルエンザ (Flu),16,[]
24142,2414200,ナイルドットコム (Nile.Com),13,[]
24143,2414300,カンニング対策 (Cheating),14,[]
24144,2414400,ベルト (Belt),0,[]
24145,2414500,折り紙 (Origami),8,"['bruteforcing', 'data structures', 'set / map by hashing']"
24146,2414600,分数 (Fraction),12,"['data structures', 'mathematics', 'number theory', 'priority queue', 'recursion']"
24147,2414700,夜警 (Nightman),21,[]
24148,2414800,最古の遺跡 2 (Ruins),21,"['convex hull', 'dynamic programming', 'geometry', 'sorting']"
24149,2414900,台風 (Typhoon),20,"['data structures', 'segment tree']"
24155,2415500,得点 (Score),6,"['implementation', 'sorting']"
24156,2415600,階乗 (Factorial),10,"['binary search', 'mathematics', 'number theory', 'primality test']"
24157,2415700,ショッピングモール (Mall),11,['prefix sum']
24158,2415800,ビルの飾りつけ (Building),9,['dynamic programming']
24159,2415900,フェルマー方程式 (Fermat),11,"['bruteforcing', 'exponentiation by squaring', 'mathematics']"
24161,2416100,アナグラム (Anagram),13,[]
24162,2416200,象使い (Route),16,[]
24163,2416300,電気回路の結線 (Circuit),0,[]
24164,2416400,光ファイバー網の整備 (Fiber),9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
24165,2416500,直線 (Lines),22,"['geometry', 'sweeping']"
24171,2417100,복소수,13,"['euclidean algorithm', 'implementation', 'mathematics', 'number theory']"
24172,2417200,Coloring,18,"['combinatorics', 'mathematics', 'number theory']"
24173,2417300,알고리즘 수업 - 힙 정렬 1,6,"['implementation', 'sorting']"
24174,2417400,알고리즘 수업 - 힙 정렬 2,6,"['implementation', 'sorting']"
24175,2417500,Tokyo2020,5,['implementation']
24176,2417600,出前配達,5,"['mathematics', 'physics']"
24177,2417700,引っ越し,12,"['backtracking', 'bruteforcing']"
24178,2417800,ぶりしゃぶしゃぶり部,0,[]
24179,2417900,回転,0,[]
24180,2418000,一は零，零は一,0,[]
24181,2418100,クッキーゲーム,0,[]
24182,2418200,串刺し,0,[]
24183,2418300,Affischutskicket,2,"['arithmetic', 'mathematics']"
24184,2418400,Arabiska,4,"['implementation', 'string']"
24185,2418500,Grönt kort,5,"['arithmetic', 'mathematics']"
24186,2418600,Den trötte målaren,9,"['bruteforcing', 'greedy', 'implementation']"
24187,2418700,Korta vokaler,9,"['dynamic programming', 'string']"
24188,2418800,Bergskedja,14,"['graph theory', 'graph traversal', 'topological sorting']"
24189,2418900,Hockeymatchen,5,"['arithmetic', 'case work', 'mathematics']"
24190,2419000,Ljusshow,8,"['bitmask', 'combinatorics', 'data structures', 'set / map by hashing', 'implementation', 'mathematics', 'string']"
24191,2419100,Boris,0,[]
24192,2419200,Mötet,0,[]
24193,2419300,Ljusshow 2,0,[]
24194,2419400,Örnattack,0,[]
24195,2419500,Solsystem,0,[]
24218,2421800,Double Crypt  1,0,['implementation']
24219,2421900,Double Crypt  2,0,"['bruteforcing', 'string', 'implementation']"
24220,2422000,Double Crypt  3,0,"['bruteforcing', 'implementation', 'precomputation']"
24221,2422100,Double Crypt  4,0,"['bruteforcing', 'implementation', 'precomputation']"
24222,2422200,Double Crypt  5,0,"['data structures', 'set / map by hashing', 'implementation', 'meet in the middle', 'precomputation', 'string']"
24223,2422300,Double Crypt  6,0,"['data structures', 'set / map by hashing', 'implementation', 'meet in the middle', 'precomputation', 'string']"
24224,2422400,Double Crypt  7,0,"['set / map by hashing', 'implementation', 'meet in the middle', 'precomputation', 'string', 'data structures']"
24225,2422500,Double Crypt  8,0,"['set / map by hashing', 'implementation', 'meet in the middle', 'precomputation', 'string', 'data structures']"
24226,2422600,Double Crypt  9,0,"['set / map by hashing', 'meet in the middle', 'implementation', 'string', 'data structures', 'precomputation']"
24227,2422700,Double Crypt  10,0,"['data structures', 'set / map by hashing', 'implementation', 'meet in the middle', 'precomputation', 'string']"
24228,2422800,젓가락,6,"['mathematics', 'pigeonhole principle']"
24229,2422900,모두싸인 출근길,12,"['greedy', 'sweeping']"
24230,2423000,트리 색칠하기,11,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
24231,2423100,해석,15,['dynamic programming']
24232,2423200,망가진 나무,14,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
24233,2423300,낚시,19,"['prefix sum', 'sorting', 'sweeping']"
24234,2423400,1차원 체스,17,"['data structures', 'dynamic programming', 'set / map by hashing', 'tree', 'trie']"
24235,2423500,유산,19,"['binary search', 'convex hull', 'geometry', 'line segment intersection check', 'parametric search', 'area of a polygon']"
24236,2423600,1차원 애니팡,19,"['data structures', 'segment tree']"
24237,2423700,Archipelago,10,"['graph theory', 'graph traversal', 'sorting']"
24238,2423800,Bombs,19,"['binary search', 'maximum flow']"
24239,2423900,Coins,8,"['game theory', 'mathematics']"
24240,2424000,Doomsday,13,"[""dijkstra's"", 'graph theory']"
24241,2424100,Elder price robot,12,"['data structures', 'stack']"
24242,2424200,F1 Racing,18,[]
24243,2424300,Glitching screen,5,"['implementation', 'string']"
24244,2424400,100 meter dash,14,['sliding window']
24245,2424500,Irritating accountants,8,"['data structures', 'sorting', 'set / map by trees']"
24246,2424600,Junior price robot,4,['implementation']
24247,2424700,King of cans,9,"['bruteforcing', 'greedy', 'mathematics', 'number theory']"
24248,2424800,Live aid,12,['dynamic programming']
24249,2424900,Meticulous smoothing,16,"['breadth-first search', 'graph theory', 'graph traversal', 'greedy']"
24250,2425000,Heaps,21,"['game theory', 'sprague–grundy theorem']"
24251,2425100,Miners,0,[]
24252,2425200,News,0,[]
24253,2425300,Hint,0,[]
24254,2425400,Delivery,0,[]
24255,2425500,Rabbit,0,[]
24256,2425600,Pretty sequences,0,[]
24257,2425700,Wall,0,[]
24258,2425800,Sum and product,26,"['mathematics', 'recursion']"
24259,2425900,Monopoly,9,"['constructive', 'graph theory']"
24260,2426000,Cutting,0,[]
24261,2426100,Same Sum Subsequences,21,['pigeonhole principle']
24262,2426200,알고리즘 수업 - 알고리즘의 수행 시간 1,1,"['implementation', 'simulation']"
24263,2426300,알고리즘 수업 - 알고리즘의 수행 시간 2,2,"['implementation', 'simulation']"
24264,2426400,알고리즘 수업 - 알고리즘의 수행 시간 3,3,"['implementation', 'simulation']"
24265,2426500,알고리즘 수업 - 알고리즘의 수행 시간 4,3,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
24266,2426600,알고리즘 수업 - 알고리즘의 수행 시간 5,3,"['implementation', 'mathematics', 'simulation']"
24267,2426700,알고리즘 수업 - 알고리즘의 수행 시간 6,3,"['implementation', 'mathematics', 'simulation']"
24268,2426800,2022는 무엇이 특별할까?,9,"['bruteforcing', 'mathematics']"
24269,2426900,랜드마크 건설,14,"['ad-hoc', 'case work', 'constructive', 'mathematics']"
24270,2427000,미니 버킷 리스트,12,"['ad-hoc', 'combinatorics', 'mathematics']"
24271,2427100,xor²,18,"['bitmask', 'data structures', 'segment tree']"
24272,2427200,루트 노드가 많은 트리일수록 좋은 트리이다,20,"['data structures', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
24273,2427300,교통량 분석,26,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'duality', 'heavy-light decomposition', 'linear programming', 'segment tree', 'top tree', 'tree']"
24274,2427400,구불구불 경주 트랙,24,"['ad-hoc', 'bipartite matching', 'maximum flow']"
24275,2427500,공정한 동전,27,"['convex hull trick', 'divide and conquer', 'mathematics', 'parametric search', 'statistics']"
24276,2427600,Circle,0,[]
24277,2427700,Sgame,0,[]
24278,2427800,Infestation,0,[]
24279,2427900,Bombs,0,[]
24280,2428000,Present10,14,['mathematics']
24281,2428100,Music Festival,0,[]
24282,2428200,Connect,23,"['data structures', 'disjoint set', 'divide and conquer', 'graph theory', 'offline dynamic connectivity', 'offline queries']"
24283,2428300,Points,0,[]
24284,2428400,Ludo,0,[]
24285,2428500,Game on two heaps,13,"['euclidean algorithm', 'game theory', 'mathematics', 'number theory']"
24286,2428600,Rain,0,[]
24287,2428700,Field,11,"['binary search', 'prefix sum']"
24288,2428800,ХАКВАНЕ,0,[]
24289,2428900,БИЗНЕС,0,[]
24290,2429000,ПРАВОЪГЪЛНИЦИ,12,"['bruteforcing', 'data structures', 'geometry', 'set / map by hashing']"
24291,2429100,QUEUE,6,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
24292,2429200,РАЗДЕЛЯЙ и ВЛАДЕЙ,12,"['exponentiation by squaring', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
24293,2429300,ВСЕКИ ТРЕТИ,8,"['ad-hoc', 'arithmetic', 'implementation', 'mathematics', 'simulation', 'string']"
24294,2429400,ГРАДИНА,2,"['arithmetic', 'mathematics']"
24295,2429500,ОБЛЕКЛА НА УЧЕБНИЦИ,4,"['arithmetic', 'case work', 'implementation', 'mathematics']"
24296,2429600,ЛИНИЯ,3,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
24297,2429700,НАЙ-МНОГО ЕДНАКВИ,0,[]
24298,2429800,МАКСИМАЛНА СУМА,11,['dynamic programming']
24299,2429900,ОТГАТНИ ЦИФРАТA,8,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics', 'parsing', 'string']"
24300,2430000,НАЙ-ГОЛЯМ ОСТАТЪК,6,"['mathematics', 'sorting']"
24301,2430100,АВТОБУСИ,7,"['euclidean algorithm', 'mathematics', 'number theory']"
24302,2430200,КУРИЕРИ,3,"['arithmetic', 'implementation', 'mathematics']"
24303,2430300,ПРЪЧКИ,4,"['arithmetic', 'bruteforcing', 'greedy', 'implementation', 'mathematics']"
24304,2430400,ЧИСЛА МЕЖДУ БУКВИ,5,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
24305,2430500,ОТЧЕТ,11,"['data structures', 'stack']"
24306,2430600,ЧАСОВНИК,5,"['arithmetic', 'bruteforcing', 'mathematics']"
24307,2430700,УСТОЙЧИВОСТ,10,"['mathematics', 'precomputation']"
24308,2430800,ПРОМЕНЍ ЧИСЛОТО,6,"['bruteforcing', 'implementation', 'mathematics', 'number theory', 'string']"
24309,2430900,РАВЕНСТВО,1,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
24310,2431000,БОЯДИСВАНЕ НА ОГРАДА,3,"['arithmetic', 'mathematics']"
24311,2431100,ПЪТУВАНЕ,3,"['arithmetic', 'mathematics']"
24312,2431200,ДИНИ,3,"['arithmetic', 'bruteforcing', 'mathematics']"
24313,2431300,알고리즘 수업 - 점근적 표기 1,6,['mathematics']
24314,2431400,알고리즘 수업 - 점근적 표기 2,7,['mathematics']
24315,2431500,알고리즘 수업 - 점근적 표기 3,7,['mathematics']
24316,2431600,HUNTER×HUNTER,0,[]
24317,2431700,SQSORT,0,[]
24318,2431800,Matching Colors,0,[]
24319,2431900,Cancer,0,[]
24320,2432000,Rectpoints,19,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
24321,2432100,Alpha,0,[]
24322,2432200,PF,0,[]
24323,2432300,Disorder,0,[]
24324,2432400,Biggest,0,[]
24326,2432600,Maximal sum,16,"['data structures', 'mathematics', 'number theory', 'precomputation', 'primality test', 'sieve of eratosthenes', 'sorting', 'set / map by trees']"
24327,2432700,СКОБИ,17,"['data structures', 'prefix sum', 'segment tree']"
24328,2432800,КВАДРАТ,12,['dynamic programming']
24329,2432900,ПУКАНКИ,10,"['binary search', 'parametric search']"
24330,2433000,КУБЧЕТА,0,[]
24331,2433100,ДВА АЛБУМА,7,"['binary search', 'data structures', 'sorting']"
24332,2433200,ОСОБЕН,8,"['implementation', 'string']"
24333,2433300,СРЕЩА НА ПРИЯТЕЛИ,3,"['arithmetic', 'bruteforcing', 'mathematics']"
24334,2433400,SD КАРТИ,4,"['bruteforcing', 'mathematics']"
24335,2433500,ЧАСОВНИК,4,"['arithmetic', 'implementation', 'mathematics']"
24336,2433600,가희와 무궁화호,10,"['implementation', 'string']"
24337,2433700,가희와 탑,13,"['constructive', 'greedy']"
24338,2433800,가희와 베개,15,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal']"
24339,2433900,가희와 쓰레기 놀이,14,"['value / coordinate compression', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation']"
24340,2434000,가희와 btd5 2,20,"['data structures', 'deque', 'implementation', 'segment tree', 'simulation', 'set / map by trees']"
24341,2434100,СНОУБОРД,0,[]
24342,2434200,УЧИЛИЩЕН АВТОБУС,0,[]
24343,2434300,РАБОТИЛНИЦА,11,"['dynamic programming', 'knapsack']"
24344,2434400,СКРИЙ МОЛИВА,8,['implementation']
24345,2434500,УЧИЛИЩЕН КОНЦЕРТ,9,"['binary search', 'parametric search']"
24346,2434600,ПАЛИНДРОМ,4,"['ad-hoc', 'string']"
24347,2434700,КАРТИ,4,['bruteforcing']
24348,2434800,ИЗРАЗ,3,"['arithmetic', 'bruteforcing', 'mathematics']"
24349,2434900,МЕД,3,"['arithmetic', 'case work', 'greedy', 'mathematics']"
24350,2435000,НУЛИ,5,"['arbitrary precision / big integers', 'combinatorics', 'dynamic programming', 'implementation', 'mathematics']"
24351,2435100,КОДИРАНЕ,11,['dynamic programming']
24352,2435200,ТРИЪГЪЛНИЦИ,11,"['binary search', 'bruteforcing', 'geometry', 'sorting']"
24353,2435300,ШЕРЛОК ХОЛМС,5,"['arithmetic', 'implementation', 'mathematics']"
24354,2435400,БРОЙ ДЕЛИТЕЛИ,9,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
24355,2435500,ПАЛИНДРОМ,16,"['knuth–morris–pratt', ""manacher's"", 'string']"
24356,2435600,ЧАСОВНИК,2,"['arithmetic', 'mathematics']"
24357,2435700,MINESWEEPER,5,['implementation']
24358,2435800,ЗАЙО БАЙО,4,"['arithmetic', 'implementation', 'mathematics']"
24359,2435900,ДВА НИЗА,6,"['arbitrary precision / big integers', 'arithmetic', 'mathematics', 'string']"
24360,2436000,РАЗМЕСТВАНИЯ,19,['ad-hoc']
24361,2436100,ДЪЖД,0,[]
24362,2436200,МАГАЗИН,7,['sorting']
24363,2436300,ПРАВОЪГЪЛНИЦИ,11,"['bruteforcing', 'case work', 'constructive', 'implementation']"
24364,2436400,ТОПЧЕТА,7,['ad-hoc']
24365,2436500,ПЧЕЛИЧКАТА МАЯ,2,"['arithmetic', 'mathematics']"
24366,2436600,КЛЕТКИ,3,"['arithmetic', 'mathematics']"
24367,2436700,АСАНСЬОР,4,"['arithmetic', 'bruteforcing', 'case work', 'mathematics']"
24368,2436800,알고리즘 수업 - 점근적 표기 4,10,"['case work', 'mathematics']"
24369,2436900,알고리즘 수업 - 점근적 표기 5,10,"['case work', 'mathematics']"
24370,2437000,알고리즘 수업 - 점근적 표기 6,10,"['case work', 'mathematics']"
24371,2437100,БРОЙ ПОДНИЗОВЕ,6,"['combinatorics', 'mathematics', 'string']"
24372,2437200,КАЛЕНДАР „ИЗКУСТВО”,0,[]
24373,2437300,ШЕСТОЪГЪЛНИЦИ,0,[]
24374,2437400,РАВЕНСТВО,5,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics', 'parsing', 'string']"
24375,2437500,ПОДНИЗ,5,"['implementation', 'string']"
24376,2437600,РЕДИЦА,4,"['arbitrary precision / big integers', 'implementation', 'mathematics', 'string']"
24377,2437700,ИГРА,4,"['case work', 'implementation']"
24378,2437800,КАСТИНГ,4,"['arithmetic', 'mathematics']"
24379,2437900,КИФЛИЧКИ,5,['greedy']
24380,2438000,Коледари,9,"['mathematics', 'pigeonhole principle']"
24381,2438100,Равномерен низ,0,[]
24382,2438200,Следващо число,0,[]
24383,2438300,НУЛИ,5,"['bruteforcing', 'implementation', 'string']"
24384,2438400,ЗАПЛАТА,4,"['implementation', 'mathematics', 'string']"
24385,2438500,СПОРТ,8,"['backtracking', 'bruteforcing']"
24386,2438600,КЛЕЧКИ,4,"['case work', 'implementation']"
24387,2438700,ИЗЛОЖЕНИЕ НА ПЧЕЛЕН МЕД,4,"['arithmetic', 'bruteforcing', 'greedy', 'mathematics', 'sorting']"
24388,2438800,РАМКА,4,"['arithmetic', 'case work', 'mathematics']"
24389,2438900,2의 보수,5,"['bitmask', 'mathematics']"
24390,2439000,또 전자레인지야?,10,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'greedy']"
24391,2439100,귀찮은 해강이,11,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
24392,2439200,영재의 징검다리,10,['dynamic programming']
24393,2439300,조커 찾기,8,"['data structures', 'implementation', 'simulation']"
24394,2439400,123456789점,12,['mathematics']
24395,2439500,명진이의 신년계획,13,"['dynamic programming', 'knapsack', 'sorting']"
24396,2439600,푸앙이와 별,16,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by trees']"
24397,2439700,말해 xor NO!,18,"['data structures', 'segment tree', 'tree', 'trie']"
24398,2439800,알고리즘 수업 - 선택 알고리즘 1,6,['implementation']
24399,2439900,알고리즘 수업 - 선택 알고리즘 2,6,['implementation']
24400,2440000,알고리즘 수업 - 선택 알고리즘 3,11,"['ad-hoc', 'implementation']"
24401,2440100,Alien Integers,13,['case work']
24402,2440200,Avoiding Asteroids,0,[]
24403,2440300,Common Factors,14,"['euclidean algorithm', 'euler totient function', 'greedy', 'mathematics', 'number theory']"
24404,2440400,Dimensional Analysis,0,[]
24405,2440500,Eye of Sauron,4,"['implementation', 'string']"
24406,2440600,ilove Strings,18,['dynamic programming']
24407,2440700,MrCodeFormatGrader,7,['implementation']
24408,2440800,Mult!,3,"['arithmetic', 'mathematics']"
24409,2440900,Pizza Party!,13,"['data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation', 'parsing', 'string', 'set / map by trees']"
24410,2441000,Stacking Up,14,"['constructive', 'mathematics']"
24411,2441100,Stamp Combinations,10,"['binary search', 'data structures', 'set / map by hashing', 'prefix sum', 'set / map by trees']"
24412,2441200,Sword Counting,0,[]
24413,2441300,Tic-Tac State,8,"['bitmask', 'implementation']"
24414,2441400,Venn Intervals,0,[]
24415,2441500,편지,17,"['exponentiation by squaring', 'graph theory', 'implementation', 'mathematics', 'simulation']"
24416,2441600,알고리즘 수업 - 피보나치 수 1,5,"['dynamic programming', 'mathematics']"
24417,2441700,알고리즘 수업 - 피보나치 수 2,7,"['dynamic programming', 'mathematics']"
24418,2441800,알고리즘 수업 - 행렬 경로 문제 1,7,"['dynamic programming', 'mathematics', 'recursion']"
24419,2441900,알고리즘 수업 - 행렬 경로 문제 2,8,"['combinatorics', 'dynamic programming', 'mathematics']"
24420,2442000,ピアノコンクール (Piano Competition),4,['implementation']
24421,2442100,掛け算 (Multiplication),4,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
24422,2442200,投票 (Voting),8,['prefix sum']
24423,2442300,いちご 2 (Strawberry 2),11,"['data structures', 'set / map by hashing', 'sorting']"
24424,2442400,エゴイ展 (EGOI Exhibition),14,"['data structures', 'dynamic programming', 'greedy', 'segment tree', 'set / map by trees']"
24425,2442500,タクシー 2 (Taxis 2),16,"['bitmask', ""dijkstra's"", 'graph theory']"
24426,2442600,알고리즘 수업 - 행렬 경로 문제 3,12,['dynamic programming']
24427,2442700,알고리즘 수업 - 행렬 경로 문제 4,12,['dynamic programming']
24428,2442800,알고리즘 수업 - 행렬 경로 문제 5,12,['dynamic programming']
24429,2442900,알고리즘 수업 - 행렬 경로 문제 6,12,"['dynamic programming', 'sorting']"
24430,2443000,알고리즘 수업 - 행렬 경로 문제 7,13,['dynamic programming']
24439,2443900,바리스타의 힘,15,"['breadth-first search', 'graph theory', 'graph traversal']"
24440,2444000,괄호 문자열 표기법 (Small),16,['dynamic programming']
24441,2444100,행운 수 판정,16,"['data structures', 'precomputation', 'segment tree']"
24442,2444200,수열 쪼개기,24,"['aliens trick', 'binary search', 'data structures', 'dynamic programming', 'segment tree with lazy propagation', 'segment tree']"
24443,2444300,알고리즘 수업 - 선택 알고리즘 4,11,"['implementation', 'recursion', 'simulation']"
24444,2444400,알고리즘 수업 - 너비 우선 탐색 1,9,"['breadth-first search', 'graph theory', 'graph traversal', 'sorting']"
24445,2444500,알고리즘 수업 - 너비 우선 탐색 2,9,"['breadth-first search', 'graph theory', 'graph traversal', 'sorting']"
24446,2444600,알고리즘 수업 - 너비 우선 탐색 3,9,"['breadth-first search', 'graph theory', 'graph traversal']"
24447,2444700,알고리즘 수업 - 너비 우선 탐색 4,9,"['breadth-first search', 'graph theory', 'graph traversal', 'sorting']"
24448,2444800,図書館 2 (Library 2),7,"['data structures', 'stack', 'string']"
24449,2444900,カーペット (Carpet),10,"['breadth-first search', 'graph theory', 'graph traversal']"
24450,2445000,国土分割 (Land Division),13,"['bruteforcing', 'prefix sum']"
24451,2445100,飴 2 (Candies 2),13,['dynamic programming']
24452,2445200,交易計画 (Trade Plan),21,"['data structures', 'disjoint set', 'offline queries']"
24453,2445300,디버깅,12,['two-pointer']
24454,2445400,킹십리역 갓번 출구,21,"['data structures', ""dijkstra's"", 'graph theory', 'heavy-light decomposition', 'segment tree with lazy propagation', 'segment tree', 'tree']"
24455,2445500,암호화 행렬,16,"['mathematics', 'randomization']"
24456,2445600,초콜릿 훔쳐 먹기,13,"['mathematics', 'number theory', 'primality test']"
24457,2445700,카페인 중독,17,"['dynamic programming', 'greedy', 'sorting']"
24458,2445800,Prison Break,18,"['convex hull', 'geometry']"
24459,2445900,회로의 저항,15,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
24460,2446000,특별상이라도 받고 싶어,7,"['divide and conquer', 'recursion']"
24461,2446100,그래프의 줄기,14,"['graph theory', 'implementation', 'topological sorting']"
24462,2446200,일어나... 코딩해야지...,10,"['bruteforcing', 'euclidean algorithm', 'mathematics', 'number theory']"
24463,2446300,미로,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
24464,2446400,득수 밥 먹이기,10,['dynamic programming']
24465,2446500,데뷔의 꿈,7,"['implementation', 'sorting']"
24466,2446600,도피,12,"['arbitrary precision / big integers', 'dynamic programming', 'mathematics', 'probability theory']"
24467,2446700,혼자 하는 윷놀이,9,"['case work', 'implementation', 'simulation']"
24468,2446800,충돌의 수,7,"['implementation', 'simulation']"
24469,2446900,Autići,8,"['greedy', 'sorting']"
24470,2447000,Autobus,15,"['dynamic programming', 'graph theory']"
24471,2447100,Izbori,20,"['data structures', 'mathematics', 'segment tree', 'square root decomposition']"
24472,2447200,Parkovi,22,"['binary search', 'greedy']"
24473,2447300,Šarenlist,18,"['combinatorics', 'data structures', 'disjoint set', 'inclusion and exclusion', 'mathematics']"
24474,2447400,Intercastellar,9,"['implementation', 'prefix sum', 'two-pointer']"
24475,2447500,Self Study,16,"['binary search', 'greedy', 'mathematics', 'parametric search']"
24476,2447600,Let’s Win the Election,22,"['dynamic programming', 'greedy']"
24477,2447700,Railway Trip 2,21,"['data structures', 'dynamic programming', 'priority queue', 'segment tree', 'sparse table']"
24478,2447800,Sandcastle 2,24,"['ad-hoc', 'prefix sum']"
24479,2447900,알고리즘 수업 - 깊이 우선 탐색 1,9,"['depth-first search', 'graph theory', 'graph traversal', 'sorting']"
24480,2448000,알고리즘 수업 - 깊이 우선 탐색 2,9,"['depth-first search', 'graph theory', 'graph traversal', 'sorting']"
24481,2448100,알고리즘 수업 - 깊이 우선 탐색 3,9,"['depth-first search', 'graph theory', 'graph traversal', 'sorting']"
24482,2448200,알고리즘 수업 - 깊이 우선 탐색 4,9,"['depth-first search', 'graph theory', 'graph traversal', 'sorting']"
24483,2448300,알고리즘 수업 - 깊이 우선 탐색 5,9,"['depth-first search', 'graph theory', 'graph traversal', 'sorting']"
24484,2448400,알고리즘 수업 - 깊이 우선 탐색 6,9,"['depth-first search', 'graph theory', 'graph traversal', 'sorting']"
24485,2448500,Minimizing Haybales,21,"['binary search', 'data structures', 'segment tree with lazy propagation', 'segment tree']"
24486,2448600,Counting Haybales,24,"['dynamic programming', 'graph theory', 'topological sorting']"
24487,2448700,Multiple Choice Test,23,"['convex hull', 'geometry']"
24488,2448800,Drought,18,['dynamic programming']
24489,2448900,Farm Updates,19,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'offline queries']"
24490,2449000,Tests for Haybales,20,"['ad-hoc', 'constructive', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'tree']"
24491,2449100,Searching for Soulmates,17,"['ad-hoc', 'bitmask']"
24492,2449200,Cow Frisbee,13,"['data structures', 'stack']"
24493,2449300,Cereal 2,19,"['bipartite matching', 'graph theory', 'graph traversal', 'topological sorting']"
24494,2449400,Herdle,7,"['implementation', 'string']"
24495,2449500,Non-Transitive Dice,7,"['bruteforcing', 'mathematics']"
24496,2449600,Drought,14,"['greedy', 'mathematics']"
24497,2449700,수열 복원,16,"['depth-first search', 'graph theory', 'graph traversal', 'mathematics']"
24498,2449800,blobnom,7,['greedy']
24499,2449900,blobyum,7,"['prefix sum', 'sliding window']"
24500,2450000,blobblush,9,"['ad-hoc', 'bitmask', 'mathematics']"
24501,2450100,blobaww,12,"['dynamic programming', 'prefix sum']"
24502,2450200,blobsad,15,['greedy']
24503,2450300,blobfearful,16,"['binary search', 'mathematics', 'number theory', 'primality test']"
24504,2450400,blobcry,19,"['articulation points and bridges', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
24505,2450500,blobhyperthink,17,"['data structures', 'dynamic programming', 'segment tree']"
24506,2450600,blobpopcorn,24,"['data structures', 'segment tree']"
24507,2450700,blobfacepalm,23,"['constructive', 'mathematics']"
24508,2450800,나도리팡,10,"['greedy', 'sorting', 'two-pointer']"
24509,2450900,상품의 주인은?,6,"['implementation', 'sorting']"
24510,2451000,시간복잡도를 배운 도도,4,"['implementation', 'string']"
24511,2451100,queuestack,8,"['data structures', 'queue', 'stack']"
24512,2451200,Bottleneck Travelling Salesman Problem (Small),9,"['backtracking', 'bruteforcing', 'travelling salesman problem']"
24513,2451300,좀비 바이러스,13,"['breadth-first search', 'graph theory', 'graph traversal']"
24514,2451400,n번째 숫자 찾기,14,"['binary search', 'mathematics', 'prefix sum']"
24515,2451500,히히 못가,18,"[""dijkstra's"", 'graph theory']"
24516,2451600,잘 알려진 수열 구하기,8,"['constructive', 'mathematics']"
24517,2451700,카드 게임과 쿼리,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'game theory']"
24518,2451800,잘 알려진 합 구하기,16,"['mathematics', 'number theory']"
24519,2451900,Bottleneck Travelling Salesman Problem (Large),16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'travelling salesman problem']"
24520,2452000,Meet In The Middle,17,"['data structures', 'lowest common ancestor', 'sparse table', 'tree']"
24521,2452100,토지 구입,21,"['maximum flow', 'max-flow min-cut theorem']"
24522,2452200,스네이크 게임,19,"['knuth–morris–pratt', 'string']"
24523,2452300,내 뒤에 나와 다른 수,8,"['data structures', 'implementation']"
24524,2452400,아름다운 문자열,11,"['data structures', 'greedy', 'string']"
24525,2452500,SKK 문자열,13,"['dynamic programming', 'prefix sum']"
24526,2452600,전화 돌리기,14,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'topological sorting']"
24527,2452700,이상한 나라의 갈톤보드,14,"['binary search', 'mathematics', 'prefix sum', 'probability theory']"
24528,2452800,단어의 개수,17,['dynamic programming']
24529,2452900,이야기 배열,17,"['dynamic programming', 'sorting']"
24530,2453000,아름다운 수열,18,"['ad-hoc', 'value / coordinate compression', 'data structures', 'greedy', 'segment tree']"
24531,2453100,슈팅 게임,21,"['data structures', 'offline queries', 'priority queue', 'segment tree', 'sweeping']"
24532,2453200,트리와 XOR 쿼리,19,"['data structures', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
24533,2453300,결합,10,['mathematics']
24534,2453400,정원,19,"['data structures', 'offline queries', 'segment tree']"
24535,2453500,둘레길,16,"['bruteforcing', 'value / coordinate compression', 'prefix sum', 'sweeping']"
24536,2453600,정원장어,16,['longest increasing sequence in o(n log n)']
24537,2453700,약수 계산,14,"['euclidean algorithm', 'greedy', 'mathematics', 'number theory']"
24538,2453800,작업 일지,13,['prefix sum']
24539,2453900,암호 해독,17,"['bitmask', 'constructive', 'depth-first search', 'graph theory', 'graph traversal', 'prefix sum']"
24540,2454000,해킹,18,"['case work', 'graph theory', 'graph traversal', 'tree']"
24541,2454100,블록 배치,18,"['binary search', 'value / coordinate compression', 'data structures', 'dynamic programming', 'parametric search', 'segment tree']"
24542,2454200,튜터-튜티 관계의 수,10,"['graph theory', 'graph traversal']"
24543,2454300,선인장이 무럭무럭 자라고 있어요,22,"['biconnected component', 'binary search', 'cactus', 'graph theory', 'greedy', 'parallel binary search']"
24544,2454400,카카오뷰 큐레이팅 효용성 분석,4,"['arithmetic', 'implementation', 'mathematics']"
24545,2454500,Y,16,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
24546,2454600,놀이기구에 진심인 편,22,"['square root decomposition', 'sweeping']"
24547,2454700,mod와 쿼리,21,"['data structures', 'mathematics', 'number theory', 'segment tree', 'square root decomposition']"
24548,2454800,도로 정보,13,['prefix sum']
24549,2454900,신촌방위본부의 부대 배치,20,"['bipartite graph', 'bipartite matching', 'maximum flow', 'graph theory']"
24550,2455000,이 멋진 수열에 쿼리를!,22,"['data structures', 'exponentiation by squaring', 'mathematics', 'offline queries', 'segment tree']"
24551,2455100,일이 너무 많아...,13,"['arbitrary precision / big integers', 'inclusion and exclusion', 'mathematics']"
24552,2455200,올바른 괄호,11,['prefix sum']
24553,2455300,팰린드롬 게임,12,"['ad-hoc', 'game theory']"
24554,2455400,불협화음,23,"['geometry', 'rotating calipers', 'ternary search']"
24555,2455500,1’s For All,13,['dynamic programming']
24556,2455600,Abridged Reading,12,"['bruteforcing', 'dynamic programming', 'dynamic programming on trees', 'tree']"
24557,2455700,Ball of Whacks,0,[]
24558,2455800,Downsizing,0,[]
24559,2455900,Gambling Game,0,[]
24560,2456000,Growing Some Oobleck,0,[]
24561,2456100,Noonerized Spumbers,8,"['arithmetic', 'bruteforcing', 'mathematics', 'string']"
24562,2456200,Numble,0,[]
24563,2456300,Pinned Files,15,['greedy']
24564,2456400,Recycling,16,"['data structures', 'divide and conquer', 'segment tree', 'stack']"
24565,2456500,Stable Table,16,"['breadth-first search', 'graph theory', 'graph traversal']"
24566,2456600,Statues,11,"['bruteforcing', 'implementation', 'sorting']"
24567,2456700,Tomb Hater,0,[]
24568,2456800,Cupcake Party,1,"['arithmetic', 'mathematics']"
24569,2456900,Fergusonball Ratings,3,"['arithmetic', 'implementation', 'mathematics']"
24570,2457000,Harp Tuning,6,"['implementation', 'parsing', 'string']"
24571,2457100,Good Groups,7,"['data structures', 'set / map by hashing']"
24572,2457200,Square Pool,13,"['value / coordinate compression', 'prefix sum']"
24573,2457300,Good Fours and Good Fives,5,['mathematics']
24574,2457400,Good Samples,13,"['constructive', 'greedy']"
24575,2457500,Good Triplets,18,"['combinatorics', 'mathematics', 'prefix sum', 'sweeping', 'two-pointer']"
24576,2457600,Good Influencers,17,"['dynamic programming', 'dynamic programming on trees', 'tree']"
24577,2457700,Espresso!,4,"['arithmetic', 'implementation', 'mathematics', 'simulation', 'string']"
24578,2457800,Ultimate Binary Watch,4,"['bitmask', 'implementation']"
24579,2457900,Concert Rehearsal,15,"['binary search', 'data structures', 'mathematics', 'pigeonhole principle', 'sparse table', 'two-pointer']"
24580,2458000,Land Equality,10,"['case work', 'mathematics']"
24581,2458100,Even Substrings,20,"['bitmask', 'data structures', 'segment tree with lazy propagation', 'prefix sum', 'segment tree']"
24582,2458200,Bracket Pairing,15,"['dynamic programming', 'meet in the middle', 'string']"
24583,2458300,Parking Lot,16,"['dynamic programming', 'geometry', 'two-pointer']"
24584,2458400,Subprime,10,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes', 'string']"
24585,2458500,Word Puzzle,13,"['dynamic programming', 'string']"
24586,2458600,Code Guessing,6,"['bruteforcing', 'case work']"
24587,2458700,Tree Number Generator,18,"['lowest common ancestor', 'mathematics', 'number theory', 'tree']"
24588,2458800,Lone Rook,17,"['breadth-first search', 'graph theory', 'graph traversal']"
24589,2458900,Stream Lag,6,['implementation']
24590,2459000,Circle Bounce,17,"['geometry', 'mathematics']"
24591,2459100,Shortest Missing Subsequences,16,"['binary search', 'greedy', 'prefix sum', 'string']"
24592,2459200,XOR Island,21,"['ad-hoc', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
24593,2459300,Archery Accuracy,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'gaussian elimination', 'linear algebra', 'mathematics', 'probability theory']"
24594,2459400,Problem Set Construction,18,"['dynamic programming', 'greedy', 'linearity of expectation', 'mathematics', 'probability theory']"
24595,2459500,Rise and Fall,10,['greedy']
24596,2459600,Hopscotch 500,17,['dynamic programming']
24597,2459700,Reversibly Cyclic Strings,12,"['ad-hoc', 'string']"
24598,2459800,Diagonals,18,"['backtracking', 'dynamic programming', 'dynamic programming using connection profile']"
24599,2459900,Fail Them All!,19,"['2-sat', 'floyd–warshall', 'graph theory', 'greedy', 'strongly connected component']"
24600,2460000,Tournament Seeding,13,"['sorting', 'two-pointer']"
24601,2460100,Dorm Room Divide,14,"['geometry', 'area of a polygon']"
24602,2460200,Tree Hopping,14,"['lowest common ancestor', 'tree']"
24603,2460300,Scaling Recipe,3,"['arithmetic', 'mathematics']"
24604,2460400,Black and White,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics', 'probability theory']"
24605,2460500,Tetris Generation,7,"['bruteforcing', 'implementation', 'string']"
24606,2460600,Double Password,3,"['combinatorics', 'mathematics']"
24607,2460700,Square Bounce,14,"['geometry', 'implementation', 'mathematics', 'simulation']"
24608,2460800,Average Character,4,"['arithmetic', 'mathematics', 'string']"
24609,2460900,Overdraft,3,"['arithmetic', 'implementation', 'mathematics']"
24610,2461000,Who Goes There?,4,"['implementation', 'simulation']"
24611,2461100,Paint by Rectangles,24,"['data structures', 'implementation', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
24612,2461200,Sleeping in Class,22,"['backtracking', 'mathematics', 'miller–rabin', 'number theory', 'pollard rho', 'prefix sum', 'primality test']"
24613,2461300,Phone Numbers,23,"['dynamic programming', 'implementation']"
24614,2461400,Redistributing Gifts,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics', 'permutation cycle decomposition']"
24615,2461500,Cow Camp,19,"['combinatorics', 'mathematics', 'parametric search', 'prefix sum', 'probability theory']"
24616,2461600,Moo Network,16,"['graph theory', 'minimum spanning tree']"
24617,2461700,Redistributing Gifts,17,"['depth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
24618,2461800,Robot Instructions,17,"['data structures', 'set / map by hashing', 'meet in the middle']"
24619,2461900,Email Filing,18,"['ad-hoc', 'data structures', 'greedy', 'implementation']"
24620,2462000,Sleeping in Class,12,"['bruteforcing', 'mathematics', 'number theory', 'prefix sum']"
24621,2462100,Photoshoot 2,12,['greedy']
24622,2462200,Blocks,7,"['bruteforcing', 'implementation', 'string']"
24623,2462300,Изгороди,2,"['geometry', 'mathematics']"
24624,2462400,Анализ крипторынка,7,"['arithmetic', 'implementation', 'mathematics']"
24625,2462500,Взять след!,7,"['implementation', 'mathematics', 'sorting']"
24626,2462600,"Градусы, радианы, грады",6,"['bruteforcing', 'mathematics']"
24627,2462700,Подстроки и подпоследовательности,0,[]
24628,2462800,Если сложить...,9,"['bruteforcing', 'mathematics', 'number theory']"
24629,2462900,Генерация ключей,12,['dynamic programming']
24630,2463000,Супердевятка,0,[]
24631,2463100,Шахматный конь,0,[]
24632,2463200,Столетний дятел,0,[]
24633,2463300,Упавший сервер,0,[]
24634,2463400,Развитие города,0,[]
24635,2463500,Индекс примечательности,0,[]
24636,2463600,N-интересные числа,0,[]
24637,2463700,Пожиратель кактусов,0,[]
24638,2463800,Anno Domini 2022,4,"['arithmetic', 'case work', 'mathematics', 'string']"
24639,2463900,Boris and Berta,5,['mathematics']
24640,2464000,Clean Up!,0,[]
24641,2464100,Day Streak,0,[]
24642,2464200,Extreme Problem,0,[]
24643,2464300,First to Solve,0,[]
24644,2464400,Grand Center,0,[]
24645,2464500,Halfway There,0,[]
24646,2464600,Imprecise Permutation Sort,0,[]
24647,2464700,Journey in Fog,0,[]
24648,2464800,Kaleidoscopic Route,0,[]
24649,2464900,Letters Q and F,8,['bruteforcing']
24650,2465000,Multithreaded Program,0,[]
24651,2465100,New White-Black Tree,0,[]
24652,2465200,수열 선물하기,14,"['binary search', 'constructive']"
24653,2465300,Announcements,8,"['data structures', 'set / map by hashing', 'sorting', 'set / map by trees']"
24654,2465400,Build The Grid,13,['constructive']
24655,2465500,Coins and Boxes,17,['greedy']
24656,2465600,Destructive Game,17,"['game theory', 'sprague–grundy theorem']"
24657,2465700,"Edges, Colors and MST",19,"['graph theory', 'heavy-light decomposition', 'lowest common ancestor', 'minimum spanning tree', 'smaller to larger technique', 'tree']"
24658,2465800,Flatland Currency,21,"['data structures', 'greedy', 'knapsack', 'priority queue']"
24659,2465900,Game with Balls and Boxes,16,['dynamic programming']
24660,2466000,High Powers,17,['mathematics']
24661,2466100,Items and Heroes,19,"['data structures', 'heavy-light decomposition', 'segment tree with lazy propagation', 'segment tree', 'tree']"
24662,2466200,Juggler's Trick,0,[]
24663,2466300,King's Palace,22,['bitmask']
24664,2466400,Lion and Zebra,26,"['data structures', 'dynamic programming', 'game theory', 'sparse table']"
24665,2466500,Math String,17,"['combinatorics', 'exponentiation by squaring', 'mathematics', 'precomputation']"
24666,2466600,Two Trees,26,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'dynamic programming', 'implementation', 'lowest common ancestor', 'tree', 'tree compression']"
24667,2466700,Tarzan Jumps,0,[]
24668,2466800,Inversions,0,[]
24669,2466900,Hidden Rook,22,"['ad-hoc', 'binary search', 'case work']"
24670,2467000,Mountains,25,"['combinatorics', 'gaussian elimination', 'linear algebra', 'mathematics']"
24671,2467100,Kill All Termites,14,"['ad-hoc', 'tree']"
24672,2467200,Maximal Subsequence,24,"['ad-hoc', 'maximum flow', 'longest increasing sequence in o(n log n)', 'max-flow min-cut theorem']"
24673,2467300,Aidana and Pita,22,"['bruteforcing', 'value / coordinate compression', 'data structures', 'meet in the middle', 'segment tree']"
24674,2467400,Box Packing,24,['longest increasing sequence in o(n log n)']
24675,2467500,Two Permutations,22,[]
24676,2467600,Fancy Arrays,23,"['berlekamp–massey', 'dynamic programming', 'mathematics', 'number theory']"
24677,2467700,Restricted Arrays,18,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'mathematics', 'number theory']"
24678,2467800,돌무더기 게임 1,13,['game theory']
24679,2467900,돌무더기 게임 2,18,"['case work', 'game theory']"
24680,2468000,Silver-16,22,"['ad-hoc', 'constructive']"
24681,2468100,청소기 마술,24,"['ad-hoc', 'dynamic programming']"
24682,2468200,수식 완성 게임,20,"['bruteforcing', 'implementation', 'precomputation']"
24683,2468300,I와 l,23,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
24684,2468400,평면을 채우는 오각형,22,"['ad-hoc', 'case work', 'geometry', 'mathematics']"
24685,2468500,Attack Order,15,"['greedy', 'sorting']"
24686,2468600,Browsing the Collection,23,"['breadth-first search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal', 'implementation', 'set / map by trees']"
24687,2468700,Casual Dancers,23,"['exponentiation by squaring', 'fast fourier transform', 'linearity of expectation', 'mathematics', 'probability theory']"
24688,2468800,Diameter Two,18,"['ad-hoc', 'case work', 'constructive']"
24689,2468900,Escaped from NEF,22,"['cactus', 'dynamic programming', 'graph theory']"
24690,2469000,First Occurrence,22,"['ad-hoc', 'recursion']"
24691,2469100,Gross LCS,0,[]
24692,2469200,Hundred Thousand Points,0,[]
24693,2469300,Implemented Incorrectly,26,"['mathematics', 'precomputation']"
24694,2469400,Junk or Joy,16,"['case work', 'mathematics', 'number theory']"
24695,2469500,Kilk Not,25,"['binary search', 'data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque', 'parametric search']"
24696,2469600,Ants,0,[]
24697,2469700,Interesting Subsegments,0,[]
24698,2469800,Even Forest,0,[]
24699,2469900,Yellow Blue Bus,0,[]
24700,2470000,Permutation Matrix,13,"['constructive', 'mathematics']"
24701,2470100,Anti-stress,0,[]
24702,2470200,Mismatch,0,[]
24703,2470300,Lucky Tickets,0,[]
24704,2470400,Diversity Street,0,[]
24705,2470500,Disbalance,0,[]
24706,2470600,Spiral Matrix,0,[]
24707,2470700,Soccer Match,0,[]
24708,2470800,Gachapon,0,[]
24709,2470900,Survey,20,['dynamic programming']
24710,2471000,Station,26,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'stack', 'tree', 'tree decomposition']"
24711,2471100,Number Guessing,22,"['binary search', 'mathematics', 'number theory']"
24712,2471200,Build a City,0,[]
24713,2471300,Trans,22,"['fast fourier transform', 'mathematics']"
24714,2471400,Blind Box,0,[]
24715,2471500,EIP1559,19,"['data structures', 'priority queue', 'segment tree']"
24716,2471600,Three Countries,0,[]
24717,2471700,Surround the Cat,0,[]
24718,2471800,Kemija,8,"['parsing', 'string']"
24719,2471900,Dijamant,12,[]
24720,2472000,Fliper,0,[]
24721,2472100,Radio,0,[]
24722,2472200,Usmjeravanje,0,[]
24723,2472300,녹색거탑,2,"['arithmetic', 'mathematics']"
24724,2472400,현대모비스와 함께하는 부품 관리,3,['implementation']
24725,2472500,엠비티아이,8,"['bruteforcing', 'implementation', 'string']"
24726,2472600,미적분학 입문하기 2,12,"['calculus', 'mathematics']"
24727,2472700,인지융~,13,"['ad-hoc', 'constructive']"
24728,2472800,팬케이크맛 쿠키,12,"['greedy', 'implementation', 'simulation']"
24729,2472900,심각한 계단 중독입니다,15,['ad-hoc']
24730,2473000,GGG,16,['mathematics']
24731,2473100,XOR-ABC,15,"['combinatorics', 'exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'modular multiplicative inverse', 'number theory']"
24732,2473200,잠자는 규리,17,"['data structures', 'prefix sum', 'stack']"
24733,2473300,이것도 XOR해 보시지,18,['ad-hoc']
24734,2473400,Eerie Shadows,0,[]
24735,2473500,Getting Square,0,[]
24736,2473600,Football Scoring,1,"['arithmetic', 'mathematics']"
24737,2473700,Tri-Color Puzzle,18,"['gaussian elimination', 'linear algebra', 'mathematics']"
24738,2473800,Checker Slide,0,[]
24739,2473900,Sequinary Numerals,6,"['arithmetic', 'euclidean algorithm', 'implementation', 'mathematics', 'number theory', 'string']"
24740,2474000,How Many Unicycles in a Broken Wheel,0,[]
24741,2474100,Spider-Fly,0,[]
24742,2474200,Simple Collatz Sequence,10,"['dynamic programming', 'mathematics']"
24743,2474300,CIDR,7,"['bitmask', 'mathematics']"
24744,2474400,Three Spheres and a Tetrahedron,0,[]
24745,2474500,Morse Code Palindromes,4,"['implementation', 'precomputation', 'string']"
24746,2474600,Pooling PCR Tests,5,"['bruteforcing', 'mathematics']"
24747,2474700,Letterle,4,"['implementation', 'simulation', 'string']"
24748,2474800,7 Segments You Say?,13,"['implementation', 'precomputation', 'string']"
24749,2474900,Neighbors,0,[]
24750,2475000,Transporting Spaghetti,5,"['bruteforcing', 'mathematics', 'number theory']"
24751,2475100,Betting,2,"['arithmetic', 'mathematics']"
24752,2475200,Antialiasing,0,[]
24753,2475300,Social Distancing,6,['greedy']
24754,2475400,Pawn Shop,10,"['data structures', 'set / map by hashing', 'set / map by trees']"
24755,2475500,Election Paradox,6,"['greedy', 'sorting']"
24756,2475600,Protect the Pollen!,16,"['dynamic programming', 'dynamic programming on trees', 'knapsack', 'tree']"
24757,2475700,Loot Chest,14,"['dynamic programming', 'mathematics', 'probability theory']"
24758,2475800,RSA Mistake,11,"['data structures', 'set / map by hashing', 'mathematics', 'number theory', 'primality test']"
24759,2475900,Slide Count,10,"['implementation', 'prefix sum', 'simulation', 'sliding window', 'two-pointer']"
24760,2476000,Snowball Fight,20,"['case work', 'mathematics']"
24761,2476100,Team Change,22,"['ad-hoc', 'maximum flow', 'max-flow min-cut theorem']"
24762,2476200,Ticket Completed?,11,"['breadth-first search', 'combinatorics', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics']"
24763,2476300,Trade Routes,17,"['data structures', 'greedy', 'priority queue', 'smaller to larger technique', 'tree', 'set / map by trees']"
24764,2476400,Wordle with Friends,11,"['implementation', 'simulation', 'string']"
24765,2476500,Mia,4,"['case work', 'implementation']"
24766,2476600,Odds of Mia,8,"['bruteforcing', 'euclidean algorithm', 'implementation', 'mathematics', 'number theory']"
24767,2476700,Beehives,4,"['bruteforcing', 'geometry', 'pythagoras theorem']"
24768,2476800,Left Beehind,3,['implementation']
24769,2476900,Beekeeper,4,"['implementation', 'string']"
24770,2477000,Carousel Rides,4,"['implementation', 'mathematics']"
24771,2477100,Un-bear-able Zoo,7,"['data structures', 'set / map by hashing', 'sorting', 'string', 'set / map by trees']"
24772,2477200,Ornaments,8,"['geometry', 'mathematics', 'pythagoras theorem']"
24773,2477300,James’s Birthday Party,11,"['articulation points and bridges', 'breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
24774,2477400,Cracker Barrel Game,14,"['breadth-first search', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation']"
24775,2477500,The Amazing Human Cannonball,6,"['geometry', 'mathematics', 'physics']"
24776,2477600,Recount,6,"['data structures', 'set / map by hashing', 'string', 'set / map by trees']"
24777,2477700,Set!,5,"['bruteforcing', 'implementation']"
24778,2477800,Cracking The Safe,13,"['breadth-first search', 'graph theory', 'graph traversal']"
24779,2477900,Triangle Ornaments,13,"['geometry', 'mathematics', 'physics']"
24780,2478000,Kitten on a Tree,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'parsing', 'string', 'tree']"
24781,2478100,First Orchard,13,"['dynamic programming', 'mathematics', 'probability theory']"
24782,2478200,Coloring Graphs,15,"['backtracking', 'graph theory']"
24783,2478300,Number Fun,3,"['arithmetic', 'case work', 'implementation', 'mathematics']"
24784,2478400,Linden Mayor System,6,"['implementation', 'simulation', 'string']"
24785,2478500,Turtle Master,10,"['implementation', 'simulation']"
24786,2478600,Cracking RSA,9,"['bruteforcing', 'mathematics', 'number theory']"
24787,2478700,Cowboy Checkers,0,[]
24788,2478800,Cookie Cutters,12,"['geometry', 'area of a polygon']"
24789,2478900,Railroad,5,"['ad-hoc', 'graph theory', 'implementation']"
24790,2479000,Robot Turtles,15,"[""dijkstra's"", 'graph theory', 'implementation']"
24791,2479100,Victory Through Synergy,11,"['backtracking', 'bruteforcing', 'graph theory']"
24792,2479200,Rock Climbing,16,"['bellman–ford', 'floyd–warshall', 'graph theory']"
24793,2479300,Shiritori,7,"['data structures', 'set / map by hashing', 'implementation', 'string']"
24794,2479400,StopCard,15,"['combinatorics', 'mathematics', 'probability theory', 'sorting']"
24795,2479500,Saving Princess Peach,4,['implementation']
24796,2479600,Swish,0,[]
24797,2479700,Through the Grapevine,12,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing']"
24798,2479800,The Weight Of Words,4,"['constructive', 'mathematics']"
24799,2479900,RA Duty Scheduler,19,"['bipartite matching', 'maximum flow']"
24800,2480000,Coconut Splat,8,"['implementation', 'simulation']"
24801,2480100,Alien Codebreaking,0,[]
24802,2480200,Traveling Monk,14,"['bruteforcing', 'geometry', 'line segment intersection check', 'mathematics', 'parametric search', 'sweeping', 'two-pointer']"
24803,2480300,Provinces and Gold,3,"['arithmetic', 'case work', 'implementation', 'mathematics']"
24804,2480400,Criss-Cross,20,"['arbitrary precision / big integers', 'bruteforcing', 'geometry', 'line segment intersection check']"
24805,2480500,Climbing Worm,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
24806,2480600,Pedal Power,0,[]
24807,2480700,Math Homework,3,"['arithmetic', 'bruteforcing', 'mathematics']"
24808,2480800,Pharmacy,0,[]
24809,2480900,Broken Swords,4,['implementation']
24810,2481000,Bowser's Pipes,13,"['depth-first search', 'graph theory', 'graph traversal']"
24811,2481100,Touchdown!,7,['implementation']
24812,2481200,Substitution Mania!,18,"['bruteforcing', 'data structures', 'set / map by hashing', 'meet in the middle']"
24813,2481300,The Grand Adventure,8,"['data structures', 'stack']"
24814,2481400,Holiday Stars,0,[]
24815,2481500,Good Messages,8,"['implementation', 'simulation', 'string']"
24816,2481600,Bar Code,0,[]
24817,2481700,Competitive Arcade Basketball,6,"['data structures', 'set / map by hashing', 'implementation', 'simulation', 'string', 'set / map by trees']"
24818,2481800,Field Trip,5,['implementation']
24819,2481900,Escape Wall Maria,10,"['breadth-first search', 'graph theory', 'graph traversal']"
24820,2482000,Spelling Bee,4,"['implementation', 'string']"
24821,2482100,I.O.U.,0,[]
24822,2482200,Musical Trees,6,"['bruteforcing', 'implementation']"
24823,2482300,Archimedes,0,[]
24824,2482400,Perfect Skyline,0,[]
24825,2482500,Annoyed Coworkers,11,"['binary search', 'data structures', 'greedy', 'parametric search', 'priority queue']"
24826,2482600,Reconstructing Tape Art,13,"['constructive', 'data structures', 'stack']"
24827,2482700,Jack The Lumberjack,12,"['bruteforcing', 'mathematics']"
24828,2482800,Random Digital Exponentiation,11,"['backtracking', 'bruteforcing', 'mathematics', 'number theory']"
24829,2482900,Counting Codes,0,[]
24830,2483000,Broken Calculator,3,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
24831,2483100,Two Rabbits,4,"['arithmetic', 'mathematics']"
24832,2483200,Longest Palindrome,9,"['bruteforcing', 'string']"
24833,2483300,Air Conditioner,12,"['greedy', 'implementation', 'simulation', 'two-pointer']"
24834,2483400,Shortest and Longest LIS,16,"['constructive', 'greedy']"
24835,2483500,1-Trees and Queries,17,"['lowest common ancestor', 'tree']"
24836,2483600,Animal Observation (easy version),19,"['data structures', 'dynamic programming']"
24837,2483700,Animal Observation (hard version),21,"['data structures', 'dynamic programming', 'segment tree with lazy propagation', 'segment tree']"
24839,2483900,Speed Typing,7,"['implementation', 'string']"
24840,2484000,Challenge Nine,8,"['greedy', 'mathematics', 'number theory']"
24841,2484100,Palindrome Free Strings,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
24842,2484200,Interesting Integers,19,"['combinatorics', 'dynamic programming', 'mathematics']"
24843,2484300,Friendly Rooks,5,['constructive']
24844,2484400,Guess the Array,13,"['constructive', 'pigeonhole principle', 'prefix sum']"
24845,2484500,Moving Cells,0,[]
24846,2484600,Army of Clones,12,"[""dijkstra's"", 'graph theory']"
24847,2484700,Haiku,7,"['implementation', 'string']"
24848,2484800,Race,0,[]
24849,2484900,Maximaze XOR sum,19,"['gaussian elimination', 'linear algebra', 'mathematics']"
24850,2485000,Octopus Game,12,"['euclidean algorithm', 'mathematics', 'number theory']"
24851,2485100,Third Group Exam,10,"['greedy', 'sorting']"
24852,2485200,Computational ethnography,7,"['bruteforcing', 'implementation', 'mathematics']"
24853,2485300,Work or Sleep!,10,"['calculus', 'mathematics', 'ternary search']"
24854,2485400,Permutation Transformation,0,[]
24855,2485500,Natives,5,"['greedy', 'sorting']"
24856,2485600,Balanced Illumination,0,[]
24857,2485700,How Many Strings Are Less,0,[]
24858,2485800,Exam registration,0,[]
24859,2485900,Fair Robbery,0,[]
24860,2486000,Counting Antibodies,2,"['arithmetic', 'combinatorics', 'mathematics']"
24861,2486100,The Math of Sailing,0,[]
24862,2486200,Lots of Parabolas,0,[]
24863,2486300,Wheel of Fortune,0,[]
24864,2486400,Yurik and Woodwork Lesson,0,[]
24865,2486500,Railroad sorting,8,"['constructive', 'data structures', 'implementation', 'stack']"
24866,2486600,Birthday,0,[]
24867,2486700,Два станка,3,"['arithmetic', 'mathematics']"
24868,2486800,Разбиение таблицы,0,[]
24869,2486900,Изменённая ДНК,0,[]
24870,2487000,Антенна,0,[]
24871,2487100,Календарь на Альфе Центавра,3,"['arithmetic', 'implementation', 'mathematics']"
24872,2487200,Числа,6,"['bruteforcing', 'mathematics']"
24873,2487300,Хорошие раскраски,0,[]
24874,2487400,A+B,18,"['combinatorics', 'mathematics']"
24875,2487500,Чемпионат по устному счету,7,[]
24876,2487600,Прыгающий робот,0,[]
24877,2487700,Треугольная головоломка,0,[]
24878,2487800,Массивы-палиндромы,0,[]
24879,2487900,Новый год в детском саду,9,"['arithmetic', 'constructive', 'mathematics']"
24880,2488000,Сортировка дробей,0,[]
24881,2488100,Оптические каналы связи,0,[]
24882,2488200,Подарки,0,[]
24883,2488300,자동완성,2,['implementation']
24884,2488400,장작 넣기,11,"['bruteforcing', 'implementation', 'simulation']"
24885,2488500,주식,11,"['bruteforcing', 'implementation', 'simulation']"
24886,2488600,SKH 문자열,15,"['case work', 'greedy']"
24887,2488700,최대한의 휴식,14,"['binary search', 'dynamic programming', 'parametric search']"
24888,2488800,노트 조각,15,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
24889,2488900,통행량 조사,19,"['graph theory', 'graph traversal', 'lowest common ancestor', 'prefix sum', 'tree']"
24890,2489000,원형 게임,21,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
24891,2489100,단어 마방진,11,"['backtracking', 'bruteforcing']"
24892,2489200,이차 함수,14,"['calculus', 'mathematics', 'modular multiplicative inverse', 'number theory']"
24893,2489300,캐슬 디펜스,16,['binary search']
24894,2489400,내적,20,['convex hull trick']
24895,2489500,다트,21,"['binary search', 'convex hull', 'geometry', 'parametric search', 'point in convex polygon check', 'area of a polygon', 'prefix sum']"
24896,2489600,르블랑의 트리 순회,20,"['ad-hoc', 'tree']"
24897,2489700,숲 게임,22,"['data structures', 'depth-first search', 'dynamic programming', 'game theory', 'gaussian elimination', 'graph theory', 'graph traversal', 'linear algebra', 'mathematics', 'priority queue', 'segment tree', 'smaller to larger technique', 'sprague–grundy theorem', 'tree', 'set / map by trees']"
24899,2489900,DCMSF,27,['matroid']
24900,2490000,한별 찍기,1,['implementation']
24901,2490100,Binary Game 2,0,['ad-hoc']
24902,2490200,Fewest Moves Challenge,28,"['ad-hoc', 'breadth-first search', 'bitmask', 'combinatorics', 'constructive', 'graph theory', 'graph traversal', 'implementation', 'mathematics', 'meet in the middle', 'precomputation', 'simulation']"
24903,2490300,$\textbf{multiple}\text{ edges}$,0,['implementation']
24904,2490400,Baekjoon Wordline Judge,0,[]
24905,2490500,24905번 문제,0,['implementation']
24906,2490600,문제 이름,24,"['greedy', 'mathematics']"
24907,2490700,문제 이름,0,[]
24908,2490800,제1회 구데기그릇 (홀수형),0,"['arithmetic', 'mathematics', 'backtracking', 'bruteforcing', 'exponentiation by squaring', 'implementation', 'parsing', 'precomputation', 'string', 'constructive']"
24909,2490900,제1회 구데기그릇 (짝수형),0,"['arithmetic', 'implementation', 'bruteforcing', 'backtracking', 'precomputation', 'string', 'parsing', 'exponentiation by squaring', 'constructive', 'mathematics']"
24910,2491000,하이퍼하게 누울 하이퍼 자리를 찾아라,16,"['arbitrary precision / big integers', 'combinatorics', 'implementation', 'mathematics', 'sorting']"
24911,2491100,🅰➕🅱,0,"['dynamic programming', 'implementation', 'string', 'utf-8 inputs', 'parsing']"
24912,2491200,카드 색칠,6,['constructive']
24913,2491300,개표,9,"['implementation', 'mathematics', 'simulation']"
24914,2491400,Split the SSHS,15,"['data structures', 'set / map by hashing', 'tree', 'set / map by trees']"
24915,2491500,센터가 돋보여야 해,20,"['data structures', 'segment tree']"
24916,2491600,용암 점프,17,"['ad-hoc', 'dynamic programming', 'greedy']"
24917,2491700,지역 순회,23,"['binary search', 'data structures', 'deque', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'mathematics', 'parametric search', 'smaller to larger technique', 'tree']"
24918,2491800,균형 발전,25,"['data structures', 'depth-first search', 'divide and conquer', 'graph theory', 'graph traversal', 'segment tree', 'tree']"
24919,2491900,Inversions Organize,8,['mathematics']
24920,2492000,Ingredient Optimization,11,"['data structures', 'implementation', 'priority queue', 'simulation', 'sorting']"
24921,2492100,Interesting Outing,14,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
24922,2492200,Inventor Outlasting,0,[]
24923,2492300,"Canadians, eh?",4,"['implementation', 'string']"
24924,2492400,Card Divisibility,5,"['mathematics', 'number theory']"
24925,2492500,Clumsy Cardinals,0,[]
24926,2492600,Cubic Cycle,0,[]
24927,2492700,Is It Even?,4,"['implementation', 'mathematics', 'number theory']"
24928,2492800,Magical Runes,6,"['ad-hoc', 'bitmask', 'implementation', 'mathematics', 'string']"
24929,2492900,Number Colosseum,9,"['data structures', 'implementation', 'simulation', 'stack']"
24930,2493000,Ordinary Ordinals,11,"['combinatorics', 'exponentiation by squaring', 'mathematics']"
24931,2493100,Patchwork,6,"['implementation', 'string']"
24932,2493200,Problematic Polygons,0,[]
24933,2493300,Quadratic Dissonance,7,"['case work', 'mathematics']"
24934,2493400,Similar Spacing,0,[]
24935,2493500,Travelling Caterpillar,10,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
24936,2493600,Trip Odometer,6,"['implementation', 'mathematics', 'sorting']"
24937,2493700,SciComLove (2022),4,['string']
24938,2493800,키트 분배하기,8,['greedy']
24939,2493900,Boardle,7,"['case work', 'implementation', 'mathematics']"
24940,2494000,Split the GSHS,13,"['dynamic programming', 'prefix sum']"
24941,2494100,줄넘기,18,"['value / coordinate compression', 'data structures', 'offline queries', 'segment tree', 'sweeping']"
24942,2494200,Jail,22,"['data structures', 'graph theory', 'sparse table']"
24943,2494300,Sightseeing in Kyoto,26,"['convex hull', 'geometry', 'greedy']"
24944,2494400,Misspelling,22,"['data structures', 'dynamic programming', 'prefix sum', 'priority queue']"
24945,2494500,Copy and Paste 3,22,"['dynamic programming', 'hashing', 'string']"
24946,2494600,Flights,0,[]
24947,2494700,Team Contest,18,"['ad-hoc', 'greedy', 'sorting']"
24948,2494800,Broken Device 2,28,"['ad-hoc', 'dynamic programming']"
24949,2494900,Sprinkler,22,"['dynamic programming', 'tree']"
24950,2495000,Ants and Sugar,27,"['value / coordinate compression', 'data structures', ""hall's theorem"", 'segment tree with lazy propagation', 'prefix sum', 'segment tree']"
24951,2495100,Super Dango Maker,19,['divide and conquer']
24952,2495200,Fish 2,27,"['binary search', 'data structures', 'segment tree with lazy propagation', 'mathematics', 'segment tree', 'stack']"
24953,2495300,Reconstruction Project,23,"['graph theory', 'minimum spanning tree']"
24954,2495400,물약 구매,10,"['bruteforcing', 'implementation']"
24955,2495500,숫자 이어 붙이기,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'lowest common ancestor', 'mathematics', 'tree']"
24956,2495600,나는 정말 휘파람을 못 불어,12,"['combinatorics', 'dynamic programming', 'mathematics']"
24957,2495700,Loop of Chocolate,4,"['implementation', 'mathematics']"
24958,2495800,Lottery Fun Time,13,"['dynamic programming', 'implementation']"
24959,2495900,Reversible Compression,17,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
24960,2496000,Wireless Communication Network,20,"['cartesian tree', 'data structures', 'dynamic programming', 'greedy', 'segment tree', 'stack', 'tree']"
24961,2496100,Planning Railroad Discontinuation,0,[]
24962,2496200,It’s Surely Complex,24,"['fast fourier transform', 'mathematics', 'number theory']"
24963,2496300,Genealogy of Puppets,21,['dynamic programming']
24964,2496400,Cancer DNA,24,"['inclusion and exclusion', 'randomization']"
24965,2496500,“Even” Division,23,"['constructive', 'depth-first search', 'graph theory', 'graph traversal', 'prefix sum']"
24966,2496600,The Cross Covers Everything,18,"['data structures', 'segment tree', 'sweeping', 'two-pointer']"
24967,2496700,Distributing the Treasure,25,[]
24970,2497000,균형 수,17,"['combinatorics', 'dynamic programming', 'mathematics']"
24971,2497100,262144 Revisited,25,"['data structures', 'divide and conquer', 'linked list']"
24972,2497200,Hoof and Brain,23,"['data structures', 'disjoint set', 'graph theory', 'smaller to larger technique']"
24973,2497300,Up Down Subsequence,19,"['data structures', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'segment tree']"
24974,2497400,Apple Catching,19,"['greedy', 'sweeping']"
24975,2497500,Pair Programming,18,"['case work', 'dynamic programming']"
24976,2497600,Balancing a Tree,18,"['ad-hoc', 'constructive', 'tree']"
24977,2497700,Visits,13,"['depth-first search', 'graph theory', 'graph traversal', 'minimum spanning tree', 'permutation cycle decomposition']"
24978,2497800,Subset Equality,15,"['ad-hoc', 'string']"
24979,2497900,COW Operations,15,"['ad-hoc', 'prefix sum', 'string']"
24980,2498000,Photoshoot,12,['ad-hoc']
24981,2498100,Counting Liars,11,"['sorting', 'sweeping']"
24982,2498200,Alchemy,14,"['graph theory', 'parametric search']"
24983,2498300,Ancient Towers,0,[]
24984,2498400,"Because, Art!",21,"['fast fourier transform', 'greedy', 'mathematics']"
24985,2498500,Cyclists versus Clouds,0,[]
24986,2498600,Daily Turnovers,22,"['data structures', 'prefix sum', 'segment tree', 'sweeping']"
24987,2498700,Expedition Plans,0,[]
24988,2498800,Fields Division,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'greedy', 'mathematics']"
24989,2498900,Generator Tree,0,[]
24990,2499000,Hamilton - The Musical,22,['hungarian']
24991,2499100,Invested Money,12,"['implementation', 'simulation']"
24992,2499200,Joining Pairs,18,"['data structures', 'geometry', 'stack']"
24993,2499300,KIARA is a Recursive Acronym,5,"['implementation', 'string']"
24994,2499400,Leaving Yharnam,0,[]
24995,2499500,Most Ordered Way,19,"['greedy', 'sorting']"
24996,2499600,Album of Numbers,0,[]
24997,2499700,Well Off,0,[]
24998,2499800,Accurate Shots (8Mb TL!),0,[]
24999,2499900,Prom,8,"['binary search', 'sorting']"
25000,2500000,Impressive Graphs,0,[]
25001,2500100,Pen,10,"['data structures', 'stack', 'string']"
25002,2500200,Board Game,23,"['convex hull', 'geometry', 'rotating calipers', 'smaller to larger technique']"
25003,2500300,Scouts,20,"['data structures', 'dynamic programming', 'segment tree']"
25004,2500400,Insects,21,"['maximum flow', 'max-flow min-cut theorem']"
25005,2500500,Caves,0,[]
25006,2500600,Blocks,0,[]
25007,2500700,Postman,0,[]
25008,2500800,문자열 찾기,19,"['hashing', 'knuth–morris–pratt', 'string']"
25009,2500900,뚫기,26,"['convex hull', 'data structures', 'geometry', 'segment tree with lazy propagation', 'mathematics', 'segment tree']"
25010,2501000,지름길,25,"['data structures', 'deque', 'parametric search', 'two-pointer']"
25011,2501100,칠하기,21,"['graph theory', 'strongly connected component']"
25012,2501200,마법의 다이얼,19,"['dynamic programming', 'implementation', 'slope trick', 'sweeping']"
25013,2501300,하나 둘 셋,24,"['greedy', 'two-pointer']"
25014,2501400,열차의 이동,25,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'greedy', 'priority queue', 'tree']"
25015,2501500,아이싱,25,"['depth-first search', 'graph theory', 'graph traversal', 'hashing', 'randomization']"
25016,2501600,진화,21,"['dynamic programming', 'dynamic programming on trees', 'heavy-light decomposition', 'tree']"
25017,2501700,플래피 버드,23,"['data structures', 'implementation', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
25018,2501800,히스토그램,27,"['cartesian tree', 'case work', 'convex hull trick', 'data structures', 'divide and conquer', 'dynamic programming', 'geometry', 'segment tree', 'sweeping', 'tree']"
25019,2501900,날다람쥐,21,"['data structures', 'deque', 'dynamic programming', 'greedy', 'segment tree', 'slope trick']"
25020,2502000,코딩 테스트,25,"['binary search', 'convex hull trick', 'divide and conquer', 'geometry', ""hall's theorem""]"
25021,2502100,알록달록한 괄호열,23,['dynamic programming']
25022,2502200,마법 구슬 찾기,20,"['data structures', 'dynamic programming', 'greedy', 'priority queue']"
25023,2502300,보안 시스템,27,"['case work', 'data structures', 'dynamic programming', 'geometry', 'implementation', 'segment tree with lazy propagation', 'mathematics', 'segment tree', 'sweeping']"
25024,2502400,시간과 날짜,3,['implementation']
25025,2502500,다항식 계산,15,"[""fermat's little theorem"", 'mathematics', 'number theory']"
25026,2502600,구간들,18,"['combinatorics', 'mathematics', 'sorting', 'sweeping']"
25027,2502700,August14 Beginner Contest,0,[]
25028,2502800,Fully Generate,16,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
25029,2502900,Joyful KMP,22,"['knuth–morris–pratt', 'string']"
25030,2503000,Polynomial Quine,24,"['gaussian elimination', 'linear algebra', 'mathematics', 'number theory']"
25031,2503100,Unifying Values,15,"['dynamic programming', 'prefix sum']"
25032,2503200,Young Zebra,17,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
25033,2503300,finitefunc,6,"['data structures', 'set / map by hashing']"
25034,2503400,convex4gon,12,"['bruteforcing', 'case work', 'geometry']"
25035,2503500,ALSDJFKSND,14,"['dynamic programming', 'game theory', 'physics']"
25036,2503600,optimizing,15,"['binary search', 'mathematics']"
25037,2503700,homework,15,['binary search']
25038,2503800,biinfinite,15,"['exponentiation by squaring', 'mathematics']"
25039,2503900,Med,7,['sorting']
25040,2504000,Zemljište,12,[]
25041,2504100,Naboj,0,[]
25042,2504200,Palindromi,25,"['data structures', 'palindrome tree', 'smaller to larger technique', 'string', 'tree']"
25043,2504300,Superpozicija,21,['greedy']
25044,2504400,에어컨,7,"['implementation', 'simulation']"
25045,2504500,비즈마켓,8,"['greedy', 'sorting']"
25046,2504600,사각형 게임 (Small),11,"['bitmask', 'bruteforcing']"
25047,2504700,사각형 게임 (Large),13,"['bitmask', 'bruteforcing']"
25048,2504800,랜선 연결,13,"['dynamic programming', 'knapsack']"
25049,2504900,뮤직 플레이리스트,13,['dynamic programming']
25050,2505000,최고의 간선,16,"[""dijkstra's"", 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
25051,2505100,천체 관측,17,"['geometry', 'sorting', 'two-pointer']"
25052,2505200,뉴턴의 사과나무,18,"['dynamic programming', 'dynamic programming on trees', 'mathematics', 'number theory', 'probability theory', 'tree']"
25053,2505300,Organizing SWERC,4,['implementation']
25054,2505400,Drone Photo,21,"['ad-hoc', 'mathematics']"
25055,2505500,Il Derby della Madonnina,19,"['data structures', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'segment tree']"
25056,2505600,Ice Cream Shop,13,"['binary search', 'mathematics', 'prefix sum']"
25057,2505700,Evolution of Weasels,17,['ad-hoc']
25058,2505800,Bottle Arrangements,8,"['ad-hoc', 'constructive']"
25059,2505900,Round Table,24,"['data structures', 'greedy', 'segment tree']"
25060,2506000,Pandemic Restrictions,23,"['arbitrary precision / big integers', 'geometry', 'mathematics', 'parametric search']"
25061,2506100,Antennas,21,"['data structures', 'segment tree']"
25062,2506200,Boundary,9,"['case work', 'euclidean algorithm', 'mathematics', 'number theory']"
25063,2506300,Gastronomic Event,0,[]
25064,2506400,Circular Maze,14,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
25065,2506500,Light Heavy Edges,0,[]
25066,2506600,Intersecting Paths,0,[]
25067,2506700,Celebration,0,[]
25068,2506800,Quantum Communication,0,[]
25069,2506900,The Locked Box,0,[]
25070,2507000,Robot Game,0,[]
25071,2507100,Delicacy,0,[]
25072,2507200,Destiny,0,[]
25073,2507300,Tears,0,[]
25074,2507400,Dish,23,"['ad-hoc', 'bit set', 'constructive', 'greedy', 'knapsack', 'mathematics']"
25075,2507500,Surreal,0,[]
25076,2507600,Road,0,[]
25077,2507700,Automated Program Analyzer,13,"['value / coordinate compression', 'data structures', 'disjoint set', 'graph theory']"
25078,2507800,Software Package Manager,20,"['data structures', 'euler tour technique', 'heavy-light decomposition', 'segment tree with lazy propagation', 'segment tree', 'tree']"
25079,2507900,Sushi Dinner,0,[]
25080,2508000,Homeric Epics,0,[]
25081,2508100,Cocktail Party,0,[]
25082,2508200,Farm,0,[]
25083,2508300,새싹,1,['implementation']
25084,2508400,Infinity Area,3,"['geometry', 'implementation', 'mathematics']"
25085,2508500,Palindromic Factors,7,"['implementation', 'mathematics', 'number theory']"
25086,2508600,Unlock the Padlock,16,['dynamic programming']
25087,2508700,Hamiltonian Tour,16,"['constructive', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
25088,2508800,Punched Cards,4,['implementation']
25089,2508900,3D Printing,7,['greedy']
25090,2509000,d1000000,8,"['greedy', 'sorting']"
25091,2509100,Chain Reactions,15,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'tree']"
25093,2509300,Double or One Thing,10,"['greedy', 'string']"
25095,2509500,Weightlifting,19,['dynamic programming']
25096,2509600,Pancake Deque,9,"['data structures', 'deque', 'greedy']"
25097,2509700,Controlled Inflation,13,"['dynamic programming', 'greedy']"
25099,2509900,Anagram,8,"['data structures', 'set / map by hashing', 'sorting', 'string']"
25100,2510000,E(length(CH)),20,"['geometry', 'linearity of expectation', 'mathematics', 'probability theory', 'sweeping', 'two-pointer']"
25101,2510100,Robin Hood,9,"['data structures', 'implementation', 'priority queue', 'simulation']"
25102,2510200,Airline,17,"['dynamic programming', 'dynamic programming on trees', 'graph theory', 'prefix sum', 'tree']"
25103,2510300,Building on the Moon,0,[]
25104,2510400,Cactus cutting,0,[]
25105,2510500,DJ Darko,22,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
25106,2510600,Fishing,21,"['data structures', 'persistent segment tree', 'segment tree']"
25107,2510700,Letters,7,"['implementation', 'simulation', 'string']"
25108,2510800,Lines in a grid,23,"['case work', 'dynamic programming', 'euler totient function', 'mathematics', 'number theory', 'prefix sum', 'primality test', 'sieve of eratosthenes']"
25109,2510900,Radar,0,[]
25110,2511000,Regional development,21,"['circulation', 'maximum flow']"
25111,2511100,Repetitions,0,[]
25112,2511200,Single-track railway,16,"['binary search', 'data structures', 'segment tree']"
25113,2511300,Systematic salesman,22,['dynamic programming']
25114,2511400,Sequence Conversion,8,"['ad-hoc', 'bitmask', 'greedy']"
25115,2511500,Ontongdaejeon,13,"['binary search', 'greedy', 'parametric search']"
25116,2511600,TOO EASY Cookie Run,12,"['binary search', 'parametric search', 'two-pointer']"
25117,2511700,Sequence Conversion 2,18,"['binary search', 'dynamic programming', 'sorting']"
25118,2511800,Comparing Fractions,20,"['euclidean algorithm', 'implementation', 'mathematics', 'number theory']"
25119,2511900,Tree GCD,22,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'dynamic programming', 'set / map by hashing', 'mathematics', 'möbius inversion', 'number theory', 'smaller to larger technique', 'tree', 'tree compression']"
25120,2512000,Counting Rectangles,25,"['data structures', 'segment tree', 'stack']"
25121,2512100,Strange Graph,25,"['graph theory', 'minimum spanning tree']"
25124,2512400,Letter Blocks,14,"['graph theory', 'implementation', 'string']"
25125,2512500,Squary,15,"['ad-hoc', 'constructive', 'mathematics']"
25126,2512600,Intranets,22,"['combinatorics', 'mathematics']"
25127,2512700,Aromatična avantura,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
25128,2512800,Bratski brojevi,18,"['inclusion and exclusion', 'mathematics', 'möbius inversion', 'number theory', 'primality test', 'sieve of eratosthenes']"
25129,2512900,Cjelobrojne crte,0,[]
25130,2513000,Drvene daščice,0,[]
25131,2513100,Ekscentrična enkripcija,6,"['implementation', 'string']"
25132,2513200,Fleksibilan fikus,0,[]
25133,2513300,Grozne granice,0,[]
25134,2513400,Hrskave hrstule,10,"['data structures', 'implementation', 'priority queue', 'simulation', 'set / map by trees']"
25135,2513500,Idilična ivica,0,[]
25136,2513600,Još jači,13,"['dynamic programming', 'knapsack']"
25137,2513700,PERIOD,9,"['euclidean algorithm', 'implementation', 'mathematics', 'number theory', 'string']"
25138,2513800,SORT,8,"['case work', 'data structures', 'set / map by hashing', 'implementation', 'parsing', 'sorting', 'string', 'set / map by trees']"
25139,2513900,SLOVA,9,"['combinatorics', 'mathematics', 'string']"
25140,2514000,KLIZA,15,"['breadth-first search', 'graph theory', 'graph traversal']"
25141,2514100,ŠIFRAT,10,"['backtracking', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'string']"
25142,2514200,BAČVA,13,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
25143,2514300,TVORNICA,0,[]
25144,2514400,INFRASTRUKTURA,12,"['constructive', 'graph theory', 'sorting', 'tree']"
25145,2514500,Joško,13,"['dynamic programming', 'greedy', 'sorting']"
25146,2514600,KHL,5,"['arithmetic', 'mathematics', 'string']"
25147,2514700,Okružen,0,[]
25148,2514800,Superjunaci,14,"['data structures', 'stack']"
25149,2514900,Audi,10,"['combinatorics', 'mathematics']"
25150,2515000,FIBA,8,['sorting']
25151,2515100,Lozinka,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
25152,2515200,Robot,19,"['bitmask', 'constructive']"
25153,2515300,TiM,6,"['arithmetic', 'data structures', 'implementation', 'mathematics', 'stack', 'string']"
25154,2515400,Kriptonit,11,"['dynamic programming', 'prefix sum']"
25155,2515500,Mravi,0,[]
25156,2515600,Sefovi,0,[]
25157,2515700,Genijalac,9,"['implementation', 'sorting']"
25158,2515800,Hulja,10,"['graph theory', 'string']"
25159,2515900,Šetnja,0,[]
25161,2516100,HŽ,9,"['bruteforcing', 'implementation', 'sorting']"
25162,2516200,Mrlja,10,"['bruteforcing', 'implementation', 'string']"
25163,2516300,Požar,17,[]
25164,2516400,Stipe,9,"['greedy', 'sorting']"
25165,2516500,영리한 아리의 포탈 타기,3,"['implementation', 'simulation']"
25166,2516600,배고픈 아리의 샌드위치 구매하기,5,"['bitmask', 'mathematics']"
25167,2516700,이상한 아리의 채점,7,"['implementation', 'sorting']"
25168,2516800,게으른 아리를 위한 접종 계획,12,"['dynamic programming', 'graph theory', 'topological sorting']"
25169,2516900,피곤한 아리의 현생 살기,18,"['greedy', 'sorting']"
25170,2517000,명랑한 아리의 외출,10,['dynamic programming']
25171,2517100,긴장한 아리와 쿠기의 카드게임,14,['two-pointer']
25172,2517200,꼼꼼한 쿠기의 졸업여행,16,"['data structures', 'disjoint set', 'offline queries']"
25173,2517300,용감한 아리의 동굴 대탈출,15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
25174,2517400,힘겨운 쿠기의 식당 개업기,13,"['value / coordinate compression', 'prefix sum', 'sweeping']"
25175,2517500,두~~부 두부 두부,3,"['arithmetic', 'implementation', 'mathematics']"
25176,2517600,청정수열 (Easy),5,"['combinatorics', 'greedy', 'mathematics']"
25177,2517700,서강의 역사를 찾아서,4,['implementation']
25178,2517800,두라무리 휴지,6,"['implementation', 'string']"
25179,2517900,배스킨라빈스~N~귀엽고~깜찍하게~,7,"['game theory', 'mathematics']"
25180,2518000,썸 팰린드롬,8,"['greedy', 'mathematics']"
25181,2518100,Swap the elements,12,"['ad-hoc', 'constructive']"
25182,2518200,청정수열 (Hard),14,"['ad-hoc', 'combinatorics', 'mathematics']"
25183,2518300,인생은 한 방,5,"['implementation', 'string']"
25184,2518400,동가수열 구하기,7,['constructive']
25185,2518500,카드 뽑기,7,['implementation']
25186,2518600,INFP 두람 ,9,"['ad-hoc', 'mathematics']"
25187,2518700,고인물이 싫어요,12,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
25188,2518800,"1, 3, 모 나누기",13,"['dynamic programming', 'prefix sum']"
25189,2518900,시니컬한 개구리,15,"['breadth-first search', 'graph theory', 'graph traversal']"
25190,2519000,피앳산 청정수,17,"['dynamic programming', 'greedy', 'knapsack', 'sorting']"
25191,2519100,치킨댄스를 추는 곰곰이를 본 임스,2,"['arithmetic', 'mathematics']"
25192,2519200,인사성 밝은 곰곰이,7,"['data structures', 'set / map by hashing', 'set / map by trees']"
25193,2519300,곰곰이의 식단 관리,6,"['mathematics', 'string']"
25194,2519400,결전의 금요일,10,"['bruteforcing', 'dynamic programming']"
25195,2519500,Yes or yes,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
25196,2519600,숲속에서 새 구경하기,15,"['bruteforcing', 'implementation', 'mathematics', 'simulation']"
25197,2519700,합주단 곰곰,13,"['linearity of expectation', 'mathematics', 'probability theory']"
25198,2519800,곰곰이의 심부름,15,"['graph theory', 'graph traversal', 'mathematics', 'tree']"
25199,2519900,도박사 곰곰,17,"['dynamic programming', 'prefix sum']"
25200,2520000,곰곰이와 자판기,15,['data structures']
25201,2520100,보드 뒤집기 게임,16,"['ad-hoc', 'mathematics']"
25205,2520500,경로당펑크 2077,4,"['implementation', 'string']"
25206,2520600,너의 평점은,6,"['implementation', 'mathematics', 'string']"
25207,2520700,바벨탑의 저주,19,"['depth-first search', 'euler tour technique', 'graph theory', 'graph traversal', 'hashing', ""manacher's"", 'string', 'tree']"
25208,2520800,새벽의 탐정 게임,13,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
25209,2520900,샤카샤카,16,['implementation']
25210,2521000,정사각형 세기,14,['mathematics']
25211,2521100,정사각형 세기 (Hard),18,"['inclusion and exclusion', 'mathematics']"
25212,2521200,조각 케이크,9,"['bruteforcing', 'mathematics']"
25213,2521300,조각 케이크 (Hard),21,"['combinatorics', 'mathematics', 'meet in the middle', 'prefix sum']"
25214,2521400,크림 파스타,7,"['dynamic programming', 'greedy']"
25215,2521500,타이핑,10,"['dynamic programming', 'greedy']"
25216,2521600,파밍 루트,15,"['dynamic programming', 'parametric search']"
25219,2521900,Alternating Heights,0,[]
25220,2522000,Rainy Markets,21,[]
25221,2522100,Double Attendance,0,[]
25222,2522200,Bi-ing Lottery Treekets,0,[]
25223,2522300,Phone Plans,0,[]
25224,2522400,Good Game,22,"['data structures', 'stack']"
25225,2522500,Contact Tracing,15,"['ad-hoc', 'graph theory', 'graph traversal']"
25226,2522600,Cookie Cutter,20,"['geometry', 'area of a polygon', 'sweeping']"
25227,2522700,Cram,18,"['data structures', 'dynamic programming', 'priority queue', 'segment tree', 'stack', 'string', 'suffix array and lcp array', 'set / map by trees']"
25228,2522800,Double Sort,21,"['combinatorics', 'dynamic programming', 'mathematics', 'probability theory']"
25229,2522900,GCD Harmony,17,"['dynamic programming', 'dynamic programming on trees', 'mathematics', 'number theory', 'tree']"
25230,2523000,Leaderboard Effect,21,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'linearity of expectation', 'mathematics', 'probability theory']"
25231,2523100,Rafting Trip,17,"['euler tour technique', 'graph theory', 'graph traversal', 'implementation', 'prefix sum', 'tree']"
25232,2523200,Ranked Choice Spoiling,22,['ad-hoc']
25233,2523300,Reset,17,"['binary search', 'case work', 'greedy']"
25234,2523400,Tic Tac Toe Counting,12,"['data structures', 'dynamic programming', 'set / map by hashing']"
25235,2523500,Transparency,17,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
25236,2523600,Triangular Logs,20,"['data structures', 'mathematics', 'merge sort tree', 'offline queries', 'segment tree', 'sorting']"
25237,2523700,Word Ladder,13,"['ad-hoc', 'constructive', 'precomputation', 'randomization', 'string']"
25238,2523800,가희와 방어율 무시,1,"['arithmetic', 'mathematics']"
25239,2523900,가희와 카오스 파풀라투스,8,"['implementation', 'string']"
25240,2524000,가희와 파일 탐색기 2,13,"['data structures', 'set / map by hashing', 'implementation', 'parsing', 'string']"
25241,2524100,가희와 사직 구장,15,"['bruteforcing', 'implementation', 'sorting']"
25242,2524200,가희와 지하철,16,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'implementation', 'string']"
25243,2524300,가희와 중부내륙선,15,"['data structures', 'implementation', 'priority queue', 'simulation']"
25244,2524400,가희와 영상 추천 시스템,18,"['data structures', 'implementation', 'parsing', 'string', 'set / map by trees', 'two-pointer']"
25245,2524500,Amusement Arcade,10,['mathematics']
25246,2524600,Brexiting and Brentering,4,"['implementation', 'string']"
25247,2524700,Card Trading,0,[]
25248,2524800,Decrypting Zodiac,0,[]
25249,2524900,Excursion to Porvoo,16,"['data structures', 'offline queries', 'priority queue', 'sorting']"
25250,2525000,Flappy Bird,22,"['convex hull', 'geometry']"
25251,2525100,Grid Delivery,15,"['data structures', 'greedy', 'set / map by trees', 'two-pointer']"
25252,2525200,Hectic Harbour II,12,"['ad-hoc', 'data structures', 'linked list']"
25253,2525300,Index Case,16,['dynamic programming']
25254,2525400,Joined Sessions,22,"['dynamic programming', 'greedy']"
25255,2525500,Killjoys' Conference,13,"['breadth-first search', 'bipartite graph', 'combinatorics', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics']"
25256,2525600,Looking for Waldo,15,"['prefix sum', 'sweeping']"
25257,2525700,Monty's Hall,9,"['greedy', 'linearity of expectation', 'mathematics', 'probability theory']"
25258,2525800,Natural Navigation,20,"[""dijkstra's"", 'graph theory']"
25259,2525900,Art Collections,17,['ad-hoc']
25260,2526000,Event Hopping,22,"['data structures', 'greedy', 'segment tree', 'sparse table']"
25261,2526100,Uplifting Excursion,24,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque', 'greedy', 'knapsack', 'mathematics']"
25263,2526300,Stranded Far From Home,19,"['data structures', 'disjoint set', 'smaller to larger technique']"
25264,2526400,Boarding Passes,21,"['binary search', 'bitmask', 'dynamic programming', 'linearity of expectation', 'mathematics', 'prefix sum', 'probability theory', 'ternary search']"
25266,2526600,Game,27,"['bitmask', 'divide and conquer', 'graph theory', 'graph traversal']"
25267,2526700,Permutation,20,"['ad-hoc', 'combinatorics', 'mathematics']"
25268,2526800,Name Generation,6,"['constructive', 'randomization', 'string']"
25269,2526900,Patrick's Triangle,18,['mathematics']
25270,2527000,99 Problems,3,"['bruteforcing', 'implementation', 'mathematics']"
25271,2527100,Box and Arrow Diagram,18,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'offline queries']"
25272,2527200,Emergency Exit,15,"['breadth-first search', 'graph theory', 'graph traversal']"
25273,2527300,Efficient Bus Routing,18,"['constructive', 'tree']"
25274,2527400,The Great Egg Hunt,0,[]
25275,2527500,Bar Classification,7,['implementation']
25276,2527600,Sperhling,8,"['ad-hoc', 'greedy', 'implementation', 'string']"
25277,2527700,Culture shock,3,"['implementation', 'string']"
25278,2527800,Terraforming,3,"['implementation', 'string']"
25279,2527900,Treehouse,13,"['data structures', 'geometry', 'set / map by trees']"
25280,2528000,Marathon,12,"['binary search', 'mathematics', 'probability theory']"
25281,2528100,Bike Party,14,['ad-hoc']
25282,2528200,Take a break!,15,"['greedy', 'prefix sum', 'sorting']"
25283,2528300,Fireworks,21,"['fast fourier transform', 'mathematics']"
25284,2528400,Sjön Sjön Cleanup,0,[]
25285,2528500,심준의 병역판정검사,3,"['case work', 'implementation']"
25286,2528600,11월 11일,3,"['case work', 'implementation']"
25287,2528700,순열 정렬,7,['greedy']
25288,2528800,영어 시험,7,"['ad-hoc', 'constructive', 'string']"
25289,2528900,가장 긴 등차 부분 수열,11,"['bruteforcing', 'dynamic programming']"
25290,2529000,Spiraling Into Control,17,"['constructive', 'greedy', 'implementation', 'mathematics']"
25291,2529100,Pixelated Circle,21,"['geometry', 'mathematics', 'precomputation']"
25292,2529200,Saving the Jelly,22,"['bipartite matching', 'constructive', 'graph theory', 'graph traversal']"
25293,2529300,"I, O Bot",24,"['ad-hoc', 'dynamic programming', 'prefix sum']"
25294,2529400,달팽이와 쿼리,11,"['implementation', 'mathematics']"
25296,2529600,"Duck, Duck, Geese",20,"['data structures', 'segment tree with lazy propagation', 'mathematics', 'segment tree']"
25297,2529700,Mascot Maze,19,"['graph theory', 'greedy', 'topological sorting']"
25303,2530300,Scenery 2,30,"['data structures', 'disjoint set', 'greedy', 'segment tree']"
25304,2530400,영수증,1,"['arithmetic', 'implementation', 'mathematics']"
25305,2530500,커트라인,4,"['implementation', 'sorting']"
25306,2530600,연속 XOR,12,['mathematics']
25307,2530700,시루의 백화점 구경,12,"['breadth-first search', 'graph theory', 'graph traversal']"
25308,2530800,방사형 그래프,12,"['bruteforcing', 'geometry']"
25309,2530900,K개의 소수,13,"['constructive', 'mathematics', 'number theory', 'primality test']"
25310,2531000,곰곰이의 아르바이트,19,"['case work', 'combinatorics', 'lowest common ancestor', 'mathematics', 'tree']"
25311,2531100,UCPC에서 가장 쉬운 문제 번호는?,1,['implementation']
25312,2531200,200% Mixed Juice!,10,"['euclidean algorithm', 'greedy', 'mathematics', 'number theory', 'sorting']"
25313,2531300,Race for the Galaxy,28,"['combinatorics', 'dynamic programming', 'linear algebra', 'mathematics']"
25314,2531400,코딩은 체육과목 입니다,1,['implementation']
25315,2531500,N수매화검법,14,"['geometry', 'greedy', 'line segment intersection check']"
25316,2531600,수소철도 충전 시스템,22,"['data structures', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'greedy', 'tree']"
25317,2531700,functionx,18,"['case work', 'value / coordinate compression', 'data structures', 'segment tree']"
25318,2531800,solved.ac 2022,10,['implementation']
25319,2531900,Twitch Plays VIIIbit Explorer,11,['implementation']
25320,2532000,SCV 체인,17,"['constructive', 'greedy']"
25321,2532100,"yo, i herd u liek ternary operators, so..",18,"['combinatorics', 'data structures', 'mathematics', 'stack']"
25322,2532200,편지 배달,22,"['eulerian path / circuit', 'graph theory', 'greedy', 'permutation cycle decomposition']"
25323,2532300,"수 정렬하기, 근데 이제 제곱수를 곁들인",15,"['ad-hoc', 'mathematics', 'number theory', 'sorting']"
25324,2532400,로지텍 MX Mechanical,22,"['bitmask', 'combinatorics', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics', 'probability theory']"
25325,2532500,학생 인기도 측정,6,"['data structures', 'set / map by hashing', 'sorting', 'string', 'set / map by trees']"
25326,2532600,다중 항목 선호도 조사 (Small),5,['bruteforcing']
25327,2532700,다중 항목 선호도 조사 (Large),8,"['bruteforcing', 'data structures', 'set / map by hashing', 'implementation']"
25328,2532800,문자열 집합 조합하기,8,"['backtracking', 'bruteforcing', 'data structures', 'set / map by hashing', 'implementation', 'string']"
25329,2532900,학생별 통화 요금 계산,7,"['data structures', 'set / map by hashing', 'implementation', 'sorting', 'set / map by trees']"
25330,2533000,SHOW ME THE DUNGEON,11,"['backtracking', 'bruteforcing']"
25331,2533100,Drop 7,11,"['implementation', 'simulation']"
25332,2533200,수들의 합 8,13,"['data structures', 'set / map by hashing', 'prefix sum']"
25335,2533500,Gravity Hackenbush,6,"['game theory', 'greedy']"
25336,2533600,K-균형 잡힌 수,19,"['greedy', 'implementation', 'string']"
25337,2533700,Merge the Tree and Sequence,16,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'greedy', 'sorting', 'tree']"
25338,2533800,바지 구매,7,"['arithmetic', 'mathematics']"
25339,2533900,반전 수와 쿼리,13,"['ad-hoc', 'mathematics']"
25340,2534000,시간딱딱충,14,['parametric search']
25341,2534100,인공 신경망,13,"['arithmetic', 'implementation', 'mathematics']"
25342,2534200,최대 최소공배수,12,"['euclidean algorithm', 'mathematics', 'number theory']"
25343,2534300,최장 최장 증가 부분 수열,11,['dynamic programming']
25344,2534400,행성 정렬,7,"['euclidean algorithm', 'mathematics', 'number theory']"
25345,2534500,루나의 게임 세팅,11,"['combinatorics', 'mathematics']"
25346,2534600,다오와 트리플 멕스 게임,11,['ad-hoc']
25347,2534700,공 꺼내기 게임,15,"['greedy', 'mathematics', 'probability theory']"
25348,2534800,등산 게임,20,"['data structures', 'dynamic programming', 'segment tree']"
25349,2534900,트리 자르기 게임,21,"['backtracking', 'dynamic programming', 'graph theory']"
25350,2535000,환승역 찾기 게임,21,"['센트로이드', 'data structures', 'euler tour technique', 'smaller to larger technique', 'tree']"
25351,2535100,중간 구간 게임,23,"['binary search', 'data structures', 'parametric search', 'parallel binary search', 'persistent segment tree', 'segment tree', 'square root decomposition']"
25352,2535200,정령과 눈 감고 숨바꼭질 게임,19,['ad-hoc']
25353,2535300,게임의 꽃,26,"['data structures', 'dynamic programming', 'heavy-light decomposition', 'segment tree', 'tree']"
25354,2535400,트리 만들기 게임,30,"['constructive', 'graph theory', 'recursion', 'tree']"
25355,2535500,Admissible Map,25,"['dynamic programming', 'hashing']"
25356,2535600,Budget Distribution,0,[]
25357,2535700,Connect the Points,10,"['bruteforcing', 'geometry', 'mathematics']"
25358,2535800,Deletive Editing,10,"['implementation', 'string']"
25359,2535900,Even Split,21,['binary search']
25360,2536000,Fancy Stack,19,"['combinatorics', 'dynamic programming', 'mathematics']"
25361,2536100,Global Warming,23,"['data structures', 'disjoint set', 'geometry', 'geometry; 3d', 'sweeping']"
25362,2536200,Heroes of Might,0,[]
25363,2536300,Interactive Treasure Hunt,17,['mathematics']
25364,2536400,Job Lookup,17,"['dynamic programming', 'prefix sum']"
25365,2536500,Kingdom Partition,25,"['maximum flow', 'max-flow min-cut theorem']"
25366,2536600,Labyrinth,14,"['depth-first search', 'graph theory', 'graph traversal']"
25367,2536700,너무 시시했다,13,"['ad-hoc', 'bitmask', 'combinatorics', 'mathematics']"
25368,2536800,사과를 더 많이 먹자,13,['backtracking']
25369,2536900,카드 숫자 곱을 최소로 만들기,10,"['backtracking', 'bruteforcing']"
25370,2537000,카드 숫자 곱의 경우의 수,8,['bruteforcing']
25371,2537100,k진수 정수의 자릿수 나누기,5,"['implementation', 'mathematics']"
25372,2537200,성택이의 은밀한 비밀번호,1,"['implementation', 'string']"
25373,2537300,벼락치기,4,"['case work', 'mathematics']"
25374,2537400,등급 계산하기,6,"['arithmetic', 'implementation', 'mathematics', 'sorting']"
25375,2537500,아주 간단한 문제,6,"['mathematics', 'number theory']"
25376,2537600,이상한 스위치,12,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
25377,2537700,빵,2,['implementation']
25378,2537800,조약돌,15,['dynamic programming']
25379,2537900,피하자,7,['greedy']
25380,2538000,커다란 도시,18,"['binary search', 'mathematics', 'prefix sum', 'sorting']"
25381,2538100,ABBC,12,"['data structures', 'greedy', 'queue']"
25382,2538200,보급,20,"['data structures', 'greedy', 'priority queue', 'segment tree', 'sorting']"
25384,2538400,니은숲 예술가,21,"['dynamic programming', 'prefix sum']"
25385,2538500,NPU 최적화,25,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'parsing', 'string', 'tree']"
25386,2538600,라즈베리 파이,19,"['ad-hoc', 'greedy', 'sorting']"
25387,2538700,수열과 쿼리의 부분합의 합,19,"['data structures', 'segment tree with lazy propagation', 'mathematics', 'segment tree', 'sweeping']"
25388,2538800,반도체 제작,26,"['circulation', 'duality', 'maximum flow', 'linear programming']"
25389,2538900,대충 카드로 몬스터 잡는 게임,20,"['data structures', 'dynamic programming', 'segment tree with lazy propagation', 'segment tree']"
25390,2539000,Traveling Junkman Problem,21,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
25391,2539100,특별상,11,"['greedy', 'sorting']"
25392,2539200,사건의 지평선,22,"['data structures', 'dynamic programming', 'graph theory', 'strongly connected component', 'segment tree']"
25393,2539300,교집합 만들기,11,"['ad-hoc', 'data structures', 'set / map by hashing']"
25394,2539400,전국 대학생 프로그래밍 대회 동아리 연합 토너먼트,19,"['ad-hoc', 'case work']"
25395,2539500,커넥티드 카 실험,12,"['breadth-first search', 'graph theory', 'graph traversal', 'two-pointer']"
25396,2539600,×+ +×,24,"['combinatorics', 'divide and conquer', 'fast fourier transform', 'mathematics']"
25397,2539700,점 연결하기,24,['constructive']
25398,2539800,트리와 집합과 쿼리,29,[]
25399,2539900,라그랑주님 수학에는 뺄셈도 있어요,16,"['case work', 'constructive', 'mathematics', 'number theory']"
25400,2540000,제자리,5,['greedy']
25401,2540100,카드 바꾸기,10,"['bruteforcing', 'implementation', 'mathematics']"
25402,2540200,트리와 쿼리,16,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'tree']"
25403,2540300,빨강파랑,20,"['value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
25404,2540400,주차 타워,20,"['data structures', 'dynamic programming', 'segment tree']"
25405,2540500,레벨 업,20,"['binary search', 'mathematics', 'two-pointer']"
25406,2540600,식사 계획 세우기,17,"['data structures', 'greedy', 'priority queue']"
25407,2540700,외곽 순환 도로,26,"['센트로이드', 'centroid decomposition', ""dijkstra's"", 'divide and conquer', 'graph theory', 'tree', 'tree decomposition']"
25408,2540800,Abracadabra,22,"['ad-hoc', 'binary search', 'data structures', 'offline queries', 'segment tree', 'stack']"
25409,2540900,Homework,17,"['data structures', 'stack']"
25412,2541200,Measures,21,"['data structures', 'greedy', 'segment tree with lazy propagation', 'segment tree']"
25414,2541400,구간 나누기,20,"['dynamic programming', 'greedy']"
25415,2541500,삼각형들,22,"['binary search', 'geometry', 'sorting', 'sweeping']"
25416,2541600,빠른 숫자 탐색,9,"['breadth-first search', 'graph theory', 'graph traversal']"
25417,2541700,고속의 숫자 탐색,11,"['breadth-first search', 'graph theory', 'graph traversal']"
25418,2541800,정수 a를 k로 만들기,8,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'greedy']"
25419,2541900,정수를 끝까지 외치자,11,"['dynamic programming', 'game theory']"
25420,2542000,끝까지 외친 정수의 개수,13,"['dynamic programming', 'game theory']"
25421,2542100,조건에 맞는 정수의 개수,10,['dynamic programming']
25422,2542200,Seesaw,21,"['binary search', 'mathematics', 'two-pointer']"
25423,2542300,Giraffes,26,"['data structures', 'implementation', 'mathematics', 'probability theory']"
25424,2542400,School Road,22,"['biconnected component', ""dijkstra's"", 'dominator tree', 'graph theory', 'greedy', 'implementation', 'mathematics', 'tree']"
25425,2542500,운동회,5,"['arithmetic', 'mathematics']"
25426,2542600,일차함수들,7,"['greedy', 'mathematics', 'sorting']"
25427,2542700,DKSH를 찾아라,11,"['dynamic programming', 'prefix sum']"
25428,2542800,분필 도둑,16,"['data structures', 'disjoint set', 'sorting']"
25429,2542900,노엣지 피자,15,"['data structures', 'mathematics', 'set / map by trees']"
25430,2543000,다이제스타,16,"[""dijkstra's"", 'graph theory', 'sorting']"
25431,2543100,XOR 놀이,20,"['data structures', 'square root decomposition', 'tree', 'set / map by trees', 'trie']"
25432,2543200,각성제,22,['dynamic programming']
25433,2543300,PLCS,25,"['bit set', 'dynamic programming', 'mathematics', 'number theory', 'primality test', 'string']"
25434,2543400,Magic Cards,19,"['ad-hoc', 'combinatorics', 'mathematics']"
25435,2543500,Hoax Spreading,0,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'set / map by hashing', 'sorting']"
25436,2543600,Team Contest,0,[]
25437,2543700,Connected Towns,21,"['ad-hoc', 'graph theory']"
25438,2543800,메기 농장,22,"['binary search', 'dynamic programming', 'prefix sum', 'two-pointer']"
25439,2543900,죄수들의 도전,23,"['ad-hoc', 'constructive', 'dynamic programming']"
25440,2544000,송신탑,26,"['data structures', 'greedy', 'priority queue', 'persistent segment tree', 'segment tree', 'set / map by trees']"
25441,2544100,디지털 회로,22,"['combinatorics', 'data structures', 'dynamic programming', 'dynamic programming on trees', 'segment tree with lazy propagation', 'mathematics', 'segment tree', 'tree']"
25442,2544200,드문 곤충,23,"['ad-hoc', 'binary search', 'heuristics', 'parametric search', 'randomization']"
25443,2544300,수천개의 섬,27,"['constructive', 'graph theory']"
25444,2544400,Mađioničar,17,"['ad-hoc', 'string', 'two-pointer']"
25446,2544600,Povjerenstvo,23,"['bipartite graph', 'graph theory', 'strongly connected component']"
25447,2544700,Vinjete,18,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'segment tree with lazy propagation', 'segment tree']"
25448,2544800,N의 배수 (4),28,"['ad-hoc', 'binary search', 'mathematics', 'number theory']"
25449,2544900,Eurokulen,6,"['implementation', 'sorting']"
25450,2545000,Izleti,0,[]
25451,2545100,Ravnica,16,"['dynamic programming', 'dynamic programming on trees', 'tree']"
25452,2545200,Snagator,0,[]
25453,2545300,Kraljice,0,[]
25454,2545400,Maliand,0,[]
25456,2545600,궁금한 시프트,20,"['fast fourier transform', 'mathematics']"
25457,2545700,Dugput,0,[]
25458,2545800,M,21,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'lowest common ancestor', 'minimum spanning tree', 'tree']"
25459,2545900,Točkice,0,[]
25460,2546000,Magic Cards (Hard),25,['ad-hoc']
25461,2546100,NMABCD,19,"['backtracking', 'case work']"
25462,2546200,Inverzije,20,"['data structures', ""mo's"", 'offline queries', 'segment tree']"
25463,2546300,Izrazi,0,[]
25464,2546400,Umjetan,11,['dynamic programming']
25465,2546500,Kocka,7,[]
25466,2546600,Loptica,0,[]
25467,2546700,Putevi,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
25471,2547100,Cijepise,0,[]
25473,2547300,Tiket,21,"['data structures', 'divide and conquer', 'segment tree', 'sweeping']"
25474,2547400,Hilbert,0,[]
25475,2547500,Hrvati,0,[]
25476,2547600,MANCE,0,[]
25477,2547700,Insemove,9,"['constructive', 'data structures', 'greedy', 'priority queue']"
25478,2547800,Marinada,17,"['breadth-first search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal', 'travelling salesman problem']"
25479,2547900,Watt,21,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
25480,2548000,Ad Astra,0,[]
25481,2548100,Kometi,0,[]
25482,2548200,Pikule,13,"['constructive', 'greedy']"
25483,2548300,Zbroj,0,[]
25484,2548400,Kraljevstvo,0,[]
25487,2548700,단순한 문제 (Large),8,"['mathematics', 'number theory']"
25488,2548800,토큰,17,"['graph theory', 'strongly connected component']"
25489,2548900,반짝반짝 3,17,"['graph theory', 'graph traversal', 'linearity of expectation', 'mathematics', 'probability theory', 'tree']"
25490,2549000,수열의 점수,20,"['divide and conquer', 'mathematics', 'prefix sum', 'two-pointer']"
25491,2549100,Mexor tree,19,"['data structures', 'depth-first search', 'euler tour technique', 'graph theory', 'graph traversal', 'lowest common ancestor', 'segment tree', 'tree', 'set / map by trees']"
25492,2549200,전깃줄 연결,19,"['data structures', 'dynamic programming', 'euclidean algorithm', 'mathematics', 'number theory', 'segment tree']"
25493,2549300,까다로운 형제,21,"['value / coordinate compression', 'data structures', 'dynamic programming', 'segment tree', 'sweeping', 'two-pointer']"
25494,2549400,단순한 문제 (Small),2,"['arithmetic', 'bruteforcing', 'mathematics']"
25495,2549500,에어팟,4,"['implementation', 'simulation']"
25496,2549600,장신구 명장 임스,5,"['greedy', 'sorting']"
25497,2549700,기술 연계마스터 임스,6,"['data structures', 'implementation', 'stack']"
25498,2549800,핸들 뭘로 하지,14,"['breadth-first search', 'graph theory', 'graph traversal', 'greedy']"
25499,2549900,Tipover Transform,16,"['case work', 'dynamic programming']"
25500,2550000,무자비한 최단 경로,17,"[""dijkstra's"", 'graph theory']"
25501,2550100,재귀의 귀재,4,"['implementation', 'recursion', 'string']"
25502,2550200,등차수열? 등비수열?,12,"['data structures', 'mathematics', 'set / map by trees']"
25503,2550300,순열 뒤집기,16,"['ad-hoc', 'data structures', 'stack']"
25504,2550400,최적 경로와 쿼리,21,"['dynamic programming', 'square root decomposition']"
25505,2550500,공통 부분 문자열 쿼리,23,"['data structures', 'sparse table', 'square root decomposition', 'string', 'suffix array and lcp array']"
25506,2550600,Autoritet,0,[]
25508,2550800,Totoro,0,[]
25509,2550900,Lord of the Characteristic Polynomials (1),26,"['linear algebra', 'mathematics']"
25510,2551000,Lord of the Characteristic Polynomials (2),28,"['dynamic programming', 'linear algebra', 'mathematics']"
25511,2551100,값이 k인 트리 노드의 깊이,9,"['graph theory', 'graph traversal', 'tree']"
25512,2551200,트리를 간단하게 색칠하는 최소 비용,10,"['bipartite graph', 'graph theory', 'graph traversal']"
25513,2551300,빠른 오름차순 숫자 탐색,11,"['breadth-first search', 'graph theory', 'graph traversal']"
25514,2551400,고속의 오름차순 숫자 탐색,12,"['breadth-first search', 'graph theory', 'graph traversal']"
25515,2551500,트리 노드 합의 최댓값,12,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
25516,2551600,거리가 k이하인 트리 노드에서 사과 수확하기,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
25517,2551700,머리 아픈 암산은 이제 그만!,17,"['exponentiation by squaring', 'mathematics', 'modular multiplicative inverse', 'number theory', 'precomputation']"
25518,2551800,OPK,0,[]
25519,2551900,Štapovi,0,[]
25520,2552000,Zalagaonica,0,[]
25521,2552100,Klavir,0,[]
25522,2552200,Pikulice,0,[]
25523,2552300,Trošak,0,[]
25524,2552400,K-TI,0,[]
25525,2552500,PARKING,0,[]
25527,2552700,Counting Peaks of Infection,3,['implementation']
25528,2552800,Leave No One Behind,9,"['implementation', 'simulation']"
25529,2552900,Training Schedule for ICPC,13,"['mathematics', 'parametric search']"
25530,2553000,Audience Queue,0,[]
25531,2553100,Village of Lore,0,[]
25532,2553200,Trim It Step by Step,0,[]
25533,2553300,Keep in Touch,0,[]
25534,2553400,Artist in Agony,0,[]
25535,2553500,IZAZOV,0,[]
25536,2553600,SKLONIŠTE,0,[]
25537,2553700,VEZUV,18,"['data structures', 'floyd–warshall', 'graph theory', 'topological sorting', 'tree', 'trie']"
25538,2553800,모험가 길드,19,"['data structures', 'disjoint set', 'euler tour technique', 'lowest common ancestor', 'offline queries', 'segment tree', 'tree']"
25539,2553900,ŠIBICE,0,[]
25540,2554000,SMRAD,0,[]
25541,2554100,KRAFNA,0,[]
25542,2554200,약속 장소,9,"['bruteforcing', 'implementation', 'string']"
25543,2554300,X 만들기,13,['dynamic programming']
25544,2554400,X 만들기 (Hard),16,['longest increasing sequence in o(n log n)']
25545,2554500,MMST,14,"['data structures', 'graph theory', 'minimum spanning tree']"
25546,2554600,가채점,22,"['aho-corasick', 'binary search', 'data structures', 'dynamic programming', 'merge sort tree', 'parametric search', 'persistent segment tree', 'segment tree', 'sorting', 'string', 'suffix array and lcp array', 'tree', 'trie']"
25547,2554700,신기한 숫자,12,"['mathematics', 'number theory']"
25548,2554800,신기한 숫자 2,18,"['mathematics', 'number theory']"
25549,2554900,트리의 MEX,18,"['data structures', 'smaller to larger technique', 'tree', 'set / map by trees']"
25550,2555000,택배 색칠,7,['mathematics']
25551,2555100,멋쟁이 포닉스,5,['mathematics']
25552,2555200,잔디 예측하기,12,"['graph theory', 'graph traversal']"
25553,2555300,단짠단짠 피자,15,"['case work', 'prefix sum', 'sliding window']"
25554,2555400,포닉스의 신비한 분자 보고서,17,['geometry']
25555,2555500,포커,16,['dynamic programming']
25556,2555600,포스택,11,"['data structures', 'greedy', 'stack']"
25557,2555700,수 맞히기 게임,14,"['dynamic programming', 'linearity of expectation', 'mathematics', 'probability theory']"
25558,2555800,내비게이션,4,['implementation']
25559,2555900,패스,12,"['ad-hoc', 'constructive', 'mathematics']"
25560,2556000,포탈,22,"['case work', 'lowest common ancestor', 'tree']"
25561,2556100,1-3 트리,16,"['ad-hoc', 'tree']"
25562,2556200,차의 개수,7,"['constructive', 'mathematics']"
25563,2556300,"AND, OR, XOR",21,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'sum over subsets dynamic programming']"
25564,2556400,역삼역,21,"[""manacher's"", 'string', 'suffix array and lcp array']"
25565,2556500,딸기와 토마토,11,"['case work', 'implementation']"
25566,2556600,김밥,17,"['value / coordinate compression', 'data structures', 'segment tree', 'sorting', 'sweeping']"
25567,2556700,줄 세우기,18,"['data structures', 'deque', 'disjoint set', 'offline queries', 'prefix sum', 'smaller to larger technique']"
25568,2556800,피라미드,15,"['ad-hoc', 'greedy']"
25569,2556900,My뷰 꾸미기,17,"['combinatorics', 'exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'modular multiplicative inverse', 'number theory']"
25576,2557600,찾았다 악질,4,"['implementation', 'mathematics']"
25577,2557700,열 정렬정렬 정,12,"['ad-hoc', 'permutation cycle decomposition', 'sorting']"
25578,2557800,고장난 통신탑,14,"['case work', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
25579,2557900,터트려라 풍선,14,"['data structures', 'disjoint set']"
25580,2558000,Next Level,0,"['backtracking', 'implementation']"
25581,2558100,땅 두 배로 따먹기,16,"['dynamic programming', 'game theory', 'prefix sum']"
25582,2558200,pqbd,18,"[""manacher's"", 'string']"
25583,2558300,첨탑 부수기,20,"['euler totient function', 'exponentiation by squaring', 'mathematics', 'number theory', 'parsing', 'string']"
25584,2558400,근무 지옥에 빠진 푸앙이 (Large),6,"['data structures', 'set / map by hashing', 'implementation', 'string']"
25585,2558500,86 ─에이티식스─ 1,11,"['backtracking', 'bruteforcing']"
25586,2558600,마트료시카 박스 I,12,"['ad-hoc', 'breadth-first search', 'graph theory', 'graph traversal', 'tree']"
25587,2558700,배수로,13,"['data structures', 'disjoint set']"
25588,2558800,푸앙이와 계단 수열,13,['dynamic programming']
25589,2558900,푸앙이와 코인,16,"['dynamic programming', 'prefix sum']"
25590,2559000,마트료시카 박스 III,17,"['data structures', 'euler tour technique', 'lowest common ancestor', 'tree']"
25591,2559100,푸앙이와 종윤이,2,"['arithmetic', 'implementation', 'mathematics']"
25592,2559200,바둑돌 게임,5,"['implementation', 'mathematics', 'simulation']"
25593,2559300,근무 지옥에 빠진 푸앙이 (Small),5,"['data structures', 'set / map by hashing', 'implementation', 'string']"
25594,2559400,HG 음성기호,6,"['bruteforcing', 'case work', 'string']"
25595,2559500,86 ─에이티식스─ 2,5,['ad-hoc']
25596,2559600,마트료시카 박스 II,12,"['greedy', 'tree']"
25597,2559700,푸앙이와 러닝머신,11,"['case work', 'greedy', 'mathematics']"
25598,2559800,Alive or Dead?,13,"['implementation', 'simulation']"
25599,2559900,푸앙이와 레벨업,17,"['binary search', 'data structures', 'multidimensional segment tree', 'parametric search', 'segment tree', 'sliding window', 'sparse table']"
25600,2560000,Triathlon,2,"['arithmetic', 'implementation', 'mathematics']"
25601,2560100,자바의 형변환,10,"['data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'tree']"
25602,2560200,캔 주기,10,"['backtracking', 'bruteforcing']"
25603,2560300,짱해커 이동식,11,"['parametric search', 'sliding window']"
25604,2560400,비행기 전시,13,"['data structures', 'implementation', 'queue', 'simulation']"
25605,2560500,입맛이 까다로운 코알라가 유칼립투스 잎을 행복하게 먹을 수 있는 방법,15,"['dynamic programming', 'knapsack']"
25606,2560600,장마,15,"['offline queries', 'prefix sum']"
25607,2560700,Shooting Game,0,"['dynamic programming using bitfield', 'bitmask', 'dynamic programming']"
25608,2560800,장난감 섞기,16,"['bruteforcing', 'prefix sum']"
25609,2560900,MST,25,"['data structures', 'disjoint set']"
25610,2561000,영희의 심부름,19,"['combinatorics', 'linearity of expectation', 'mathematics', 'modular multiplicative inverse', 'number theory', 'probability theory']"
25611,2561100,히스토그램 하나 빼기,22,"['data structures', 'disjoint set', 'segment tree']"
25612,2561200,정렬 프로그램,22,"['bitmask', 'combinatorics', 'dynamic programming', 'sum over subsets dynamic programming', 'mathematics']"
25613,2561300,수 만들기,24,"['ad-hoc', 'case work', 'mathematics']"
25614,2561400,자리 바꾸기,17,"['mathematics', 'permutation cycle decomposition', 'square root decomposition']"
25615,2561500,넓이를 같게,22,"['case work', 'geometry', 'mathematics']"
25616,2561600,사회적 거리두기,19,"['data structures', 'segment tree', 'sweeping']"
25617,2561700,이름 부르기,24,"['combinatorics', 'exponentiation by squaring', 'fast fourier transform', 'generating function', 'inclusion and exclusion', 'mathematics']"
25618,2561800,포켓몬 대회,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
25619,2561900,자취방 정하기,14,"[""dijkstra's"", 'graph theory', 'linearity of expectation', 'mathematics', 'probability theory']"
25620,2562000,슬라임 키우기,15,"['data structures', 'mathematics', 'number theory', 'priority queue']"
25621,2562100,이상한 프로그래밍 언어,15,"['case work', 'greedy']"
25622,2562200,3에 깃든 힘,15,"['constructive', 'depth-first search', 'graph theory', 'graph traversal', 'greedy', 'tree']"
25623,2562300,콜라 줍기,18,['dynamic programming']
25624,2562400,SNUPTI,8,"['backtracking', 'implementation']"
25625,2562500,샤틀버스,2,"['arithmetic', 'mathematics']"
25626,2562600,Castle Nim,0,[]
25627,2562700,칼자국,24,"['euler characteristic (χ=v-e+f)', 'geometry', 'graph theory', 'planar graph', 'square root decomposition', 'sweeping']"
25628,2562800,햄버거 만들기,2,"['arithmetic', 'mathematics']"
25629,2562900,홀짝 수열,3,"['ad-hoc', 'mathematics']"
25630,2563000,팰린드롬 소떡소떡,3,"['implementation', 'string']"
25631,2563100,마트료시카 합치기,6,"['data structures', 'greedy']"
25632,2563200,소수 부르기 게임,7,"['game theory', 'greedy', 'mathematics', 'number theory', 'primality test']"
25633,2563300,도미노 넘어뜨리기,10,"['bruteforcing', 'dynamic programming']"
25634,2563400,전구 상태 뒤집기,11,"['dynamic programming', 'prefix sum']"
25635,2563500,자유 이용권,12,['greedy']
25636,2563600,소방차,13,"[""dijkstra's"", 'graph theory']"
25637,2563700,회전 목마,15,"['bruteforcing', 'greedy']"
25638,2563800,트리와 경로 개수 쿼리,16,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
25639,2563900,수열과 최대 상승 쿼리,19,"['data structures', 'segment tree']"
25640,2564000,MBTI,2,"['implementation', 'string']"
25641,2564100,균형 잡힌 소떡소떡,3,"['implementation', 'string']"
25642,2564200,젓가락 게임,3,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
25643,2564300,문자열 탑 쌓기,5,"['bruteforcing', 'string']"
25644,2564400,최대 상승,6,"['dynamic programming', 'greedy', 'implementation']"
25645,2564500,Floor Tiles in a Park,0,[]
25646,2564600,Rotate Sum 3,0,[]
25647,2564700,Oscar's Round Must Have a Constructive Problem,13,['constructive']
25648,2564800,The Pool,0,[]
25649,2564900,Ternary Search,0,[]
25650,2565000,Candies,0,[]
25651,2565100,Regular Expression,0,[]
25652,2565200,Grammy Sorting,0,[]
25653,2565300,Suffix Sort,0,[]
25654,2565400,Melborp Lacissalc,0,[]
25655,2565500,Great Party,0,[]
25656,2565600,Maximum Range,0,[]
25657,2565700,Add One,0,[]
25658,2565800,Be Careful,0,[]
25659,2565900,Counting Sequence,0,[]
25660,2566000,DS Team Selection,0,[]
25661,2566100,Exciting Travel,0,[]
25662,2566200,Flower's Land,0,[]
25663,2566300,Games,0,[]
25664,2566400,Half Plane,0,[]
25665,2566500,Inverse Line Graph,0,[]
25666,2566600,Just Another Number Theory Problem,18,"['mathematics', 'number theory', 'prefix sum']"
25667,2566700,Kitten's Computer,24,"['ad-hoc', 'constructive']"
25668,2566800,Long: WCWBTT,0,[]
25669,2566900,Matrix Counting,0,[]
25670,2567000,No!,0,[]
25671,2567100,Bracket-and-bar Sequences,18,"['combinatorics', 'dynamic programming', 'mathematics']"
25672,2567200,Even and Odd Combinations,11,"['ad-hoc', 'constructive']"
25682,2568200,체스판 다시 칠하기 2,11,['prefix sum']
25683,2568300,행렬 곱셈 순서 4,10,"['greedy', 'sorting']"
25686,2568600,1차원,15,"['constructive', 'divide and conquer']"
25687,2568700,2차원,18,"['ad-hoc', 'constructive', 'mathematics']"
25688,2568800,빠른 무작위 숫자 탐색,11,"['breadth-first search', 'bitmask', 'bruteforcing', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal']"
25689,2568900,고속의 무작위 숫자 탐색,12,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
25690,2569000,트리를 복잡하게 색칠하는 최소 비용,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
25691,2569100,k개 트리 노드에서 사과를 최대로 수확하기,11,"['bruteforcing', 'graph theory', 'graph traversal', 'tree']"
25692,2569200,Mode,0,[]
25693,2569300,Tree,0,[]
25694,2569400,Ramen,7,['greedy']
25695,2569500,Rotate Sum 2,0,[]
25696,2569600,Smaller LCA,0,[]
25697,2569700,Noodle,0,[]
25698,2569800,Geometry,0,[]
25699,2569900,Rectangle Placement,0,[]
25700,2570000,Infectious Disease,0,[]
25701,2570100,Positive String,0,[]
25702,2570200,DFS,0,[]
25703,2570300,포인터 공부,2,['implementation']
25704,2570400,출석 이벤트,2,"['arithmetic', 'implementation', 'mathematics']"
25705,2570500,돌림판 문자열,5,"['implementation', 'simulation', 'string']"
25706,2570600,자전거 묘기,7,['dynamic programming']
25707,2570700,팔찌 만들기,6,"['ad-hoc', 'greedy', 'mathematics', 'sorting']"
25708,2570800,만남의 광장,9,"['bruteforcing', 'prefix sum']"
25709,2570900,1 빼기,8,"['greedy', 'implementation']"
25710,2571000,점수 계산,9,"['bruteforcing', 'pigeonhole principle']"
25711,2571100,인경산,11,['prefix sum']
25712,2571200,인경강,12,"['bruteforcing', 'dynamic programming', 'implementation', 'simulation', 'two-pointer']"
25713,2571300,괴도 인하,16,['dynamic programming']
25714,2571400,점프 쇼다운,16,"['combinatorics', 'dynamic programming', 'mathematics']"
25715,2571500,Puzzle: X-Sums Sudoku,0,[]
25716,2571600,Puzzle: Patrick's Parabox,0,[]
25717,2571700,Puzzle: Hearthstone,0,[]
25718,2571800,Poker Game: Decision,0,[]
25719,2571900,Poker Game: Construction,0,[]
25720,2572000,Longest Common Subsequence,12,"['data structures', 'set / map by hashing', 'mathematics', 'set / map by trees']"
25721,2572100,Lexicographic Comparison,0,[]
25722,2572200,Expression Evaluation,22,"['ad-hoc', 'constructive']"
25723,2572300,Equivalence in Connectivity,0,[]
25724,2572400,Symmetry: Tree,0,[]
25725,2572500,Symmetry: Convex,0,[]
25726,2572600,Symmetry: Closure,0,[]
25727,2572700,Building Bombing,21,"['data structures', 'dynamic programming', 'segment tree with lazy propagation', 'segment tree']"
25728,2572800,Connecting Cables,15,"['prefix sum', 'sorting', 'sweeping']"
25729,2572900,Double-Colored Papers,27,"['binary search', 'data structures', 'dynamic programming', 'dynamic programming on trees', 'string', 'suffix array and lcp array', 'suffix tree', 'tree', 'trie']"
25730,2573000,Histogram Sequence 4,10,['constructive']
25731,2573100,Making Number,22,"['data structures', 'greedy', 'segment tree', 'set / map by trees']"
25732,2573200,One Path,22,"['dynamic programming', 'dynamic programming on trees', 'tree']"
25733,2573300,Permutation Arrangement,18,"['ad-hoc', 'backtracking', 'greedy']"
25734,2573400,Set and Sequence and Query,16,"['data structures', 'implementation', 'set / map by trees']"
25735,2573500,Similarity Graph,28,"['ad-hoc', 'constructive', 'graph theory', 'topological sorting']"
25736,2573600,Squirrel Game,21,"['game theory', 'sprague–grundy theorem']"
25737,2573700,Two Paths,27,"['센트로이드', 'centroid decomposition', 'convex hull trick', 'divide and conquer', 'dynamic programming', 'dynamic programming on trees', 'tree']"
25738,2573800,Village Planning,26,"['fast fourier transform', 'generating function', 'mathematics']"
25739,2573900,Window Arrangement,20,"['maximum flow', 'minimum cost maximum flow']"
25740,2574000,Good Partitions,22,"['string', 'suffix array and lcp array']"
25741,2574100,Grid,0,[]
25742,2574200,The Beauty of Cycles,0,[]
25743,2574300,Interval,19,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping', 'two-pointer']"
25744,2574400,Drinking Water,0,[]
25755,2575500,거울반사,4,['implementation']
25756,2575600,방어율 무시 계산하기,3,"['arithmetic', 'mathematics']"
25757,2575700,임스와 함께하는 미니게임,6,"['data structures', 'set / map by hashing', 'string', 'set / map by trees']"
25758,2575800,유전자 조합,10,"['bruteforcing', 'data structures', 'set / map by hashing', 'pigeonhole principle', 'set / map by trees']"
25759,2575900,들판 건너가기,12,['dynamic programming']
25760,2576000,귀경길 교통상황을 알려드립니다,15,"['breadth-first search', 'graph theory', 'graph traversal', 'greedy', 'tree']"
25761,2576100,축사 건설,18,"['data structures', 'stack']"
25762,2576200,Easy Problem,0,[]
25763,2576300,Standard Problem,0,[]
25764,2576400,Network Transfer,0,[]
25765,2576500,Hard Problem,0,[]
25766,2576600,String Strange Sum,0,[]
25767,2576700,Bayan Testing,0,[]
25768,2576800,Battleship: New Rules,0,[]
25769,2576900,Triangular Cactus Paths,0,[]
25770,2577000,Best Sun,0,[]
25771,2577100,Fast Bridges,0,[]
25772,2577200,Decoding The Message,0,[]
25773,2577300,Number Maximization,4,"['greedy', 'sorting']"
25774,2577400,Simplified Calendar System,3,"['arithmetic', 'implementation', 'mathematics']"
25775,2577500,Letter Frequency,6,"['data structures', 'set / map by hashing', 'implementation', 'string']"
25776,2577600,Pseudo Pseudo Random Numbers,7,"['bitmask', 'bruteforcing']"
25777,2577700,Word Tree,12,"['graph theory', 'minimum spanning tree', 'string']"
25778,2577800,House Prices Going Up,15,"['data structures', 'segment tree']"
25779,2577900,Which Number,15,"['binary search', 'inclusion and exclusion', 'mathematics', 'number theory']"
25780,2578000,Maximum Satisfaction,20,"['maximum flow', 'minimum cost maximum flow']"
25781,2578100,Share Auction,0,[]
25782,2578200,Desert Travel,0,[]
25783,2578300,Security Fence,25,"['geometry', 'half plane intersection', 'rotating calipers']"
25784,2578400,Easy-to-Solve Expressions,2,"['arithmetic', 'implementation', 'mathematics', 'sorting']"
25785,2578500,Easy-to-Pronounce Words,3,"['implementation', 'string']"
25786,2578600,Decimal XOR,3,"['implementation', 'string']"
25787,2578700,Square Fishing Net,6,"['bruteforcing', 'implementation']"
25788,2578800,Aqualin,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
25789,2578900,RCV Simplification,13,"['binary search', 'greedy', 'implementation', 'simulation']"
25790,2579000,Panda Hunting Treasure Box,12,"[""dijkstra's"", 'graph theory']"
25791,2579100,Lecture Allocation,11,"['dynamic programming', 'knapsack']"
25792,2579200,Stone Smoothing,19,"['binary search', 'geometry', 'parametric search']"
25793,2579300,초콜릿 피라미드,10,['mathematics']
25794,2579400,초콜릿과 나이트 게임,12,"['case work', 'constructive']"
25795,2579500,예쁜 초콜릿과 숫자놀이,12,"['backtracking', 'dynamic programming']"
25796,2579600,초콜릿 나눠 팔기,15,['dynamic programming']
25797,2579700,더블 초콜릿,17,"['graph theory', 'graph traversal', 'implementation']"
25798,2579800,초콜릿과 친구들의 습격,21,"['ad-hoc', 'graph theory', 'greedy']"
25799,2579900,초콜릿과 왕 게임,24,"['berlekamp–massey', 'dynamic programming', 'dynamic programming using connection profile']"
25800,2580000,초콜릿 프로그래밍 언어,19,"['implementation', 'precomputation', 'simulation']"
25801,2580100,Odd/Even Strings,3,"['implementation', 'string']"
25802,2580200,Fiborooji Sequence,5,"['arithmetic', 'implementation', 'mathematics', 'pigeonhole principle']"
25803,2580300,Soccer Standing Table,0,[]
25804,2580400,Caterpillar Walk,0,[]
25805,2580500,Tutorial Groupings,0,[]
25806,2580600,Food Poisoning,15,['mathematics']
25807,2580700,Toboggan Ride,0,[]
25808,2580800,Discord Daisy Chain,0,[]
25809,2580900,K-gap Subsequence,18,"['divide and conquer', 'dynamic programming']"
25810,2581000,Ultimate Commitment Forever,0,[]
25811,2581100,Really Nerdy Game,0,[]
25812,2581200,Nice Raises,3,"['arithmetic', 'implementation', 'mathematics']"
25813,2581300,Changing Strings,3,"['implementation', 'string']"
25814,2581400,Heavy Numbers,3,"['arithmetic', 'implementation', 'mathematics', 'string']"
25815,2581500,Cat’s Age,3,"['arithmetic', 'implementation', 'mathematics']"
25816,2581600,Overall Ranking,8,"['data structures', 'set / map by hashing', 'sorting']"
25817,2581700,Don’t Complicate It!,9,"['data structures', 'stack', 'string']"
25818,2581800,How Much Coffee is Left?,7,"['geometry', 'mathematics']"
25819,2581900,Time to Eat,12,"[""dijkstra's"", 'graph theory']"
25820,2582000,Tower Climbing,0,[]
25821,2582100,Palindromic Primes,15,"['bruteforcing', 'mathematics', 'miller–rabin', 'number theory', 'primality test', 'sieve of eratosthenes']"
25822,2582200,2000문제 푼 임스,10,"['dynamic programming', 'two-pointer']"
25823,2582300,조합의 합의 합,14,"['combinatorics', 'mathematics']"
25824,2582400,빠른 오름차순 메시지 전달,11,"['backtracking', 'bruteforcing']"
25825,2582500,빠른 무작위 메시지 전달,12,"['backtracking', 'bruteforcing']"
25826,2582600,2차원 배열 다중 업데이트 단일 합,10,"['mathematics', 'sweeping']"
25827,2582700,시간 구간 다중 업데이트 다중 합,10,['prefix sum']
25828,2582800,Corona Virus Testing,2,"['arithmetic', 'mathematics']"
25829,2582900,Presidential Election,3,"['arithmetic', 'implementation', 'mathematics']"
25830,2583000,Microwave Mishap,3,"['arithmetic', 'mathematics']"
25831,2583100,Food Display Arrangement,11,"['data structures', 'greedy', 'sorting', 'set / map by trees']"
25832,2583200,Making Connections,15,"['data structures', 'disjoint set']"
25833,2583300,Boxing Books,0,[]
25834,2583400,Bad Tree,10,['constructive']
25835,2583500,Lots of Towers of Hanoi,13,"['constructive', 'mathematics', 'number theory']"
25836,2583600,Paragliders and Aircraft,0,[]
25837,2583700,Boring Solitaire,0,[]
25838,2583800,Safe Logging,0,[]
25839,2583900,Village Transportation,24,"['binary search', 'directed minimum spanning tree', 'graph theory']"
25840,2584000,Sharing Birthdays,3,['implementation']
25841,2584100,Digit Count,3,"['implementation', 'string']"
25842,2584200,Tetrooj Box,6,"['ad-hoc', 'implementation']"
25843,2584300,Judging Assistant for Contest,6,['implementation']
25844,2584400,Thirsty Professors,16,"['geometry', 'line segment intersection check']"
25845,2584500,Hidden Message,11,['dynamic programming']
25846,2584600,Make the Team,17,"['bipartite matching', 'maximum flow', 'greedy']"
25847,2584700,Decoder Ring,18,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
25848,2584800,Wedding DJ,18,['longest increasing sequence in o(n log n)']
25849,2584900,Briefcases Full of Money,0,[]
25850,2585000,A Game Called Mind,0,[]
25851,2585100,Unique Values,0,[]
25852,2585200,Gone Fishing,0,[]
25853,2585300,Sum of a Function,0,[]
25854,2585400,Hang Gliding,0,[]
25855,2585500,Trading Cards,0,[]
25856,2585600,Median Inversion String,0,[]
25857,2585700,Check List,0,[]
25858,2585800,Divide the Cash,0,[]
25859,2585900,Sort by Frequency,0,[]
25860,2586000,Fitting on the Bed,0,[]
25861,2586100,Candy Land,0,[]
25862,2586200,Give-a-Gnocchi,0,[]
25863,2586300,More or Less,0,[]
25864,2586400,Cooperative Escape,0,[]
25865,2586500,Mountain View,0,[]
25866,2586600,Floating-Point Unrounding,0,[]
25867,2586700,Programming Team’s Will,0,[]
25868,2586800,Code Matching,0,[]
25869,2586900,Window on the Wall,0,[]
25870,2587000,Parity of Strings,0,[]
25871,2587100,Historical TV Remote Control,0,[]
25872,2587200,Circle Meets Square,0,[]
25873,2587300,SGA President,0,[]
25874,2587400,Rounding Many Ways,0,[]
25875,2587500,World Cup Fever,0,[]
25876,2587600,First Last Sorting,0,[]
25877,2587700,Team Shirts/Jerseys,0,[]
25878,2587800,Alex is Right,0,[]
25879,2587900,Chocolate Gifts,0,[]
25880,2588000,Cupcake Bonuses,0,[]
