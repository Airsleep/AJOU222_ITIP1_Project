PROBLEM_ID,PROBLEM_HASH,PROBLEM_TITLE,PROBLEM_LEVEL,PROBLEM_TAGS
1000,100000,A+B,1,"['implementation', 'arithmetic', 'mathematics']"
1001,100100,A-B,1,"['implementation', 'arithmetic', 'mathematics']"
1002,100200,터렛,8,"['geometry', 'mathematics']"
1003,100300,피보나치 함수,8,['dynamic programming']
1004,100400,어린 왕자,8,"['geometry', 'mathematics']"
1005,100500,ACM Craft,13,"['dynamic programming', 'graph theory', 'topological sorting']"
1006,100600,습격자 초라기,18,['dynamic programming']
1007,100700,벡터 매칭,14,"['bruteforcing', 'mathematics']"
1008,100800,A/B,1,"['implementation', 'arithmetic', 'mathematics']"
1009,100900,분산처리,4,"['implementation', 'mathematics']"
1010,101000,다리 놓기,6,"['combinatorics', 'dynamic programming', 'mathematics']"
1011,101100,Fly me to the Alpha Centauri,11,['mathematics']
1012,101200,유기농 배추,9,"['graph theory', 'graph traversal', 'breadth-first search', 'depth-first search']"
1013,101300,Contact,10,"['regular expression', 'string']"
1014,101400,컨닝,17,"['bitmask', 'dynamic programming', 'maximum flow', 'dynamic programming using bitfield']"
1015,101500,수열 정렬,7,['sorting']
1016,101600,제곱 ㄴㄴ 수,15,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1017,101700,소수 쌍,18,"['bipartite matching', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1018,101800,체스판 다시 칠하기,7,['bruteforcing']
1019,101900,책 페이지,15,['mathematics']
1020,102000,디지털 카운터,18,['dynamic programming']
1021,102100,회전하는 큐,8,"['data structures', 'deque']"
1022,102200,소용돌이 예쁘게 출력하기,12,"['implementation', 'mathematics']"
1023,102300,괄호 문자열,18,"['combinatorics', 'dynamic programming', 'mathematics']"
1024,102400,수열의 합,9,['mathematics']
1025,102500,제곱수 찾기,11,['bruteforcing']
1026,102600,보물,7,"['greedy', 'mathematics', 'sorting']"
1027,102700,고층 건물,11,"['bruteforcing', 'geometry', 'mathematics']"
1028,102800,다이아몬드 광산,16,['dynamic programming']
1029,102900,그림 교환,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1030,103000,프렉탈 평면,13,"['divide and conquer', 'implementation', 'recursion']"
1031,103100,스타 대결,21,['maximum flow']
1032,103200,명령 프롬프트,5,"['implementation', 'string']"
1033,103300,칵테일,14,"['euclidean algorithm', 'graph theory', 'graph traversal', 'mathematics', 'number theory']"
1034,103400,램프,12,"['ad-hoc', 'bruteforcing']"
1035,103500,조각 움직이기,14,"['breadth-first search', 'bitmask', 'bruteforcing', 'graph theory', 'graph traversal']"
1036,103600,36진수,15,"['arbitrary precision / big integers', 'greedy', 'implementation', 'mathematics', 'string']"
1037,103700,약수,5,"['mathematics', 'number theory']"
1038,103800,감소하는 수,11,"['backtracking', 'bruteforcing']"
1039,103900,교환,13,"['breadth-first search', 'graph theory', 'graph traversal']"
1040,104000,정수,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'greedy']"
1041,104100,주사위,11,"['greedy', 'mathematics']"
1042,104200,움,20,"['dynamic programming', 'parsing', 'string']"
1043,104300,거짓말,12,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
1044,104400,팀 선발,18,"['bitmask', 'meet in the middle']"
1045,104500,도로,15,"['graph theory', 'greedy', 'minimum spanning tree']"
1046,104600,그림자,24,"['geometry', 'implementation', 'line segment intersection check', 'sweeping']"
1047,104700,울타리,16,"['bruteforcing', 'greedy']"
1048,104800,유니콘,17,"['dynamic programming', 'prefix sum']"
1049,104900,기타줄,7,"['greedy', 'mathematics']"
1050,105000,물약,15,"['graph theory', 'parsing', 'string']"
1051,105100,숫자 정사각형,7,"['bruteforcing', 'implementation']"
1052,105200,물병,10,"['bitmask', 'greedy', 'implementation', 'mathematics']"
1053,105300,팰린드롬 공장,14,"['bruteforcing', 'dynamic programming']"
1054,105400,팰린드롬 문장,22,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'string']"
1055,105500,끝이없음,18,"['implementation', 'recursion', 'simulation']"
1056,105600,수,19,"['binary search', 'dynamic programming']"
1057,105700,토너먼트,8,"['bruteforcing', 'mathematics']"
1058,105800,친구,8,"['bruteforcing', 'floyd–warshall', 'graph theory', 'graph traversal']"
1059,105900,좋은 구간,7,"['bruteforcing', 'mathematics', 'sorting']"
1060,106000,좋은 수,15,"['data structures', 'mathematics', 'priority queue', 'sorting']"
1061,106100,삼각형,20,"['convex hull', 'geometry']"
1062,106200,가르침,12,"['backtracking', 'bitmask', 'bruteforcing']"
1063,106300,킹,8,"['implementation', 'simulation']"
1064,106400,평행사변형,7,"['geometry', 'mathematics', 'pythagoras theorem']"
1065,106500,한수,7,['bruteforcing']
1066,106600,에이한수,19,"['dynamic programming', 'greedy']"
1067,106700,이동,20,"['fast fourier transform', 'mathematics']"
1068,106800,트리,11,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
1069,106900,집으로,13,"['ad-hoc', 'case work', 'geometry']"
1070,107000,김지민의 침략,20,"['maximum flow', 'max-flow min-cut theorem']"
1071,107100,소트,16,['greedy']
1072,107200,게임,7,"['binary search', 'mathematics']"
1073,107300,도미노,18,"['eulerian path / circuit', 'graph theory', 'mathematics']"
1074,107400,Z,10,"['divide and conquer', 'recursion']"
1075,107500,나누기,4,"['bruteforcing', 'mathematics']"
1076,107600,저항,4,['implementation']
1077,107700,넓이,20,"['convex hull', 'geometry', 'line segment intersection check', 'point in convex polygon check', 'area of a polygon']"
1078,107800,뒤집음,20,"['bruteforcing', 'mathematics']"
1079,107900,마피아,14,['bruteforcing']
1080,108000,행렬,10,['greedy']
1081,108100,합,15,['mathematics']
1082,108200,방 번호,13,"['dynamic programming', 'greedy']"
1083,108300,소트,11,"['greedy', 'sorting']"
1084,108400,방 번호 2,19,"['greedy', 'implementation']"
1085,108500,직사각형에서 탈출,3,"['geometry', 'mathematics']"
1086,108600,박성원,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1087,108700,쥐 잡기,17,['ternary search']
1088,108800,케이크,18,['greedy']
1089,108900,스타트링크 타워,12,"['implementation', 'mathematics', 'probability theory']"
1090,109000,체커,17,['bruteforcing']
1091,109100,카드 섞기,12,"['implementation', 'simulation']"
1092,109200,배,11,"['greedy', 'sorting']"
1093,109300,스티커 수집,18,"['bruteforcing', 'meet in the middle']"
1094,109400,막대기,6,"['bitmask', 'mathematics']"
1095,109500,마법의 구슬,15,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1096,109600,종이 접기,18,['bruteforcing']
1097,109700,마법의 문자열,16,"['bruteforcing', 'knuth–morris–pratt', 'string']"
1098,109800,쌍둥이 마을,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1099,109900,알 수 없는 문장,13,['dynamic programming']
1100,110000,하얀 칸,4,"['implementation', 'string']"
1101,110100,카드 정리 1,12,"['bruteforcing', 'greedy']"
1102,110200,발전소,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1103,110300,게임,14,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
1104,110400,패턴,17,"['case work', 'implementation', 'mathematics', 'string']"
1105,110500,팔,10,"['greedy', 'mathematics']"
1106,110600,호텔,11,"['dynamic programming', 'knapsack']"
1107,110700,리모컨,11,['bruteforcing']
1108,110800,검색 엔진,18,"['data structures', 'graph theory', 'set / map by hashing', 'strongly connected component', 'topological sorting']"
1109,110900,섬,17,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
1110,111000,더하기 사이클,5,"['implementation', 'mathematics']"
1111,111100,IQ Test,13,"['bruteforcing', 'case work', 'implementation', 'mathematics']"
1112,111200,진법 변환,14,"['implementation', 'mathematics', 'number theory']"
1113,111300,수영장 만들기,15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
1114,111400,통나무 자르기,15,"['binary search', 'greedy', 'parametric search']"
1115,111500,순열,15,['graph theory']
1116,111600,순열 2,19,"['graph theory', 'greedy']"
1117,111700,색칠 1,11,"['implementation', 'mathematics']"
1118,111800,색칠 2,19,"['geometry', 'implementation', 'sorting', 'sweeping']"
1119,111900,그래프,15,"['graph theory', 'graph traversal']"
1120,112000,문자열,7,"['bruteforcing', 'string']"
1121,112100,도형,18,"['dynamic programming', 'mathematics']"
1122,112200,뒤집기,17,"['breadth-first search', 'case work', 'graph theory', 'graph traversal', 'mathematics']"
1123,112300,셔플,22,"['exponentiation by squaring', 'mathematics']"
1124,112400,언더프라임,9,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1125,112500,바닥 장식,17,"['case work', 'greedy', 'mathematics']"
1126,112600,같은 탑,18,['dynamic programming']
1127,112700,떡국,22,"['maximum flow', 'max-flow min-cut theorem']"
1128,112800,피보나치 냅색,19,"['backtracking', 'dynamic programming', 'mathematics']"
1129,112900,키,18,"['greedy', 'sorting']"
1130,113000,종이 레이싱,21,"['breadth-first search', 'geometry', 'graph theory', 'graph traversal', 'line segment intersection check']"
1131,113100,숫자,16,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
1132,113200,합,13,['greedy']
1133,113300,반복되지 않는 단어,15,"['backtracking', 'recursion']"
1134,113400,식,21,"['bruteforcing', 'dynamic programming', 'implementation']"
1135,113500,뉴스 전하기,14,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'sorting', 'tree']"
1136,113600,조각 놓기,16,['dynamic programming']
1137,113700,로봇 레이스,17,['dynamic programming']
1138,113800,한 줄로 서기,9,['implementation']
1139,113900,울타리,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1140,114000,요금,18,"['greedy', 'implementation', 'mathematics', 'number theory']"
1141,114100,접두사,9,"['sorting', 'string']"
1142,114200,피자,18,['geometry']
1143,114300,경찰,19,"['graph theory', 'strongly connected component']"
1144,114400,싼 비용,23,"['dynamic programming', 'dynamic programming using connection profile']"
1145,114500,적어도 대부분의 배수,5,['bruteforcing']
1146,114600,지그재그 서기,16,"['combinatorics', 'dynamic programming', 'mathematics']"
1147,114700,BOJ 소풍,18,"['combinatorics', 'geometry', 'mathematics']"
1148,114800,단어 만들기,11,"['implementation', 'string']"
1149,114900,RGB거리,10,['dynamic programming']
1150,115000,백업,22,"['data structures', 'greedy', 'priority queue']"
1151,115100,그림자,17,"['case work', 'geometry', 'geometry; 3d', 'area of a polygon']"
1152,115200,단어의 개수,4,"['implementation', 'string']"
1153,115300,네 개의 소수,12,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1154,115400,팀 편성,16,"['graph theory', 'graph traversal']"
1155,115500,변형 하노이,17,"['ad-hoc', 'dynamic programming']"
1156,115600,장난감,21,"['data structures', 'deque', 'greedy', 'ternary search']"
1157,115700,단어 공부,5,"['implementation', 'string']"
1158,115800,요세푸스 문제,7,"['data structures', 'queue']"
1159,115900,농구 경기,4,"['implementation', 'string']"
1160,116000,Random Number Generator,16,"['exponentiation by squaring', 'mathematics']"
1161,116100,버스,19,"['data structures', 'greedy', 'segment tree with lazy propagation', 'segment tree']"
1162,116200,도로포장,15,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
1163,116300,증가하는 리스트,21,"['dynamic programming', 'implementation', 'string']"
1164,116400,가리기,20,"['ad-hoc', 'backtracking', 'greedy']"
1165,116500,단어퍼즐,22,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'hashing', 'heuristics', 'parsing', 'precomputation', 'string', 'tree', 'trie']"
1166,116600,선물,8,['binary search']
1167,116700,트리의 지름,14,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
1168,116800,요세푸스 문제 2,18,"['data structures', 'segment tree']"
1169,116900,정사각형 진열,15,"['geometry', 'greedy']"
1170,117000,선인장의 개수,18,"['cactus', 'depth-first search', 'graph theory', 'graph traversal']"
1171,117100,사오정,20,['dynamic programming']
1172,117200,선인장 Automorphisms,24,[]
1173,117300,운동,4,"['implementation', 'simulation']"
1174,117400,줄어드는 수,11,"['backtracking', 'bruteforcing']"
1175,117500,배달,15,"['breadth-first search', 'graph theory', 'graph traversal']"
1176,117600,섞기,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1177,117700,조쌤포스,16,"['case work', 'geometry', 'mathematics', 'sweeping']"
1178,117800,간선 추가,16,"['eulerian path / circuit', 'graph theory']"
1179,117900,마지막 요세푸스 문제,19,"['dynamic programming', 'mathematics', 'recursion']"
1180,118000,선인장의 지름,23,"['biconnected component', 'cactus', 'data structures', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
1181,118100,단어 정렬,6,"['sorting', 'string']"
1182,118200,부분수열의 합,9,"['backtracking', 'bruteforcing']"
1183,118300,약속,8,"['mathematics', 'sorting']"
1184,118400,귀농,15,"['bruteforcing', 'data structures', 'set / map by hashing', 'prefix sum']"
1185,118500,유럽여행,17,"['graph theory', 'minimum spanning tree']"
1186,118600,직사각형 색칠하기,12,"['case work', 'greedy', 'sorting']"
1187,118700,숫자 놀이,21,"['constructive', 'divide and conquer', 'mathematics']"
1188,118800,음식 평론가,11,"['euclidean algorithm', 'mathematics', 'number theory']"
1189,118900,컴백홈,10,"['backtracking', 'bruteforcing', 'graph theory', 'graph traversal']"
1190,119000,골 세레모니,23,[]
1191,119100,게임,21,"['breadth-first search', 'data structures', 'dynamic programming', 'game theory', 'graph theory', 'graph traversal', 'set / map by hashing', 'set / map by trees']"
1192,119200,장갑,23,['mathematics']
1193,119300,분수찾기,5,"['implementation', 'mathematics']"
1194,119400,"달이 차오른다, 가자.",15,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
1195,119500,킥다운,11,"['bruteforcing', 'implementation']"
1196,119600,잭 바우어,22,"['arbitrary precision / big integers', 'calculus', 'mathematics', 'numerical analysis']"
1197,119700,최소 스패닝 트리,12,"['graph theory', 'minimum spanning tree']"
1198,119800,삼각형으로 자르기,9,"['bruteforcing', 'geometry', 'mathematics']"
1199,119900,오일러 회로,17,"['depth-first search', 'eulerian path / circuit', 'graph theory', 'graph traversal']"
1200,120000,기상예측,17,"['binary search', 'bruteforcing', 'dynamic programming', 'prefix sum']"
1201,120100,NMK,18,"['constructive', 'greedy', 'mathematics']"
1202,120200,보석 도둑,14,"['data structures', 'greedy', 'priority queue', 'sorting']"
1203,120300,게임,16,['mathematics']
1204,120400,팰린드롬의 개수,21,['dynamic programming']
1205,120500,등수 구하기,7,['implementation']
1206,120600,사람의 수,8,"['bruteforcing', 'mathematics']"
1207,120700,종이 자르기,14,"['backtracking', 'implementation']"
1208,120800,부분수열의 합 2,15,"['binary search', 'meet in the middle']"
1209,120900,단조수열 만들기,17,['dynamic programming']
1210,121000,마피아,20,"['maximum flow', 'max-flow min-cut theorem']"
1211,121100,보일의 법칙,21,"['dynamic programming', 'mathematics', 'number theory']"
1212,121200,8진수 2진수,4,"['implementation', 'mathematics', 'string']"
1213,121300,팰린드롬 만들기,8,"['greedy', 'implementation', 'string']"
1214,121400,쿨한 물건 구매,16,"['bruteforcing', 'mathematics', 'number theory']"
1215,121500,잘못 작성한 요세푸스 코드,17,"['mathematics', 'number theory']"
1217,121700,하우스 M.D.,17,"['2-sat', 'graph theory', 'strongly connected component']"
1218,121800,로봇,25,"['value / coordinate compression', 'data structures', 'geometry', 'implementation', 'segment tree with lazy propagation', 'longest increasing sequence in o(n log n)', 'area of a polygon', 'segment tree', 'stack', 'sweeping']"
1219,121900,오민식의 고민,15,"['bellman–ford', 'graph theory', 'graph traversal']"
1220,122000,MEGACITY,19,"['value / coordinate compression', ""dijkstra's"", 'graph theory', 'graph traversal']"
1221,122100,가까운 점,19,"['data structures', 'divide and conquer', 'geometry', 'geometry; 3d', 'set / map by hashing', 'randomization', 'sorting', 'sweeping']"
1222,122200,홍준 프로그래밍 대회,14,"['mathematics', 'number theory']"
1223,122300,마법의 돌,0,[]
1224,122400,분수,20,"['extended euclidean algorithm', 'mathematics', 'number theory']"
1225,122500,이상한 곱셈,4,"['implementation', 'mathematics', 'string']"
1226,122600,국회,17,"['dynamic programming', 'greedy', 'knapsack']"
1227,122700,그녀의 마음,19,"['ad-hoc', 'breadth-first search', 'case work', 'graph theory', 'graph traversal', 'mathematics']"
1228,122800,전쟁,17,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'set / map by hashing', 'knapsack', 'tree']"
1229,122900,육각수,12,"['dynamic programming', 'mathematics', 'precomputation']"
1230,123000,문자열 거리,15,['dynamic programming']
1231,123100,주식왕 동호,15,"['dynamic programming', 'knapsack']"
1232,123200,체스,22,"['ad-hoc', 'bruteforcing', 'graph theory', 'graph traversal']"
1233,123300,주사위,4,"['bruteforcing', 'implementation']"
1234,123400,크리스마스 트리,14,"['combinatorics', 'dynamic programming', 'mathematics']"
1235,123500,학생 번호,7,"['implementation', 'string']"
1236,123600,성 지키기,5,['implementation']
1237,123700,정ㅋ벅ㅋ,0,[]
1238,123800,파티,13,"[""dijkstra's"", 'graph theory']"
1239,123900,차트,11,['bruteforcing']
1240,124000,노드사이의 거리,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
1241,124100,머리 톡톡,11,"['mathematics', 'number theory', 'primality test']"
1242,124200,소풍,14,"['mathematics', 'number theory']"
1243,124300,팰린드롬,22,['dynamic programming']
1244,124400,스위치 켜고 끄기,7,"['implementation', 'simulation']"
1245,124500,농장 관리,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
1246,124600,온라인 판매,7,"['greedy', 'sorting']"
1247,124700,부호,3,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
1248,124800,Guess,13,"['backtracking', 'bruteforcing']"
1249,124900,워드똑똑,18,"['case work', 'combinatorics', 'dynamic programming', 'exponentiation by squaring', 'inclusion and exclusion', 'mathematics', 'number theory']"
1250,125000,색칠된 공들,24,"['data structures', 'priority queue']"
1251,125100,단어 나누기,6,"['bruteforcing', 'implementation', 'sorting', 'string']"
1252,125200,이진수 덧셈,4,"['arithmetic', 'implementation', 'mathematics']"
1253,125300,좋다,12,"['binary search', 'data structures', 'set / map by hashing', 'sorting', 'two-pointer']"
1254,125400,팰린드롬 만들기,9,"['bruteforcing', 'string']"
1255,125500,전쟁 - 선전포고,17,"[""dijkstra's"", 'graph theory']"
1256,125600,사전,14,"['combinatorics', 'dynamic programming', 'mathematics']"
1257,125700,엄청난 부자,20,"[""dijkstra's"", 'dynamic programming', 'graph theory', 'mathematics']"
1258,125800,문제 할당,18,"['maximum flow', 'minimum cost maximum flow']"
1259,125900,팰린드롬수,5,"['implementation', 'string']"
1260,126000,DFS와 BFS,9,"['graph theory', 'graph traversal', 'breadth-first search', 'depth-first search']"
1261,126100,알고스팟,12,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
1262,126200,알파벳 다이아몬드,9,['implementation']
1263,126300,시간 관리,10,"['greedy', 'sorting']"
1264,126400,모음의 개수,2,"['implementation', 'string']"
1265,126500,순열,18,"['arbitrary precision / big integers', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1266,126600,일어나!,23,"['geometry', 'line segment intersection check', 'sweeping']"
1267,126700,핸드폰 요금,3,"['arithmetic', 'mathematics']"
1268,126800,임시 반장 정하기,5,['implementation']
1269,126900,대칭 차집합,7,"['data structures', 'set / map by hashing', 'set / map by trees']"
1270,127000,전쟁 - 땅따먹기,8,"['data structures', 'implementation', 'boyer–moore majority vote', 'set / map by trees']"
1271,127100,엄청난 부자2,1,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
1272,127200,특별 노드,14,"['dynamic programming', 'dynamic programming on trees', 'tree']"
1273,127300,샷,18,"['data structures', 'prefix sum', 'segment tree']"
1274,127400,커피숍1,0,[]
1275,127500,커피숍2,15,"['segment tree', 'data structures']"
1276,127600,PLATFORME,10,['sorting']
1277,127700,발전소 설치,12,"[""dijkstra's"", 'graph theory']"
1278,127800,연극,13,"['mathematics', 'recursion']"
1279,127900,내멋대로 주사위,15,"['combinatorics', 'dynamic programming', 'knapsack', 'mathematics']"
1280,128000,나무 심기,17,"['data structures', 'segment tree']"
1281,128100,보석상,22,"['duality', 'maximum flow', 'hungarian', 'linear programming', 'minimum cost maximum flow']"
1282,128200,P-수열,20,['dynamic programming']
1283,128300,단축키 지정,9,"['implementation', 'string']"
1284,128400,집 주소,3,"['arithmetic', 'implementation', 'mathematics']"
1285,128500,동전 뒤집기,14,"['bitmask', 'bruteforcing', 'greedy']"
1286,128600,부분 직사각형,10,"['combinatorics', 'mathematics']"
1287,128700,할 수 있다,15,"['arithmetic', 'case work', 'implementation', 'mathematics', 'parsing', 'string']"
1288,128800,전쟁 - 국지전,21,[]
1289,128900,트리의 가중치,18,"['dynamic programming', 'dynamic programming on trees', 'mathematics', 'tree']"
1290,129000,배럭,20,"['bruteforcing', 'greedy', 'implementation', 'mathematics', 'simulation']"
1291,129100,이면수와 임현수,8,"['case work', 'implementation', 'mathematics', 'number theory', 'primality test']"
1292,129200,쉽게 푸는 문제,5,"['implementation', 'mathematics']"
1293,129300,생물농축,18,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'knapsack', 'topological sorting']"
1294,129400,문자열 장식,18,"['greedy', 'sorting', 'string']"
1295,129500,평면도,24,[]
1296,129600,팀 이름 정하기,5,"['implementation', 'string']"
1297,129700,TV 크기,4,"['pythagoras theorem', 'geometry']"
1298,129800,노트북의 주인을 찾아서,17,['bipartite matching']
1299,129900,전쟁 - 탈출편2,17,"[""dijkstra's"", 'graph theory']"
1300,130000,K번째 수,14,"['binary search', 'parametric search']"
1301,130100,비즈 공예,13,['dynamic programming']
1302,130200,베스트셀러,7,"['data structures', 'set / map by hashing', 'sorting', 'string']"
1303,130300,전쟁 - 전투,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
1304,130400,지역,12,"['bruteforcing', 'graph theory', 'graph traversal']"
1305,130500,광고,17,"['knuth–morris–pratt', 'string']"
1306,130600,달려라 홍준,16,"['data structures', 'segment tree', 'sliding window']"
1307,130700,마방진,17,"['ad-hoc', 'implementation', 'mathematics']"
1308,130800,D-Day,6,['implementation']
1309,130900,동물원,10,['dynamic programming']
1310,131000,달리기 코스,18,"['convex hull', 'geometry', 'rotating calipers']"
1311,131100,할 일 정하기 1,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1312,131200,소수,6,['mathematics']
1314,131400,동굴 탐험,19,"['bitmask', ""dijkstra's"", 'dynamic programming', 'dynamic programming using bitfield', 'graph theory']"
1315,131500,RPG,18,['dynamic programming']
1316,131600,그룹 단어 체커,6,"['implementation', 'string']"
1317,131700,그룹 단어,0,[]
1318,131800,포커,13,"['bruteforcing', 'case work', 'implementation', 'precomputation']"
1319,131900,지민 vs 한수,13,"['geometry', 'sweeping']"
1321,132100,군인,17,"['binary search', 'data structures', 'segment tree']"
1322,132200,X와 K,12,"['bitmask', 'mathematics']"
1323,132300,숫자 연결하기,12,"['mathematics', 'number theory', 'pigeonhole principle']"
1324,132400,젠장,14,['dynamic programming']
1325,132500,효율적인 해킹,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
1326,132600,폴짝폴짝,9,"['breadth-first search', 'graph theory', 'graph traversal']"
1327,132700,소트 게임,11,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'set / map by trees']"
1328,132800,고층 빌딩,16,"['combinatorics', 'dynamic programming', 'mathematics']"
1329,132900,증가 수열,15,[]
1330,133000,두 수 비교하기,1,['implementation']
1331,133100,나이트 투어,6,"['implementation', 'simulation']"
1332,133200,풀자,13,['bruteforcing']
1333,133300,부재중 전화,4,"['implementation', 'simulation']"
1334,133400,다음 팰린드롬 수,11,[]
1335,133500,여섯 쌍 서로소,24,"['chinese remainder theorem', 'discrete logarithm', 'fast fourier transform', 'mathematics', 'möbius inversion', 'number theory']"
1336,133600,수열의 개수 NKD,17,"['dynamic programming', 'prefix sum']"
1337,133700,올바른 배열,7,"['implementation', 'sorting', 'two-pointer']"
1338,133800,알 수 없는 번호,12,"['case work', 'mathematics']"
1339,133900,단어 수학,12,['greedy']
1340,134000,연도 진행바,6,"['implementation', 'parsing', 'string']"
1341,134100,사이좋은 형제,13,"['implementation', 'mathematics']"
1342,134200,행운의 문자열,10,['bruteforcing']
1343,134300,폴리오미노,6,['greedy']
1344,134400,축구,12,"['combinatorics', 'dynamic programming', 'mathematics', 'probability theory']"
1345,134500,등차수열,14,"['arbitrary precision / big integers', 'mathematics', 'parametric search']"
1346,134600,탑을 향해서,18,"['dynamic programming', 'graph theory', 'strongly connected component']"
1347,134700,미로 만들기,8,"['implementation', 'simulation']"
1348,134800,주차장,19,"['breadth-first search', 'binary search', 'bipartite matching', 'graph theory', 'graph traversal']"
1349,134900,건축가의 나라,0,[]
1350,135000,진짜 공간,4,"['arithmetic', 'mathematics']"
1351,135100,무한 수열,11,"['data structures', 'dynamic programming', 'set / map by hashing']"
1352,135200,문자열,15,"['backtracking', 'greedy']"
1353,135300,합과 곱,16,['mathematics']
1354,135400,무한 수열 2,11,"['data structures', 'dynamic programming', 'set / map by hashing', 'set / map by trees']"
1355,135500,구멍난 케이크 자르기,14,"['depth-first search', 'graph theory', 'graph traversal', 'implementation', 'mathematics']"
1356,135600,유진수,5,"['arithmetic', 'implementation', 'mathematics', 'string']"
1357,135700,뒤집힌 덧셈,4,"['implementation', 'string']"
1358,135800,하키,7,['geometry']
1359,135900,복권,7,"['bruteforcing', 'combinatorics', 'mathematics', 'probability theory']"
1360,136000,되돌리기,11,['implementation']
1361,136100,두 스트링 마스크,0,[]
1362,136200,펫,4,['implementation']
1363,136300,트리,0,[]
1364,136400,울타리 치기,11,['mathematics']
1365,136500,꼬인 전깃줄,14,"['binary search', 'longest increasing sequence in o(n log n)']"
1366,136600,기타 코드,0,[]
1367,136700,타브 악보,0,[]
1368,136800,물대기,14,"['graph theory', 'minimum spanning tree']"
1369,136900,배열값,16,"['dynamic programming', 'greedy', 'mathematics']"
1370,137000,전쟁 - 화계가 아닌 수계,22,[]
1371,137100,가장 많은 글자,4,"['implementation', 'string']"
1372,137200,단어 합치기,19,"['breadth-first search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal', 'string']"
1373,137300,2진수 8진수,5,"['mathematics', 'string']"
1374,137400,강의실,11,"['data structures', 'greedy', 'priority queue', 'sorting']"
1375,137500,나이,14,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'string']"
1376,137600,민식우선탐색,18,"['binary search', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'segment tree']"
1377,137700,버블 소트,14,['sorting']
1378,137800,증가 수열,0,[]
1379,137900,강의실 2,13,"['data structures', 'greedy', 'priority queue', 'sorting']"
1380,138000,귀걸이,6,"['implementation', 'string']"
1381,138100,요구르트의 유통기한,0,[]
1384,138400,메시지,6,['implementation']
1385,138500,벌집,16,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
1386,138600,f와 g,25,"['divide and conquer', 'fast fourier transform', 'mathematics']"
1387,138700,행렬 교환,0,[]
1388,138800,바닥 장식,8,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
1389,138900,케빈 베이컨의 6단계 법칙,10,"['breadth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
1390,139000,테트리스,19,"['bitmask', 'case work', 'dynamic programming', 'dynamic programming using bitfield', 'implementation']"
1391,139100,종이접기,19,"['ad-hoc', 'data structures', 'sorting', 'stack']"
1392,139200,노래 악보,4,['implementation']
1393,139300,음하철도 구구팔,10,"['bruteforcing', 'mathematics']"
1394,139400,암호,11,"['combinatorics', 'data structures', 'set / map by hashing', 'mathematics', 'string']"
1395,139500,스위치,18,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
1396,139600,크루스칼의 공,20,"['binary search', 'data structures', 'disjoint set', 'graph theory', 'lowest common ancestor', 'minimum spanning tree', 'parallel binary search', 'tree']"
1397,139700,인화철도 구구칠,0,[]
1398,139800,동전 문제,14,"['dynamic programming', 'greedy']"
1399,139900,보물의 위치,16,"['ad-hoc', 'mathematics', 'number theory']"
1400,140000,화물차,14,"[""dijkstra's"", 'graph theory', 'graph traversal', 'implementation']"
1401,140100,요컨대 형택이의 사탕봉지,0,[]
1402,140200,아무래도이문제는A번난이도인것같다,6,"['ad-hoc', 'constructive', 'mathematics']"
1404,140400,토너먼트 승자,8,"['bruteforcing', 'mathematics', 'probability theory']"
1405,140500,미친 로봇,11,"['backtracking', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics']"
1406,140600,에디터,9,"['data structures', 'linked list', 'stack']"
1407,140700,2로 몇 번 나누어질까,12,['mathematics']
1408,140800,24,4,"['arithmetic', 'implementation', 'mathematics']"
1409,140900,점 칠하기,15,['bruteforcing']
1410,141000,패턴의 개수,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'inclusion and exclusion']"
1411,141100,비슷한 단어,8,"['bruteforcing', 'string']"
1412,141200,일방통행,17,"['graph theory', 'topological sorting']"
1413,141300,박스 안의 열쇠,17,"['combinatorics', 'dynamic programming', 'mathematics']"
1414,141400,불우이웃돕기,13,"['graph theory', 'minimum spanning tree', 'string']"
1415,141500,사탕,14,"['dynamic programming', 'knapsack', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1416,141600,팬 서비스,17,['dynamic programming']
1417,141700,국회의원 선거,6,"['data structures', 'greedy', 'implementation', 'priority queue', 'simulation']"
1418,141800,K-세준수,6,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1419,141900,등차수열의 합,11,"['ad-hoc', 'case work', 'mathematics']"
1420,142000,학교 가지마!,19,"['maximum flow', 'max-flow min-cut theorem']"
1421,142100,나무꾼 이다솜,9,"['bruteforcing', 'implementation']"
1422,142200,숫자의 신,17,"['greedy', 'sorting']"
1423,142300,원숭이 키우기,12,['dynamic programming']
1424,142400,새 앨범,14,['mathematics']
1425,142500,원숭이 땅을 옮기다,14,"['binary search', 'ternary search']"
1426,142600,카드 넣기,18,"['data structures', 'greedy', 'sorting', 'set / map by trees']"
1427,142700,소트인사이드,6,"['sorting', 'string']"
1428,142800,다각형의 개수,0,[]
1429,142900,결혼,12,['bruteforcing']
1430,143000,공격,12,"['breadth-first search', 'graph theory', 'graph traversal']"
1431,143100,시리얼 번호,8,['sorting']
1432,143200,그래프 수정,17,"['data structures', 'graph theory', 'priority queue', 'topological sorting']"
1433,143300,화학 실험,15,[]
1434,143400,책 정리,4,"['arithmetic', 'implementation', 'mathematics']"
1435,143500,네 점,14,['geometry']
1436,143600,영화감독 숌,6,['bruteforcing']
1437,143700,수 분해,12,"['greedy', 'mathematics']"
1438,143800,가장 작은 직사각형,13,"['geometry', 'two-pointer']"
1439,143900,뒤집기,6,"['greedy', 'string']"
1440,144000,타임머신,4,['bruteforcing']
1441,144100,나누어 질까,15,"['euclidean algorithm', 'inclusion and exclusion', 'mathematics', 'number theory']"
1442,144200,멋진 수,19,['dynamic programming']
1443,144300,망가진 계산기,15,['bruteforcing']
1444,144400,숌 언어,19,['bipartite matching']
1445,144500,일요일 아침의 데이트,14,"['data structures', ""dijkstra's"", 'graph theory']"
1446,144600,지름길,10,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
1447,144700,보호 천막,0,[]
1448,144800,삼각형 만들기,8,"['greedy', 'mathematics', 'sorting']"
1449,144900,수리공 항승,8,"['greedy', 'sorting']"
1450,145000,냅색문제,15,"['binary search', 'meet in the middle']"
1451,145100,직사각형으로 나누기,11,"['bruteforcing', 'case work', 'prefix sum']"
1452,145200,숌 크로스워드,0,[]
1453,145300,피시방 알바,4,['implementation']
1454,145400,세비 게임,0,[]
1455,145500,뒤집기 II,9,['greedy']
1456,145600,거의 소수,11,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1457,145700,정확해,15,['mathematics']
1458,145800,종이 겹치기,0,[]
1459,145900,걷기,7,"['case work', 'mathematics']"
1460,146000,진욱이의 농장,13,"['binary search', 'bruteforcing', 'prefix sum']"
1461,146100,도서관,11,"['greedy', 'sorting']"
1462,146200,퀴즈쇼,17,"['dynamic programming', 'prefix sum']"
1463,146300,1로 만들기,8,['dynamic programming']
1464,146400,뒤집기 3,11,"['data structures', 'deque', 'greedy', 'string']"
1465,146500,배열 고치기,0,[]
1466,146600,그림 고치기,0,[]
1467,146700,수 지우기,19,['greedy']
1468,146800,네트워크,0,[]
1469,146900,숌 사이 수열,11,"['backtracking', 'bruteforcing']"
1470,147000,올림픽 게임,13,"['greedy', 'implementation', 'simulation']"
1471,147100,사탕 돌리기,16,"['depth-first search', 'graph theory', 'graph traversal', 'strongly connected component']"
1472,147200,전화번호,0,[]
1473,147300,미로 탈출,16,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
1474,147400,밑 줄,10,"['bruteforcing', 'greedy', 'string']"
1475,147500,방 번호,6,['implementation']
1476,147600,날짜 계산,6,"['bruteforcing', 'mathematics', 'number theory']"
1477,147700,휴게소 세우기,12,"['binary search', 'parametric search']"
1478,147800,정사각형,0,[]
1479,147900,네 부분문자열,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1480,148000,보석 모으기,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1481,148100,숌 사각형,13,['backtracking']
1482,148200,같은 자리 수,19,"['backtracking', 'dynamic programming', 'greedy']"
1483,148300,저항,0,[]
1484,148400,다이어트,11,"['mathematics', 'number theory', 'two-pointer']"
1485,148500,정사각형,8,"['geometry', 'sorting']"
1486,148600,등산,14,"[""dijkstra's"", 'floyd–warshall', 'graph theory']"
1487,148700,물건 팔기,7,['bruteforcing']
1488,148800,숌트링,12,"['ad-hoc', 'case work']"
1489,148900,대결,15,"['dynamic programming', 'greedy']"
1490,149000,자리수로 나누기,11,"['bruteforcing', 'mathematics']"
1491,149100,나선,7,"['implementation', 'simulation']"
1492,149200,합,19,"['combinatorics', 'dynamic programming', 'exponentiation by squaring', 'mathematics', 'modular multiplicative inverse', 'number theory']"
1493,149300,박스 채우기,13,"['divide and conquer', 'greedy', 'mathematics']"
1494,149400,절댓값 수열,20,"['case work', 'mathematics', 'number theory']"
1495,149500,기타리스트,10,['dynamic programming']
1496,149600,기타 고르기,0,[]
1497,149700,기타콘서트,9,"['bitmask', 'bruteforcing', 'combinatorics', 'mathematics']"
1498,149800,주기문,17,"['knuth–morris–pratt', 'string']"
1499,149900,뒤집기 수열,15,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'string', 'set / map by trees']"
1500,150000,최대 곱,9,['mathematics']
1501,150100,영어 읽기,11,"['data structures', 'set / map by hashing', 'parsing', 'string']"
1502,150200,숫자 퍼즐 ≤ 8,17,"['backtracking', 'case work', 'constructive', 'implementation', 'mathematics']"
1503,150300,세 수 고르기,9,['bruteforcing']
1504,150400,특정한 최단 경로,12,"[""dijkstra's"", 'graph theory']"
1505,150500,불 켜기,17,"['bitmask', 'bruteforcing', 'greedy']"
1506,150600,경찰서,16,"['graph theory', 'strongly connected component']"
1507,150700,궁금한 민호,14,"['floyd–warshall', 'graph theory']"
1508,150800,레이스,15,"['binary search', 'greedy', 'parametric search']"
1509,150900,팰린드롬 분할,15,['dynamic programming']
1510,151000,이등변 삼각형,16,"['bruteforcing', 'combinatorics', 'mathematics']"
1511,151100,숫자 만들기,16,"['ad-hoc', 'greedy']"
1512,151200,주기문으로 바꾸기,11,"['bruteforcing', 'greedy', 'string']"
1513,151300,경로 찾기,14,['dynamic programming']
1514,151400,자물쇠,18,['dynamic programming']
1515,151500,수 이어 쓰기,8,"['bruteforcing', 'greedy', 'implementation', 'string']"
1516,151600,게임 개발,13,"['dynamic programming', 'graph theory', 'topological sorting']"
1517,151700,버블 소트,16,"['data structures', 'divide and conquer', 'segment tree', 'sorting']"
1518,151800,뉴 매직 스퀘어,20,"['bipartite matching', 'greedy']"
1519,151900,부분 문자열 뽑기 게임,13,"['dynamic programming', 'game theory', 'string']"
1520,152000,내리막 길,13,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
1521,152100,랜덤 소트,17,"['dynamic programming', 'mathematics']"
1522,152200,문자열 교환,11,"['bruteforcing', 'sliding window']"
1523,152300,종점,18,"['bruteforcing', 'graph theory']"
1524,152400,세준세비,5,"['implementation', 'simulation']"
1525,152500,퍼즐,14,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal']"
1526,152600,가장 큰 금민수,5,"['bruteforcing', 'implementation', 'mathematics']"
1527,152700,금민수의 개수,10,['bruteforcing']
1528,152800,금민수의 합,12,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
1529,152900,동민 수열,16,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
1530,153000,금민수의 합,19,"['backtracking', 'dynamic programming', 'greedy']"
1531,153100,투명,6,"['implementation', 'simulation']"
1532,153200,동전 교환,15,['case work']
1533,153300,길의 개수,18,"['exponentiation by squaring', 'graph theory', 'mathematics']"
1534,153400,다각형 자르기,17,['dynamic programming']
1535,153500,안녕,9,"['bruteforcing', 'dynamic programming', 'knapsack']"
1536,153600,"Dance, Dance",18,['maximum flow']
1537,153700,새로운 연산자,16,"[""dijkstra's"", 'graph theory']"
1538,153800,공 칠하기,21,"['combinatorics', 'gaussian elimination', 'linear algebra', 'mathematics']"
1539,153900,이진 검색 트리,17,"['data structures', 'tree', 'set / map by trees']"
1540,154000,정사각형의 개수,13,['mathematics']
1541,154100,잃어버린 괄호,9,"['greedy', 'mathematics', 'parsing', 'string']"
1542,154200,체스 연습,19,"['game theory', 'implementation', 'sprague–grundy theorem']"
1543,154300,문서 검색,7,"['bruteforcing', 'greedy', 'string']"
1544,154400,사이클 단어,7,"['bruteforcing', 'data structures', 'set / map by hashing', 'implementation', 'string']"
1545,154500,안티 팰린드롬,14,"['constructive', 'greedy']"
1546,154600,평균,5,"['arithmetic', 'mathematics']"
1547,154700,공,3,"['implementation', 'simulation']"
1548,154800,부분 삼각 수열,11,"['bruteforcing', 'greedy', 'sorting']"
1549,154900,K,12,"['data structures', 'prefix sum', 'set / map by trees']"
1550,155000,16진수,4,"['mathematics', 'implementation']"
1551,155100,수열의 변화,5,"['implementation', 'mathematics', 'parsing', 'simulation', 'string']"
1552,155200,도미노,10,"['backtracking', 'bruteforcing', 'permutation cycle decomposition']"
1553,155300,도미노 찾기,10,"['backtracking', 'implementation']"
1554,155400,나무 심기,21,"['combinatorics', 'mathematics']"
1555,155500,소수 만들기,16,"['bruteforcing', 'dynamic programming', 'mathematics', 'number theory', 'primality test']"
1556,155600,도미노2,18,"['gaussian elimination', 'linear algebra', 'mathematics']"
1557,155700,제곱 ㄴㄴ,21,"['binary search', 'inclusion and exclusion', 'mathematics', 'number theory']"
1558,155800,그림의 개수,0,"['data structures', 'disjoint set', 'geometry', 'graph theory', 'graph traversal', 'line segment intersection check']"
1559,155900,놀라운 미로,16,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
1560,156000,비숍,8,"['ad-hoc', 'arbitrary precision / big integers']"
1561,156100,놀이 공원,14,"['binary search', 'parametric search']"
1562,156200,계단 수,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1563,156300,개근상,12,['dynamic programming']
1564,156400,팩토리얼5,9,"['mathematics', 'number theory']"
1565,156500,수학,13,"['euclidean algorithm', 'mathematics', 'number theory']"
1566,156600,P배열,13,['bruteforcing']
1567,156700,모든 사이클의 길이,0,[]
1568,156800,새,4,"['implementation', 'mathematics']"
1569,156900,정사각형으로 가리기,8,['implementation']
1570,157000,오세준,11,['implementation']
1571,157100,단어 굴리기,15,"['chinese remainder theorem', 'mathematics', 'number theory']"
1572,157200,중앙값,16,"['binary search', 'data structures', 'segment tree']"
1573,157300,트리 인코딩,18,"['dynamic programming', 'recursion']"
1574,157400,룩 어택,18,['bipartite matching']
1575,157500,졸업,19,"['bipartite matching', 'maximum flow']"
1576,157600,DNA점수,10,"['greedy', 'sorting']"
1577,157700,도로의 개수,11,['dynamic programming']
1578,157800,세계 정복,14,"['binary search', 'parametric search']"
1579,157900,보물 찾기,0,[]
1580,158000,위치 바꾸기,13,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
1581,158100,락스타 락동호,12,['case work']
1582,158200,아티스트 이동호,17,"['dynamic programming', 'implementation', 'knapsack']"
1583,158300,이동호의 트럭,0,[]
1584,158400,게임,11,"['0-1 bfs', ""dijkstra's"", 'graph theory', 'graph traversal']"
1585,158500,경찰,18,"['maximum flow', 'minimum cost maximum flow']"
1586,158600,목장,18,"['articulation points and bridges', 'graph theory']"
1587,158700,이분 매칭,15,['greedy']
1588,158800,수열,15,"['divide and conquer', 'recursion']"
1589,158900,레이저,0,[]
1590,159000,캠프가는 영식,7,"['binary search', 'bruteforcing', 'mathematics']"
1591,159100,수열 복원,20,"['eulerian path / circuit', 'graph theory']"
1592,159200,영식이와 친구들,4,"['implementation', 'simulation']"
1593,159300,문자 해독,11,"['sliding window', 'string']"
1594,159400,전화번호 만들기,14,"['backtracking', 'dynamic programming']"
1595,159500,북쪽나라의 도로,12,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
1596,159600,영식함수,0,[]
1597,159700,아스키 아트,0,[]
1598,159800,꼬리를 무는 숫자 나열,3,"['arithmetic', 'mathematics']"
1599,159900,민식어,11,"['sorting', 'string']"
1600,160000,말이 되고픈 원숭이,13,"['breadth-first search', 'graph theory', 'graph traversal']"
1601,160100,바이너리 파워 비숍,16,"['ad-hoc', 'backtracking', 'graph theory', 'graph traversal']"
1602,160200,도망자 원숭이,17,"['floyd–warshall', 'graph theory']"
1603,160300,작은 정사각형,19,"['dynamic programming', 'game theory', 'sprague–grundy theorem']"
1604,160400,정사각형 자르기,17,"['geometry', 'line segment intersection check']"
1605,160500,반복 부분문자열,18,"['hashing', 'rabin–karp', 'string', 'suffix array and lcp array']"
1606,160600,침투 계획 세우기,7,"['ad-hoc', 'case work', 'mathematics']"
1607,160700,원숭이 타워,13,"['dynamic programming', 'mathematics']"
1608,160800,스타 대회,22,"['data structures', 'disjoint set', 'graph theory', 'strongly connected component', 'topological sorting']"
1609,160900,차의 공격,18,"['dynamic programming', 'prefix sum', 'sorting']"
1610,161000,프로게이머 영식,0,[]
1611,161100,강강술래,0,[]
1612,161200,가지고 노는 1,11,"['mathematics', 'number theory']"
1613,161300,역사,13,"['floyd–warshall', 'graph theory']"
1614,161400,영식이의 손가락,8,"['arithmetic', 'case work', 'implementation', 'mathematics']"
1615,161500,교차개수세기,14,"['data structures', 'segment tree', 'sorting']"
1616,161600,드럼통 메시지,23,"['eulerian path / circuit', 'graph theory']"
1617,161700,허후민,19,"['value / coordinate compression', 'implementation', 'sweeping']"
1618,161800,구역 나누기,0,[]
1619,161900,점 고르기,14,"['geometry', 'sorting']"
1620,162000,나는야 포켓몬 마스터 이다솜,7,"['data structures', 'set / map by hashing']"
1621,162100,조삼모사,13,['dynamic programming']
1622,162200,공통 순열,7,"['sorting', 'string']"
1623,162300,신년 파티,15,"['dynamic programming', 'dynamic programming on trees', 'tree']"
1624,162400,데크 소트,20,"['greedy', 'sorting']"
1625,162500,조명기구,14,"['ad-hoc', 'bruteforcing', 'implementation', 'simulation']"
1626,162600,두 번째로 작은 스패닝 트리,22,"['data structures', 'graph theory', 'lowest common ancestor', 'minimum spanning tree', 'sparse table', 'tree']"
1627,162700,결투,20,"['game theory', 'sprague–grundy theorem']"
1628,162800,수,24,"['dynamic programming', 'greedy']"
1629,162900,곱셈,10,"['exponentiation by squaring', 'mathematics']"
1630,163000,오민식,12,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1631,163100,오영식의 보물,12,"['combinatorics', 'implementation', 'mathematics', 'recursion']"
1632,163200,Line Fighter,19,"['implementation', 'mathematics', 'sorting']"
1633,163300,최고의 팀 만들기,11,['dynamic programming']
1634,163400,완전 이진트리,12,[]
1635,163500,1 또는 -1,16,"['ad-hoc', 'constructive']"
1636,163600,한번 열면 멈출 수 없어,11,"['ad-hoc', 'greedy']"
1637,163700,날카로운 눈,17,"['binary search', 'parametric search']"
1638,163800,컨벡스 헐,19,['dynamic programming']
1639,163900,행운의 티켓,7,"['bruteforcing', 'implementation']"
1640,164000,동전 뒤집기,12,['ad-hoc']
1641,164100,삼각형 개수 세기,0,[]
1642,164200,딱따구리,20,"['combinatorics', 'data structures', 'disjoint set', 'mathematics']"
1643,164300,쿠폰,9,"['implementation', 'mathematics', 'probability theory']"
1644,164400,소수의 연속합,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes', 'two-pointer']"
1645,164500,성지의 생일파티,0,[]
1646,164600,피이보나치 트리,15,"['dynamic programming', 'lowest common ancestor', 'recursion', 'tree']"
1647,164700,도시 분할 계획,12,"['graph theory', 'minimum spanning tree']"
1648,164800,격자판 채우기,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1649,164900,택시,16,"['dynamic programming', 'graph theory', 'topological sorting']"
1650,165000,지민이의 테러 Season II,18,"['maximum flow', 'minimum cost maximum flow']"
1651,165100,숌 코드,0,[]
1652,165200,누울 자리를 찾아라,5,"['implementation', 'string']"
1653,165300,양팔 저울,16,"['bitmask', 'bruteforcing', 'implementation']"
1654,165400,랜선 자르기,9,"['binary search', 'parametric search']"
1655,165500,가운데를 말해요,14,"['data structures', 'priority queue']"
1656,165600,덜컹덜컹,11,"['ad-hoc', 'geometry']"
1657,165700,두부장수 장홍준,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1658,165800,돼지 잡기,19,['maximum flow']
1659,165900,수 (Hard),24,"['dynamic programming', 'greedy']"
1660,166000,캡틴 이다솜,10,['dynamic programming']
1661,166100,다솜이의 신발가게,14,"['bruteforcing', 'sorting']"
1662,166200,압축,11,"['data structures', 'recursion', 'stack']"
1663,166300,XYZ 문자열,15,[]
1664,166400,주민등록번호,13,"['bruteforcing', 'dynamic programming', 'implementation']"
1665,166500,화물열차,20,"['implementation', 'mathematics', 'simulation', 'sorting', 'sweeping']"
1666,166600,최대 증가 직사각형 집합,19,"['data structures', 'dynamic programming', 'segment tree', 'sweeping']"
1667,166700,지민이의 테러 Season IV,17,"['data structures', ""dijkstra's"", 'graph theory', 'set / map by trees']"
1668,166800,트로피 진열,4,['implementation']
1669,166900,멍멍이 쓰다듬기,11,['mathematics']
1670,167000,정상 회담 2,13,"['combinatorics', 'dynamic programming', 'mathematics']"
1671,167100,상어의 저녁식사,18,['bipartite matching']
1672,167200,DNA 해독,4,"['implementation', 'simulation', 'string']"
1673,167300,치킨 쿠폰,4,"['implementation', 'mathematics']"
1674,167400,성준이와 초콜릿,0,[]
1675,167500,팬더 밥주기,22,"['data structures', 'multidimensional segment tree', 'segment tree']"
1676,167600,팩토리얼 0의 개수,6,"['arbitrary precision / big integers', 'mathematics']"
1677,167700,음악,15,['dynamic programming']
1678,167800,기차,0,[]
1679,167900,숫자놀이,10,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
1680,168000,쓰레기 수거,7,"['implementation', 'simulation']"
1681,168100,줄 세우기,4,"['bruteforcing', 'implementation']"
1682,168200,돌리기,10,"['breadth-first search', 'graph theory', 'graph traversal']"
1683,168300,책장 맨 윗칸,0,[]
1684,168400,같은 나머지,11,"['euclidean algorithm', 'mathematics', 'number theory']"
1685,168500,숫자놀이 2,19,"['dynamic programming', 'greedy', 'mathematics']"
1686,168600,복날,12,"['breadth-first search', 'graph theory', 'graph traversal']"
1687,168700,행렬 찾기,13,"['bruteforcing', 'prefix sum']"
1688,168800,지민이의 테러,16,"['geometry', 'line segment intersection check', 'point in non-convex polygon check']"
1689,168900,겹치는 선분,12,"['greedy', 'sorting', 'sweeping']"
1690,169000,순열,18,"['data structures', 'mathematics', 'permutation cycle decomposition', 'sparse table']"
1691,169100,석판,14,['dynamic programming']
1692,169200,뒤집기,20,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'sliding window']"
1693,169300,트리 색칠하기,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
1694,169400,Chessboard in FEN,11,"['implementation', 'simulation']"
1695,169500,팰린드롬 만들기,12,['dynamic programming']
1696,169600,색 막대,0,[]
1697,169700,숨바꼭질,10,"['breadth-first search', 'graph theory', 'graph traversal']"
1698,169800,보안 패널,0,[]
1699,169900,제곱수의 합,9,"['dynamic programming', 'mathematics']"
1700,170000,멀티탭 스케줄링,15,['greedy']
1701,170100,Cubeditor,13,"['knuth–morris–pratt', 'string']"
1702,170200,고속도로,16,"[""dijkstra's"", 'graph theory']"
1703,170300,생장점,3,"['implementation', 'mathematics']"
1704,170400,붕어빵타이쿤,16,"['bitmask', 'bruteforcing']"
1705,170500,컵,0,[]
1706,170600,크로스워드,9,"['implementation', 'parsing', 'sorting', 'string']"
1707,170700,이분 그래프,12,"['breadth-first search', 'bipartite graph', 'depth-first search', 'graph theory', 'graph traversal']"
1708,170800,볼록 껍질,16,"['convex hull', 'geometry']"
1709,170900,타일 위의 원,8,"['geometry', 'pythagoras theorem']"
1710,171000,Flattening Tables,21,[]
1711,171100,직각삼각형,10,"['bruteforcing', 'geometry', 'pythagoras theorem']"
1712,171200,손익분기점,4,"['mathematics', 'arithmetic']"
1713,171300,후보 추천하기,9,"['implementation', 'simulation']"
1715,171500,카드 정렬하기,12,"['data structures', 'greedy', 'priority queue']"
1716,171600,Polynomial Remains,7,"['case work', 'mathematics']"
1717,171700,집합의 표현,12,"['data structures', 'disjoint set']"
1718,171800,암호,4,"['implementation', 'string']"
1719,171900,택배,13,"[""dijkstra's"", 'floyd–warshall', 'graph theory']"
1720,172000,타일 코드,12,"['combinatorics', 'dynamic programming', 'mathematics']"
1721,172100,상자퍼즐,11,"['backtracking', 'bruteforcing']"
1722,172200,순열의 순서,11,"['combinatorics', 'implementation', 'mathematics']"
1723,172300,점 나누기,14,"['binary search', 'bruteforcing', 'implementation', 'sorting', 'two-pointer']"
1724,172400,그림판,15,"['breadth-first search', 'graph theory', 'graph traversal']"
1725,172500,히스토그램,16,"['data structures', 'divide and conquer', 'segment tree', 'stack']"
1726,172600,로봇,13,"['breadth-first search', 'graph theory', 'graph traversal']"
1727,172700,커플 만들기,14,"['dynamic programming', 'greedy', 'sorting']"
1728,172800,구슬 굴리기,16,"['binary search', 'bruteforcing', 'data structures', 'mathematics']"
1729,172900,이차원 배열의 합,15,"['backtracking', 'bruteforcing']"
1730,173000,판화,6,"['implementation', 'simulation']"
1731,173100,추론,4,"['arithmetic', 'mathematics']"
1732,173200,레이저,0,[]
1733,173300,등번호,20,"['depth-first search', 'graph theory', 'graph traversal']"
1734,173400,교통 체계,20,"['articulation points and bridges', 'graph theory', 'lowest common ancestor', 'tree']"
1735,173500,분수 합,8,"['euclidean algorithm', 'mathematics', 'number theory']"
1736,173600,쓰레기 치우기,15,['greedy']
1737,173700,Pibonacci,12,['dynamic programming']
1738,173800,골목길,14,"['bellman–ford', 'graph theory']"
1739,173900,도로 정비하기,20,"['2-sat', 'graph theory', 'strongly connected component']"
1740,174000,거듭제곱,7,"['bitmask', 'mathematics']"
1741,174100,반 나누기,19,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
1742,174200,레이싱결과,17,"['bitmask', 'combinatorics', 'dynamic programming', 'graph theory', 'graph traversal', 'mathematics']"
1743,174300,음식물 피하기,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
1744,174400,수 묶기,11,"['case work', 'greedy', 'sorting']"
1745,174500,숨기,20,"['binary search', 'maximum flow', 'floyd–warshall', 'graph theory']"
1746,174600,Cow Relays,19,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
1747,174700,소수&팰린드롬,10,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1748,174800,수 이어 쓰기 1,7,"['implementation', 'mathematics']"
1749,174900,점수따먹기,12,"['bruteforcing', 'dynamic programming', 'prefix sum']"
1750,175000,서로소의 개수,13,"['dynamic programming', 'knapsack', 'mathematics', 'number theory']"
1751,175100,디버그,18,"['bitmask', 'dynamic programming', 'hashing']"
1752,175200,세상에서 제일 착한 다솜,18,"['dynamic programming', 'sorting']"
1753,175300,최단경로,12,"[""dijkstra's"", 'graph theory']"
1754,175400,진영 순열,17,"['combinatorics', 'dynamic programming', 'mathematics']"
1755,175500,숫자놀이,7,"['mathematics', 'sorting', 'string']"
1756,175600,피자 굽기,11,['implementation']
1757,175700,달려달려,12,['dynamic programming']
1758,175800,알바생 강호,7,"['greedy', 'sorting']"
1759,175900,암호 만들기,11,"['backtracking', 'bruteforcing', 'combinatorics', 'mathematics']"
1760,176000,N-Rook,18,['bipartite matching']
1761,176100,정점들의 거리,16,"['lowest common ancestor', 'tree']"
1762,176200,평면그래프와 삼각형,18,"['binary search', 'graph theory', 'planar graph', 'smaller to larger technique']"
1763,176300,트리 색칠,24,"['data structures', 'disjoint set', 'dynamic programming', 'dynamic programming on trees', 'greedy', 'tree']"
1764,176400,듣보잡,7,"['data structures', 'set / map by hashing', 'sorting', 'string']"
1765,176500,닭싸움 팀 정하기,14,"['data structures', 'disjoint set', 'graph theory']"
1766,176600,문제집,14,"['data structures', 'graph theory', 'priority queue', 'topological sorting']"
1767,176700,N-Rook II,18,"['combinatorics', 'dynamic programming', 'mathematics']"
1768,176800,Center of symmetry,8,[]
1769,176900,3의 배수,6,"['implementation', 'recursion', 'string']"
1770,177000,배수와 약수의 개수,22,"['case work', 'mathematics', 'miller–rabin', 'number theory', 'pollard rho', 'primality test']"
1771,177100,카드 묶음,14,"['breadth-first search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal', 'stack']"
1772,177200,정원 정리,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
1773,177300,폭죽쇼,4,"['implementation', 'mathematics']"
1774,177400,우주신과의 교감,13,"['graph theory', 'minimum spanning tree']"
1775,177500,ASCII Labyrinth,0,[]
1776,177600,깜짝 선물,0,[]
1777,177700,순열복원,16,"['binary search', 'data structures', 'segment tree']"
1778,177800,Ubiquitous Religions,10,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
1779,177900,Text Formalization,8,"['implementation', 'parsing', 'string']"
1780,178000,종이의 개수,9,"['divide and conquer', 'recursion']"
1781,178100,컵라면,14,"['data structures', 'greedy', 'priority queue']"
1782,178200,거울 숫자,16,"['bruteforcing', 'combinatorics', 'implementation', 'mathematics']"
1783,178300,병든 나이트,8,"['case work', 'greedy', 'implementation']"
1784,178400,팰린드롬 인코딩,14,"['ad-hoc', 'greedy']"
1785,178500,팀 사모예드의 신작,18,"['backtracking', 'dynamic programming', 'mathematics']"
1786,178600,찾기,16,"['knuth–morris–pratt', 'string']"
1787,178700,문자열의 주기 예측,19,"['knuth–morris–pratt', 'string']"
1788,178800,피보나치 수의 확장,8,"['dynamic programming', 'mathematics']"
1789,178900,수들의 합,6,"['greedy', 'mathematics']"
1790,179000,수 이어 쓰기 2,10,"['implementation', 'mathematics']"
1791,179100,Queuing at the doctors,14,"['data structures', 'implementation', 'queue', 'simulation']"
1792,179200,공약수,21,"['mathematics', 'möbius inversion', 'number theory', 'prefix sum']"
1793,179300,타일링,9,"['arbitrary precision / big integers', 'dynamic programming']"
1795,179500,마알,12,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
1796,179600,신기한 키보드,12,['dynamic programming']
1797,179700,균형잡힌 줄서기,14,"['data structures', 'set / map by hashing', 'prefix sum', 'sorting']"
1798,179800,원뿔좌표계상의 거리,15,"['geometry', 'geometry; 3d']"
1799,179900,비숍,15,['backtracking']
1800,180000,인터넷 설치,15,"['binary search', ""dijkstra's"", 'graph theory', 'parametric search']"
1801,180100,직사각형 만들기,17,"['dynamic programming', 'knapsack']"
1802,180200,종이 접기,10,"['divide and conquer', 'string']"
1803,180300,무술 연습,13,['graph theory']
1804,180400,랩싸기,18,['dynamic programming']
1805,180500,나무수송,22,"['dynamic programming', 'dynamic programming on trees', 'knapsack', 'tree']"
1806,180600,부분합,12,"['prefix sum', 'two-pointer']"
1807,180700,척 노리스,12,['parametric search']
1808,180800,숌작업,10,"['greedy', 'tree']"
1810,181000,징검다리 달리기 2,13,"[""dijkstra's"", 'geometry', 'graph theory']"
1811,181100,Adjacent Mastermind,5,"['greedy', 'implementation', 'string']"
1812,181200,사탕,7,"['bruteforcing', 'mathematics']"
1813,181300,논리학 교수,5,"['ad-hoc', 'bruteforcing']"
1814,181400,지붕 색칠하기,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
1815,181500,방송국,0,[]
1816,181600,암호 키,5,"['bruteforcing', 'mathematics', 'number theory']"
1817,181700,짐 챙기는 숌,6,"['greedy', 'implementation']"
1818,181800,책정리,14,['longest increasing sequence in o(n log n)']
1819,181900,불끄기,0,[]
1820,182000,Partitioning for fun and profit,13,"['combinatorics', 'dynamic programming', 'mathematics']"
1821,182100,수들의 합 6,10,['bruteforcing']
1822,182200,차집합,7,"['data structures', 'set / map by hashing', 'sorting', 'set / map by trees']"
1823,182300,수확,13,['dynamic programming']
1824,182400,도미노,17,['bipartite matching']
1825,182500,순열 만들기,18,"['constructive', 'greedy', 'implementation']"
1826,182600,연료 채우기,14,"['data structures', 'greedy', 'priority queue', 'sorting']"
1827,182700,여행가이드,14,"['bruteforcing', 'geometry']"
1828,182800,Traveling Salesman,12,"['breadth-first search', 'graph theory', 'graph traversal']"
1829,182900,사탕 항아리,17,"['bitmask', 'constructive']"
1830,183000,거리,21,"['convex hull', 'data structures', 'divide and conquer', 'geometry', 'rotating calipers', 'sweeping']"
1831,183100,과수원,0,[]
1832,183200,카우보이,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics']"
1833,183300,고속철도 설계하기,13,"['graph theory', 'minimum spanning tree']"
1834,183400,나머지와 몫이 같은 수,5,['mathematics']
1835,183500,카드,7,"['data structures', 'deque', 'implementation']"
1836,183600,트리의 가짓수 세기,17,"['dynamic programming', 'dynamic programming on trees', 'tree']"
1837,183700,암호제작,4,"['arbitrary precision / big integers', 'bruteforcing', 'mathematics']"
1838,183800,버블 정렬,14,['sorting']
1839,183900,트리 모델 만들기,22,"['binary search', 'data structures', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree', 'set / map by trees']"
1840,184000,스도쿠,24,"['backtracking', 'dancing links', ""knuth's x""]"
1841,184100,군사 배치,23,"['binary search', ""dijkstra's"", 'maximum flow', 'graph theory', 'max-flow min-cut theorem']"
1842,184200,게임하기,25,"['game theory', 'sprague–grundy theorem']"
1843,184300,방정식,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1844,184400,농지 정리,0,[]
1845,184500,배열 회전,30,"['graph theory', 'mathematics', 'permutation cycle decomposition', 'strongly connected component']"
1846,184600,장기,12,['constructive']
1847,184700,볼록다각형 만들기,0,[]
1848,184800,동굴 탐험,21,"[""dijkstra's"", 'divide and conquer', 'graph theory']"
1849,184900,순열,16,"['binary search', 'data structures', 'segment tree']"
1850,185000,최대공약수,10,"['euclidean algorithm', 'mathematics', 'number theory']"
1851,185100,추 정렬하기,20,"['greedy', 'permutation cycle decomposition']"
1852,185200,수 묶기,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
1853,185300,정사영,21,"['calculus', 'geometry', 'geometry; 3d', 'implementation', 'mathematics']"
1854,185400,K번째 최단경로 찾기,17,"['data structures', ""dijkstra's"", 'graph theory', 'priority queue']"
1855,185500,암호,5,"['implementation', 'string']"
1856,185600,단어 게임,14,['dynamic programming']
1857,185700,발레리노,20,"['breadth-first search', ""dijkstra's"", 'dynamic programming', 'graph theory', 'graph traversal']"
1858,185800,기울기가 가장 큰 두 점,16,"['geometry', 'mathematics', 'sorting']"
1859,185900,성적,23,"['convex hull trick', 'data structures', 'segment tree']"
1860,186000,거미줄,19,[]
1861,186100,경로 찾기,0,[]
1862,186200,미터계,8,"['mathematics', 'number theory']"
1863,186300,스카이라인 쉬운거,12,"['data structures', 'greedy', 'stack']"
1864,186400,문어 숫자,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
1865,186500,웜홀,13,"['bellman–ford', 'graph theory']"
1866,186600,택배,17,"['dynamic programming', 'prefix sum', 'sorting']"
1867,186700,돌멩이 제거,18,['bipartite matching']
1868,186800,보물찾기,26,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'greedy', 'tree']"
1869,186900,육각형,0,[]
1870,187000,지붕 제작,0,[]
1871,187100,좋은 자동차 번호판,4,"['implementation', 'string']"
1872,187200,로마 숫자,11,"['arithmetic', 'dynamic programming', 'implementation', 'mathematics', 'prefix sum']"
1873,187300,색종이 자르기,21,['geometry']
1874,187400,스택 수열,9,"['data structures', 'stack']"
1875,187500,테트리스,14,"['dynamic programming', 'implementation']"
1876,187600,튕기는 볼링공,7,"['implementation', 'simulation']"
1877,187700,끔찍한 수열,12,"['case work', 'greedy', 'mathematics', 'number theory']"
1878,187800,천칭 저울,15,"['case work', 'constructive', 'mathematics', 'tree']"
1879,187900,부끄러운 다각형,21,"['geometry', 'line segment intersection check', 'point in non-convex polygon check']"
1880,188000,Big Brother,0,[]
1881,188100,공 바꾸기,14,['greedy']
1882,188200,분수 찾기,16,"['binary search', 'dynamic programming', 'mathematics', 'number theory']"
1884,188400,고속도로,15,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
1885,188500,비부분수열,13,['greedy']
1886,188600,프리즌 브레이크,21,"['breadth-first search', 'binary search', 'bipartite matching', 'graph theory', 'graph traversal']"
1887,188700,Cow Pizza,11,"['bitmask', 'bruteforcing']"
1888,188800,곰팡이,12,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
1889,188900,선물 교환,10,"['bruteforcing', 'data structures', 'graph theory', 'priority queue', 'topological sorting']"
1890,189000,점프,10,['dynamic programming']
1891,189100,사분면,12,['mathematics']
1892,189200,가위바위보,15,"['combinatorics', 'dynamic programming', 'mathematics']"
1893,189300,시저 암호,17,"['bruteforcing', 'knuth–morris–pratt', 'string']"
1894,189400,4번째 점,5,"['geometry', 'implementation']"
1895,189500,필터,7,"['bruteforcing', 'sorting']"
1896,189600,파급효과,0,[]
1897,189700,토달기,11,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'string']"
1898,189800,이전 수열은 어떤 수열일까,14,['greedy']
1899,189900,월드인의 공부 스타일,0,[]
1900,190000,레슬러,9,"['greedy', 'sorting']"
1901,190100,논리식,19,"['parsing', 'string']"
1902,190200,špilja,13,"['binary search', 'geometry', 'mathematics', 'ternary search']"
1904,190400,01타일,8,['dynamic programming']
1905,190500,상자 쌓기,13,"['data structures', 'implementation', 'segment tree']"
1906,190600,자리 바꾸기,18,"['bitmask', 'bruteforcing', 'divide and conquer', 'dynamic programming', 'dynamic programming using bitfield']"
1907,190700,탄소 화합물,7,"['bruteforcing', 'implementation', 'parsing', 'string']"
1908,190800,곱셈 전개식,16,"['combinatorics', 'exponentiation by squaring', 'mathematics']"
1909,190900,냄새 싫어,22,"['binary search', 'convex hull trick', 'data structures', 'graph theory', 'graph traversal']"
1910,191000,위닝,21,"['gaussian elimination', 'linear algebra', 'mathematics']"
1911,191100,흙길 보수하기,10,"['sorting', 'sweeping']"
1912,191200,연속합,9,['dynamic programming']
1913,191300,달팽이,8,['implementation']
1914,191400,하노이 탑,10,"['arbitrary precision / big integers', 'recursion']"
1915,191500,가장 큰 정사각형,12,['dynamic programming']
1916,191600,최소비용 구하기,11,"[""dijkstra's"", 'graph theory']"
1917,191700,정육면체 전개도,15,"['implementation', 'simulation']"
1918,191800,후위 표기식,14,"['data structures', 'stack']"
1919,191900,애너그램 만들기,4,"['implementation', 'string']"
1920,192000,수 찾기,7,"['binary search', 'data structures', 'sorting']"
1921,192100,트리와 쿼리 20,29,"['link/cut tree', 'tree']"
1922,192200,네트워크 연결,12,"['graph theory', 'minimum spanning tree']"
1924,192400,2007년,5,"['implementation', 'mathematics']"
1925,192500,삼각형,6,"['case work', 'geometry', 'implementation', 'pythagoras theorem']"
1926,192600,그림,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
1927,192700,최소 힙,9,"['data structures', 'priority queue']"
1928,192800,게임고안,0,[]
1929,192900,소수 구하기,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1930,193000,정사면체,12,"['implementation', 'mathematics']"
1931,193100,회의실 배정,10,"['greedy', 'sorting']"
1932,193200,정수 삼각형,10,['dynamic programming']
1933,193300,스카이라인,15,"['data structures', 'priority queue', 'sweeping', 'set / map by trees']"
1934,193400,최소공배수,5,"['euclidean algorithm', 'mathematics', 'number theory']"
1935,193500,후위 표기식2,8,"['data structures', 'stack']"
1936,193600,재미있는 수학 문제,24,"['fast fourier transform', 'mathematics', 'number theory']"
1937,193700,욕심쟁이 판다,13,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
1938,193800,통나무 옮기기,14,"['breadth-first search', 'graph theory', 'graph traversal']"
1939,193900,중량제한,13,"['breadth-first search', 'binary search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal']"
1940,194000,주몽,7,"['sorting', 'two-pointer']"
1941,194100,소문난 칠공주,13,"['backtracking', 'breadth-first search', 'bruteforcing', 'combinatorics', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics']"
1942,194200,디지털시계,4,"['implementation', 'mathematics', 'parsing', 'simulation', 'string']"
1943,194300,동전 분배,13,"['dynamic programming', 'knapsack']"
1944,194400,복제 로봇,14,"['breadth-first search', 'graph theory', 'graph traversal', 'minimum spanning tree']"
1945,194500,직사각형,15,"['sorting', 'sweeping']"
1946,194600,신입 사원,10,"['greedy', 'sorting']"
1947,194700,선물 전달,13,"['combinatorics', 'dynamic programming', 'mathematics']"
1948,194800,임계경로,16,"['graph theory', 'graph traversal', 'topological sorting']"
1949,194900,우수 마을,14,"['dynamic programming', 'dynamic programming on trees', 'tree']"
1950,195000,지도,0,[]
1951,195100,활자,8,['mathematics']
1952,195200,달팽이2,5,"['implementation', 'mathematics', 'simulation']"
1953,195300,팀배분,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
1954,195400,화학실험,12,['bruteforcing']
1955,195500,수식 표현,14,['dynamic programming']
1956,195600,운동,12,"['floyd–warshall', 'graph theory']"
1957,195700,앉았다 일어나기,19,"['ad-hoc', 'combinatorics', 'mathematics']"
1958,195800,LCS 3,13,"['dynamic programming', 'string']"
1959,195900,달팽이3,13,"['case work', 'mathematics']"
1960,196000,행렬만들기,14,"['maximum flow', 'greedy', 'sorting']"
1963,196300,소수 경로,12,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1964,196400,"오각형, 오각형, 오각형…",4,['mathematics']
1965,196500,상자넣기,9,['dynamic programming']
1966,196600,프린터 큐,8,"['data structures', 'implementation', 'queue', 'simulation']"
1967,196700,트리의 지름,12,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
1968,196800,우체부,0,[]
1969,196900,DNA,7,"['bruteforcing', 'greedy', 'implementation', 'string']"
1970,197000,건배,17,['dynamic programming']
1971,197100,High Spies,23,['tree']
1972,197200,놀라운 문자열,8,"['data structures', 'set / map by hashing', 'implementation', 'string']"
1973,197300,버스 노선,0,[]
1974,197400,Jump Jump Championship,16,['longest increasing sequence in o(n log n)']
1975,197500,Number Game,4,"['mathematics', 'number theory']"
1976,197600,여행 가자,12,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
1977,197700,완전제곱수,4,"['bruteforcing', 'implementation', 'mathematics']"
1978,197800,소수 찾기,6,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1979,197900,극적인 곱셈,16,"['arbitrary precision / big integers', 'mathematics']"
1980,198000,햄버거 사랑,7,"['bruteforcing', 'implementation', 'mathematics']"
1981,198100,배열에서 이동,15,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal']"
1982,198200,호텔예약,17,"['dynamic programming', 'knapsack']"
1983,198300,숫자 박스,14,['dynamic programming']
1985,198500,디지털 친구,7,"['bruteforcing', 'string']"
1986,198600,체스,9,['implementation']
1987,198700,알파벳,12,"['backtracking', 'depth-first search', 'graph theory', 'graph traversal']"
1988,198800,낮잠 시간,12,['dynamic programming']
1989,198900,부분배열 고르기 2,16,"['data structures', 'divide and conquer', 'prefix sum', 'segment tree', 'stack']"
1990,199000,소수인팰린드롬,11,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
1991,199100,트리 순회,10,"['recursion', 'tree']"
1992,199200,쿼드트리,10,"['divide and conquer', 'recursion']"
1993,199300,경주,21,"['dynamic programming', 'meet in the middle']"
1994,199400,등차수열,15,"['binary search', 'data structures', 'dynamic programming', 'sorting']"
1995,199500,폐쇄회로,0,[]
1996,199600,지뢰 찾기,6,['implementation']
1997,199700,박스포장,10,"['implementation', 'mathematics', 'simulation']"
1998,199800,이미지 압축,16,"['bruteforcing', 'data structures', 'divide and conquer', 'set / map by hashing', 'tree']"
1999,199900,최대최소,14,"['data structures', 'segment tree']"
2000,200000,책장제작,0,[]
2001,200100,보석 줍기,15,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
2002,200200,추월,10,"['data structures', 'set / map by hashing', 'implementation', 'string']"
2003,200300,수들의 합 2,7,"['bruteforcing', 'two-pointer']"
2004,200400,조합 0의 개수,9,"['mathematics', 'number theory']"
2005,200500,사발,18,"['bruteforcing', 'case work', 'combinatorics', 'dynamic programming', 'geometry', 'line segment intersection check', 'mathematics']"
2006,200600,Chemistry 101,12,"['parsing', 'string']"
2007,200700,수들의 합 3,17,"['ad-hoc', 'mathematics', 'sorting']"
2008,200800,사다리 게임,16,"['dynamic programming', 'graph theory']"
2010,201000,플러그,3,"['arithmetic', 'mathematics']"
2011,201100,암호코드,11,['dynamic programming']
2012,201200,등수 매기기,8,"['greedy', 'sorting']"
2013,201300,선그리기,13,"['data structures', 'disjoint set', 'geometry', 'line segment intersection check']"
2014,201400,소수의 곱,15,"['data structures', 'mathematics', 'number theory', 'priority queue']"
2015,201500,수들의 합 4,12,"['data structures', 'set / map by hashing', 'prefix sum', 'set / map by trees']"
2016,201600,미팅 주선하기,10,"['case work', 'implementation']"
2017,201700,울타리,21,"['geometry', 'implementation', 'sweeping']"
2018,201800,수들의 합 5,7,"['mathematics', 'two-pointer']"
2019,201900,다각형개수,12,"['geometry', 'line segment intersection check']"
2020,202000,부분 염기서열,16,"['hashing', 'string']"
2021,202100,최소 환승 경로,14,"['breadth-first search', 'graph theory', 'graph traversal']"
2022,202200,사다리,11,"['binary search', 'geometry', 'mathematics', 'pythagoras theorem']"
2023,202300,신기한 소수,11,"['backtracking', 'mathematics', 'number theory', 'primality test']"
2024,202400,선분 덮기,13,"['greedy', 'sorting', 'sweeping']"
2025,202500,나이트투어,28,"['case work', 'constructive', 'heuristics']"
2026,202600,소풍,13,['backtracking']
2027,202700,가장 큰 L,18,"['data structures', 'greedy', 'stack']"
2028,202800,자기복제수,4,['mathematics']
2029,202900,성냥,7,['implementation']
2030,203000,Burger King,16,"['data structures', 'implementation', 'queue', 'simulation']"
2031,203100,이 쿠키 달지 않아!,14,"['binary search', 'dynamic programming']"
2032,203200,피라미드,17,"['data structures', 'implementation', 'multidimensional segment tree', 'prefix sum', 'segment tree']"
2033,203300,반올림,5,"['implementation', 'mathematics']"
2034,203400,반음,6,['implementation']
2035,203500,증가수열,13,"['bruteforcing', 'implementation']"
2036,203600,수열의 점수,12,"['case work', 'greedy', 'sorting']"
2037,203700,문자메시지,5,"['implementation', 'string']"
2038,203800,골롱 수열,14,"['dynamic programming', 'mathematics']"
2039,203900,뱀 찾기,0,[]
2040,204000,수 게임,10,"['dynamic programming', 'game theory', 'prefix sum']"
2041,204100,숫자채우기,20,"['ad-hoc', 'constructive']"
2042,204200,구간 합 구하기,15,"['segment tree', 'data structures']"
2043,204300,수 묶기,0,[]
2044,204400,windows,12,"['implementation', 'sorting']"
2045,204500,마방진,12,['implementation']
2046,204600,이어달리기,0,[]
2047,204700,미로,13,"['breadth-first search', 'graph theory', 'graph traversal']"
2049,204900,가장 먼 두 점,18,"['convex hull', 'geometry', 'rotating calipers']"
2050,205000,타일 게임,0,[]
2051,205100,최소 버텍스 커버,19,"['bipartite matching', 'graph theory']"
2052,205200,지수연산,4,"['arbitrary precision / big integers', 'mathematics']"
2053,205300,반직선,0,[]
2054,205400,계산 문제,15,"['bruteforcing', 'data structures', 'implementation', 'recursion', 'stack', 'string']"
2055,205500,삼각형 찾기,15,['mathematics']
2056,205600,작업,12,"['dynamic programming', 'graph theory', 'topological sorting']"
2057,205700,팩토리얼 분해,6,"['bruteforcing', 'greedy', 'mathematics']"
2058,205800,원자의 에너지,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
2059,205900,작업 순서,0,[]
2060,206000,염소 줄서기,22,"['combinatorics', 'dynamic programming', 'mathematics', 'parametric search']"
2061,206100,좋은 암호,3,"['arbitrary precision / big integers', 'bruteforcing', 'mathematics']"
2062,206200,곱하기 게임,13,"['data structures', 'game theory', 'priority queue']"
2063,206300,철사 연결,9,"['greedy', 'sorting']"
2064,206400,IP 주소,13,"['bitmask', 'implementation']"
2065,206500,나룻배,13,"['data structures', 'implementation', 'queue', 'simulation']"
2066,206600,카드놀이,15,['dynamic programming']
2067,206700,엘리베이터,0,[]
2068,206800,자전거 경주,0,[]
2069,206900,보이는 산맥,14,"['sorting', 'sweeping']"
2070,207000,목걸이 수열,14,"['greedy', 'string']"
2071,207100,바둑,21,"['backtracking', 'graph theory', 'graph traversal', 'implementation']"
2072,207200,오목,9,"['implementation', 'simulation']"
2073,207300,수도배관공사,12,"['dynamic programming', 'knapsack']"
2074,207400,거듭제곱 계산하기,14,"['breadth-first search', 'graph theory', 'graph traversal', 'precomputation']"
2075,207500,N번째 큰 수,9,"['data structures', 'priority queue', 'sorting']"
2076,207600,2차원 벡터,19,"['geometry', 'sorting', 'sweeping', 'two-pointer']"
2078,207800,무한이진트리,8,"['mathematics', 'tree']"
2079,207900,팰린드롬,14,['dynamic programming']
2080,208000,겹치는 선분,19,[]
2081,208100,저울추,20,"['bellman–ford', 'floyd–warshall', 'graph theory']"
2082,208200,시계,7,"['bitmask', 'bruteforcing', 'implementation', 'simulation']"
2083,208300,럭비 클럽,2,['implementation']
2084,208400,차수열,11,"['constructive', 'data structures', 'degree sequence', 'graph theory', 'greedy', 'priority queue']"
2085,208500,진법,0,[]
2086,208600,피보나치 수의 합,15,"['exponentiation by squaring', 'mathematics']"
2087,208700,암호문,15,"['bitmask', 'meet in the middle']"
2088,208800,트리의 개수,14,['dynamic programming']
2089,208900,-2진수,8,"['mathematics', 'number theory']"
2090,209000,조화평균,7,"['euclidean algorithm', 'implementation', 'mathematics', 'number theory']"
2091,209100,동전,13,"['bruteforcing', 'dynamic programming', 'greedy']"
2092,209200,집합의 개수,14,['dynamic programming']
2093,209300,괄호 제거,12,[]
2094,209400,강수량,18,"['case work', 'value / coordinate compression', 'data structures', 'offline queries', 'segment tree', 'sparse table', 'set / map by trees']"
2095,209500,티켓,18,['greedy']
2096,209600,내려가기,11,"['dynamic programming', 'sliding window']"
2097,209700,조약돌,6,['mathematics']
2098,209800,외판원 순회,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'travelling salesman problem']"
2099,209900,The game of death,15,"['exponentiation by squaring', 'graph theory', 'mathematics']"
2100,210000,감시 로봇,0,[]
2101,210100,이미지의 에너지,0,[]
2102,210200,보석 줍기,17,"['binary search', 'prefix sum']"
2103,210300,직교다각형 복원,8,"['geometry', 'sorting']"
2104,210400,부분배열 고르기,16,"['data structures', 'divide and conquer', 'segment tree', 'stack']"
2105,210500,꼬리달린 박성원숭이,17,"['data structures', 'disjoint set', 'graph theory', 'offline queries', 'smaller to larger technique']"
2106,210600,흑염소 감금하기,0,[]
2107,210700,포함하는 구간,12,"['bruteforcing', 'implementation', 'prefix sum', 'sorting']"
2108,210800,통계학,8,"['implementation', 'mathematics', 'sorting']"
2109,210900,순회강연,13,"['data structures', 'greedy', 'priority queue', 'sorting']"
2110,211000,공유기 설치,12,"['binary search', 'parametric search']"
2111,211100,선인장,19,"['arbitrary precision / big integers', 'biconnected component', 'cactus', 'graph theory']"
2112,211200,두 부분 문자열,16,['dynamic programming']
2113,211300,행렬과 피보나치 수,24,"['berlekamp–massey', 'kitamasa', 'linear algebra', 'mathematics']"
2114,211400,동물원 우리,0,[]
2115,211500,갤러리,11,"['implementation', 'string']"
2116,211600,주사위 쌓기,11,"['bruteforcing', 'implementation']"
2117,211700,원형 댄스,7,['mathematics']
2118,211800,두 개의 탑,11,"['prefix sum', 'two-pointer']"
2119,211900,프로그래밍 언어 L,19,"['data structures', 'dynamic programming', 'graph theory', 'implementation', 'segment tree with lazy propagation', 'recursion', 'segment tree', 'simulation', 'topological sorting']"
2120,212000,셋이 놀기,0,[]
2121,212100,넷이 놀기,8,"['binary search', 'data structures', 'geometry', 'set / map by hashing']"
2122,212200,여섯이서 놀기,18,"['ad-hoc', 'bit set', 'combinatorics', 'inclusion and exclusion', 'mathematics']"
2123,212300,인간 탑 쌓기,16,"['greedy', 'sorting']"
2124,212400,블록 쌓기,17,"['dynamic programming', 'prefix sum']"
2125,212500,좀,23,"[""dijkstra's"", 'geometry', 'graph theory', 'point in convex polygon check']"
2126,212600,지진,18,"['binary search', 'graph theory', 'minimum spanning tree', 'parametric search']"
2127,212700,Limit Checking,0,[]
2128,212800,마지막 조별 시합,12,"['bitmask', 'bruteforcing']"
2129,212900,드라이브 파이널,14,"['bellman–ford', 'floyd–warshall', 'graph theory']"
2130,213000,수조,16,"['binary search', 'sweeping']"
2131,213100,로봇 명령,14,"['dynamic programming', 'implementation', 'simulation']"
2132,213200,나무 위의 벌레,14,"['depth-first search', 'graph theory', 'graph traversal']"
2133,213300,타일 채우기,12,['dynamic programming']
2134,213400,창고 이전,7,['greedy']
2135,213500,문자열 압축하기,16,"['dynamic programming', 'string']"
2136,213600,개미,15,"['ad-hoc', 'sorting']"
2137,213700,가장 가까운 분수,12,"['bruteforcing', 'mathematics']"
2138,213800,전구와 스위치,11,['greedy']
2139,213900,나는 너가 살아온 날을 알고 있다,4,"['arithmetic', 'implementation', 'mathematics']"
2140,214000,지뢰찾기,12,"['greedy', 'implementation']"
2141,214100,우체국,12,"['greedy', 'sorting']"
2142,214200,정돈된 배열,14,"['ad-hoc', 'mathematics']"
2143,214300,두 배열의 합,13,"['binary search', 'prefix sum']"
2144,214400,울타리 넘기,15,"['dynamic programming', 'geometry', 'mathematics']"
2145,214500,숫자 놀이,4,"['arithmetic', 'implementation', 'mathematics']"
2146,214600,다리 만들기,13,"['breadth-first search', 'graph theory', 'graph traversal']"
2147,214700,자리 배치하기,0,[]
2148,214800,Super 12,9,['sorting']
2149,214900,암호 해독,8,"['implementation', 'sorting', 'string']"
2150,215000,Strongly Connected Component,16,"['graph theory', 'strongly connected component']"
2151,215100,거울 설치,13,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
2152,215200,여행 계획 세우기,18,"['dynamic programming', 'graph theory', 'strongly connected component', 'topological sorting']"
2153,215300,소수 단어,4,"['mathematics', 'number theory', 'primality test', 'string']"
2154,215400,수 이어 쓰기 3,4,"['bruteforcing', 'implementation', 'string']"
2155,215500,삼각형의 최단 경로,11,"['implementation', 'mathematics']"
2156,215600,포도주 시식,10,['dynamic programming']
2157,215700,여행,12,['dynamic programming']
2158,215800,산악자전거,12,"[""dijkstra's"", 'graph theory']"
2159,215900,케익 배달,14,['dynamic programming']
2160,216000,그림 비교,5,"['bruteforcing', 'implementation']"
2161,216100,카드1,6,"['data structures', 'implementation', 'queue']"
2162,216200,선분 그룹,15,"['data structures', 'disjoint set', 'geometry', 'line segment intersection check']"
2163,216300,초콜릿 자르기,5,"['arithmetic', 'mathematics']"
2164,216400,카드2,7,"['data structures', 'queue']"
2166,216600,다각형의 면적,11,"['geometry', 'area of a polygon']"
2167,216700,2차원 배열의 합,6,"['implementation', 'prefix sum']"
2168,216800,타일 위의 대각선,10,"['euclidean algorithm', 'mathematics', 'number theory']"
2169,216900,로봇 조종하기,14,['dynamic programming']
2170,217000,선 긋기,11,"['sorting', 'sweeping']"
2171,217100,직사각형의 개수,12,"['bruteforcing', 'value / coordinate compression', 'data structures', 'set / map by hashing']"
2172,217200,팰린드롬 경로,17,['dynamic programming']
2173,217300,양파깡 만들기,13,['implementation']
2174,217400,로봇 시뮬레이션,11,"['implementation', 'simulation']"
2175,217500,땅 자르기,11,"['bruteforcing', 'geometry', 'area of a polygon']"
2176,217600,합리적인 이동경로,15,"[""dijkstra's"", 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
2177,217700,급료 계산,0,[]
2178,217800,미로 탐색,10,"['breadth-first search', 'graph theory', 'graph traversal']"
2179,217900,비슷한 단어,11,"['data structures', 'set / map by hashing', 'sorting', 'string', 'set / map by trees']"
2180,218000,소방서의 고민,16,"['greedy', 'sorting']"
2181,218100,Walking the dog,0,[]
2183,218300,테니스 시합,5,"['ad-hoc', 'implementation', 'string']"
2184,218400,김치 배달,18,['dynamic programming']
2185,218500,직사각형의 합집합,19,"['data structures', 'segment tree', 'sweeping']"
2186,218600,문자판,13,"['dynamic programming', 'graph theory', 'graph traversal']"
2187,218700,점 고르기,11,['bruteforcing']
2188,218800,축사 배정,17,['bipartite matching']
2189,218900,Magickology,9,['implementation']
2190,219000,점 고르기 2,12,['bruteforcing']
2191,219100,들쥐의 탈출,17,"['bipartite matching', 'geometry']"
2192,219200,두 수열,18,['dynamic programming']
2193,219300,이친수,8,['dynamic programming']
2194,219400,유닛 이동시키기,11,"['breadth-first search', 'graph theory', 'graph traversal']"
2195,219500,문자열 복사,11,"['greedy', 'string']"
2196,219600,이진수 XOR,17,"['breadth-first search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal']"
2197,219700,분해 반응,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
2198,219800,버스와 손님,0,[]
2199,219900,DNA 해독 2,0,[]
2200,220000,계산기,8,"['implementation', 'mathematics']"
2201,220100,이친수 찾기,14,['dynamic programming']
2202,220200,Custom table sorter,10,"['implementation', 'parsing', 'sorting', 'string']"
2203,220300,선거구 나누기,0,[]
2204,220400,도비의 난독증 테스트,5,"['sorting', 'string']"
2205,220500,저울 추 만들기,10,"['greedy', 'mathematics']"
2206,220600,벽 부수고 이동하기,12,"['breadth-first search', 'graph theory', 'graph traversal']"
2207,220700,가위바위보,17,"['2-sat', 'graph theory', 'strongly connected component']"
2208,220800,보석 줍기,14,"['dynamic programming', 'prefix sum']"
2209,220900,버스 터미널,19,[]
2210,221000,숫자판 점프,9,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
2211,221100,네트워크 복구,14,"[""dijkstra's"", 'graph theory']"
2212,221200,센서,11,"['greedy', 'sorting']"
2213,221300,트리의 독립집합,15,"['dynamic programming', 'dynamic programming on trees', 'tree']"
2214,221400,성냥개비와 정사각형,13,"['parsing', 'string']"
2215,221500,원형 네트워크,18,"['greedy', 'sweeping']"
2216,221600,문자열과 점수,13,['dynamic programming']
2217,221700,로프,7,"['greedy', 'mathematics', 'sorting']"
2218,221800,상자 안의 구슬,13,['dynamic programming']
2219,221900,보안 시스템 설치,12,"['floyd–warshall', 'graph theory']"
2220,222000,힙 정렬,17,"['data structures', 'greedy', 'priority queue']"
2221,222100,작업 공정,0,[]
2222,222200,아이스크림,16,"['constructive', 'graph theory']"
2223,222300,금화,7,['mathematics']
2224,222400,명제 증명,12,"['floyd–warshall', 'graph theory']"
2225,222500,합분해,11,"['dynamic programming', 'mathematics']"
2226,222600,이진수,12,"['arbitrary precision / big integers', 'dynamic programming']"
2227,222700,Checking Causality,0,[]
2228,222800,구간 나누기,12,['dynamic programming']
2229,222900,조 짜기,11,['dynamic programming']
2230,223000,수 고르기,11,"['sorting', 'two-pointer']"
2231,223100,분해합,4,['bruteforcing']
2232,223200,지뢰,9,"['graph theory', 'greedy', 'implementation', 'sorting']"
2233,223300,사과나무,14,"['data structures', 'graph theory', 'lowest common ancestor', 'stack', 'tree']"
2234,223400,성곽,13,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
2235,223500,GPS Encoding,7,"['backtracking', 'dynamic programming', 'implementation', 'string']"
2236,223600,칩 만들기,8,"['greedy', 'sorting']"
2237,223700,수열 축소,17,['dynamic programming']
2238,223800,경매,6,['implementation']
2239,223900,스도쿠,12,"['backtracking', 'implementation']"
2240,224000,자두나무,11,['dynamic programming']
2241,224100,카멜롯,16,[]
2242,224200,삼각형 만들기,16,['dynamic programming']
2243,224300,사탕상자,16,"['binary search', 'segment tree', 'data structures']"
2244,224400,민코프스키 합,17,"['convex hull', 'geometry']"
2245,224500,배열 정리하기,15,"['breadth-first search', 'graph theory', 'graph traversal']"
2246,224600,콘도 선정,6,"['bruteforcing', 'sorting']"
2247,224700,실질적 약수,11,"['mathematics', 'number theory']"
2248,224800,이진수 찾기,13,['dynamic programming']
2249,224900,Olympic Ranking,0,[]
2250,225000,트리의 높이와 너비,14,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
2251,225100,물통,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
2252,225200,줄 세우기,13,"['graph theory', 'topological sorting']"
2253,225300,점프,12,['dynamic programming']
2254,225400,감옥 건설,17,"['convex hull', 'geometry', 'point in convex polygon check']"
2255,225500,트리 만들기,19,"['data structures', 'graph theory', 'greedy', 'minimum spanning tree', 'priority queue']"
2256,225600,젓가락,18,"['dynamic programming', 'sorting']"
2257,225700,화학식량,9,"['data structures', 'stack', 'string']"
2258,225800,정육점,12,"['greedy', 'sorting']"
2259,225900,두더지 잡기,14,"['dynamic programming', 'sorting']"
2260,226000,핵폭탄,0,[]
2261,226100,가장 가까운 두 점,19,"['divide and conquer', 'geometry', 'sweeping']"
2262,226200,토너먼트 만들기,12,['greedy']
2263,226300,트리의 순회,14,"['divide and conquer', 'recursion', 'tree']"
2264,226400,대칭 그림,14,['binary search']
2265,226500,거짓말쟁이,0,[]
2266,226600,금고 테스트,14,['dynamic programming']
2267,226700,Bus Timetable,0,[]
2268,226800,수들의 합 7,15,"['segment tree', 'data structures']"
2269,226900,Prevtree,0,[]
2270,227000,하노이 탑,14,"['mathematics', 'recursion']"
2271,227100,암호화 알고리즘의 약점,17,"['data structures', 'segment tree', 'sparse table']"
2272,227200,램프,19,"['ad-hoc', 'mathematics']"
2273,227300,줄 서기,13,"['floyd–warshall', 'graph theory']"
2274,227400,Conflicting Strings,15,['string']
2275,227500,트리의 높이 줄이기,15,"['greedy', 'tree']"
2276,227600,물 채우기,17,"['data structures', ""dijkstra's"", 'graph theory', 'graph traversal', 'priority queue']"
2277,227700,금고 털기,0,[]
2278,227800,그래프 복원,15,"['constructive', ""dijkstra's"", 'floyd–warshall', 'graph theory', 'greedy']"
2279,227900,사각형과 도형,18,"['geometry', 'prefix sum']"
2280,228000,정사각형과 점,0,[]
2281,228100,데스노트,12,['dynamic programming']
2282,228200,산맥 그리기,19,"['dynamic programming', 'geometry']"
2283,228300,구간 자르기,14,"['prefix sum', 'sweeping', 'two-pointer']"
2284,228400,레이스,17,"['data structures', 'dynamic programming', 'priority queue', 'segment tree', 'sorting']"
2285,228500,우체국,12,['greedy']
2286,228600,비선형 수열,0,[]
2287,228700,모노디지털 표현,14,"['data structures', 'dynamic programming', 'set / map by hashing', 'set / map by trees']"
2288,228800,격자의 분리자,11,[]
2290,229000,LCD Test,9,"['implementation', 'string']"
2291,229100,Sequence,13,['dynamic programming']
2292,229200,벌집,4,['mathematics']
2293,229300,동전 1,11,['dynamic programming']
2294,229400,동전 2,11,['dynamic programming']
2295,229500,세 수의 합,12,"['binary search', 'data structures', 'set / map by hashing', 'meet in the middle']"
2296,229600,건물짓기,12,['dynamic programming']
2297,229700,직각 이등변 삼각형,0,[]
2298,229800,Here-There,14,"['case work', 'implementation']"
2299,229900,수식 계산,0,[]
2300,230000,기지국,13,"['dynamic programming', 'sorting']"
2301,230100,마법 구슬,20,"['constructive', 'divide and conquer', 'mathematics']"
2302,230200,극장 좌석,10,['dynamic programming']
2303,230300,숫자 게임,6,"['bruteforcing', 'implementation']"
2304,230400,창고 다각형,9,"['bruteforcing', 'data structures', 'stack']"
2305,230500,자리 배치,15,['dynamic programming']
2306,230600,유전자,13,['dynamic programming']
2307,230700,도로검문,15,"[""dijkstra's"", 'graph theory']"
2309,230900,일곱 난쟁이,5,"['bruteforcing', 'sorting']"
2310,231000,어드벤처 게임,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
2311,231100,왕복 여행,19,"['maximum flow', 'minimum cost maximum flow']"
2312,231200,수 복원하기,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
2313,231300,보석 구매하기,10,"['dynamic programming', 'prefix sum']"
2314,231400,이세계 게임,12,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
2315,231500,가로등 끄기,18,"['dynamic programming', 'prefix sum']"
2316,231600,도시 왕복하기 2,18,"['maximum flow', 'graph theory']"
2317,231700,결혼식,11,"['greedy', 'sorting']"
2318,231800,상사 찾기,17,"['value / coordinate compression', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'segment tree', 'tree', 'set / map by trees']"
2319,231900,문자열 복원하기,16,['dynamic programming']
2320,232000,끝말잇기,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
2322,232200,아령,20,"['greedy', 'permutation cycle decomposition']"
2323,232300,강강술래,21,"['ad-hoc', 'constructive', 'graph theory']"
2324,232400,이진 행렬,20,"['breadth-first search', 'graph theory', 'graph traversal', 'heuristics']"
2325,232500,개코전쟁,16,"[""dijkstra's"", 'graph theory']"
2326,232600,최소 편집 문제 2,18,"['dynamic programming', 'string']"
2327,232700,말아톤,12,"['dynamic programming', 'greedy', 'sorting']"
2328,232800,그래프의 해시,16,"['arbitrary precision / big integers', 'graph theory', 'graph traversal', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
2329,232900,장애물 설계,16,"['arbitrary precision / big integers', 'dynamic programming']"
2330,233000,미생물 연구실,18,"['data structures', 'greedy', 'segment tree', 'set / map by trees']"
2331,233100,반복수열,7,"['implementation', 'mathematics']"
2332,233200,전화번호,11,"['backtracking', 'data structures', 'dynamic programming', 'stack', 'string']"
2333,233300,생존과 탈출,12,[]
2334,233400,대칭 그림2,19,"['bruteforcing', 'geometry', 'mathematics']"
2335,233500,농부,13,['dynamic programming']
2336,233600,굉장한 학생,19,"['data structures', 'segment tree']"
2337,233700,트리 자르기,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
2338,233800,긴자리 계산,1,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
2339,233900,석판 자르기,15,['divide and conquer']
2340,234000,이진 수열 회전,0,[]
2341,234100,팩스 문제,12,['dynamic programming']
2342,234200,Dance Dance Revolution,13,['dynamic programming']
2343,234300,기타 레슨,10,"['binary search', 'parametric search']"
2344,234400,거울,12,"['bruteforcing', 'implementation', 'simulation']"
2345,234500,지뢰 제거,0,[]
2346,234600,풍선 터뜨리기,8,"['data structures', 'deque']"
2347,234700,거울2,23,['greedy']
2349,234900,무선 통신 기지국,7,"['geometry', 'implementation', 'pythagoras theorem']"
2350,235000,대운하,14,"['data structures', 'disjoint set']"
2351,235100,미지의 다각형,20,"['graph theory', 'graph traversal', 'greedy', 'mathematics']"
2352,235200,반도체 설계,14,"['binary search', 'longest increasing sequence in o(n log n)']"
2353,235300,오타,11,"['implementation', 'string']"
2354,235400,비교교환,13,[]
2355,235500,시그마,4,"['mathematics', 'arithmetic']"
2357,235700,최솟값과 최댓값,15,"['segment tree', 'data structures']"
2358,235800,평행선,7,"['data structures', 'set / map by hashing', 'sorting']"
2359,235900,드라이브,16,"['breadth-first search', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'parametric search']"
2360,236000,Teleport,0,[]
2361,236100,정원,18,[]
2362,236200,탈출,19,"['maximum flow', 'max-flow min-cut theorem']"
2363,236300,약수부분수열,0,[]
2364,236400,담장 너머로,15,"['breadth-first search', 'graph theory', 'graph traversal']"
2365,236500,숫자판 만들기,18,"['binary search', 'maximum flow']"
2366,236600,이진트리 그리기,0,[]
2367,236700,파티,17,['maximum flow']
2369,236900,행렬의 부분합,15,"['bruteforcing', 'prefix sum']"
2370,237000,시장 선거 포스터,12,"['value / coordinate compression', 'implementation']"
2371,237100,파일 구별하기,9,"['bruteforcing', 'data structures', 'set / map by hashing']"
2373,237300,Fibonacci Game,20,"['dynamic programming', 'game theory', 'mathematics']"
2374,237400,같은 수로 만들기,12,"['data structures', 'greedy', 'stack']"
2375,237500,농구 골대 세우기,14,"['greedy', 'sorting']"
2376,237600,단말 정점들의 거리,16,"['constructive', 'implementation', 'tree']"
2378,237800,불필요한 수,13,"['combinatorics', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
2379,237900,트리 탐색하기,16,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'stack', 'tree']"
2381,238100,최대 거리,13,"['ad-hoc', 'mathematics', 'sorting']"
2382,238200,키워드 매칭,0,[]
2383,238300,Ferries,0,[]
2384,238400,I’m a Frayed Knot,0,[]
2385,238500,Secret Sharing,18,"['greedy', 'sorting', 'string']"
2386,238600,도비의 영어 공부,4,"['bruteforcing', 'implementation', 'string']"
2388,238800,블록 쌓기,16,['greedy']
2389,238900,세상의 중심에서...,20,"['geometry', 'heuristics', 'minimum enclosing circle']"
2391,239100,Sascha,5,"['implementation', 'string']"
2392,239200,다각형의 분할,19,"['dynamic programming', 'mathematics']"
2394,239400,드라이브 투어,16,"['dynamic programming', 'graph theory', 'topological sorting']"
2395,239500,순열의 개수,13,['dynamic programming']
2396,239600,같은 길이 막대기 만들기,22,['backtracking']
2397,239700,보이는 정사각형,19,"['value / coordinate compression', 'geometry', 'sweeping']"
2398,239800,3인통화,15,"[""dijkstra's"", 'graph theory']"
2399,239900,거리의 합,4,"['implementation', 'mathematics']"
2401,240100,최대 문자열 붙여넣기,19,"['dynamic programming', 'knuth–morris–pratt', 'string']"
2402,240200,거짓말,0,[]
2403,240300,게시판 구멍 가리기,13,"['greedy', 'parametric search']"
2404,240400,단위 분수로 분할,10,"['backtracking', 'bruteforcing', 'mathematics']"
2405,240500,"세 수, 두 M",12,"['greedy', 'mathematics']"
2406,240600,안정적인 네트워크,13,"['graph theory', 'minimum spanning tree']"
2407,240700,조합,7,"['arbitrary precision / big integers', 'combinatorics', 'mathematics']"
2408,240800,큰 수 계산,4,"['arbitrary precision / big integers', 'arithmetic', 'implementation', 'mathematics']"
2409,240900,파이프 자르기,22,"['depth-first search', 'graph theory', 'graph traversal', 'heuristics']"
2410,241000,2의 멱수의 합,11,['dynamic programming']
2411,241100,아이템 먹기,12,['dynamic programming']
2412,241200,암벽 등반,13,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal']"
2413,241300,비슷한 순열,14,['greedy']
2414,241400,게시판 구멍 막기,18,['bipartite matching']
2415,241500,직사각형,19,"['geometry', 'sorting']"
2416,241600,문,18,"['2-sat', 'graph theory', 'strongly connected component']"
2417,241700,정수 제곱근,7,"['binary search', 'mathematics']"
2418,241800,단어 격자,11,['dynamic programming']
2419,241900,사수아탕,20,['dynamic programming']
2420,242000,사파리월드,1,"['implementation', 'arithmetic', 'mathematics']"
2421,242100,저금통,11,"['dynamic programming', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
2422,242200,한윤정이 이탈리아에 가서 아이스크림을 사먹는데,7,['bruteforcing']
2423,242300,전구를 켜라,15,"['0-1 bfs', ""dijkstra's"", 'graph theory', 'graph traversal']"
2424,242400,부산의 해적,17,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
2425,242500,Lego,0,[]
2426,242600,세계적인 석유 재벌,20,"['binary search', 'data structures', 'segment tree with lazy propagation', 'segment tree']"
2427,242700,2012 지구 멸망,22,"['bruteforcing', 'greedy', 'mathematics']"
2428,242800,표절,8,"['binary search', 'sorting']"
2429,242900,길이,19,"['ad-hoc', 'geometry', 'area of a polygon']"
2430,243000,거울대칭트리 그래프,25,"['ad-hoc', 'graph theory', 'implementation', 'tree', 'tree isomorphism']"
2431,243100,신호 장애,20,"['binary search', 'greedy', 'mathematics']"
2432,243200,순위 정렬,24,"['dynamic programming', 'sorting']"
2433,243300,The Sound of Silence,16,"['data structures', 'deque', 'sliding window']"
2434,243400,점 연결하기,19,"['case work', 'exponentiation by squaring', 'mathematics']"
2435,243500,기상청 인턴 신현수,5,"['bruteforcing', 'prefix sum']"
2436,243600,공약수,11,"['bruteforcing', 'euclidean algorithm', 'mathematics', 'number theory']"
2437,243700,저울,14,"['greedy', 'sorting']"
2438,243800,별 찍기 - 1,1,['implementation']
2439,243900,별 찍기 - 2,2,['implementation']
2440,244000,별 찍기 - 3,2,['implementation']
2441,244100,별 찍기 - 4,3,['implementation']
2442,244200,별 찍기 - 5,3,['implementation']
2443,244300,별 찍기 - 6,3,['implementation']
2444,244400,별 찍기 - 7,3,['implementation']
2445,244500,별 찍기 - 8,3,['implementation']
2446,244600,별 찍기 - 9,3,['implementation']
2447,244700,별 찍기 - 10,10,"['divide and conquer', 'recursion']"
2448,244800,별 찍기 - 11,12,['recursion']
2449,244900,전구,17,['dynamic programming']
2450,245000,모양 정돈,14,"['bruteforcing', 'greedy', 'implementation']"
2451,245100,모둠,17,"['dynamic programming', 'prefix sum']"
2452,245200,그리드 게임,20,"['breadth-first search', 'graph theory', 'graph traversal']"
2453,245300,부서 배치,19,"['data structures', 'depth-first search', 'disjoint set', 'dynamic programming', 'graph theory', 'graph traversal']"
2454,245400,트리 분할,19,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'tree']"
2455,245500,지능형 기차,3,"['arithmetic', 'implementation', 'mathematics']"
2456,245600,나는 학급회장이다,5,"['case work', 'implementation']"
2457,245700,공주님의 정원,13,"['greedy', 'sorting']"
2458,245800,키 순서,12,"['floyd–warshall', 'graph theory', 'graph traversal']"
2459,245900,철사 자르기,12,['implementation']
2460,246000,지능형 기차 2,3,"['arithmetic', 'implementation', 'mathematics']"
2461,246100,대표 선수,14,"['data structures', 'two-pointer']"
2462,246200,보도블록,17,[]
2463,246300,비용,16,"['data structures', 'disjoint set']"
2464,246400,비밀번호,14,"['bitmask', 'greedy', 'mathematics']"
2465,246500,줄 세우기,18,"['data structures', 'segment tree']"
2466,246600,책장,22,"['binary search', 'data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque', 'parametric search']"
2467,246700,용액,11,"['binary search', 'two-pointer']"
2468,246800,안전 영역,10,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
2469,246900,사다리 타기,11,"['implementation', 'string']"
2470,247000,두 용액,11,"['binary search', 'sorting', 'two-pointer']"
2471,247100,모빌 이진수,19,"['data structures', 'priority queue', 'set / map by trees']"
2472,247200,체인점,20,"['data structures', ""dijkstra's"", 'graph theory', 'segment tree']"
2473,247300,세 용액,13,"['binary search', 'sorting', 'two-pointer']"
2474,247400,교차 선분,19,['greedy']
2475,247500,검증수,1,"['implementation', 'arithmetic', 'mathematics']"
2476,247600,주사위 게임,3,"['implementation', 'mathematics']"
2477,247700,참외밭,8,"['geometry', 'implementation', 'mathematics']"
2478,247800,자물쇠,15,"['implementation', 'simulation']"
2479,247900,경로 찾기,12,"['breadth-first search', 'graph theory', 'graph traversal']"
2480,248000,주사위 세개,2,"['arithmetic', 'mathematics']"
2481,248100,해밍 경로,14,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal']"
2482,248200,색상환,12,['dynamic programming']
2483,248300,병원,25,"['depth-first search', 'graph theory', 'graph traversal', 'greedy', 'tree']"
2484,248400,주사위 네개,4,"['case work', 'implementation', 'mathematics']"
2485,248500,가로수,7,"['euclidean algorithm', 'mathematics', 'number theory']"
2486,248600,그레이 코드,20,['constructive']
2487,248700,섞기 수열,12,"['euclidean algorithm', 'mathematics', 'number theory', 'permutation cycle decomposition']"
2488,248800,줄다리기,0,"['dynamic programming', 'parametric search', 'prefix sum']"
2489,248900,응급센터,25,"['ad-hoc', 'graph theory', 'greedy', 'implementation', 'tree']"
2490,249000,윷놀이,3,['implementation']
2491,249100,수열,7,"['dynamic programming', 'implementation']"
2492,249200,보석,13,"['bruteforcing', 'sliding window']"
2493,249300,탑,11,"['data structures', 'stack']"
2494,249400,숫자 맞추기,16,['dynamic programming']
2495,249500,연속구간,4,['string']
2496,249600,금강석,18,"['bruteforcing', 'geometry']"
2497,249700,횡단도로,17,[]
2498,249800,중앙문자열,18,"['case work', 'greedy']"
2499,249900,의좋은 형제,15,"['dynamic programming', 'knapsack']"
2500,250000,복불복,19,"['exponentiation by squaring', 'mathematics']"
2501,250100,약수 구하기,3,"['bruteforcing', 'mathematics']"
2502,250200,떡 먹는 호랑이,9,"['bruteforcing', 'dynamic programming', 'mathematics']"
2503,250300,숫자 야구,8,"['bruteforcing', 'implementation']"
2504,250400,괄호의 값,10,"['data structures', 'implementation', 'stack']"
2505,250500,두 번 뒤집기,16,"['ad-hoc', 'implementation']"
2506,250600,점수계산,3,"['arithmetic', 'implementation', 'mathematics']"
2507,250700,공주 구하기,18,['dynamic programming']
2508,250800,사탕 박사 고창영,5,"['bruteforcing', 'implementation']"
2509,250900,쉬운 매췽,9,[]
2510,251000,어려운 매췽,0,[]
2511,251100,카드놀이,4,['implementation']
2512,251200,예산,8,"['binary search', 'parametric search']"
2513,251300,통학버스,13,"['greedy', 'sorting']"
2514,251400,자동분무기,17,"['implementation', 'mathematics']"
2515,251500,전시장,14,"['binary search', 'dynamic programming', 'sorting']"
2516,251600,원숭이,17,"['constructive', 'implementation']"
2517,251700,달리기,17,"['value / coordinate compression', 'data structures', 'segment tree']"
2518,251800,회전 테이블,16,['dynamic programming']
2519,251900,막대기,21,"['2-sat', 'geometry', 'graph theory', 'line segment intersection check', 'strongly connected component']"
2520,252000,팬케이크 사랑,4,"['arithmetic', 'implementation', 'mathematics']"
2521,252100,팬케이크 사랑 2,0,[]
2522,252200,별 찍기 - 12,3,['implementation']
2523,252300,별 찍기 - 13,3,['implementation']
2524,252400,희원이의 뉴욕 생활,11,['geometry']
2525,252500,오븐 시계,3,"['arithmetic', 'mathematics']"
2526,252600,싸이클,5,['implementation']
2527,252700,직사각형,9,"['case work', 'geometry', 'mathematics']"
2528,252800,사다리,13,"['implementation', 'mathematics', 'simulation']"
2529,252900,부등호,10,"['backtracking', 'bruteforcing']"
2530,253000,인공지능 시계,2,"['arithmetic', 'mathematics']"
2531,253100,회전 초밥,10,"['bruteforcing', 'two-pointer']"
2532,253200,먹이사슬,17,"['binary search', 'longest increasing sequence in o(n log n)', 'sorting']"
2533,253300,사회망 서비스(SNS),13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
2534,253400,카드 배열,21,"['graph theory', 'greedy', 'topological sorting']"
2535,253500,아시아 정보올림피아드,6,"['implementation', 'sorting']"
2536,253600,버스 갈아타기,15,"['breadth-first search', 'geometry', 'graph theory', 'graph traversal']"
2537,253700,점핑 사다리,0,[]
2538,253800,모눈종이 자르기,16,['implementation']
2539,253900,모자이크,13,['binary search']
2540,254000,계란,19,"['ad-hoc', 'implementation', 'simulation']"
2541,254100,점,14,['mathematics']
2542,254200,양팔저울,21,"['geometry', 'line segment intersection check']"
2543,254300,초고속철도,16,"['binary search', 'dynamic programming', 'sorting']"
2544,254400,격자판,20,['bipartite matching']
2545,254500,팬케익 먹기,5,"['arithmetic', 'mathematics']"
2546,254600,경제학과 정원영,5,"['implementation', 'mathematics']"
2547,254700,사탕 선생 고창영,3,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
2548,254800,대표 자연수,8,"['bruteforcing', 'sorting']"
2549,254900,루빅의 사각형,18,"['backtracking', 'bidirectional search', 'graph theory', 'meet in the middle']"
2550,255000,전구,13,"['dynamic programming', 'longest increasing sequence in o(n log n)']"
2551,255100,두 대표 자연수,12,"['mathematics', 'sorting']"
2552,255200,전구숫자,19,"['bitmask', 'dynamic programming', 'meet in the middle']"
2553,255300,마지막 팩토리얼 수,9,"['mathematics', 'number theory']"
2554,255400,마지막 팩토리얼 수2,19,"['arbitrary precision / big integers', 'mathematics', 'number theory']"
2555,255500,생일 출력하기,0,[]
2556,255600,별 찍기 - 14,0,['implementation']
2557,255700,Hello World,1,['implementation']
2558,255800,A+B - 2,1,"['implementation', 'arithmetic', 'mathematics']"
2559,255900,수열,8,"['prefix sum', 'sliding window', 'two-pointer']"
2560,256000,짚신벌레,13,['dynamic programming']
2561,256100,세 번 뒤집기,21,"['ad-hoc', 'backtracking', 'bruteforcing', 'implementation']"
2562,256200,최댓값,3,['implementation']
2563,256300,색종이,5,['implementation']
2564,256400,경비원,10,"['case work', 'implementation']"
2565,256500,전깃줄,11,['dynamic programming']
2566,256600,최댓값,3,['implementation']
2567,256700,색종이 - 2,7,['implementation']
2568,256800,전깃줄 - 2,16,['longest increasing sequence in o(n log n)']
2569,256900,짐정리,20,"['greedy', 'permutation cycle decomposition']"
2570,257000,비숍2,19,['bipartite matching']
2571,257100,색종이 - 3,13,"['implementation', 'prefix sum']"
2572,257200,보드게임,13,"['dynamic programming', 'graph theory']"
2573,257300,빙산,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
2574,257400,마법색종이,22,"['data structures', 'divide and conquer', 'smaller to larger technique', 'tree', 'set / map by trees']"
2575,257500,수열,11,"['case work', 'mathematics', 'number theory']"
2576,257600,홀수,3,"['implementation', 'mathematics']"
2577,257700,숫자의 개수,4,"['arithmetic', 'implementation', 'mathematics']"
2578,257800,빙고,7,['implementation']
2579,257900,계단 오르기,8,['dynamic programming']
2580,258000,스도쿠,12,['backtracking']
2581,258100,소수,6,"['mathematics', 'number theory', 'primality test']"
2582,258200,동전 뒤집기 2,20,"['heuristics', 'randomization', 'simulated annealing']"
2583,258300,영역 구하기,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
2584,258400,트리분할,22,"['dynamic programming', 'dynamic programming on trees', 'tree']"
2585,258500,경비행기,14,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal', 'parametric search']"
2586,258600,소방차,24,"['dynamic programming', 'greedy']"
2587,258700,대표값2,4,"['arithmetic', 'implementation', 'mathematics']"
2588,258800,곱셈,3,"['arithmetic', 'mathematics']"
2589,258900,보물섬,11,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
2590,259000,색종이,12,"['case work', 'greedy']"
2591,259100,숫자카드,11,['dynamic programming']
2592,259200,대표값,4,"['implementation', 'mathematics']"
2593,259300,엘리베이터,16,"['breadth-first search', 'graph theory', 'graph traversal']"
2594,259400,놀이공원,8,"['implementation', 'sweeping']"
2595,259500,배수,20,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory']"
2596,259600,비밀편지,5,"['implementation', 'string']"
2597,259700,줄자접기,7,['implementation']
2598,259800,기둥만들기,18,"['bruteforcing', 'implementation']"
2599,259900,짝 정하기,8,"['bruteforcing', 'implementation']"
2600,260000,구슬게임,12,"['dynamic programming', 'game theory']"
2601,260100,도서실카펫,20,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
2602,260200,돌다리 건너기,12,['dynamic programming']
2603,260300,고속버스 노선,0,[]
2604,260400,농지 정리,22,[]
2605,260500,줄 세우기,4,"['data structures', 'implementation']"
2606,260600,바이러스,8,"['graph theory', 'graph traversal', 'breadth-first search', 'depth-first search']"
2607,260700,비슷한 단어,8,"['implementation', 'string']"
2608,260800,로마 숫자,10,"['implementation', 'mathematics', 'string']"
2609,260900,최대공약수와 최소공배수,5,"['euclidean algorithm', 'mathematics', 'number theory']"
2610,261000,회의준비,14,"['data structures', 'disjoint set', 'floyd–warshall', 'graph theory', 'graph traversal']"
2611,261100,자동차경주,14,"['dynamic programming', 'graph theory', 'topological sorting']"
2612,261200,DNA 유사도,16,['dynamic programming']
2613,261300,숫자구슬,14,"['binary search', 'dynamic programming', 'greedy']"
2614,261400,청개구리,25,"['backtracking', 'gaussian elimination', 'linear algebra', 'mathematics']"
2615,261500,오목,10,"['bruteforcing', 'implementation']"
2616,261600,소형기관차,13,"['dynamic programming', 'prefix sum']"
2617,261700,구슬 찾기,12,"['depth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
2618,261800,경찰차,16,['dynamic programming']
2619,261900,단순 사각형,16,"['binary search', 'value / coordinate compression', 'graph theory', 'graph traversal', 'implementation']"
2620,262000,직각다각형의 면적 구하기,17,"['breadth-first search', 'value / coordinate compression', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
2621,262100,카드게임,7,['implementation']
2622,262200,삼각형만들기,6,['mathematics']
2623,262300,음악프로그램,13,"['graph theory', 'topological sorting']"
2624,262400,동전 바꿔주기,11,['dynamic programming']
2625,262500,DNA유사도,19,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
2626,262600,헬기착륙장,21,"['geometry', 'heuristics', 'minimum enclosing circle']"
2627,262700,트리회전,0,[]
2628,262800,종이자르기,6,['sorting']
2629,262900,양팔저울,13,"['dynamic programming', 'knapsack']"
2630,263000,색종이 만들기,9,"['divide and conquer', 'recursion']"
2631,263100,줄세우기,12,['dynamic programming']
2632,263200,피자판매,14,"['binary search', 'prefix sum']"
2633,263300,로봇,16,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
2634,263400,버스노선,0,[]
2635,263500,수 이어가기,6,"['bruteforcing', 'mathematics']"
2636,263600,치즈,12,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
2637,263700,장난감 조립,14,"['dynamic programming', 'graph theory', 'topological sorting']"
2638,263800,치즈,13,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
2639,263900,주차장,0,[]
2640,264000,유전자,0,[]
2641,264100,다각형그리기,9,['implementation']
2642,264200,전개도,16,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
2643,264300,색종이 올려 놓기,12,"['dynamic programming', 'sorting']"
2644,264400,촌수계산,9,"['graph theory', 'graph traversal', 'breadth-first search', 'depth-first search']"
2645,264500,회로배치,17,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
2646,264600,같은 길이 막대기 만들기,20,['backtracking']
2647,264700,검은점과 하얀점 연결,18,['dynamic programming']
2648,264800,단순 사각형,13,"['bruteforcing', 'implementation', 'simulation']"
2649,264900,비상 연락망,0,[]
2650,265000,교차점개수,12,"['geometry', 'implementation']"
2651,265100,자동차경주대회,12,['dynamic programming']
2652,265200,블록맞추기,15,['implementation']
2653,265300,안정된 집단,12,"['graph theory', 'implementation']"
2654,265400,연결 사각형,16,['backtracking']
2655,265500,가장높은탑쌓기,13,['dynamic programming']
2656,265600,울타리치기,0,[]
2657,265700,화물차의 경로,0,[]
2658,265800,직각이등변삼각형찾기,14,['implementation']
2659,265900,십자카드 문제,8,"['bruteforcing', 'implementation', 'sorting']"
2660,266000,회장뽑기,11,"['breadth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
2661,266100,좋은수열,12,['backtracking']
2662,266200,기업투자,13,"['dynamic programming', 'knapsack']"
2663,266300,간척지 만들기,17,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'mathematics']"
2664,266400,다각형의 확장,22,"['geometry', 'implementation']"
2665,266500,미로만들기,12,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
2666,266600,벽장문의 이동,11,"['bruteforcing', 'dynamic programming']"
2667,266700,단지번호붙이기,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
2668,266800,숫자고르기,11,"['depth-first search', 'graph theory', 'graph traversal']"
2669,266900,직사각형 네개의 합집합의 면적 구하기,5,['implementation']
2670,267000,연속부분최대곱,7,"['bruteforcing', 'dynamic programming']"
2671,267100,잠수함식별,10,"['regular expression', 'string']"
2672,267200,여러 직사각형의 전체 면적 구하기,14,['sweeping']
2673,267300,교차하지 않는 원의 현들의 최대집합,17,['dynamic programming']
2674,267400,삼각퍼즐,20,"['backtracking', 'implementation']"
2675,267500,문자열 반복,4,"['implementation', 'string']"
2676,267600,라스칼 삼각형,9,['mathematics']
2677,267700,에드삭 만들기,7,"['implementation', 'parsing', 'string']"
2678,267800,에드삭 데이터 디코딩하기,6,"['implementation', 'mathematics']"
2679,267900,맨체스터의 도로,18,"[""dijkstra's"", 'maximum flow', 'graph theory', 'graph traversal']"
2680,268000,QR,13,['implementation']
2681,268100,목장 주인 백승환의 선물,14,"['geometry', 'line segment intersection check']"
2682,268200,최대 사이클 1,13,"['combinatorics', 'mathematics']"
2683,268300,황금 천장,0,[]
2684,268400,동전 게임,5,"['implementation', 'string']"
2685,268500,님비합,9,"['implementation', 'mathematics']"
2686,268600,팩스,13,"['implementation', 'string']"
2687,268700,팩스 받기,11,[]
2688,268800,줄어들지 않아,10,['dynamic programming']
2689,268900,I²C,14,"['implementation', 'string']"
2690,269000,옛날에는 조판을 어떻게 했을까?,12,"['data structures', 'parsing', 'regular expression', 'stack', 'string']"
2691,269100,UPC 바코드 읽기,13,[]
2692,269200,쌍둥이 규현이와 승환이의 생일 케익,17,['geometry']
2693,269300,N번째 큰 수,5,['sorting']
2694,269400,합이 같은 구간,13,"['bruteforcing', 'mathematics', 'number theory', 'prefix sum']"
2695,269500,공,14,['dynamic programming']
2696,269600,중앙값 구하기,14,"['data structures', 'priority queue']"
2697,269700,다음수 구하기,9,"['greedy', 'string']"
2698,269800,인접한 비트의 개수,12,['dynamic programming']
2699,269900,격자점 컨벡스헐,16,"['convex hull', 'geometry']"
2700,270000,볼록 격자 다각형의 내부점,15,"['binary search', 'bruteforcing', 'geometry', 'point in convex polygon check']"
2701,270100,육각 퍼즐,15,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
2702,270200,초6 수학,4,"['arithmetic', 'bruteforcing', 'mathematics', 'number theory']"
2703,270300,Cryptoquote,4,"['implementation', 'string']"
2704,270400,이진법 시계,4,['implementation']
2705,270500,팰린드롬 파티션,10,"['dynamic programming', 'recursion']"
2706,270600,문자 보내기,0,[]
2707,270700,노말 정렬,0,[]
2708,270800,폴리큐브의 겉넓이,13,"['implementation', 'parsing', 'string']"
2709,270900,가장 작은 K,18,"['arbitrary precision / big integers', 'exponentiation by squaring', 'mathematics', 'number theory']"
2710,271000,삼각형 정원,15,"['calculus', 'geometry', 'mathematics']"
2711,271100,오타맨 고창영,4,"['implementation', 'string']"
2712,271200,미국 스타일,3,"['arithmetic', 'implementation', 'mathematics']"
2713,271300,규현이의 사랑을 담은 문자메시지,8,['implementation']
2714,271400,문자를 받은 승환이,6,"['implementation', 'string']"
2715,271500,상범 마법 팬케이크 하우스,11,['constructive']
2716,271600,원숭이 매달기,10,"['data structures', 'stack', 'tree']"
2717,271700,Model Rocket Height,0,[]
2718,271800,타일 채우기,15,"['bitmask', 'dynamic programming']"
2719,271900,공간 개념 테스트,0,[]
2720,272000,세탁소 사장 동혁,3,"['arithmetic', 'greedy', 'mathematics']"
2721,272100,삼각수의 합,3,"['implementation', 'mathematics']"
2722,272200,Shuffle’m Up,9,[]
2723,272300,눌러서 잠금 해제,11,"['bitmask', 'combinatorics', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics']"
2724,272400,메시지 변환기,18,"['data structures', 'implementation', 'parsing', 'stack', 'string']"
2725,272500,보이는 점의 개수,9,"['euclidean algorithm', 'mathematics', 'number theory', 'prefix sum']"
2726,272600,삼각 N-Queen,15,"['constructive', 'mathematics']"
2727,272700,"2,3 거듭제곱의 합",17,"['ad-hoc', 'constructive', 'greedy', 'mathematics', 'recursion']"
2728,272800,오늘은 마가리타 한 잔?,16,['dynamic programming']
2729,272900,이진수 덧셈,5,"['arithmetic', 'implementation', 'mathematics']"
2730,273000,오늘은 OS 숙제 제출일,10,"['bruteforcing', 'case work', 'implementation', 'parsing', 'string']"
2731,273100,1379와 세제곱,16,"['backtracking', 'mathematics', 'number theory']"
2732,273200,Kindergarten Graduation,0,[]
2733,273300,Brainf*ck,13,"['data structures', 'implementation', 'simulation', 'stack', 'string']"
2734,273400,드럼통 쌓기,0,[]
2735,273500,No Fold’em Hold’em,0,[]
2736,273600,모형 로켓 발사,0,[]
2737,273700,연속 합,12,"['mathematics', 'number theory']"
2738,273800,행렬 덧셈,1,"['implementation', 'mathematics']"
2739,273900,구구단,1,"['implementation', 'mathematics']"
2740,274000,행렬 곱셈,6,"['implementation', 'linear algebra', 'mathematics']"
2741,274100,N 찍기,1,['implementation']
2742,274200,기찍 N,2,['implementation']
2743,274300,단어 길이 재기,1,"['implementation', 'string']"
2744,274400,대소문자 바꾸기,1,"['implementation', 'string']"
2745,274500,진법 변환,4,"['implementation', 'string', 'mathematics']"
2747,274700,피보나치 수,4,"['implementation', 'mathematics']"
2748,274800,피보나치 수 2,5,"['dynamic programming', 'mathematics']"
2749,274900,피보나치 수 3,14,"['exponentiation by squaring', 'mathematics']"
2750,275000,수 정렬하기,4,"['sorting', 'implementation']"
2751,275100,수 정렬하기 2,6,['sorting']
2752,275200,세수정렬,2,['sorting']
2753,275300,윤년,1,"['implementation', 'arithmetic', 'mathematics']"
2754,275400,학점계산,1,"['implementation', 'string']"
2755,275500,이번학기 평점은 몇점?,5,"['arithmetic', 'implementation', 'mathematics']"
2756,275600,다트,4,"['geometry', 'implementation', 'mathematics', 'pythagoras theorem']"
2757,275700,엑셀,8,"['mathematics', 'string']"
2758,275800,로또,12,['dynamic programming']
2759,275900,팬케이크 뒤집기,11,"['constructive', 'greedy']"
2760,276000,마술사 현우,8,"['case work', 'parsing', 'string']"
2761,276100,모형 로켓의 높이,14,"['geometry', 'geometry; 3d', 'mathematics']"
2762,276200,구역 채우기,0,"['ad-hoc', 'case work', 'geometry', 'implementation']"
2763,276300,Histology Assistant,16,"['ad-hoc', 'depth-first search', 'graph theory', 'graph traversal', 'greedy', 'implementation']"
2764,276400,마지막 사진 찍기,15,['dynamic programming']
2765,276500,자전거 속도,3,"['arithmetic', 'mathematics']"
2766,276600,Candy Sharing Game,6,"['implementation', 'simulation']"
2768,276800,세금 계산,0,[]
2769,276900,논리식 비교,20,"['backtracking', 'implementation', 'parsing', 'string']"
2772,277200,완전히 다양화된 수열,0,[]
2773,277300,바깥 삼각형의 중심,13,['geometry']
2774,277400,아름다운 수,4,['implementation']
2775,277500,부녀회장이 될테야,5,"['dynamic programming', 'implementation', 'mathematics']"
2776,277600,암기왕,7,"['binary search', 'data structures', 'set / map by hashing', 'sorting']"
2777,277700,숫자 놀이,9,"['greedy', 'mathematics']"
2778,277800,측량사 지윤,13,['geometry']
2779,277900,비밀어,14,['dynamic programming']
2780,278000,비밀번호,10,"['dynamic programming', 'graph theory']"
2781,278100,놀이 동산,0,[]
2782,278200,로맨틱 왕,18,"['breadth-first search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal', 'travelling salesman problem']"
2783,278300,삼각 김밥,3,"['arithmetic', 'implementation', 'mathematics']"
2784,278400,가로 세로 퍼즐,8,"['bruteforcing', 'implementation']"
2785,278500,체인,9,['greedy']
2786,278600,상근이의 레스토랑,14,"['greedy', 'sorting']"
2787,278700,흔한 수열 문제,18,['bipartite matching']
2788,278800,스타트업,20,"['data structures', 'merge sort tree', 'offline queries', 'segment tree', 'sorting']"
2789,278900,유학 금지,4,"['implementation', 'string']"
2790,279000,F7,9,"['ad-hoc', 'greedy', 'sorting']"
2791,279100,KONCERT,0,[]
2792,279200,보석 상자,9,"['binary search', 'parametric search']"
2793,279300,숫자의 힘,17,"['mathematics', 'number theory']"
2794,279400,화성,20,['dynamic programming']
2795,279500,사업 확장,24,"['backtracking', ""dijkstra's"", 'dynamic programming', 'floyd–warshall', 'graph theory']"
2796,279600,만남,16,['geometry']
2797,279700,트램폴린,16,['greedy']
2798,279800,블랙잭,4,['bruteforcing']
2799,279900,블라인드,7,['implementation']
2800,280000,괄호 제거,11,"['data structures', 'recursion', 'stack', 'string']"
2801,280100,REZ,11,['mathematics']
2802,280200,크레용,18,"['binary search', 'inclusion and exclusion', 'parametric search', 'prefix sum']"
2803,280300,내가 어렸을 때 가지고 놀던 장난감,21,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'inclusion and exclusion']"
2804,280400,크로스워드 만들기,4,"['implementation', 'string']"
2805,280500,나무 자르기,9,"['binary search', 'parametric search']"
2806,280600,DNA 발견,12,['dynamic programming']
2807,280700,정사각형 크로스워드,19,"['combinatorics', 'graph theory', 'mathematics']"
2808,280800,책 쌓기,18,[]
2809,280900,아스키 거리,20,"['aho-corasick', 'data structures', 'string', 'tree', 'trie']"
2810,281000,컵홀더,5,"['greedy', 'implementation', 'string']"
2811,281100,상범이의 우울,7,"['bruteforcing', 'implementation', 'prefix sum', 'simulation']"
2812,281200,크게 만들기,13,"['data structures', 'greedy', 'stack']"
2813,281300,매력있는 울타리,17,"['constructive', 'greedy']"
2814,281400,최소인수,21,"['binary search', 'case work', 'inclusion and exclusion', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
2815,281500,암호 해독가 최준민,0,[]
2816,281600,디지털 티비,5,"['constructive', 'implementation']"
2817,281700,ALPS식 투표,8,['implementation']
2818,281800,숙제하기 싫을 때,10,"['constructive', 'implementation', 'mathematics', 'simulation']"
2819,281900,상근이의 로봇,14,"['binary search', 'prefix sum']"
2820,282000,자동차 공장,18,"['data structures', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
2821,282100,컨베이어 벨트,20,[]
2822,282200,점수 계산,6,['sorting']
2823,282300,유턴 싫어,9,['graph theory']
2824,282400,최대공약수,10,"['implementation', 'mathematics', 'number theory', 'primality test']"
2825,282500,수업시간에 교수님 몰래 교실을 나간 상근이,14,"['bitmask', 'mathematics']"
2826,282600,함수의 리턴값,21,"['dynamic programming', 'prefix sum']"
2827,282700,현주네 피자 가게,20,[]
2828,282800,사과 담기 게임,6,"['greedy', 'implementation']"
2829,282900,아름다운 행렬,13,['prefix sum']
2830,283000,행성 X3,13,"['bitmask', 'mathematics']"
2831,283100,댄스 파티,12,"['greedy', 'sorting', 'two-pointer']"
2832,283200,정렬,16,"['data structures', 'segment tree']"
2833,283300,나이트,0,[]
2834,283400,박스 정렬,0,[]
2835,283500,인기도 조사,17,"['data structures', 'implementation', 'segment tree with lazy propagation', 'prefix sum', 'segment tree']"
2836,283600,수상 택시,13,['sweeping']
2837,283700,트럭 운전사 상근,24,[]
2838,283800,비숍 낙서,0,[]
2839,283900,설탕 배달,7,"['dynamic programming', 'greedy', 'mathematics']"
2840,284000,행운의 바퀴,7,"['implementation', 'simulation']"
2841,284100,외계인의 기타 연주,10,"['data structures', 'stack']"
2842,284200,집배원 한상덕,16,"['breadth-first search', 'binary search', 'depth-first search', 'graph theory', 'graph traversal', 'two-pointer']"
2843,284300,마블,18,"['data structures', 'disjoint set', 'offline queries']"
2844,284400,자료 구조,24,"['splay tree', 'tree']"
2845,284500,파티가 끝나고 난 뒤,2,"['implementation', 'arithmetic', 'mathematics']"
2846,284600,오르막길,5,['implementation']
2847,284700,게임을 만든 동준이,7,['greedy']
2848,284800,알고스팟어,17,"['graph theory', 'topological sorting']"
2849,284900,탭댄스,20,"['data structures', 'segment tree']"
2850,285000,배관공 김선영,25,"['dynamic programming', 'dynamic programming using connection profile']"
2851,285100,슈퍼 마리오,4,"['bruteforcing', 'implementation', 'prefix sum']"
2852,285200,NBA 농구,8,"['implementation', 'string']"
2853,285300,배,10,"['greedy', 'mathematics', 'number theory']"
2854,285400,문제 출제,12,['dynamic programming']
2855,285500,흥미로운 수열,18,"['binary search', 'parametric search', 'prefix sum']"
2856,285600,동규가 설치한 그림판,0,[]
2857,285700,FBI,3,"['string', 'implementation']"
2858,285800,기숙사 바닥,4,"['arithmetic', 'bruteforcing', 'mathematics']"
2859,285900,별 관찰,7,"['bruteforcing', 'mathematics', 'number theory']"
2860,286000,종이에 숫자 쓰기,12,"['euclidean algorithm', 'mathematics', 'number theory']"
2861,286100,원섭동 사람들,17,"['graph theory', 'greedy', 'topological sorting']"
2862,286200,수학 게임,20,"['dynamic programming', 'game theory', 'mathematics']"
2863,286300,이게 분수?,3,"['arithmetic', 'implementation', 'mathematics']"
2864,286400,5와 6의 차이,4,"['arithmetic', 'greedy', 'mathematics']"
2865,286500,나는 위대한 슈퍼스타K,7,"['greedy', 'sorting']"
2866,286600,문자열 잘라내기,11,"['binary search', 'sorting', 'string']"
2867,286700,수열의 값,17,"['data structures', 'stack']"
2868,286800,MONO,18,"['data structures', 'sweeping']"
2869,286900,달팽이는 올라가고 싶다,6,['mathematics']
2870,287000,수학숙제,7,"['parsing', 'sorting', 'string']"
2871,287100,아름다운 단어,14,['greedy']
2872,287200,우리집엔 도서관이 있어,9,['greedy']
2873,287300,롤러코스터,18,"['constructive', 'greedy', 'implementation']"
2874,287400,검정 직사각형,0,[]
2875,287500,대회 or 인턴,3,"['arithmetic', 'implementation', 'mathematics']"
2876,287600,그래픽스 퀴즈,9,['dynamic programming']
2877,287700,4와 7,11,"['implementation', 'mathematics']"
2878,287800,캔디캔디,14,"['binary search', 'greedy', 'sorting']"
2879,287900,코딩은 예쁘게,14,"['greedy', 'implementation']"
2880,288000,ŽABE,17,"['ad-hoc', 'mathematics', 'number theory']"
2881,288100,산책길,13,"['binary search', 'sorting']"
2882,288200,소수 사이클,18,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
2883,288300,남극의 과학자,0,[]
2884,288400,알람 시계,3,"['arithmetic', 'mathematics']"
2885,288500,초콜릿 식사,9,"['greedy', 'mathematics', 'number theory']"
2886,288600,자리 전쟁,15,"['greedy', 'implementation', 'sorting']"
2887,288700,행성 터널,16,"['graph theory', 'minimum spanning tree', 'sorting']"
2888,288800,상범 게임,18,['dynamic programming']
2889,288900,레스토랑,22,"['constructive', 'depth-first search', 'eulerian path / circuit', 'graph theory', 'graph traversal']"
2890,289000,카약,6,"['implementation', 'sorting', 'string']"
2891,289100,카약과 강풍,6,"['greedy', 'implementation']"
2892,289200,심심한 준규,11,"['ad-hoc', 'bitmask']"
2893,289300,XOR 도형,17,['inclusion and exclusion']
2894,289400,명탐정 홍즈,0,[]
2895,289500,그렘린,0,[]
2896,289600,무알콜 칵테일,5,"['arithmetic', 'mathematics']"
2897,289700,몬스터 트럭,5,"['bruteforcing', 'implementation']"
2898,289800,고대 자물쇠,14,[]
2899,289900,구슬 없애기,21,['dynamic programming']
2900,290000,프로그램,14,"['mathematics', 'number theory', 'prefix sum']"
2901,290100,CHUCK,0,[]
2902,290200,KMP는 왜 KMP일까?,4,"['implementation', 'string']"
2903,290300,중앙 이동 알고리즘,3,['mathematics']
2904,290400,수학은 너무 쉬워,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
2905,290500,홍준이와 울타리,19,"['data structures', 'sliding window']"
2906,290600,폭발 사고,18,"['data structures', 'dynamic programming', 'inclusion and exclusion', 'segment tree']"
2907,290700,재료 사러 가는 길,21,"['exponentiation by squaring', 'graph theory', 'mathematics']"
2908,290800,상수,4,"['implementation', 'mathematics']"
2909,290900,캔디 구매,4,"['implementation', 'mathematics']"
2910,291000,빈도 정렬,8,"['data structures', 'set / map by hashing', 'sorting', 'set / map by trees']"
2911,291100,전화 복구,16,"['greedy', 'sorting']"
2912,291200,백설공주와 난쟁이,19,"['data structures', ""mo's"", 'offline queries', 'randomization', 'segment tree']"
2913,291300,동혁 천문 관측소,0,[]
2914,291400,저작권,3,"['implementation', 'arithmetic', 'mathematics']"
2915,291500,로마 숫자 재배치,10,[]
2916,291600,자와 각도기,12,"['mathematics', 'number theory']"
2917,291700,늑대 사냥꾼,14,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
2918,291800,Arrange,0,[]
2919,291900,카드 놀이,20,"['data structures', 'greedy', 'priority queue', 'string', 'suffix array and lcp array']"
2920,292000,음계,4,['implementation']
2921,292100,도미노,3,['mathematics']
2922,292200,즐거운 단어,11,"['backtracking', 'bruteforcing']"
2923,292300,숫자 게임,15,"['greedy', 'two-pointer']"
2924,292400,천재,16,"['graph theory', 'mathematics', 'permutation cycle decomposition']"
2925,292500,신기한 물체,24,"['value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'mathematics', 'number theory', 'offline queries', 'segment tree']"
2926,292600,비례대표,0,[]
2927,292700,남극 탐험,21,"['data structures', 'disjoint set', 'heavy-light decomposition', 'offline queries', 'segment tree', 'tree']"
2928,292800,빨랫줄,23,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
2929,292900,머신 코드,5,"['implementation', 'parsing', 'regular expression', 'string']"
2930,293000,가위 바위 보,5,"['bruteforcing', 'greedy', 'implementation']"
2931,293100,가스관,14,"['implementation', 'simulation']"
2932,293200,표 회전,8,[]
2933,293300,미네랄,14,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
2934,293400,LRH 식물,17,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
2935,293500,소음,3,"['arithmetic', 'mathematics', 'string']"
2936,293600,채식주의자,6,"['case work', 'geometry', 'mathematics']"
2937,293700,블록 정리,12,"['bruteforcing', 'prefix sum']"
2938,293800,3으로 나누어 떨어지지 않는 배열,11,"['case work', 'constructive', 'mathematics']"
2939,293900,택배 배달,21,"['dynamic programming', 'graph theory']"
2940,294000,SLICICE,0,[]
2941,294100,크로아티아 알파벳,6,"['implementation', 'string']"
2942,294200,퍼거슨과 사과,9,"['euclidean algorithm', 'mathematics', 'number theory']"
2943,294300,토끼,7,"['implementation', 'simulation', 'square root decomposition']"
2944,294400,수박 던지기 게임,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'implementation', 'simulation']"
2945,294500,사과의 개수,19,['dynamic programming']
2946,294600,알라딘과 램프,19,"['dynamic programming', 'implementation', 'simulation']"
2947,294700,나무 조각,5,"['implementation', 'simulation']"
2948,294800,2009년,4,['implementation']
2949,294900,45도,7,['implementation']
2950,295000,SLIKAR,0,[]
2951,295100,금고 사업,22,['inclusion and exclusion']
2952,295200,주기율표,0,[]
2953,295300,나는 요리사다,3,"['arithmetic', 'implementation', 'mathematics']"
2954,295400,창영이의 일기장,4,"['implementation', 'string']"
2955,295500,스도쿠 풀기,14,['implementation']
2956,295600,대칭 행렬,21,"['greedy', 'implementation']"
2957,295700,이진 탐색 트리,16,"['data structures', 'set / map by trees']"
2958,295800,도로 네트워크,19,"[""dijkstra's"", 'graph theory']"
2959,295900,거북이,3,"['arithmetic', 'mathematics']"
2960,296000,에라토스테네스의 체,7,"['implementation', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
2961,296100,도영이가 만든 맛있는 음식,9,"['bitmask', 'bruteforcing']"
2962,296200,동물원 확장,17,['binary search']
2963,296300,무한 이진 트리 탐색,12,"['arbitrary precision / big integers', 'mathematics']"
2964,296400,벽과 못,21,"['convex hull', 'geometry']"
2965,296500,캥거루 세마리,3,['mathematics']
2966,296600,찍기,4,['implementation']
2967,296700,그리스-로마 건축,16,"['bruteforcing', 'implementation']"
2968,296800,보드 게임의 왕 김동혁,18,"['implementation', 'mathematics']"
2969,296900,메뚜기,18,"['data structures', 'dynamic programming']"
2970,297000,두더지,0,[]
2971,297100,GLASNICI,0,[]
2972,297200,KOLEKCIJA,11,[]
2973,297300,TAMNICA,0,[]
2974,297400,자기곱,21,"['bruteforcing', 'dynamic programming', 'mathematics', 'number theory']"
2975,297500,Transactions,3,"['arithmetic', 'implementation', 'mathematics']"
2976,297600,NIKOLA,14,['dynamic programming']
2977,297700,폭탄제조,15,"['binary search', 'parametric search']"
2978,297800,A=S,16,"['dynamic programming', 'greedy']"
2979,297900,트럭 주차,4,"['implementation', 'simulation']"
2980,298000,도로와 신호등,7,"['implementation', 'mathematics', 'simulation']"
2981,298100,검문,12,"['euclidean algorithm', 'mathematics', 'number theory']"
2982,298200,국왕의 방문,14,"[""dijkstra's"", 'graph theory']"
2983,298300,개구리 공주,17,"['data structures', 'implementation', 'linked list', 'sorting', 'set / map by trees']"
2984,298400,고속도로,19,"['dynamic programming', 'sorting']"
2985,298500,세 수,3,"['arithmetic', 'case work', 'implementation', 'mathematics']"
2986,298600,파스칼,8,"['mathematics', 'number theory']"
2987,298700,사과나무,12,"['geometry', 'implementation', 'mathematics', 'point in convex polygon check']"
2988,298800,아보가드로,19,['greedy']
2989,298900,개구리 왕눈이,17,['dynamic programming']
2990,299000,단어 검색,20,"['binary search', 'data structures', 'string', 'tree', 'trie']"
2991,299100,사나운 개,3,"['arithmetic', 'mathematics']"
2992,299200,크면서 작은 수,8,"['backtracking', 'bruteforcing', 'string']"
2993,299300,세 부분,6,"['bruteforcing', 'implementation', 'sorting', 'string']"
2994,299400,내한 공연,16,"['dynamic programming', 'knapsack']"
2995,299500,생일,17,"['data structures', 'longest increasing sequence in o(n log n)', 'segment tree']"
2996,299600,큐브 모으기,0,[]
2997,299700,네 번째 수,3,"['arithmetic', 'implementation', 'mathematics']"
2998,299800,8진수,4,"['implementation', 'mathematics', 'string']"
2999,299900,비밀 이메일,5,"['implementation', 'string']"
3000,300000,직각 삼각형,10,"['combinatorics', 'geometry', 'mathematics']"
3001,300100,이상한 문제,17,"['dynamic programming', 'parametric search']"
3002,300200,아날로그 다이얼,19,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
3003,300300,"킹, 퀸, 룩, 비숍, 나이트, 폰",1,"['implementation', 'arithmetic', 'mathematics']"
3004,300400,체스판 조각,3,['mathematics']
3005,300500,크로스워드 퍼즐 쳐다보기,9,"['implementation', 'parsing', 'string']"
3006,300600,터보소트,17,"['data structures', 'segment tree']"
3007,300700,숫자 원,18,"['ad-hoc', 'mathematics']"
3008,300800,직각 삼각형의 개수,17,"['binary search', 'geometry', 'sorting', 'two-pointer']"
3009,300900,네 번째 점,3,"['geometry', 'implementation']"
3010,301000,페그,9,"['bruteforcing', 'implementation']"
3011,301100,이름 지어주기,14,['bruteforcing']
3012,301200,올바른 괄호 문자열,18,['dynamic programming']
3013,301300,부분 수열의 중앙값,14,['prefix sum']
3014,301400,자전거 경주,24,"['articulation points and bridges', 'cactus', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
3015,301500,오아시스 재결합,15,"['data structures', 'stack']"
3016,301600,Clustering,0,[]
3017,301700,가까운 수 찾기,16,"['backtracking', 'greedy', 'implementation']"
3018,301800,캠프파이어,7,"['data structures', 'set / map by hashing', 'implementation']"
3019,301900,테트리스,10,"['bruteforcing', 'implementation']"
3020,302000,개똥벌레,11,"['binary search', 'prefix sum']"
3021,302100,원형 자갈,0,[]
3022,302200,PRASE,7,"['data structures', 'set / map by hashing', 'implementation', 'simulation', 'string']"
3023,302300,마술사 이민혁,5,"['implementation', 'string']"
3024,302400,마라톤 틱택토,8,"['bruteforcing', 'implementation']"
3025,302500,돌 던지기,17,"['data structures', 'dynamic programming', 'implementation', 'simulation', 'stack']"
3026,302600,V,20,"['dynamic programming', 'mathematics']"
3027,302700,3차원 직사각형,22,"['data structures', 'geometry', 'geometry; 3d', 'multidimensional segment tree', 'segment tree', 'sliding window', 'sweeping']"
3028,302800,창영마을,4,"['implementation', 'simulation', 'string']"
3029,302900,경고,3,"['arithmetic', 'implementation', 'mathematics', 'string']"
3030,303000,테니스,15,"['case work', 'implementation', 'parsing', 'string']"
3031,303100,리그,15,"['bruteforcing', 'case work']"
3032,303200,승리,16,"['dynamic programming', 'game theory']"
3033,303300,가장 긴 문자열,18,"['hashing', 'rabin–karp', 'string', 'suffix array and lcp array']"
3034,303400,앵그리 창영,3,"['geometry', 'mathematics', 'pythagoras theorem']"
3035,303500,스캐너,5,"['implementation', 'string']"
3036,303600,링,7,"['euclidean algorithm', 'mathematics', 'number theory']"
3037,303700,혼란,15,"['dynamic programming', 'prefix sum']"
3038,303800,완전 이진 트리,17,"['ad-hoc', 'constructive', 'tree']"
3039,303900,스터디장 홍준,20,"['binary search', 'value / coordinate compression', 'data structures', 'segment tree']"
3040,304000,백설 공주와 일곱 난쟁이,4,['bruteforcing']
3041,304100,N-퍼즐,5,['implementation']
3042,304200,트리플렛,9,"['bruteforcing', 'geometry']"
3043,304300,장난감 탱크,17,"['greedy', 'sorting']"
3044,304400,자전거 경주 준비하기,17,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'topological sorting']"
3045,304500,이중 연결 리스트,18,"['data structures', 'greedy', 'linked list', 'longest increasing sequence in o(n log n)']"
3046,304600,R2,2,"['implementation', 'arithmetic', 'mathematics']"
3047,304700,ABC,3,['implementation']
3048,304800,개미,7,"['implementation', 'simulation', 'string']"
3049,304900,다각형의 대각선,6,"['combinatorics', 'mathematics']"
3050,305000,집들이,14,['prefix sum']
3051,305100,군사 기지,20,"['bruteforcing', 'geometry', 'line segment intersection check']"
3052,305200,나머지,4,"['arithmetic', 'mathematics']"
3053,305300,택시 기하학,3,"['geometry', 'mathematics']"
3054,305400,피터팬 프레임,6,['implementation']
3055,305500,탈출,12,"['breadth-first search', 'graph theory', 'graph traversal']"
3056,305600,007,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
3057,305700,디버그,18,"['bit set', 'dynamic programming', 'hashing', 'prefix sum']"
3058,305800,짝수를 찾아라,3,"['arithmetic', 'implementation', 'mathematics']"
3059,305900,등장하지 않는 문자의 합,3,"['implementation', 'string']"
3060,306000,욕심쟁이 돼지,5,"['implementation', 'mathematics', 'simulation']"
3061,306100,사다리,8,['greedy']
3062,306200,수 뒤집기,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
3063,306300,게시판,8,"['geometry', 'mathematics']"
3064,306400,Minesweeper,11,"['greedy', 'implementation']"
3065,306500,Tournament,0,[]
3066,306600,브리징 시그널,14,"['binary search', 'longest increasing sequence in o(n log n)']"
3067,306700,Coins,11,"['dynamic programming', 'knapsack']"
3071,307100,The ♡ System,8,"['implementation', 'mathematics']"
3073,307300,집으로 가는 길,18,[]
3075,307500,Astromeeting,13,"[""dijkstra's"", 'floyd–warshall', 'graph theory', 'graph traversal']"
3076,307600,상근이의 체스판,4,"['implementation', 'string']"
3077,307700,임진왜란,8,"['bruteforcing', 'data structures', 'set / map by hashing']"
3078,307800,좋은 친구,12,"['data structures', 'queue', 'sliding window']"
3079,307900,입국심사,11,"['binary search', 'parametric search']"
3080,308000,아름다운 이름,18,"['data structures', 'recursion', 'tree', 'trie']"
3081,308100,프로세서 디자인,0,[]
3082,308200,아름다운 제도,0,[]
3083,308300,고속도로 구매,22,[]
3084,308400,FPS,0,[]
3085,308500,사탕 게임,9,"['bruteforcing', 'implementation']"
3086,308600,초콜릿 자르기,15,['dynamic programming']
3087,308700,상근일,11,[]
3088,308800,화분 부수기,9,['greedy']
3089,308900,네잎 클로버를 찾아서,13,"['binary search', 'data structures', 'implementation', 'simulation', 'sorting']"
3090,309000,차이를 최소로,18,"['binary search', 'greedy', 'parametric search']"
3091,309100,PEKAR,0,[]
3092,309200,TRAVA,16,[]
3093,309300,새 게임,0,[]
3094,309400,강아지 기다리기,0,[]
3095,309500,플러스의 개수,11,"['bruteforcing', 'implementation']"
3096,309600,영화제,14,"['bitmask', 'bruteforcing', 'combinatorics', 'mathematics']"
3097,309700,산책 경로,7,"['bruteforcing', 'geometry', 'implementation']"
3098,309800,소셜네트워크,8,"['graph theory', 'implementation']"
3099,309900,도트 매트릭스 프린터,12,['dynamic programming']
3100,310000,국기 인식,7,"['bruteforcing', 'implementation', 'string']"
3101,310100,토끼의 이동,13,"['implementation', 'mathematics']"
3102,310200,겹치지 않는 원,17,['dynamic programming']
3103,310300,순열의 순서,21,"['data structures', 'offline queries', 'persistent segment tree', 'segment tree']"
3104,310400,쿠키,22,"['dynamic programming', 'string']"
3105,310500,벽 쌓기,0,[]
3106,310600,월급 인상,21,"['data structures', 'euler tour technique', 'lowest common ancestor', 'segment tree', 'tree']"
3107,310700,IPv6,10,"['implementation', 'string']"
3108,310800,로고,13,"['data structures', 'disjoint set', 'geometry']"
3109,310900,빵집,14,"['depth-first search', 'graph theory', 'graph traversal', 'greedy']"
3110,311000,부등식,13,['mathematics']
3111,311100,검열,17,"['data structures', 'deque', 'implementation', 'stack', 'string']"
3112,311200,쥐덫,0,[]
3113,311300,양,16,"['greedy', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
3114,311400,사과와 바나나,14,"['dynamic programming', 'prefix sum']"
3115,311500,꽃,20,"['data structures', 'segment tree', 'sorting']"
3116,311600,생물학자,13,"['bruteforcing', 'mathematics']"
3117,311700,YouTube,15,"['data structures', 'sparse table']"
3118,311800,과학자,0,[]
3119,311900,울타리,20,"['data structures', 'greedy', 'segment tree', 'sorting']"
3120,312000,PODJELA,0,[]
3121,312100,"빨간점, 파란점",23,"['data structures', 'geometry', 'segment tree', 'sweeping']"
3122,312200,IGRACI,17,"['data structures', 'segment tree']"
3123,312300,배추,15,[]
3124,312400,공원 산책,14,"['combinatorics', 'mathematics']"
3125,312500,GONDOR,12,"['data structures', 'geometry', 'graph theory', 'implementation', 'priority queue', 'pythagoras theorem', 'simulation']"
3126,312600,반역의 원철이,10,"['bruteforcing', 'implementation']"
3127,312700,JEZERO,0,[]
3128,312800,Hangman Game,15,['dynamic programming']
3129,312900,상범이의 은밀한 메세지,8,['string']
3130,313000,붙인드롬,11,"['bruteforcing', 'knapsack', 'mathematics', 'number theory']"
3131,313100,크리스마스 선물,16,"['bruteforcing', 'prefix sum']"
3132,313200,구조조정,10,"['graph theory', 'sorting']"
3133,313300,코끼리,20,"['binary search', 'data structures', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'segment tree']"
3134,313400,A Standard Problem,0,[]
3135,313500,라디오,6,"['greedy', 'mathematics']"
3136,313600,평면도,17,"['data structures', 'euler characteristic (χ=v-e+f)', 'geometry', 'set / map by hashing']"
3137,313700,DORUCAK,0,[]
3138,313800,STUPOVI,7,[]
3139,313900,VANDAL,7,"['case work', 'mathematics']"
3140,314000,GULIVER,14,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
3141,314100,폭발하는 공,0,[]
3142,314200,즐거운 삶을 위한 노력,14,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
3143,314300,울타리를 치자!,0,[]
3144,314400,자석,15,[]
3145,314500,지리지도,15,[]
3146,314600,SLIKA,14,[]
3147,314700,LIJEN,0,[]
3148,314800,빙고,18,['meet in the middle']
3149,314900,MRAVOGRAD,0,[]
3150,315000,NOGA,0,[]
3151,315100,합이 0,11,"['binary search', 'bruteforcing', 'sorting', 'two-pointer']"
3152,315200,예쁜 숫자,7,"['implementation', 'mathematics']"
3153,315300,타워 디펜스,21,"['2-sat', 'graph theory', 'strongly connected component']"
3154,315400,알람시계,5,"['bruteforcing', 'implementation']"
3155,315500,터널,9,[]
3156,315600,노래,11,"['data structures', 'set / map by hashing', 'sorting']"
3157,315700,osmo,12,[]
3158,315800,Sierpinski 삼각형,11,"['ad-hoc', 'implementation']"
3159,315900,전구,18,"['ad-hoc', 'dynamic programming']"
3160,316000,24 성냥개비 퍼즐,10,['case work']
3161,316100,izbori,8,['implementation']
3162,316200,turbo,7,"['implementation', 'simulation']"
3163,316300,떨어지는 개미,16,"['ad-hoc', 'sorting']"
3164,316400,패턴,12,"['bruteforcing', 'mathematics']"
3165,316500,5,13,"['backtracking', 'greedy', 'mathematics']"
3166,316600,maraton,17,"['graph theory', 'graph traversal']"
3167,316700,기차표 검사,12,['greedy']
3168,316800,stolni,7,"['constructive', 'implementation', 'simulation']"
3169,316900,테트리스 같은 게임,22,['dynamic programming']
3170,317000,grad,9,[]
3171,317100,크레인,0,[]
3172,317200,현주와 윤주의 재미있는 단어 게임,17,"['data structures', 'segment tree', 'sorting', 'string']"
3173,317300,karla,0,[]
3174,317400,나누기,19,[]
3175,317500,formule,0,[]
3176,317600,도로 네트워크,17,"['data structures', 'lowest common ancestor', 'sparse table', 'tree']"
3177,317700,크로아티아 수 읽기,16,"['implementation', 'mathematics']"
3178,317800,코코스,12,"['data structures', 'implementation', 'sorting', 'string', 'tree', 'trie']"
3179,317900,삼각형,0,[]
3180,318000,banana,0,[]
3181,318100,줄임말 만들기,4,"['implementation', 'string']"
3182,318200,한동이는 공부가 하기 싫어!,8,"['bruteforcing', 'graph theory', 'graph traversal']"
3183,318300,Dates,4,['implementation']
3184,318400,양,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
3185,318500,kviz,8,"['case work', 'implementation', 'string']"
3186,318600,소변기,9,['implementation']
3187,318700,양치기 꿍,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
3188,318800,nule,8,"['dynamic programming', 'mathematics']"
3189,318900,tomo,7,"['implementation', 'mathematics', 'number theory', 'pigeonhole principle', 'simulation']"
3190,319000,뱀,12,"['data structures', 'deque', 'implementation', 'queue', 'simulation']"
3191,319100,autoput,14,[]
3192,319200,매직 스퀘어,11,['implementation']
3193,319300,공,12,"['dynamic programming', 'implementation', 'simulation']"
3194,319400,nogomet,14,"['implementation', 'sorting']"
3195,319500,ribari,13,"['binary search', 'prefix sum']"
3196,319600,utrka,7,[]
3197,319700,백조의 호수,16,"['breadth-first search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal']"
3198,319800,nagibni,0,[]
3199,319900,ABCD,9,"['geometry', 'mathematics']"
3200,320000,xl,0,[]
3201,320100,vid,0,[]
3202,320200,papir,0,[]
3203,320300,프로그래밍 언어 Z,22,"['exponentiation by squaring', 'implementation', 'mathematics', 'parsing', 'simulation', 'string']"
3204,320400,커플 깨기,20,"['eulerian path / circuit', 'graph theory']"
3205,320500,fusnote,9,[]
3206,320600,haker,11,[]
3207,320700,hugo,0,[]
3208,320800,gus,4,"['implementation', 'mathematics', 'simulation']"
3209,320900,gumbi,15,[]
3210,321000,piloti,0,[]
3211,321100,kino,6,['sorting']
3212,321200,otmica,0,[]
3213,321300,피자,7,"['greedy', 'mathematics']"
3214,321400,zagrade,0,[]
3215,321500,reklame,0,[]
3216,321600,다운로드,9,['greedy']
3217,321700,malloc,15,"['data structures', 'implementation', 'linked list']"
3218,321800,spam,10,"['bruteforcing', 'case work', 'parsing', 'string']"
3219,321900,novci,0,[]
3220,322000,mars,0,[]
3221,322100,개미의 이동,11,"['ad-hoc', 'sorting']"
3223,322300,chip,0,[]
3224,322400,grupe,11,"['data structures', 'greedy', 'stack']"
3225,322500,mapa,0,[]
3226,322600,전화 요금,5,"['arithmetic', 'implementation', 'mathematics']"
3227,322700,MO,5,"['implementation', 'simulation']"
3228,322800,극한 피자 배달,10,[]
3229,322900,LIFTOVI,15,"[""dijkstra's"", 'graph theory']"
3230,323000,"금메달, 은메달, 동메달은 누가?",5,['implementation']
3231,323100,카드놀이,7,['implementation']
3232,323200,Multiply,5,['mathematics']
3233,323300,BRODOVI,13,['sweeping']
3234,323400,LUKA,4,"['implementation', 'simulation', 'string']"
3235,323500,TRAJEKT,7,"['greedy', 'sorting']"
3236,323600,TELEPORT,12,"['bruteforcing', 'floyd–warshall', 'graph theory']"
3237,323700,UHODE,8,"['data structures', 'set / map by hashing', 'implementation', 'simulation', 'set / map by trees']"
3238,323800,LINIJE,0,[]
3239,323900,SUMA,20,"['geometry', 'mathematics', 'two-pointer']"
3240,324000,JOKER,13,"['greedy', 'implementation', 'simulation']"
3242,324200,JEZIK,10,[]
3243,324300,MRAVI,11,[]
3244,324400,두 부분 문자열 2,17,"['binary search', 'dynamic programming']"
3245,324500,거리,0,[]
3246,324600,SLALOM,0,[]
3247,324700,A1,0,[]
3248,324800,JOZO,0,[]
3250,325000,VOKITOKI,0,[]
3251,325100,SONG,7,['string']
3252,325200,JANICA,9,"['arithmetic', 'implementation', 'mathematics', 'sorting']"
3253,325300,TRAM,9,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
3254,325400,김밥 21개,7,"['implementation', 'simulation']"
3255,325500,WINDOWS,0,[]
3256,325600,비행기,10,['implementation']
3257,325700,발코딩,13,['dynamic programming']
3258,325800,컴포트,9,"['bruteforcing', 'implementation', 'simulation']"
3259,325900,PEOPLE,10,"['bitmask', 'bruteforcing']"
3260,326000,TEAMS,14,"['dynamic programming', 'graph theory', 'graph traversal']"
3261,326100,TOWER,0,[]
3262,326200,BUHA,7,['implementation']
3263,326300,LIGNJA,9,[]
3264,326400,ONE,10,"['depth-first search', 'graph theory', 'graph traversal', 'greedy']"
3265,326500,수열로 수열 구하기,16,"['constructive', 'greedy']"
3266,326600,문자열의 확장과 거리,13,[]
3267,326700,TWO,17,"['breadth-first search', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
3268,326800,COLA,11,"['implementation', 'simulation']"
3269,326900,PARKING,0,[]
3270,327000,CATTLE,15,"['dynamic programming', 'implementation']"
3271,327100,MEADOW,0,[]
3272,327200,SAFE,0,[]
3273,327300,두 수의 합,8,"['sorting', 'two-pointer']"
3276,327600,ICONS,3,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
3277,327700,DOMAINS,7,"['data structures', 'string', 'set / map by trees']"
3278,327800,EXCHANGE,10,[]
3279,327900,DOLLARS,6,['greedy']
3280,328000,CARDS,5,"['implementation', 'simulation']"
3281,328100,T9,5,"['implementation', 'string']"
3282,328200,ROOMS,4,"['implementation', 'simulation']"
3283,328300,BARCODE,9,"['ad-hoc', 'dynamic programming', 'implementation', 'string']"
3284,328400,MASS,11,"['data structures', 'stack']"
3285,328500,DECODE,7,"['implementation', 'string']"
3286,328600,SHELVES,14,['dynamic programming']
3287,328700,CALC,0,[]
3288,328800,BEER,8,['ad-hoc']
3289,328900,FRIENDS,14,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
3290,329000,GAME,0,[]
3291,329100,LIST,13,['greedy']
3292,329200,CARDS,11,[]
3293,329300,MONKEY,13,[]
3294,329400,PASTE,8,[]
3295,329500,단방향 링크 네트워크,19,['bipartite matching']
3296,329600,SEARCH,13,"['breadth-first search', 'graph theory', 'graph traversal']"
3297,329700,POLYGON,19,"['convex hull', 'dynamic programming', 'geometry']"
3298,329800,WEDDING,0,[]
3299,329900,POWER,18,['dynamic programming']
3300,330000,무어 기계,14,"['dynamic programming', 'parsing', 'regular expression', 'string']"
3301,330100,FATBOY,14,['dynamic programming']
3302,330200,Job Scheduling,0,[]
3303,330300,Printed Circuit Board,27,"['data structures', 'geometry', 'stack']"
3304,330400,Sailing Race,0,[]
3307,330700,대회가 끝나고 난 뒤 빰빠빰,16,"['data structures', 'mathematics', 'stack']"
3308,330800,Matching,23,"['data structures', 'knuth–morris–pratt', 'segment tree', 'string']"
3309,330900,Hotel,19,"['data structures', 'greedy', 'priority queue', 'sorting', 'set / map by trees']"
3310,331000,Teams,22,[]
3311,331100,Traffic,23,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'planar graph', 'strongly connected component', 'topological sorting']"
3312,331200,Similarity,9,[]
3313,331300,The Alliances,21,"['bipartite matching', 'implementation']"
3314,331400,An Arithmetic Rectangle,19,"['case work', 'implementation', 'mathematics']"
3315,331500,Bodyguards,22,"['data structures', 'greedy', 'mathematics', 'set / map by trees']"
3316,331600,The MP3 Player,22,"['data structures', 'segment tree']"
3317,331700,PIN,21,"['backtracking', 'string']"
3318,331800,A Huge Tower,18,"['binary search', 'mathematics', 'sorting']"
3319,331900,전령들,23,"['convex hull trick', 'data structures', 'dynamic programming', 'tree']"
3320,332000,사진,0,[]
3321,332100,가장 큰 직사각형,19,"['dynamic programming', 'greedy', 'sorting', 'sweeping']"
3322,332200,정렬의 시간복잡도,0,[]
3323,332300,삼각형,22,"['convex hull', 'data structures', 'geometry', 'segment tree']"
3324,332400,Dominance,16,"['binary search', 'geometry', 'mathematics', 'sorting']"
3325,332500,Information,0,[]
3326,332600,Knights,16,"['dynamic programming', 'game theory']"
3327,332700,Fence,19,"['convex hull trick', 'convex hull', 'dynamic programming', 'geometry']"
3328,332800,Choosing Orders and Renting Machines,0,[]
3329,332900,Ministry,21,"['hashing', 'parsing', 'string', 'tree', 'tree isomorphism']"
3330,333000,Nasty Calculations,14,[]
3331,333100,Airport Show,0,[]
3332,333200,Royal treasury,15,"['dynamic programming', 'dynamic programming on trees', 'tree']"
3333,333300,Antenna,23,"['binary search', 'geometry', 'parametric search']"
3334,333400,Queue,19,[]
3335,333500,Walk,23,[]
3336,333600,Connect,24,"['ad-hoc', 'bitmask', 'case work', 'dynamic programming', 'dynamic programming using bitfield', 'implementation']"
3337,333700,Link,22,[]
3338,333800,Depot Rearrangement,16,"['eulerian path / circuit', 'graph theory', 'graph traversal']"
3339,333900,Mobile Service,0,[]
3340,334000,Multi-key Sorting,7,"['data structures', 'set / map by hashing', 'sorting']"
3342,334200,Lanterns,0,[]
3343,334300,장미,12,"['bruteforcing', 'mathematics', 'number theory']"
3344,334400,N-Queen,18,"['case work', 'constructive']"
3345,334500,괄호,18,['dynamic programming']
3346,334600,꿍 기지국,18,"['binary search', 'data structures', 'geometry', 'stack']"
3347,334700,Peaks,20,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
3348,334800,Fireworks in RightAngleles,21,"['mathematics', 'sorting', 'sweeping']"
3349,334900,Melody,20,[]
3350,335000,Candy Machine,19,"['binary search', 'data structures', 'greedy', 'longest increasing sequence in o(n log n)']"
3351,335100,삼각 분할,20,"['smaller to larger technique', 'tree']"
3352,335200,BEARs,0,[]
3353,335300,Printed Circuit Board,13,"['dynamic programming', 'greedy', 'longest increasing sequence in o(n log n)']"
3354,335400,Matching Bins,17,[]
3355,335500,Candies,19,"['bitmask', 'dynamic programming']"
3356,335600,라디오 전송,17,"['knuth–morris–pratt', 'string']"
3357,335700,Monument,22,"['binary search', 'data structures', 'divide and conquer', 'prefix sum', 'stack']"
3358,335800,Towers of coins,12,"['dynamic programming', 'game theory']"
3359,335900,사각 사각,9,['dynamic programming']
3360,336000,깡총깡총,10,['mathematics']
3361,336100,Handshakes,0,[]
3362,336200,수수께끼,15,"['binary search', 'data structures', 'greedy', 'parametric search', 'priority queue']"
3363,336300,동전,12,['bruteforcing']
3364,336400,Escape,21,"['dual graph', 'maximum flow', 'graph theory', 'max-flow min-cut theorem', 'planar graph']"
3365,336500,Building a Fence,23,"[""dijkstra's"", 'graph theory', 'planar graph']"
3366,336600,수열 줄이기,14,"['data structures', 'greedy']"
3367,336700,Bitwise Expressions,20,"['data structures', 'greedy', 'priority queue']"
3368,336800,Coin Collector,18,['greedy']
3369,336900,Countries,8,"['graph theory', 'implementation']"
3370,337000,City Planning,19,"['binary search', 'mathematics']"
3371,337100,RLE Compression,0,[]
3372,337200,보드 점프,10,"['arbitrary precision / big integers', 'dynamic programming']"
3373,337300,Cards,11,"['greedy', 'sorting']"
3374,337400,Camouflaged camp,0,[]
3375,337500,Magic Parenthesis,0,[]
3376,337600,Maze,0,[]
3377,337700,Ancient Manuscript,0,[]
3378,337800,Bus Trip,0,[]
3379,337900,Polygon,0,[]
3380,338000,Linker,0,[]
3381,338100,Barrel,10,[]
3382,338200,Gems,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
3383,338300,Submarines,25,"['splay tree', 'tree']"
3385,338500,Speed Limits,0,[]
3386,338600,테니스 클럽,0,[]
3387,338700,Calculator Game,10,"['bruteforcing', 'case work', 'mathematics', 'number theory']"
3388,338800,L Game,0,[]
3389,338900,Moving Robots,0,[]
3391,339100,나이트,18,['bipartite matching']
3392,339200,화성 지도,19,"['data structures', 'segment tree', 'sweeping']"
3394,339400,Honeycomb Problem,0,[]
3395,339500,Time Zones,0,[]
3396,339600,Electronical Plate,0,[]
3397,339700,Division Expression,9,"['euclidean algorithm', 'mathematics', 'number theory']"
3398,339800,Stickers,0,[]
3399,339900,Mutexes,13,['backtracking']
3400,340000,Expressions,10,['dynamic programming']
3405,340500,파산하는 왕국,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory']"
3406,340600,Who wants to live forever?,21,"['mathematics', 'string']"
3407,340700,맹세,9,"['bruteforcing', 'dynamic programming', 'graph theory', 'graph traversal', 'string']"
3408,340800,Non-boring sequences,22,"['data structures', 'divide and conquer']"
3409,340900,문자 방정식,21,"['dynamic programming', 'dynamic programming on trees', 'parsing', 'string', 'tree']"
3410,341000,Farm and factory,24,[]
3411,341100,Jewel heist,20,"['data structures', 'persistent segment tree', 'segment tree', 'sweeping']"
3412,341200,Darts,5,"['geometry', 'implementation', 'pythagoras theorem']"
3413,341300,The Dragon and the knights,20,['geometry']
3414,341400,Conservation,15,"['breadth-first search', 'graph theory', 'graph traversal', 'topological sorting']"
3415,341500,Graphic Madness,22,[]
3416,341600,Boring Card Game,0,[]
3417,341700,Vigenère Cipher Encryption,4,"['implementation', 'string']"
3418,341800,Unique Encryption Keys,17,[]
3419,341900,Racing Car Trail,23,"['bipartite matching', 'depth-first search', 'graph theory', 'graph traversal']"
3420,342000,Stack Machine Programmer,19,[]
3421,342100,이상한 규정,24,"['implementation', 'splay tree', 'tree']"
3422,342200,Vigenère Cipher Analysis,0,[]
3423,342300,The Grille,8,['implementation']
3424,342400,Unchanged Picture,25,['geometry']
3425,342500,고스택,13,"['data structures', 'implementation', 'stack']"
3426,342600,Ardenia,24,[]
3427,342700,Beasts,23,[]
3428,342800,Casting Spells,19,"[""manacher's"", 'string']"
3429,342900,방어선,17,"['binary search', 'data structures', 'dynamic programming', 'segment tree']"
3430,343000,용이 산다,15,"['data structures', 'greedy', 'priority queue', 'set / map by trees']"
3431,343100,Fields and Farmers,19,['case work']
3432,343200,Game,5,"['bruteforcing', 'implementation']"
3433,343300,Hanging Hats,21,[]
3434,343400,Insults,18,"['data structures', 'stack', 'string']"
3435,343500,Justice for All,22,"['combinatorics', 'constructive', 'mathematics']"
3436,343600,Strange Billboard,0,[]
3437,343700,Phone Cell,22,"['geometry', 'parametric search']"
3438,343800,Hexagonal Parcels,0,[]
3439,343900,Key Task,0,[]
3440,344000,Gates of Logic,22,"['graph theory', 'graph traversal', 'implementation', 'topological sorting']"
3441,344100,Weird Numbers,0,[]
3442,344200,직각 다각형,16,['geometry']
3443,344300,Reaux! Sham! Beaux!,6,"['data structures', 'set / map by hashing', 'implementation', 'string']"
3444,344400,Robotic Sort,23,"['splay tree', 'tree']"
3445,344500,Tough Water Level,0,[]
3446,344600,Ants,0,[]
3447,344700,버그왕,5,"['parsing', 'regular expression', 'string']"
3448,344800,문자 인식,5,"['implementation', 'string']"
3449,344900,해밍 거리,4,['string']
3450,345000,Desperate Electrician,0,[]
3451,345100,Easy Task,6,['implementation']
3452,345200,Bundling,0,[]
3453,345300,Shortcut,0,[]
3454,345400,Dice Contest,0,[]
3455,345500,November Rain,0,[]
3456,345600,축구공,18,"['ad-hoc', 'euler characteristic (χ=v-e+f)', 'geometry', 'mathematics']"
3457,345700,Which is Next,0,[]
3458,345800,Hang or not to hang,0,[]
3459,345900,Minimizing Maximizer,20,"['data structures', 'dynamic programming', 'segment tree with lazy propagation', 'segment tree']"
3460,346000,이진수,3,"['implementation', 'mathematics']"
3461,346100,Alice and Bob,19,"['dual graph', 'graph theory', 'planar graph']"
3462,346200,이진 스털링 수,14,"['combinatorics', 'mathematics']"
3463,346300,Calendar of Maya,0,[]
3464,346400,Decoding Morse sequences,17,"['data structures', 'dynamic programming', 'tree', 'trie']"
3466,346600,Choir,0,[]
3467,346700,Gates,21,"['binary search', 'constructive']"
3468,346800,Horizontally Visible Segments,0,[]
3469,346900,Simple Arithmetics,9,[]
3470,347000,The Bulk,0,[]
3471,347100,Complete the sequence!,0,[]
3472,347200,Direct Visibility,0,[]
3473,347300,Complicated Expressions,15,"['case work', 'data structures', 'parsing', 'stack', 'string']"
3474,347400,교수가 된 현우,8,"['mathematics', 'number theory']"
3475,347500,The Game of Master-Mind,0,[]
3476,347600,Hotline,22,"['implementation', 'parsing', 'string']"
3477,347700,I-Keyboard,15,[]
3478,347800,Run Away,0,[]
3479,347900,Equipment Box,18,"['geometry', 'mathematics']"
3480,348000,Secret Code,0,[]
3481,348100,The Proper Key,0,[]
3482,348200,Labyrinth,14,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
3483,348300,Piggy-Bank,11,"['dynamic programming', 'knapsack']"
3484,348400,Lifting the Stone,13,[]
3485,348500,Play on Words,0,[]
3486,348600,Adding Reversed Numbers,4,"['arithmetic', 'implementation', 'mathematics']"
3487,348700,Copying Books,16,"['binary search', 'greedy']"
3488,348800,Substitution Cipher,0,[]
3489,348900,Commedia dell' arte,0,[]
3490,349000,Calculating Expressions on Turing Machine,0,[]
3491,349100,Skyscraper Floors,19,"['breadth-first search', 'depth-first search', 'extended euclidean algorithm', 'graph theory', 'graph traversal', 'mathematics', 'number theory']"
3492,349200,Glass Beads,19,"['string', 'suffix array and lcp array']"
3493,349300,Hares and Foxes,0,[]
3494,349400,Invitation Cards,0,[]
3495,349500,아스키 도형,10,"['geometry', 'implementation']"
3496,349600,Binary Encoding,8,['implementation']
3497,349700,Caption,20,[]
3498,349800,사전의 크기,19,[]
3499,349900,미토콘드리아 이브,15,"['data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation', 'tree']"
3500,350000,Flights,0,[]
3501,350100,최대공약수 맞추기 게임,19,"['greedy', 'mathematics']"
3502,350200,Huzita Axiom 6,0,[]
3503,350300,Interactive Permutation Guessing,19,['randomization']
3504,350400,Journey,0,[]
3505,350500,Kingdom Roadmap,19,[]
3506,350600,Lanes,0,[]
3507,350700,Automated Telephone Exchange,3,"['bruteforcing', 'mathematics']"
3508,350800,Black Square,10,['case work']
3509,350900,Cube Coloring,0,[]
3510,351000,Dice,8,"['mathematics', 'probability theory', 'sorting']"
3511,351100,Electrification,0,[]
3512,351200,Flat,3,"['arithmetic', 'implementation', 'mathematics', 'string']"
3513,351300,Galaxy Interconnection,16,"['depth-first search', 'graph theory', 'graph traversal']"
3514,351400,High security,0,[]
3515,351500,Immediate Delivery,24,"['bitmask', 'data structures', ""dijkstra's"", 'graph theory', 'priority queue', 'topological sorting']"
3516,351600,John’s Inversions,16,"['data structures', 'segment tree', 'sorting']"
3517,351700,Kids Like Cakes,0,[]
3518,351800,공백왕 빈-칸,7,"['implementation', 'parsing', 'string']"
3519,351900,계산왕 연산군,0,[]
3520,352000,Cactus Revolution,25,"['cactus', 'depth-first search', 'graph theory', 'graph traversal', 'greedy']"
3521,352100,Dome of Circus,0,[]
3522,352200,Evacuation Plan,13,"['dynamic programming', 'sorting']"
3523,352300,Factorial Simplification,12,['mathematics']
3525,352500,Hands of Poker,18,['implementation']
3526,352600,이상적인 경로,16,"['breadth-first search', 'graph theory', 'graph traversal', 'greedy']"
3527,352700,Jungle Outpost,25,"['binary search', 'geometry', 'half plane intersection', 'parametric search']"
3528,352800,K-Graph Oddity,18,"['depth-first search', 'graph theory', 'graph traversal', 'greedy']"
3529,352900,Alien Communication Masterclass,9,"['ad-hoc', 'constructive', 'mathematics', 'number theory']"
3530,353000,Bug2,0,[]
3531,353100,Commuting Functions,19,['mathematics']
3532,353200,Defense of a Kingdom,7,['sorting']
3533,353300,Explicit Formula,3,"['implementation', 'mathematics']"
3534,353400,Frames,10,"['bruteforcing', 'geometry']"
3535,353500,Gadgets Factory,24,[]
3536,353600,Horrible Truth,0,[]
3537,353700,Ideal Contest,0,[]
3538,353800,Journey,26,[]
3539,353900,Kitchen Robot,0,[]
3540,354000,Asteroids,22,[]
3541,354100,상근타워,10,"['binary search', 'mathematics']"
3542,354200,Database,8,"['data structures', 'string', 'set / map by trees']"
3543,354300,Exclusive Access 2,23,[]
3544,354400,Funny Language,15,"['data structures', 'greedy', 'priority queue', 'string']"
3545,354500,Garbling Game,19,"['arbitrary precision / big integers', 'data structures', 'sparse table']"
3546,354600,Headshot,5,['mathematics']
3547,354700,Inspection,19,"['maximum flow', 'minimum cost maximum flow']"
3548,354800,Java Certification,18,"['dynamic programming', 'knapsack']"
3549,354900,K-equivalence,0,[]
3550,355000,Auxiliary Question of the Universe,9,"['constructive', 'implementation', 'string']"
3551,355100,Bureaucracy,8,"['graph theory', 'implementation', 'topological sorting']"
3552,355200,Circles on a Screen,14,"['geometry', 'mathematics', 'prefix sum']"
3553,355300,Dragon’s Question,6,"['ad-hoc', 'mathematics']"
3554,355400,Enigmatic Device,3,['implementation']
3555,355500,Four Points,20,"['case work', 'geometry']"
3556,355600,Grand Theft Auto Wheel,0,[]
3557,355700,Homo or Hetero?,9,"['data structures', 'set / map by hashing', 'set / map by trees']"
3558,355800,Image Recognition,0,[]
3559,355900,Jealous Numbers,15,"['inclusion and exclusion', 'mathematics', 'number theory']"
3560,356000,Kripke Model,0,[]
3561,356100,Aerodynamics,0,[]
3562,356200,Clock,0,[]
3563,356300,Finding Liars,0,[]
3564,356400,Exclusive Access,0,[]
3565,356500,피보나치 진법,18,"['dynamic programming', 'mathematics']"
3566,356600,대형 스크린,4,"['arithmetic', 'implementation', 'mathematics']"
3567,356700,Hell on the Markets,14,[]
3568,356800,iSharp,8,"['parsing', 'string']"
3569,356900,Javanese Cryptoanalysis,0,[]
3570,357000,KINA Is Not Abbreviation,0,[]
3571,357100,Access Control Lists,0,[]
3572,357200,Billboard,11,[]
3573,357300,Class,0,[]
3574,357400,Deposits,0,[]
3575,357500,Enchanted Mirror,0,[]
3576,357600,Fenwick Tree,14,[]
3577,357700,Ground Works,26,[]
3578,357800,Holes,3,"['greedy', 'implementation', 'string']"
3579,357900,Important Wires,0,[]
3580,358000,Just Too Lucky,0,[]
3581,358100,Key to Success,0,[]
3582,358200,Ants,21,"['convex hull', 'divide and conquer', 'geometry']"
3583,358300,Building for UN,0,[]
3584,358400,가장 가까운 공통 조상,12,"['depth-first search', 'graph theory', 'graph traversal', 'lowest common ancestor', 'tree']"
3585,358500,Diver,0,[]
3586,358600,방정식,17,"['case work', 'data structures', 'implementation', 'mathematics', 'parsing', 'stack', 'string']"
3587,358700,Fund Management,0,[]
3588,358800,Water Main Break,5,['implementation']
3589,358900,Christmas Gifts,22,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
3590,359000,i18n,14,"['case work', 'implementation', 'parsing', 'string']"
3591,359100,Japanese Writing,0,[]
3592,359200,Kingdom Partitioning,0,[]
3593,359300,DFA,19,[]
3594,359400,A+B,13,"['arbitrary precision / big integers', 'mathematics', 'number theory', 'string']"
3595,359500,맥주 냉장고,4,"['bruteforcing', 'mathematics']"
3596,359600,크로스와 크로스,18,"['game theory', 'sprague–grundy theorem']"
3597,359700,Domestic Networks,0,[]
3598,359800,엘리베이터,17,"[""dijkstra's"", 'graph theory']"
3599,359900,Formula,0,[]
3600,360000,Given a string. . .,19,[]
3601,360100,History of Football,0,[]
3602,360200,iChess,4,"['bruteforcing', 'mathematics']"
3603,360300,Journey with Pigs,0,[]
3604,360400,K’ak’-u-pakal and Mayan Script,0,[]
3605,360500,Billing Tables,0,[]
3606,360600,Cellular Automaton,20,"['exponentiation by squaring', 'linear algebra', 'mathematics']"
3607,360700,Driving Directions,0,[]
3608,360800,Exchange,0,[]
3609,360900,Fool’s Game,0,[]
3610,361000,Graveyard,8,['mathematics']
3611,361100,팀의 난이도,24,"['binary search', 'maximum flow', 'max-flow min-cut theorem', 'parametric search']"
3612,361200,Interconnect,0,[]
3613,361300,Java vs C++,8,"['case work', 'implementation', 'parsing', 'string']"
3614,361400,정사각형,13,"['euclidean algorithm', 'mathematics', 'number theory']"
3615,361500,Alphabet,0,[]
3616,361600,Bridges,14,"['dynamic programming', 'dynamic programming on trees', 'tree']"
3617,361700,Confectionery,0,[]
3618,361800,Deciphering,0,[]
3619,361900,Equation,0,[]
3620,362000,Feng Shui,0,[]
3621,362100,족보,10,"['greedy', 'mathematics']"
3622,362200,어떤 호박의 할로윈 여행,4,"['case work', 'geometry', 'mathematics']"
3623,362300,상범이의 액자,0,[]
3624,362400,Japanese Puzzle,0,[]
3625,362500,Kennings,0,[]
3626,362600,Guards,11,"['bruteforcing', 'implementation', 'mathematics']"
3627,362700,Hardwood Cutting,0,[]
3628,362800,Knockdown,0,[]
3629,362900,Astronomy,8,['mathematics']
3630,363000,Bee Garden,0,[]
3631,363100,Cutting a Block,0,[]
3632,363200,Drying,11,"['binary search', 'parametric search']"
3633,363300,Expectation,15,"['linearity of expectation', 'mathematics', 'probability theory', 'statistics']"
3634,363400,Flip and Turn,7,"['ad-hoc', 'implementation']"
3635,363500,Godfather,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
3636,363600,Horn Clauses,14,['greedy']
3637,363700,Inner Vertices,17,"['value / coordinate compression', 'data structures', 'segment tree']"
3638,363800,Jenny's First Exams,0,[]
3639,363900,K Best,13,['binary search']
3640,364000,제독,19,"['maximum flow', 'minimum cost maximum flow']"
3641,364100,호프집 선택,18,"['combinatorics', 'implementation', 'mathematics']"
3642,364200,자전거,0,[]
3643,364300,디지털 시계,17,"['bitmask', 'bruteforcing']"
3644,364400,그래프 매칭,14,"['arbitrary precision / big integers', 'dynamic programming']"
3645,364500,토너먼트 조작,20,[]
3646,364600,경비원,0,[]
3647,364700,흥미로운 집합,0,[]
3648,364800,아이돌,18,"['2-sat', 'graph theory', 'strongly connected component']"
3649,364900,로봇 프로젝트,11,"['binary search', 'sorting', 'two-pointer']"
3650,365000,암호 해독,15,"['data structures', 'set / map by hashing']"
3651,365100,이항계수,15,"['binary search', 'combinatorics', 'mathematics']"
3652,365200,새트리,11,"['mathematics', 'recursion']"
3653,365300,영화 수집,17,"['data structures', 'segment tree']"
3654,365400,L퍼즐,22,"['2-sat', 'graph theory', 'strongly connected component']"
3655,365500,먼저 가세요,10,"['greedy', 'sorting', 'string']"
3656,365600,수영장 만들기,21,"['maximum flow', 'max-flow min-cut theorem']"
3657,365700,총격전,14,"['constructive', 'floyd–warshall', 'graph theory']"
3658,365800,Tichu,10,"['backtracking', 'implementation', 'recursion']"
3659,365900,RFID 추적,19,['geometry']
3660,366000,열차 지연,0,[]
3661,366100,생일 선물,13,"['greedy', 'sorting']"
3662,366200,보석 분배,18,"['data structures', 'dynamic programming', 'greedy', 'priority queue', 'sorting']"
3663,366300,고득점,13,['greedy']
3664,366400,언덕,0,[]
3665,366500,최종 순위,15,"['graph theory', 'topological sorting']"
3666,366600,리스크,21,"['binary search', 'maximum flow', 'parametric search']"
3667,366700,Selling Land,18,"['data structures', 'stack']"
3668,366800,Stock Prices,0,[]
3669,366900,Telephone Network,17,[]
3670,367000,Wormly,0,[]
3671,367100,산업 스파이의 편지,12,"['bruteforcing', 'combinatorics', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
3672,367200,Common Subexpression Elimination,0,[]
3673,367300,나눌 수 있는 부분 수열,13,"['mathematics', 'prefix sum']"
3674,367400,Fractal,0,[]
3675,367500,Mountain Road,0,[]
3676,367600,Moving to Nuremberg,18,"['dynamic programming', 'dynamic programming on trees', 'tree']"
3677,367700,Room Assignments,19,['graph theory']
3678,367800,카탄의 개척자,15,"['implementation', 'simulation']"
3679,367900,단순 다각형,17,"['convex hull', 'geometry', 'sorting']"
3680,368000,Wormholes,0,[]
3681,368100,모빌,15,"['ad-hoc', 'mathematics', 'parsing', 'string']"
3682,368200,동치 증명,18,"['graph theory', 'strongly connected component']"
3683,368300,고양이와 개,19,['bipartite matching']
3684,368400,어려운 문제,8,['bruteforcing']
3685,368500,김강山,24,"['dynamic programming', 'slope trick']"
3686,368600,Sculpture,0,[]
3687,368700,성냥개비,14,"['dynamic programming', 'greedy']"
3688,368800,래프팅 디자인,0,[]
3689,368900,셔플,13,[]
3690,369000,Videopoker,0,[]
3691,369100,컴퓨터 조립,13,"['binary search', 'data structures', 'set / map by hashing']"
3692,369200,펭귄들의 행진,21,['maximum flow']
3693,369300,컨테이너,11,['bruteforcing']
3694,369400,Youth Hostel Dorm,0,[]
3695,369500,Escape from Enemy Territory,13,"['breadth-first search', 'graph theory', 'graph traversal', 'parametric search']"
3696,369600,Flight Safety,24,"['divide and conquer', 'geometry', 'voronoi diagram']"
3697,369700,정상,17,"['breadth-first search', 'graph theory', 'graph traversal']"
3698,369800,애매함,0,[]
3699,369900,주차 빌딩,6,"['implementation', 'mathematics']"
3700,370000,걷기,18,"['geometry', 'point in non-convex polygon check', 'sorting']"
3701,370100,스도쿠 변형,15,"['backtracking', 'bruteforcing', 'implementation']"
3702,370200,The SetStack Computer,14,"['bit set', 'data structures', 'implementation', 'stack']"
3703,370300,Pie,9,"['binary search', 'parametric search']"
3704,370400,Ticket to Ride,0,[]
3705,370500,Lineland’s Airport,0,[]
3706,370600,Leonardo’s Notebook,11,"['permutation cycle decomposition', 'string']"
3707,370700,Unequalled Consumption,0,[]
3708,370800,Declaration of Content,0,[]
3709,370900,레이저빔은 어디로,10,"['graph theory', 'graph traversal', 'implementation', 'simulation']"
3710,371000,Pesky Heroes,0,[]
3711,371100,학번,6,"['bruteforcing', 'mathematics', 'number theory']"
3712,371200,Tantrix,0,[]
3713,371300,당일치기,18,['bipartite matching']
3714,371400,Up the Stairs,0,[]
3715,371500,Secret — MAX,0,[]
3716,371600,Safety Grade,0,[]
3717,371700,Search by template,0,[]
3718,371800,Roots Intervals,0,[]
3719,371900,팰린드롬 날짜,21,"['ad-hoc', 'backtracking', 'bruteforcing', 'case work', 'greedy', 'implementation']"
3720,372000,Choosing a camera,0,[]
3721,372100,Road Planner,0,[]
3722,372200,Term Generator,0,[]
3723,372300,Painting,0,[]
3724,372400,표,6,"['arbitrary precision / big integers', 'bruteforcing']"
3725,372500,Calculator,0,[]
3726,372600,가장 큰 원,0,[]
3727,372700,프로그래밍 대회,0,[]
3728,372800,Control Points,0,[]
3729,372900,Gamers,0,[]
3730,373000,Cosmic Station,0,[]
3731,373100,Game,12,"['dynamic programming', 'graph theory', 'graph traversal']"
3732,373200,Proof Generator,0,[]
3733,373300,Shares,1,"['arithmetic', 'mathematics']"
3734,373400,RSA 인수 분해,17,"['ad-hoc', 'mathematics']"
3735,373500,Hard-working Student,0,[]
3736,373600,System Engineer,18,['bipartite matching']
3737,373700,Cycles of Lanes,18,"['articulation points and bridges', 'biconnected component', 'cactus', 'depth-first search', 'graph theory', 'graph traversal']"
3738,373800,Multiprocessor Scheduling,0,[]
3739,373900,Maze Stretching,0,[]
3740,374000,Software Industry Revolution,0,[]
3741,374100,The Lucky Numbers,0,[]
3742,374200,The Robbery,0,[]
3743,374300,The Computer Game,0,[]
3744,374400,The Bad Number,0,[]
3745,374500,오름세,14,"['binary search', 'longest increasing sequence in o(n log n)']"
3746,374600,Sky Code,19,"['inclusion and exclusion', 'mathematics', 'number theory']"
3747,374700,완벽한 선거!,17,"['2-sat', 'graph theory', 'strongly connected component']"
3748,374800,Lucky cities,21,"['articulation points and bridges', 'biconnected component', 'graph theory']"
3749,374900,Build Your Home,11,"['geometry', 'area of a polygon']"
3750,375000,Quick answer,0,[]
3751,375100,행운의 수,0,[]
3752,375200,최대공약수 행렬식,23,"['euler totient function', 'linear algebra', 'mathematics', 'number theory']"
3753,375300,Internet Service Providers,0,[]
3754,375400,John,18,['game theory']
3755,375500,Double Queue,12,"['data structures', 'priority queue']"
3756,375600,‘JBC’,0,[]
3757,375700,Loan Scheduling,0,[]
3758,375800,KCPC,8,['sorting']
3759,375900,Highway,0,[]
3760,376000,Computers,12,['dynamic programming']
3761,376100,The Stable Marriage Problem,20,"['graph theory', 'parsing', 'stable marriage problem', 'string']"
3762,376200,Arne Saknussemm,0,[]
3763,376300,스도쿠,24,"['backtracking', 'dancing links', ""knuth's x""]"
3764,376400,Products,25,"['a*', 'depth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
3765,376500,Celebrity jeopardy,0,[]
3766,376600,Sherlock Holmes,0,[]
3767,376700,Payment System,0,[]
3768,376800,Stargates,0,[]
3769,376900,최댓값,20,"['greedy', 'mathematics']"
3770,377000,대한민국,16,"['data structures', 'segment tree']"
3771,377100,“Shortest” pair of paths,0,[]
3772,377200,Linear world,0,[]
3773,377300,Songs,0,[]
3774,377400,Tour,0,[]
3777,377700,Computer Transformation,12,"['arbitrary precision / big integers', 'dynamic programming']"
3778,377800,애너그램 거리,4,"['implementation', 'string']"
3779,377900,주기,17,"['knuth–morris–pratt', 'string']"
3780,378000,네트워크 연결,16,"['data structures', 'disjoint set']"
3781,378100,Cave Exploration,0,[]
3782,378200,City Game,13,"['bruteforcing', 'prefix sum']"
3783,378300,세제곱근,16,"['arbitrary precision / big integers', 'binary search', 'mathematics', 'numerical analysis']"
3784,378400,Cable TV Network,0,[]
3785,378500,Alibaba,0,[]
3786,378600,Booklets,0,[]
3787,378700,Count on Canton,6,"['bruteforcing', 'implementation', 'mathematics']"
3788,378800,Delta Encoding and Decoding,0,[]
3789,378900,Hidden Password,19,"['string', 'suffix array and lcp array']"
3790,379000,Crazy tea party,8,[]
3792,379200,Lord of the Ring,0,[]
3793,379300,Common Subsequence,11,['dynamic programming']
3794,379400,Power Network,0,[]
3795,379500,Firefighters,0,[]
3796,379600,Binary Polynomials,0,[]
3797,379700,Cash Machine,0,[]
3798,379800,Beer Land,8,[]
3799,379900,BOAT,0,[]
3800,380000,Art Gallery,0,[]
3801,380100,Game,0,[]
3802,380200,MANAGER,0,[]
3803,380300,Networking,12,"['graph theory', 'minimum spanning tree']"
3804,380400,Sly Number,0,[]
3805,380500,벌집들,0,[]
3806,380600,S를 T로,13,['greedy']
3807,380700,고창영 비밀번호의 비밀,20,"['mathematics', 'number theory']"
3808,380800,ACGU,0,[]
3809,380900,Old School Days,0,[]
3810,381000,Sentry Robots,0,[]
3811,381100,How do spiders walk on water?,0,[]
3812,381200,되팔렘,0,[]
3813,381300,The Moon of Valencia,0,[]
3814,381400,Countdown,0,[]
3825,382500,은행수,11,"['bruteforcing', 'mathematics', 'number theory', 'primality test']"
3826,382600,스타일리시,11,"['bruteforcing', 'implementation', 'string']"
3827,382700,일차원 세포 자동자,16,"['exponentiation by squaring', 'mathematics']"
3828,382800,잘못된 계산,16,"['bruteforcing', 'dynamic programming', 'gaussian elimination', 'linear algebra', 'mathematics']"
3829,382900,Sliding Block Puzzle,23,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal', 'implementation']"
3830,383000,교수님은 기다리지 않는다,18,"['data structures', 'disjoint set']"
3831,383100,Let There Be Light,20,"['bit set', 'geometry', 'geometry; 3d']"
3832,383200,Company Organization,0,[]
3833,383300,아름다운 레이아웃,0,[]
3834,383400,Cubic Colonies,24,[]
3835,383500,Alphabet Soup,21,"[""burnside's lemma"", 'combinatorics', 'knuth–morris–pratt', 'mathematics', 'string']"
3836,383600,Coin Collecting,27,['matroid']
3837,383700,사이버 도넛 범죄 수사,19,"['data structures', 'implementation', 'segment tree', 'sweeping']"
3838,383800,Distributing Ballot Boxes,8,"['binary search', 'implementation']"
3839,383900,"Game, Set and Match",0,[]
3840,384000,Guess the Numbers,0,[]
3841,384100,Non-negative Partial Sums,17,"['data structures', 'deque', 'prefix sum']"
3842,384200,Peer Review,0,[]
3843,384300,볼록 정다각형,15,"['bruteforcing', 'geometry', 'mathematics']"
3844,384400,백준 공화국,15,"['exponentiation by squaring', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
3845,384500,잔디깎기,5,"['sorting', 'sweeping']"
3846,384600,Periodic points,23,"['dynamic programming', 'linear algebra', 'mathematics']"
3847,384700,Comparing answers,19,"['heuristics', 'implementation', 'linear algebra', 'mathematics', 'randomization']"
3848,384800,Fake scoreboard,0,[]
3849,384900,Palindromic DNA,22,"['2-sat', 'data structures', 'disjoint set', 'graph theory', 'strongly connected component']"
3850,385000,Jumping monkey,20,"['breadth-first search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal']"
3851,385100,Sensor network,0,[]
3852,385200,생산 공정,0,[]
3853,385300,자물쇠와 열쇠,0,[]
3854,385400,3-sided dice,15,['geometry']
3855,385500,Trick or Treat,12,"['binary search', 'geometry', 'ternary search']"
3856,385600,Working at the Restaurant,8,"['implementation', 'string']"
3857,385700,전구 게임,0,[]
3858,385800,Darts,21,"['binary search', 'combinatorics', 'dynamic programming', 'game theory', 'mathematics', 'parametric search']"
3859,385900,Genetics,0,[]
3860,386000,할로윈 묘지,16,"['bellman–ford', 'graph theory']"
3861,386100,Slalom,20,"['dynamic programming', 'geometry']"
3862,386200,Routing,0,[]
3863,386300,행복한 전화 통화,5,"['bruteforcing', 'case work', 'implementation']"
3864,386400,Stammering Aliens,19,"['binary search', 'parametric search', 'string', 'suffix array and lcp array']"
3865,386500,학회원,12,"['breadth-first search', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'parsing', 'string']"
3866,386600,풍선 수집,14,"['dynamic programming', 'greedy']"
3867,386700,고속도로 위의 마을,0,[]
3868,386800,Awkward Lights,0,[]
3869,386900,The Two Men of the Japanese Alps,0,[]
3870,387000,Find the Multiples,15,"['value / coordinate compression', 'data structures', 'dynamic programming', 'set / map by hashing', 'mathematics', 'number theory', 'prefix sum', 'set / map by trees']"
3871,387100,Test Case Tweaking,0,[]
3872,387200,Where’s Wally,0,[]
3873,387300,Intersection of Two Prisms,23,"['calculus', 'geometry', 'geometry; 3d', 'implementation', 'mathematics']"
3874,387400,Matrix Calculator,21,"['implementation', 'parsing', 'string']"
3875,387500,Cubist Artwork,11,['greedy']
3876,387600,sed 이용,12,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation', 'simulation', 'string']"
3877,387700,Swimming Jam,0,[]
3878,387800,점 분리,19,"['convex hull', 'geometry', 'line segment intersection check', 'point in convex polygon check']"
3879,387900,Origami Through-Hole,22,[]
3880,388000,화학자의 수학,0,[]
3881,388100,말파티 원,16,"['geometry', 'mathematics']"
3882,388200,스무고개,18,[]
3883,388300,Hobby on Rails,0,[]
3884,388400,Infected Land,0,[]
3885,388500,회색 영역,10,"['implementation', 'mathematics']"
3886,388600,Expected Allowance,9,"['bruteforcing', 'mathematics', 'probability theory']"
3887,388700,Stopped Watches,0,[]
3888,388800,Digits on the Floor,0,[]
3889,388900,구면 거울,16,[]
3890,389000,Traveling Cube,0,[]
3891,389100,키워드 검색,0,[]
3892,389200,Top Spinning,0,[]
3893,389300,공통 다항식,0,[]
3894,389400,지그재그,0,[]
3895,389500,그리고 하나가 남았다,16,"['data structures', 'dynamic programming', 'mathematics', 'number theory', 'segment tree']"
3896,389600,소수 사이 수열,9,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
3897,389700,Minimal Backgammon,13,"['dynamic programming', 'implementation', 'mathematics', 'probability theory']"
3898,389800,Lowest Pyramid,0,[]
3899,389900,도로 지도,0,[]
3900,390000,Slim Span,17,"['data structures', 'disjoint set', 'graph theory', 'minimum spanning tree', 'two-pointer']"
3901,390100,The Morning after Halloween,16,"['breadth-first search', 'graph theory', 'graph traversal']"
3902,390200,Bug Hunt,12,"['data structures', 'set / map by hashing', 'implementation', 'parsing', 'recursion', 'stack', 'string']"
3903,390300,제주도,22,"['binary search', 'geometry', 'half plane intersection']"
3904,390400,The Teacher's Side of Math,22,"['gaussian elimination', 'linear algebra', 'mathematics', 'number theory']"
3905,390500,How I Wonder What You Are!,16,"['geometry', 'geometry; 3d']"
3906,390600,How I Mathematician Wonder What You Are!,22,"['geometry', 'half plane intersection']"
3907,390700,정육면체 8퍼즐,21,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'meet in the middle']"
3908,390800,서로 다른 소수의 합,13,"['dynamic programming', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
3909,390900,맨하탄 배선,0,[]
3910,391000,거듭제곱 계산,13,"['backtracking', 'graph theory', 'graph traversal']"
3911,391100,Polygons on the Grid,0,[]
3912,391200,The Best Name for Your Baby,0,[]
3913,391300,Enjoyable Communication,0,[]
3914,391400,Maximum Sum,12,['dynamic programming']
3915,391500,Book Replacement,0,[]
3916,391600,Colored Cubes,0,[]
3917,391700,Organize Your Train,0,[]
3918,391800,Mobile Computing,11,"['bitmask', 'bruteforcing']"
3919,391900,Atomic Car Race,13,['dynamic programming']
3920,392000,Network Mess,0,[]
3921,392100,Bingo,0,[]
3922,392200,Shy Polygon,21,"['geometry', 'line segment intersection check', 'point in non-convex polygon check']"
3923,392300,저울,9,"['bruteforcing', 'mathematics', 'sorting']"
3924,392400,Make a Sequence,12,"['implementation', 'simulation']"
3925,392500,암호화의 취약점 찾기,8,"['bitmask', 'implementation', 'mathematics']"
3926,392600,Pathological Paths,16,"['implementation', 'parsing', 'string', 'tree']"
3927,392700,Confusing Login Names,0,[]
3928,392800,Dice Puzzle,0,[]
3929,392900,Color the Map,17,[]
3930,393000,Inherit the Spheres,0,[]
3931,393100,Crossing Prisms,0,[]
3932,393200,Unreliable Messengers,9,"['implementation', 'simulation', 'string']"
3933,393300,라그랑주의 네 제곱수 정리,11,"['bruteforcing', 'dynamic programming']"
3934,393400,Area of Polygons,16,"['geometry', 'sorting']"
3935,393500,바람의 신,17,"['data structures', 'dynamic programming', 'set / map by hashing']"
3936,393600,Molecular Formula,15,"['data structures', 'hashing', 'parsing', 'recursion', 'stack', 'string']"
3937,393700,Gap,0,[]
3938,393800,Concert Hall Scheduling,19,"['maximum flow', 'minimum cost maximum flow']"
3939,393900,Monster Trap,0,[]
3943,394300,헤일스톤 수열,4,"['implementation', 'simulation']"
3944,394400,나머지 계산,9,"['mathematics', 'number theory']"
3945,394500,Pen Counts,10,['mathematics']
3946,394600,랜덤 걷기,18,"['dynamic programming', 'mathematics', 'probability theory']"
3947,394700,폴하버의 삼각형,0,[]
3948,394800,홍준이의 친위대,16,"['combinatorics', 'dynamic programming', 'mathematics']"
3949,394900,Mad Veterinarian,0,[]
3950,395000,Windmill Animation,0,[]
3951,395100,Push-To Telescope,0,[]
3952,395200,Mystery,6,['string']
3953,395300,Battleship,0,[]
3954,395400,Brainf**k 인터프리터,15,"['data structures', 'implementation', 'simulation', 'stack']"
3955,395500,캔디 분배,16,"['extended euclidean algorithm', 'mathematics', 'number theory']"
3956,395600,Outsourcing,0,[]
3957,395700,Pizza Hawaii,0,[]
3958,395800,롤러코스터 타기,0,[]
3959,395900,스키 점프,15,"['geometry', 'mathematics', 'physics']"
3960,396000,Suffix Array Re-construction,0,[]
3961,396100,터치스크린 키보드,9,[]
3962,396200,Track Smoothing,0,[]
3963,396300,Treasure Diving,0,[]
3964,396400,팩토리얼과 거듭제곱,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
3965,396500,Genetic Fraud,0,[]
3966,396600,Indiana Jones and the lost Soccer Cup,0,[]
3967,396700,매직 스타,11,"['backtracking', 'implementation']"
3968,396800,Magical Crafting,0,[]
3969,396900,My brother’s diary,0,[]
3970,397000,안전 구역,23,"['convex hull', 'geometry']"
3971,397100,Sightseeing,0,[]
3972,397200,Suiting Weavers,0,[]
3973,397300,Time To Live,13,"['graph theory', 'graph traversal', 'tree']"
3974,397400,Absurd prices,0,[]
3975,397500,Cheating or Not,0,[]
3976,397600,역습,8,['dynamic programming']
3977,397700,축구 전술,17,"['graph theory', 'strongly connected component']"
3978,397800,Hacking,11,"['bruteforcing', 'hashing', 'string']"
3979,397900,Last Minute Constructions,0,[]
3980,398000,선발 명단,11,"['backtracking', 'bruteforcing']"
3981,398100,큐브러버,13,"['calculus', 'linear algebra', 'mathematics']"
3982,398200,Soccer Bets,5,['implementation']
3983,398300,The Two-ball Game,0,[]
3984,398400,To score or not to score,0,[]
3985,398500,롤 케이크,5,"['implementation', 'simulation']"
3986,398600,좋은 단어,7,"['data structures', 'stack']"
3987,398700,보이저 1호,9,"['implementation', 'simulation']"
3988,398800,수 고르기,17,"['data structures', 'deque', 'priority queue', 'sliding window']"
3989,398900,유행성 독감,17,"['exponentiation by squaring', 'mathematics']"
3990,399000,화면 보호기,22,"['data structures', 'mathematics', 'segment tree']"
3991,399100,한번 쏘면 멈출 수 없어,8,"['constructive', 'implementation']"
3992,399200,Caravan Robbers,19,"['convex hull trick', 'parametric search']"
3993,399300,Disjoint Regular Expressions,24,"['0-1 bfs', 'breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal', 'implementation', 'parsing', 'regular expression', 'string']"
3994,399400,Exact Measurement,19,['greedy']
3995,399500,스네이크 큐브,18,"['backtracking', 'implementation']"
3996,399600,위대한 사기꾼,12,[]
3997,399700,하이퍼드롬,15,"['bitmask', 'prefix sum']"
3998,399800,단백질 식별,24,['dynamic programming']
3999,399900,텔레점프,20,"['ad-hoc', 'case work', 'constructive']"
4000,400000,Kingdom Reunion,28,"['case work', 'data structures', 'geometry', 'implementation', 'point in convex polygon check', 'point in non-convex polygon check', 'sweeping', 'set / map by trees']"
4001,400100,미노타우르스 미궁,22,"['binary search', 'dynamic programming', 'graph theory', 'graph traversal', 'prefix sum']"
4002,400200,닌자배치,20,"['data structures', 'priority queue', 'smaller to larger technique', 'tree']"
4003,400300,경비병,22,"['data structures', 'dynamic programming', 'greedy', 'sparse table']"
4004,400400,쿠나이,26,"['data structures', 'implementation', 'priority queue', 'segment tree', 'sweeping']"
4005,400500,테이블 색칠하기,21,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'mathematics']"
4006,400600,경로 찾기,20,"['value / coordinate compression', ""dijkstra's"", 'geometry', 'graph theory', 'sweeping']"
4007,400700,단어 추측 게임,0,[]
4008,400800,특공대,21,"['convex hull trick', 'dynamic programming']"
4009,400900,순찰,24,"['dynamic programming', 'dynamic programming on trees', 'tree']"
4010,401000,신호,22,"['geometry', 'linearity of expectation', 'mathematics', 'probability theory', 'sweeping']"
4011,401100,기름 파기,22,"['mathematics', 'prefix sum']"
4012,401200,컨벤션 센터,22,"['data structures', 'greedy', 'sparse table']"
4013,401300,ATM,19,"['dynamic programming', 'graph theory', 'strongly connected component', 'topological sorting']"
4014,401400,도로,19,"['data structures', 'disjoint set', 'graph theory', 'greedy', 'minimum spanning tree']"
4015,401500,DNA,16,['dynamic programming']
4016,401600,모빌,17,"['ad-hoc', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'greedy', 'tree']"
4017,401700,동물원,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
4018,401800,Babs’ Box Boutique,0,[]
4019,401900,Flash Mob,9,"['mathematics', 'sorting']"
4020,402000,Hexagon Perplexagon,12,"['backtracking', 'implementation']"
4021,402100,I’ve Got Your Back(gammon),0,[]
4022,402200,Parencedence!,0,[]
4023,402300,Road Series,0,[]
4024,402400,Show Me the Money,11,"['graph theory', 'graph traversal', 'implementation', 'mathematics']"
4025,402500,"Sofa, So Good",0,[]
4026,402600,Town Square,0,[]
4027,402700,The Agency,0,[]
4028,402800,Chain of Fools,6,"['bruteforcing', 'implementation', 'mathematics', 'number theory']"
4029,402900,콩도르세 역설,13,"['bruteforcing', 'greedy']"
4030,403000,포켓볼,9,"['binary search', 'mathematics', 'precomputation']"
4031,403100,The Banzhaf Buzz-Of,0,[]
4032,403200,GPS I Love You,0,[]
4033,403300,Have You Driven a Fjord Lately?,0,[]
4034,403400,Mobile,0,[]
4035,403500,Wally World,0,[]
4036,403600,Cut It Out!,0,[]
4037,403700,Flip It!,0,[]
4038,403800,Maze,0,[]
4039,403900,Photo Shoot,0,[]
4040,404000,Polar Bear,18,"['implementation', 'simulation']"
4041,404100,Pro-Test Voting,0,[]
4042,404200,Vampires!,10,['implementation']
4043,404300,"We’ve Got Chemistry, Babe",0,[]
4044,404400,도전 24,14,"['bruteforcing', 'dynamic programming']"
4045,404500,Cover Up,0,[]
4046,404600,Decompressing in a GIF,10,['string']
4047,404700,Flipper,0,[]
4048,404800,The Flood,11,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
4049,404900,행렬의 텐서곱,16,"['euclidean algorithm', 'implementation', 'mathematics', 'number theory']"
4050,405000,Trip the Lights Fantastic,0,[]
4051,405100,Windows,0,[]
4052,405200,Bordering on Madness,0,[]
4053,405300,Jack of All Trades,0,[]
4054,405400,LCR,12,"['implementation', 'simulation']"
4055,405500,파티가 좋아 파티가 좋아,10,"['greedy', 'sorting']"
4056,405600,스-스-스도쿠,12,['backtracking']
4057,405700,Tanks a Lot,0,[]
4058,405800,The Worm Turns,0,[]
4059,405900,You’ll be Working on the Railroad,0,[]
4060,406000,CIVIC DILL MIX,12,"['implementation', 'mathematics', 'string']"
4061,406100,A Foldy but a Goody,0,[]
4062,406200,Give Me an E,15,"['ad-hoc', 'implementation', 'mathematics']"
4063,406300,"Lemmings, Lemmings Everywhere. But Not For Long.",0,[]
4064,406400,Once Around the Lock,13,"['case work', 'implementation']"
4065,406500,A Puzzling Problem,0,[]
4066,406600,"And Now, a Remainder from Our Sponsor",14,"['bruteforcing', 'string']"
4067,406700,Target Practice,0,[]
4068,406800,Caterpillar,12,"['ad-hoc', 'breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
4069,406900,Hie with the Pie,0,[]
4070,407000,"Mahershalalhashbaz, Nebuchadnezzar, and Billy Bob Benjamin Go to the Regionals",5,"['implementation', 'sorting', 'string']"
4071,407100,The Mastermind Master’s Mind,0,[]
4072,407200,Words,4,"['implementation', 'string']"
4073,407300,Stake Your Claim,0,[]
4074,407400,약어,0,[]
4075,407500,Countdown,0,[]
4076,407600,The Game of Efil,11,"['bruteforcing', 'implementation']"
4077,407700,Reliable Nets,16,"['dynamic programming', 'graph theory']"
4078,407800,Square Count,0,[]
4079,407900,Swamp Things,0,[]
4080,408000,Two Ends,15,['dynamic programming']
4081,408100,Sunday Drive,0,[]
4082,408200,Hexagram,0,[]
4083,408300,직사각형 만들기,0,[]
4084,408400,Viva la Diferencia,3,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
4085,408500,Robot Navigation,0,[]
4086,408600,Folding Game,0,[]
4087,408700,Burnout,0,[]
4088,408800,Family Fortune,16,"['dynamic programming', 'recursion', 'tree']"
4089,408900,Moving Points,0,[]
4090,409000,뱀파이어 숫자,12,"['binary search', 'implementation', 'precomputation']"
4091,409100,Balloons,15,"['greedy', 'sorting']"
4092,409200,비트 개수 세기,18,"['bitmask', 'mathematics']"
4093,409300,Data Recovery,0,[]
4094,409400,Equal Angles,0,[]
4095,409500,최대 정사각형,12,['dynamic programming']
4096,409600,팰린드로미터,6,"['bruteforcing', 'string']"
4097,409700,수익,9,['dynamic programming']
4098,409800,Roller Coaster,19,['dynamic programming']
4099,409900,Skyline,13,"['combinatorics', 'mathematics']"
4101,410100,크냐?,1,['implementation']
4104,410400,Block Game,0,[]
4105,410500,유클리드,9,"['geometry', 'mathematics']"
4106,410600,Museum Guards,17,['maximum flow']
4107,410700,Knitting,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
4108,410800,지뢰찾기,6,['implementation']
4109,410900,The Ninja Way,21,"['bellman–ford', 'graph theory']"
4110,411000,당구대,15,['geometry']
4111,411100,Robot Challenge,12,['dynamic programming']
4112,411200,Mosaic,20,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
4113,411300,Series / Parallel Resistor Circuits,0,[]
4114,411400,The Heart of the Country,12,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
4115,411500,Lawrence of Arabia,11,['dynamic programming']
4116,411600,Shoring Up the Levees,0,[]
4117,411700,Combination Lock,4,"['arithmetic', 'implementation', 'mathematics']"
4118,411800,Fred’s Lotto Tickets,4,['implementation']
4119,411900,A No-Win Situation,0,[]
4120,412000,A Walk in the Park,0,[]
4121,412100,Teleport Out!,0,[]
4122,412200,Worms,14,['dynamic programming']
4123,412300,Bridges and Tunnels,12,"[""dijkstra's"", 'graph theory']"
4124,412400,Secret Polynomial,16,"['ad-hoc', 'case work', 'mathematics']"
4125,412500,Room Painting,0,[]
4126,412600,Course Scheduling,0,[]
4127,412700,Tetrahedron Inequality,0,[]
4128,412800,Cookie Crumbs,0,[]
4129,412900,Meganominoes,9,"['ad-hoc', 'data structures', 'set / map by hashing', 'set / map by trees']"
4130,413000,Buying Gas,9,['greedy']
4131,413100,Modulo Solitaire,9,"['breadth-first search', 'graph theory', 'graph traversal']"
4132,413200,Subset Sum,8,['backtracking']
4133,413300,Triangle War,17,"['bitmask', 'dynamic programming', 'game theory', 'implementation', 'mathematics']"
4134,413400,다음 소수,7,"['bruteforcing', 'mathematics', 'number theory', 'primality test']"
4135,413500,How Big Is It?,15,"['bruteforcing', 'geometry', 'mathematics']"
4136,413600,Pousse,6,['implementation']
4137,413700,487-3279,6,"['data structures', 'set / map by hashing', 'implementation', 'sorting', 'string', 'set / map by trees']"
4138,413800,Paper Route,12,"['depth-first search', 'graph theory', 'graph traversal']"
4139,413900,Octagons,11,"['greedy', 'implementation', 'string']"
4140,414000,Party Location,14,['geometry']
4141,414100,Numbersrebmun,4,"['implementation', 'string']"
4142,414200,Class Schedule,16,"['dynamic programming', 'floyd–warshall', 'graph theory']"
4143,414300,Bridges and Tunnels,12,"['data structures', 'disjoint set', 'set / map by hashing', 'string', 'set / map by trees']"
4144,414400,Alien Communicating Machines,5,"['implementation', 'mathematics']"
4145,414500,Geometric Sequence,14,"['case work', 'mathematics']"
4146,414600,Largest Square,13,"['binary search', 'dynamic programming', 'parametric search', 'prefix sum']"
4147,414700,Harmonious Matrices,0,[]
4148,414800,31게임,13,"['data structures', 'dynamic programming', 'game theory', 'set / map by hashing', 'recursion']"
4149,414900,큰 수 소인수분해,21,"['mathematics', 'miller–rabin', 'number theory', 'pollard rho', 'primality test']"
4150,415000,피보나치 수,5,['arbitrary precision / big integers']
4151,415100,Compound Words,13,"['data structures', 'set / map by hashing', 'string', 'tree', 'trie']"
4152,415200,New Horizons,0,[]
4153,415300,직각삼각형,3,"['geometry', 'mathematics', 'pythagoras theorem']"
4154,415400,Buzzwords,6,"['bruteforcing', 'data structures', 'set / map by hashing', 'implementation', 'string']"
4155,415500,Ferry Loading V,0,[]
4156,415600,Driving Range,13,"['data structures', 'disjoint set']"
4157,415700,Frosh Week,16,"['value / coordinate compression', 'data structures', 'segment tree', 'sorting']"
4158,415800,CD,6,"['binary search', 'data structures', 'set / map by hashing', 'two-pointer']"
4159,415900,알래스카,8,"['greedy', 'sorting']"
4160,416000,이혼,16,"['data structures', 'set / map by hashing', 'meet in the middle']"
4161,416100,나이트의 여행,14,[]
4162,416200,Paintball,10,"['geometry', 'graph theory', 'graph traversal', 'implementation']"
4163,416300,Shopping,12,"['bruteforcing', ""dijkstra's"", 'graph theory']"
4164,416400,Stack Machine,0,[]
4165,416500,Ideas,0,[]
4166,416600,HST,7,"['arithmetic', 'data structures', 'set / map by hashing', 'mathematics', 'parsing', 'string']"
4167,416700,Tunnelling the Earth,13,"['geometry', 'geometry; 3d', 'mathematics']"
4168,416800,Rooks,13,['bruteforcing']
4169,416900,Pipes,0,[]
4170,417000,Cantor,12,"['graph theory', 'graph traversal', 'mathematics']"
4171,417100,Meltdown,0,[]
4172,417200,sqrt log sin,8,['dynamic programming']
4173,417300,MC part deux,0,[]
4174,417400,Moveable maze,0,[]
4175,417500,Pick up sticks,13,"['data structures', 'deque', 'graph theory', 'topological sorting']"
4176,417600,Digits,4,"['implementation', 'simulation', 'string']"
4177,417700,Rotate to root,0,[]
4178,417800,Tic Tac Toe,0,[]
4179,417900,불!,12,"['breadth-first search', 'graph theory', 'graph traversal']"
4180,418000,Nice Prefixes,0,[]
4181,418100,Convex Hull,16,"['convex hull', 'geometry', 'sorting']"
4182,418200,Slalom,16,"['binary search', 'parametric search']"
4183,418300,Unique Snowflakes,11,"['data structures', 'set / map by hashing', 'set / map by trees', 'two-pointer']"
4184,418400,Ocean Currents,13,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
4185,418500,Colliding Traffic,0,[]
4186,418600,Zerg Rush!!!,0,[]
4187,418700,Scrolling Sign,0,[]
4188,418800,Cranes,9,"['bitmask', 'bruteforcing', 'geometry', 'pythagoras theorem']"
4189,418900,WiFi,12,['parametric search']
4190,419000,Exact Change,10,['dynamic programming']
4191,419100,Dominos 2,10,"['depth-first search', 'graph theory', 'graph traversal']"
4192,419200,Logo 2,0,[]
4193,419300,Laurel Creek,0,[]
4194,419400,Rocket Stages,0,[]
4195,419500,친구 네트워크,14,"['data structures', 'disjoint set', 'set / map by hashing']"
4196,419600,도미노,17,"['graph theory', 'strongly connected component']"
4197,419700,Logo,5,"['implementation', 'mathematics', 'simulation']"
4198,419800,열차정렬,15,['dynamic programming']
4199,419900,Classified,0,[]
4200,420000,Hot Spot,14,[]
4201,420100,Snakes and Ladders,0,[]
4202,420200,Balance,15,['geometry']
4203,420300,Asteroid Rangers,25,"['graph theory', 'minimum spanning tree']"
4204,420400,Curvy Little Bottles,18,"['binary search', 'calculus', 'mathematics']"
4205,420500,버스기사 승재,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
4206,420600,피보나치 단어,21,"['dynamic programming', 'knuth–morris–pratt', 'string']"
4207,420700,Infiltration,21,"['backtracking', 'bitmask', 'bit set', 'bruteforcing', 'graph theory', 'mathematics']"
4208,420800,열쇠,0,[]
4209,420900,Minimum Cost Flow,24,"['bruteforcing', ""dijkstra's"", 'graph theory', 'implementation']"
4210,421000,로봇 청소기,25,"['dynamic programming', 'geometry']"
4211,421100,금고 회사,24,"['binary search', 'data structures', 'implementation', 'segment tree']"
4212,421200,최단 비행 경로,26,"[""dijkstra's"", 'geometry', 'geometry; 3d', 'graph theory']"
4213,421300,그릇 쌓기,19,"['dynamic programming', 'sorting']"
4214,421400,Takeover Wars,24,['greedy']
4215,421500,비밀 프로젝트,21,[]
4216,421600,Afﬁne Mess,0,[]
4217,421700,신성 문자,14,"['breadth-first search', 'graph theory', 'graph traversal']"
4218,421800,칩 설계,25,"['circulation', 'maximum flow', 'minimum cost maximum flow']"
4219,421900,커피 전문점,18,"['implementation', 'prefix sum']"
4220,422000,Machine Works,22,"['convex hull trick', 'dynamic programming']"
4221,422100,Magic Sticks,24,"['binary search', 'dynamic programming', 'geometry', 'mathematics']"
4222,422200,Mining Your Own Business,22,"['articulation points and bridges', 'biconnected component', 'graph theory']"
4223,422300,Mummy Madness,23,"['binary search', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
4224,422400,피라미드,18,[]
4225,422500,쓰레기 슈트,18,"['convex hull', 'geometry']"
4226,422600,Gangs,12,"['recursion', 'string']"
4227,422700,Smeech,9,"['data structures', 'mathematics', 'parsing', 'probability theory', 'stack', 'string']"
4228,422800,The Dragon of Loowater,10,"['greedy', 'sorting']"
4229,422900,Tournament,0,[]
4230,423000,사랑과 전쟁,18,"['2-sat', 'graph theory', 'strongly connected component']"
4231,423100,Exchange Rates,14,"['dynamic programming', 'mathematics', 'probability theory']"
4232,423200,Conformity,8,"['data structures', 'set / map by hashing', 'sorting']"
4233,423300,가짜소수,11,"['exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'number theory', 'primality test']"
4234,423400,Carpool,0,[]
4235,423500,Friend or Foe?,0,[]
4236,423600,Open Source,7,"['data structures', 'set / map by hashing', 'implementation', 'sorting']"
4237,423700,비 단조성,10,['ad-hoc']
4238,423800,Humidex,6,"['implementation', 'mathematics']"
4239,423900,Tour de France,0,[]
4240,424000,Texas Trip,20,['geometry']
4241,424100,소수 없는 수열,13,"['backtracking', 'implementation', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
4242,424200,Hit or Miss,11,"['implementation', 'simulation']"
4243,424300,보안 업체,18,['dynamic programming']
4244,424400,Roll Playing Games,14,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
4245,424500,Team Rankings,9,"['bruteforcing', 'implementation']"
4246,424600,To and Fro,5,[]
4247,424700,Translations,0,[]
4248,424800,Chat Rooms,11,"['data structures', 'set / map by hashing', 'implementation', 'prefix sum', 'queue', 'string', 'set / map by trees']"
4249,424900,Hermes' Colony,0,[]
4250,425000,EKG Sequence,0,[]
4251,425100,"Water Main Break, Fixed",9,['bruteforcing']
4252,425200,Polly Nomials,0,[]
4253,425300,Pushing Boxes,0,[]
4254,425400,Ball Toss,8,['implementation']
4255,425500,Galactic Breakup,0,[]
4256,425600,트리,14,"['divide and conquer', 'recursion', 'tree']"
4257,425700,프리오더 포스트오더,12,"['combinatorics', 'mathematics', 'tree']"
4258,425800,Knockout Tournament,0,[]
4259,425900,Plugged In,0,[]
4260,426000,One Person “The Price is Right”,12,['dynamic programming']
4261,426100,Slots of Fun,0,[]
4262,426200,Semi-prime H-numbers,12,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
4263,426300,Rectilinear polygon,0,[]
4264,426400,Life Forms,0,[]
4265,426500,Tautology,13,"['bitmask', 'bruteforcing', 'data structures', 'parsing', 'stack', 'string']"
4266,426600,Rinse,0,[]
4267,426700,"The Trip, 2007",8,[]
4268,426800,Mall Mania,0,[]
4269,426900,Moonshine,0,[]
4270,427000,WFF 'N PROOF,0,[]
4271,427100,Cousins,0,[]
4272,427200,Ferry Loading IV,11,"['implementation', 'simulation', 'two-pointer']"
4273,427300,Card Hands,0,[]
4274,427400,Eventually periodic sequence,0,[]
4275,427500,Point of view in Flatland,0,[]
4276,427600,0이 몇 개?,13,['mathematics']
4277,427700,Educational journey,14,['mathematics']
4278,427800,Go,13,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
4279,427900,Medals,6,"['bruteforcing', 'implementation', 'mathematics']"
4280,428000,Flipping colors,0,[]
4281,428100,Crabbles,8,"['bitmask', 'bruteforcing', 'implementation']"
4282,428200,War on Weather,7,['implementation']
4283,428300,Factstone Benchmark,8,['mathematics']
4284,428400,A Walk Through the Forest,16,[]
4285,428500,Prerequisites?,4,['implementation']
4286,428600,So you want to be a 2^n-aire?,15,"['calculus', 'mathematics', 'probability theory']"
4287,428700,Word Ratios,4,"['implementation', 'string']"
4288,428800,Pick-up sticks,0,[]
4289,428900,Rock-Paper-Scissors Tournament,5,"['arithmetic', 'implementation', 'mathematics']"
4290,429000,Structural Equivalence,0,[]
4291,429100,Brownie Points I,5,"['implementation', 'simulation']"
4292,429200,Magic Bitstrings,14,"['mathematics', 'number theory']"
4293,429300,Cutting a polygon,0,[]
4294,429400,Bungee Jumping,13,"['arithmetic', 'implementation', 'mathematics', 'physics']"
4295,429500,Brownie Points II,0,[]
4296,429600,Great Circle,0,[]
4297,429700,Ultra-QuickSort,17,"['value / coordinate compression', 'data structures', 'divide and conquer', 'segment tree', 'sorting']"
4298,429800,Up the Ante,0,[]
4299,429900,AFC 윔블던,3,"['arithmetic', 'mathematics']"
4300,430000,Traditional BINGO,7,"['implementation', 'simulation']"
4301,430100,Practice,0,[]
4302,430200,Help!,0,[]
4303,430300,Treequivalence,0,[]
4304,430400,Antiarithmetic?,9,"['bruteforcing', 'mathematics']"
4305,430500,성격 진단 테스트,17,"['graph theory', 'strongly connected component']"
4306,430600,Map,13,"['case work', 'geometry', 'implementation']"
4307,430700,개미,10,['ad-hoc']
4308,430800,Cat,0,[]
4309,430900,Evil Straw Warts Live,0,[]
4310,431000,Mint,10,"['bruteforcing', 'euclidean algorithm', 'mathematics', 'number theory']"
4311,431100,Expanding Rods,0,[]
4312,431200,3의 제곱,8,"['arbitrary precision / big integers', 'mathematics']"
4313,431300,Work Reduction,0,[]
4314,431400,Grid Speed,0,[]
4315,431500,나무 위의 구슬,15,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
4316,431600,Tango Tango Insurrection,0,[]
4317,431700,Advanced Causal Measurements (ACM),14,"['binary search', 'greedy', 'parametric search']"
4318,431800,A flea on a chessboard,11,"['implementation', 'pigeonhole principle', 'simulation']"
4319,431900,Jack and Jill,0,[]
4320,432000,완전 P제곱수,9,['mathematics']
4321,432100,Calories from Fat,8,[]
4322,432200,Dead Fraction,7,[]
4323,432300,Biometrics,0,[]
4324,432400,XYZZY,0,[]
4325,432500,A Brief Gerrymander,0,[]
4326,432600,Russian Dolls,0,[]
4327,432700,Combination Lock,3,"['implementation', 'mathematics']"
4328,432800,기초 나머지 계산,5,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
4329,432900,Genealogical Research,0,[]
4330,433000,Treasure Map,17,"['geometry', 'mathematics']"
4331,433100,Intellectual Property,0,[]
4332,433200,Persistent Numbers,11,"['greedy', 'mathematics']"
4333,433300,Major Scales,0,[]
4334,433400,Dumb Bones,14,[]
4335,433500,숫자 맞추기,5,['implementation']
4336,433600,Temple of Dune,11,['geometry']
4337,433700,Ferry Loading II,11,[]
4338,433800,Catenyms,0,[]
4339,433900,Basic,0,[]
4340,434000,"Rock, Scissors, Paper",7,"['implementation', 'simulation']"
4341,434100,연립 방정식,18,"['case work', 'implementation', 'mathematics', 'parsing', 'string']"
4342,434200,유클리드 게임,14,"['euclidean algorithm', 'game theory', 'mathematics', 'number theory']"
4343,434300,Arctic Network,13,"['graph theory', 'minimum spanning tree']"
4344,434400,평균은 넘겠지,5,"['arithmetic', 'mathematics']"
4345,434500,Time Zones,8,[]
4346,434600,Trains,0,[]
4347,434700,Tic Tac Toe,10,['bruteforcing']
4348,434800,막대 정사각형,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
4349,434900,Blocks,4,"['bruteforcing', 'geometry', 'implementation', 'mathematics']"
4350,435000,Faucet Flow,0,[]
4351,435100,Hay Points,6,"['data structures', 'set / map by hashing', 'string']"
4352,435200,Jogging Trails,0,[]
4353,435300,Beavergnaw,7,"['geometry', 'geometry; 3d', 'mathematics']"
4354,435400,문자열 제곱,16,"['knuth–morris–pratt', 'string']"
4355,435500,서로소,15,"['euler totient function', 'mathematics', 'number theory']"
4356,435600,Return of the Jedi,0,[]
4357,435700,이산 로그,20,"['discrete logarithm', ""fermat's little theorem"", 'mathematics', 'meet in the middle', 'number theory']"
4358,435800,생태학,9,"['data structures', 'set / map by hashing', 'string', 'set / map by trees']"
4359,435900,Forests,6,['implementation']
4360,436000,A Star not a Tree?,18,"['geometry', 'gradient descent']"
4361,436100,Adventures in Moving - Part IV,12,['dynamic programming']
4362,436200,Pairsumonious Numbers,19,[]
4363,436300,Snow Clearing,7,"['geometry', 'mathematics']"
4364,436400,Adventures in Moving - Part V,0,[]
4365,436500,Stack 'em Up,5,['implementation']
4366,436600,Average Speed,5,"['implementation', 'mathematics', 'parsing', 'string']"
4367,436700,Subway,0,[]
4368,436800,Babelfish,7,"['data structures', 'set / map by hashing', 'string']"
4369,436900,Bounding box,0,[]
4370,437000,곱셈 게임,11,['game theory']
4371,437100,No Tipping,0,[]
4372,437200,Subway,13,['mathematics']
4373,437300,수집합,15,"['binary search', 'two-pointer']"
4374,437400,지프의 법칙,9,"['data structures', 'set / map by hashing', 'parsing', 'string']"
4375,437500,1,8,"['bruteforcing', 'mathematics', 'number theory']"
4376,437600,Gopher II,17,"['bipartite matching', 'geometry']"
4377,437700,Tight words,10,['dynamic programming']
4378,437800,트ㅏㅊ;,6,"['ad-hoc', 'implementation', 'string']"
4379,437900,나누기,11,"['arbitrary precision / big integers', 'mathematics']"
4380,438000,Hotter Colder,0,[]
4381,438100,Bridge,19,"['constructive', 'greedy']"
4382,438200,Saskatchewan,0,[]
4383,438300,점프는 즐거워,6,['implementation']
4384,438400,공평하게 팀 나누기,16,"['dynamic programming', 'knapsack']"
4385,438500,Interpreter,12,"['implementation', 'simulation']"
4386,438600,별자리 만들기,13,"['graph theory', 'minimum spanning tree']"
4387,438700,Language Cardinality,13,"['backtracking', 'parsing', 'recursion', 'string']"
4388,438800,받아올림,4,"['arithmetic', 'implementation', 'mathematics']"
4389,438900,Demerit Points,7,"['implementation', 'simulation']"
4390,439000,Edit Step Ladders,0,[]
4391,439100,Y2K Accounting Bug,7,[]
4392,439200,Airline Hub,11,['geometry']
4393,439300,Snakes,0,[]
4394,439400,Snap,0,[]
4395,439500,Steps,11,['mathematics']
4396,439600,지뢰 찾기,7,"['implementation', 'parsing', 'string']"
4397,439700,Choose and divide,10,"['arbitrary precision / big integers', 'mathematics']"
4398,439800,Old Wine Into New Bottles,0,[]
4399,439900,끝인드롬,14,"['bruteforcing', 'implementation', 'string']"
4400,440000,Origami,0,[]
4401,440100,Fire Station,0,[]
4402,440200,Soundex,5,"['implementation', 'string']"
4403,440300,Ferry Loading,15,['dynamic programming']
4404,440400,Dog & Gopher,0,[]
4405,440500,Gas Station Numbers,10,"['combinatorics', 'mathematics']"
4406,440600,Billiard,7,"['arithmetic', 'geometry', 'mathematics', 'physics']"
4407,440700,The Brick Stops Here,12,"['dynamic programming', 'knapsack']"
4408,440800,Election,8,"['data structures', 'set / map by hashing', 'sorting']"
4409,440900,Maze,0,[]
4410,441000,Boastin' Red Socks,10,[]
4411,441100,The Trip,7,"['arithmetic', 'greedy', 'mathematics', 'sorting']"
4412,441200,Doublets,13,"[""dijkstra's"", 'graph theory', 'string']"
4413,441300,CDVII,0,[]
4414,441400,Factovisors,11,['mathematics']
4415,441500,Spaghetti,0,[]
4416,441600,Prime Distance,12,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
4417,441700,Yahtzee,20,"['backtracking', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'implementation']"
4418,441800,Request for Proposal,6,['implementation']
4419,441900,Australian Voting,11,"['implementation', 'simulation']"
4420,442000,Chocolate Chip Cookies,13,"['bruteforcing', 'geometry']"
4421,442100,Hippity Hopscotch,8,['dynamic programming']
4422,442200,Crypt Kicker II,11,"['data structures', 'set / map by hashing', 'string']"
4423,442300,Watching Watches,7,['mathematics']
4424,442400,Polylops,12,"['ad-hoc', 'geometry', 'implementation']"
4425,442500,Crypt Kicker,0,[]
4426,442600,Dick and Jane,6,"['case work', 'mathematics']"
4427,442700,Leaps Tall Buildings (in a single bound),10,"['mathematics', 'physics']"
4428,442800,Contest Scoreboard,8,"['data structures', 'set / map by hashing', 'sorting']"
4429,442900,Poker Hands,10,"['bitmask', 'case work', 'implementation']"
4430,443000,Is Bigger Smarter?,12,"['dynamic programming', 'sorting']"
4435,443500,중간계 전쟁,3,"['arithmetic', 'implementation', 'mathematics']"
4436,443600,엘프의 검,4,"['bruteforcing', 'mathematics']"
4437,443700,Painted Cube,21,"['breadth-first search', 'graph theory', 'graph traversal']"
4438,443800,팡고른 숲,17,"['sorting', 'sweeping']"
4439,443900,Rings and Runes,13,"['bitmask', 'bruteforcing']"
4440,444000,Ritual Circle,0,[]
4441,444100,Saruman’s Level Up,11,"['mathematics', 'number theory']"
4442,444200,빌보의 생일,16,"['data structures', 'segment tree']"
4443,444300,Spellcasting,0,[]
4444,444400,Temple Build,16,['dynamic programming']
4445,444500,Tile Cut,17,['maximum flow']
4446,444600,ROT13,6,"['implementation', 'string']"
4447,444700,좋은놈 나쁜놈,4,"['implementation', 'string']"
4448,444800,Bracelets,20,"['dynamic programming', 'string']"
4449,444900,A Classic Myth: Flatland Superhero,0,[]
4450,445000,Collateral Cleanup,0,[]
4451,445100,LatticeLand,18,"['breadth-first search', 'geometry', 'graph theory', 'graph traversal']"
4452,445200,Lightning Lessons,8,"['implementation', 'simulation']"
4453,445300,Locksmith,0,[]
4454,445400,상근이의 여자친구,9,['binary search']
4455,445500,The Status is Not Quo,11,['implementation']
4456,445600,Stupendous Man,27,['mathematics']
4457,445700,상근이의 자물쇠,13,['dynamic programming']
4458,445800,첫 글자를 대문자로,3,"['implementation', 'string']"
4459,445900,Always Follow the Rules in Zombieland,3,"['implementation', 'string']"
4461,446100,뱀파이어 김상근 백작,12,"['binary search', 'bruteforcing', 'mathematics']"
4462,446200,Zombie Swallows,0,[]
4463,446300,피보나치 수 분석,18,"['implementation', 'mathematics', 'number theory', 'pollard rho', 'precomputation', 'primality test']"
4464,446400,Pride and Prejudice and Zombies,21,[]
4465,446500,Tales from DeCrypt,0,[]
4466,446600,A Smart Brain is a Tasty Brain,6,"['data structures', 'implementation', 'parsing', 'stack', 'string']"
4467,446700,Building Zombie Fences,25,"['dynamic programming', 'dynamic programming using connection profile']"
4468,446800,Save the Python Programmers!,0,[]
4469,446900,Zombie Blast!,21,['dynamic programming']
4470,447000,줄번호,2,"['implementation', 'string']"
4471,447100,The Navi-Computer is Down!,4,"['geometry', 'geometry; 3d', 'mathematics', 'string']"
4472,447200,Blenjeel Sand Worms and Color Wriggles,0,[]
4473,447300,This Can’t Go On Forever,0,[]
4474,447400,Rescue Beacon,0,[]
4475,447500,Let the Wookiee Win!,0,[]
4476,447600,Laser Turret Maintenance,6,['implementation']
4477,447700,George Lucas and 1138,0,[]
4478,447800,Spare the Ewoks!,22,[]
4479,447900,The History of the Sith Rulers,0,[]
4480,448000,Laser Shot,16,"['bruteforcing', 'euclidean algorithm', 'geometry', 'mathematics', 'number theory']"
4481,448100,Power Grid,0,[]
4482,448200,Tetrahedral Stacks of Cannonballs,4,['mathematics']
4483,448300,“Robot Roll Call – Cambot...Servo...Gypsy...Croooow”,5,"['implementation', 'string']"
4484,448400,Cave Crisis,0,[]
4485,448500,녹색 옷 입은 애가 젤다지?,12,"[""dijkstra's"", 'graph theory']"
4486,448600,Pencils from the 19th Century,4,"['bruteforcing', 'implementation', 'mathematics']"
4487,448700,Optimal Strategy for the ICPC,0,[]
4488,448800,Symbolic Logic Mechanization,17,"['bruteforcing', 'case work', 'data structures', 'implementation', 'parsing', 'stack', 'string']"
4489,448900,Repair Depots,0,[]
4490,449000,Crazy Circuits,0,[]
4491,449100,PropBot,0,[]
4492,449200,“Ancient” Calculator,8,"['bruteforcing', 'implementation']"
4493,449300,가위 바위 보?,3,['implementation']
4494,449400,Missile Command,19,"['bitmask', 'bruteforcing', 'case work', 'mathematics', 'physics']"
4495,449500,Palindromic Primes Category in Jeopardy!,0,[]
4496,449600,Pebbles,0,[]
4497,449700,Rubik’s Cube®,0,[]
4498,449800,Geek Challenge [SKRZAT] (Base Minus Two),9,"['mathematics', 'number theory']"
4499,449900,Frogger,12,"[""dijkstra's"", 'graph theory']"
4500,450000,"“Bubble Gum, Bubble Gum, in the dish, how many pieces do you wish?”",4,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
4501,450100,Games R Us,0,[]
4502,450200,Cover Up,0,[]
4503,450300,구슬,17,"['0-1 bfs', 'bitmask', ""dijkstra's"", 'graph theory']"
4504,450400,배수 찾기,3,"['arithmetic', 'mathematics']"
4505,450500,Car Racing,0,[]
4506,450600,All Your Base,0,[]
4507,450700,단어와 주기율표,0,[]
4508,450800,This is Halloween: Saving Money,0,[]
4509,450900,Coffin Tiles,7,"['mathematics', 'number theory']"
4510,451000,Thinking Inside the Box,0,[]
4511,451100,Lightbulb Testing,0,[]
4512,451200,Operation: Merchant Boorinei,0,[]
4513,451300,The Neptune Adventure,14,"[""dijkstra's"", 'graph theory']"
4514,451400,Phil In the Blanks,0,[]
4515,451500,"Honeycomb, Honeycomb, Me Want Honeycomb!",0,[]
4516,451600,YO!,0,[]
4517,451700,Barcode of Judgment,0,[]
4518,451800,Frenemies,0,[]
4519,451900,Know When to Hold Them,0,[]
4520,452000,I'm Attacking the Darkness!,12,"['bruteforcing', 'parsing', 'string']"
4521,452100,Rank and File,0,[]
4522,452200,The Extent of the Problem,0,[]
4523,452300,Filtration,0,[]
4524,452400,Like Water for Clay,0,[]
4525,452500,Wandering Aimlessly,0,[]
4526,452600,Cables ... in Spaaace!,0,[]
4527,452700,Patterns and Pictures,0,[]
4528,452800,No Wormholes Were Harmed...,0,[]
4529,452900,Tribute (Editor),0,[]
4530,453000,1은 흥미로운 숫자,10,"['implementation', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
4531,453100,Verdis Quo,10,['implementation']
4532,453200,The Screen Behind the Mirror,0,[]
4533,453300,Another Brick in the Wall,0,[]
4534,453400,The Sidewinder Sleeps Tonite,11,"['graph theory', 'graph traversal', 'implementation']"
4535,453500,Rout 66,0,[]
4536,453600,Schottkey 7th Path,0,[]
4537,453700,Another Version of the Truth,0,[]
4538,453800,The Final Countdown,11,[]
4539,453900,반올림,5,"['arithmetic', 'implementation', 'mathematics']"
4540,454000,Q,6,['implementation']
4541,454100,Enigmatologically Cruciverbalistic,0,[]
4542,454200,Blue Jeans,6,"['bruteforcing', 'string']"
4543,454300,Core Wars,0,[]
4544,454400,'Roid Rage,0,[]
4545,454500,Children of the Candy Corn,0,[]
4546,454600,Panic Room,0,[]
4547,454700,Plinko,0,[]
4548,454800,Defining Moment,7,[]
4549,454900,Jetpack Sniper 3000 Fragfest Extreme,0,[]
4550,455000,Pegs,13,"['data structures', 'dynamic programming']"
4551,455100,Janken Tactics,0,[]
4552,455200,Bingo!,9,['bruteforcing']
4553,455300,Artificial Strife,0,[]
4554,455400,It's My Derivative,13,"['implementation', 'mathematics', 'parsing', 'string']"
4555,455500,MisLED,18,"['ad-hoc', 'bitmask', 'case work']"
4556,455600,Relative Relatives,9,"['data structures', 'graph theory', 'set / map by hashing', 'sorting']"
4557,455700,Syntax Included,13,"['data structures', 'parsing', 'regular expression', 'stack', 'string']"
4558,455800,Choose Your Own Adventure,0,[]
4559,455900,Know When to Hold 'em,0,[]
4560,456000,Cubic Rube,19,"['bruteforcing', 'implementation']"
4561,456100,As the Crow Flies,13,['graph theory']
4562,456200,No Brainer,3,['implementation']
4563,456300,리벤지 오브 피타고라스,11,"['mathematics', 'number theory']"
4564,456400,숫자 카드놀이,4,['implementation']
4565,456500,Any Way You Slice It,0,[]
4566,456600,Is the Name of This Problem,5,"['implementation', 'parsing', 'string']"
4567,456700,The Mark of a Wizard,0,[]
4568,456800,LRU Caching,11,"['data structures', 'string']"
4569,456900,Jugglefest,6,"['implementation', 'simulation']"
4570,457000,Bounce,0,[]
4571,457100,Grade School Multiplication,8,[]
4572,457200,Laser Tag,0,[]
4573,457300,Pizza Pricing,6,['implementation']
4574,457400,스도미노쿠,15,"['backtracking', 'implementation']"
4575,457500,Refrigerator Magnets,4,"['data structures', 'set / map by hashing', 'string']"
4576,457600,Shut the Box,0,[]
4577,457700,소코반,13,"['implementation', 'simulation']"
4578,457800,Crash and Go(relians),0,[]
4579,457900,Judges' Time Calculation,0,[]
4580,458000,Mad Scientist,4,"['implementation', 'prefix sum']"
4581,458100,Voting,4,"['implementation', 'string']"
4582,458200,Queen Collisions,8,['implementation']
4583,458300,거울상,4,"['implementation', 'string']"
4584,458400,Top This,0,[]
4585,458500,Quick Search,0,[]
4586,458600,Image Compression,10,['divide and conquer']
4587,458700,이집트 분수,10,"['bruteforcing', 'euclidean algorithm', 'implementation', 'mathematics', 'number theory', 'simulation']"
4588,458800,Up and Down,0,[]
4589,458900,Gnome Sequencing,2,['implementation']
4590,459000,DuLL,0,[]
4591,459100,Black Vienna,0,[]
4592,459200,중복을 없애자,4,['implementation']
4593,459300,"Rock, Paper, Scissors",4,"['implementation', 'string']"
4594,459400,A to Z Numerals,0,[]
4595,459500,Cell Towers,0,[]
4596,459600,RIPOFF,11,['dynamic programming']
4597,459700,패리티,4,"['implementation', 'string']"
4598,459800,Lampyridae Teleportae,6,"['geometry', 'implementation', 'simulation']"
4599,459900,Hex Tile Equations,0,[]
4600,460000,정글의 법칙,9,['implementation']
4601,460100,Bulletin Board,0,[]
4602,460200,Serial Numbers,16,"['bruteforcing', 'case work', 'implementation', 'simulation']"
4603,460300,Line & Circle Maze,18,"['floyd–warshall', 'geometry', 'graph theory', 'implementation']"
4604,460400,Steganography,6,"['bitmask', 'implementation', 'parsing', 'string']"
4605,460500,Typesetting,0,[]
4606,460600,The Seven Percent Solution,4,"['implementation', 'string']"
4607,460700,Slink,22,['implementation']
4608,460800,Persistent Bits,8,"['bitmask', 'implementation']"
4609,460900,Here We Go(relians) Again,11,"[""dijkstra's"", 'graph theory', 'parsing', 'string']"
4610,461000,Electronic Document Security,0,[]
4611,461100,Guard,0,[]
4612,461200,Rock Skipping,8,['bruteforcing']
4613,461300,Quicksum,4,"['implementation', 'string']"
4614,461400,Linear Pachinko,8,"['implementation', 'mathematics', 'probability theory', 'simulation']"
4615,461500,Power cables to sewer pipes,0,[]
4616,461600,Falling Ice,0,[]
4617,461700,Frugal Search,0,[]
4618,461800,Go Go Gorelians,12,"['breadth-first search', 'bruteforcing', 'depth-first search', 'geometry', 'geometry; 3d', 'graph theory', 'graph traversal', 'tree']"
4619,461900,루트,3,"['bruteforcing', 'mathematics']"
4620,462000,Pascal's Travels,9,['dynamic programming']
4621,462100,Overflowing Bookshelf,0,[]
4622,462200,Connect,0,[]
4623,462300,Copier Reduction,3,"['arithmetic', 'mathematics']"
4624,462400,Time to Graduate,0,[]
4625,462500,Painter,11,"['data structures', 'greedy', 'implementation', 'priority queue', 'simulation']"
4626,462600,가글,9,"['mathematics', 'number theory']"
4627,462700,뛰어라 도마뱀,18,['maximum flow']
4628,462800,Netiquette,7,"['implementation', 'string']"
4629,462900,Get Them All,0,[]
4630,463000,Triangle Cuts,0,[]
4631,463100,Symmetric Order,5,"['implementation', 'string']"
4632,463200,Flow Layout,9,"['implementation', 'simulation']"
4633,463300,Permutation Code,0,[]
4634,463400,Ink Blots,0,[]
4635,463500,Speed Limit,3,"['arithmetic', 'implementation', 'mathematics']"
4636,463600,Clay Bully,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
4637,463700,Robots,12,['greedy']
4638,463800,Bright Bracelet,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
4639,463900,Treadmill,9,"['implementation', 'simulation']"
4640,464000,Data Mining?,12,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
4641,464100,Doubles,5,"['bruteforcing', 'implementation']"
4642,464200,Fax Regions,21,"['case work', 'data structures', 'disjoint set', 'dynamic programming', 'dynamic programming using connection profile', 'queue']"
4643,464300,Tournament Brackets,17,"['greedy', 'implementation']"
4644,464400,"Programmer, Rank Thyself",8,"['implementation', 'mathematics', 'sorting']"
4645,464500,힐베르트 곡선,18,"['divide and conquer', 'dynamic programming', 'recursion']"
4646,464600,Magnificent Meatballs,4,"['implementation', 'mathematics']"
4647,464700,Safecracker,6,['bruteforcing']
4648,464800,Oil Pipeline,13,"['bruteforcing', 'implementation']"
4649,464900,Tanning Salon,6,"['bitmask', 'data structures', 'set / map by hashing', 'implementation', 'simulation']"
4650,465000,Jungle Roads,12,"['graph theory', 'minimum spanning tree']"
4651,465100,Transmitters,12,"['bruteforcing', 'geometry']"
4652,465200,W's Cipher,9,"['implementation', 'string']"
4653,465300,Split Windows,14,"['implementation', 'recursion', 'tree']"
4654,465400,Index Generation,15,"['implementation', 'parsing', 'sorting', 'string']"
4655,465500,Hangover,3,['mathematics']
4656,465600,Double Vision,10,"['bruteforcing', 'implementation', 'string']"
4657,465700,Image Perimeters,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
4658,465800,삼각형 게임,11,"['backtracking', 'bruteforcing']"
4659,465900,비밀번호 발음하기,6,"['implementation', 'string']"
4660,466000,Colorville,8,"['implementation', 'simulation']"
4661,466100,Falling Leaves,10,"['implementation', 'tree']"
4662,466200,Edge Detection,16,"['binary search', 'data structures', 'greedy', 'set / map by hashing', 'implementation']"
4663,466300,Instruens Fabulam,14,"['implementation', 'parsing', 'string']"
4664,466400,Find the Winning Move,15,"['data structures', 'dynamic programming', 'game theory', 'set / map by hashing']"
4665,466500,Myacm Triangles,13,"['bruteforcing', 'geometry', 'point in convex polygon check', 'area of a polygon']"
4666,466600,Exchange Rates,15,"['breadth-first search', 'depth-first search', 'euclidean algorithm', 'graph theory', 'graph traversal', 'mathematics', 'number theory']"
4667,466700,Loansome Car Buyer,9,"['implementation', 'mathematics', 'simulation']"
4668,466800,Automatic Editing,8,"['implementation', 'string']"
4669,466900,Robot Motion,10,"['implementation', 'simulation']"
4670,467000,Booklet Printing,6,['implementation']
4671,467100,Finding Rectangles,13,"['bruteforcing', 'geometry']"
4672,467200,Don't Get Rooked,11,"['backtracking', 'breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
4673,467300,셀프 넘버,6,"['bruteforcing', 'implementation', 'mathematics']"
4674,467400,Do the Untwist,7,"['bruteforcing', 'mathematics', 'string']"
4675,467500,Word Amalgamation,5,"['bruteforcing', 'data structures', 'sorting', 'string', 'set / map by trees']"
4676,467600,Haiku Review,7,"['implementation', 'string']"
4677,467700,Oil Deposits,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
4678,467800,Skew Binary,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
4679,467900,The Snail,6,"['implementation', 'simulation']"
4680,468000,Sum It Up,9,"['backtracking', 'bruteforcing']"
4681,468100,WIMP,18,"['implementation', 'simulation']"
4682,468200,Polynomial Showdown,5,"['case work', 'implementation']"
4683,468300,The Doors,15,"['bruteforcing', ""dijkstra's"", 'dynamic programming', 'geometry', 'graph theory', 'implementation']"
4684,468400,Mapmaker,11,"['data structures', 'set / map by hashing', 'implementation', 'mathematics']"
4685,468500,Board Silly,0,[]
4686,468600,Equation Elation,12,"['implementation', 'mathematics', 'parsing', 'string']"
4687,468700,Wheeler Caravans,10,"['implementation', 'mathematics']"
4688,468800,Another Puzzling Problem,12,"['backtracking', 'implementation']"
4689,468900,Basically Speaking,6,[]
4690,469000,완전 세제곱,3,"['bruteforcing', 'implementation', 'mathematics', 'precomputation']"
4691,469100,DNA Translation,10,"['bruteforcing', 'implementation', 'precomputation', 'string']"
4692,469200,Galactic Import,11,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'mathematics']"
4693,469300,Mark-up,11,"['implementation', 'parsing', 'string']"
4694,469400,A Puzzling Problem,12,"['backtracking', 'bruteforcing', 'implementation']"
4695,469500,Letter Sequence Analysis,8,"['data structures', 'implementation', 'sorting', 'string', 'set / map by trees']"
4696,469600,St. Ives,2,"['arithmetic', 'mathematics']"
4697,469700,Fifty Coats of Gray,5,"['arithmetic', 'geometry', 'geometry; 3d', 'implementation', 'mathematics']"
4698,469800,부품 테스트,0,[]
4699,469900,Collision Detection,0,[]
4700,470000,Dueling Philosophers Problem,14,[]
4701,470100,Party Games,18,[]
4702,470200,Funhouse,0,[]
4703,470300,그림의 추측,19,"['constructive', 'mathematics', 'number theory']"
4704,470400,Tsunami,0,[]
4705,470500,Roaming Romans,4,[]
4706,470600,쌍둥이 역설,3,"['arithmetic', 'mathematics']"
4707,470700,"Raggedy, Raggedy",0,[]
4708,470800,AAAA,5,[]
4709,470900,Thunk and Plunk,0,[]
4710,471000,Losers Are Winners,0,[]
4711,471100,Line of Sight,0,[]
4712,471200,Stained Glass,0,[]
4713,471300,Road Rally,0,[]
4714,471400,Lunacy,2,"['arithmetic', 'implementation', 'mathematics']"
4715,471500,Two Mountaineers,0,[]
4716,471600,풍선,15,"['greedy', 'sorting']"
4717,471700,Selling Cells,0,[]
4718,471800,Not One Bit More,18,"['bitmask', 'dynamic programming', 'mathematics']"
4719,471900,Abstract Extract,0,[]
4720,472000,Roller Coaster,0,[]
4721,472100,Spy Cam,0,[]
4722,472200,Underground Cables,13,"['graph theory', 'minimum spanning tree']"
4723,472300,Parlay Wagering,0,[]
4724,472400,Extended Manhattan Distance,0,[]
4725,472500,Stringer,0,[]
4726,472600,Word ladder,0,[]
4727,472700,Close Enough Computations,4,['mathematics']
4728,472800,I-Soar,0,[]
4729,472900,"Trie, Again Trie",0,[]
4730,473000,Stems Sell,0,[]
4731,473100,Signal Strength,0,[]
4732,473200,조옮김,5,['implementation']
4733,473300,Mobiles Alabama,0,[]
4734,473400,Out of Sight,0,[]
4735,473500,Witness Redaction Plan,0,[]
4736,473600,Safety in Alchemy,0,[]
4737,473700,Potholes,0,[]
4738,473800,Bulls and Cows,0,[]
4739,473900,The Turn of the Shrew,0,[]
4740,474000,"거울, 오! 거울",3,"['implementation', 'string']"
4741,474100,Enigmatic Travel,0,[]
4742,474200,Crosswords Insider,0,[]
4743,474300,Doors and Penguins,0,[]
4744,474400,Gypsy Moths,0,[]
4745,474500,Marbles in Three Baskets,0,[]
4746,474600,Generic Units Conversion,0,[]
4747,474700,Zoned Out,0,[]
4748,474800,Shrew-ology,0,[]
4749,474900,Take Your Vitamins,5,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
4751,475100,Extrusion,0,[]
4752,475200,HTML 에디터,16,"['parsing', 'string']"
4753,475300,Mobiles,0,[]
4754,475400,Context-Free Clock,0,[]
4755,475500,Right-Hand Rule,0,[]
4756,475600,WordStack,0,[]
4757,475700,A Contesting Decision,4,"['implementation', 'simulation', 'string']"
4758,475800,Filling Out the Team,3,['implementation']
4759,475900,Auctions R Us,0,[]
4760,476000,GHOST,0,[]
4761,476100,Doggone Moles,0,[]
4762,476200,Line of Sight,13,['geometry']
4763,476300,Tangled in Cables,12,"['graph theory', 'minimum spanning tree']"
4764,476400,"All Roads Lead to Albuquerque, er, Rome",0,[]
4765,476500,Balanced Budget Initiative,0,[]
4766,476600,일반 화학 실험,3,"['arithmetic', 'mathematics']"
4771,477100,아름다운 삼각형,0,[]
4773,477300,Reverse Roman Notation,0,[]
4774,477400,Financial Management,7,[]
4775,477500,Spelling Be,6,"['data structures', 'set / map by hashing', 'string', 'set / map by trees']"
4776,477600,Apply a Cold Compress,0,[]
4777,477700,A Baron Landscape,0,[]
4778,477800,In Defence of a Garden,0,[]
4779,477900,칸토어 집합,8,"['divide and conquer', 'recursion']"
4780,478000,Chambers Ceramic Conundrum,0,[]
4781,478100,사탕 가게,12,"['dynamic programming', 'knapsack']"
4782,478200,분수 뺄셈,14,"['euclidean algorithm', 'mathematics', 'number theory']"
4784,478400,Unhappy Numbers,19,['dynamic programming']
4785,478500,Walls,0,[]
4786,478600,CosmoCraft,27,['greedy']
4787,478700,Covered Walkway,0,[]
4788,478800,Double Dealing,15,"['combinatorics', 'mathematics', 'permutation cycle decomposition']"
4789,478900,The End of the World,17,"['dynamic programming', 'mathematics']"
4790,479000,Estimation,19,"['data structures', 'dynamic programming', 'priority queue']"
4791,479100,Juggler,0,[]
4792,479200,레드 블루 스패닝 트리,18,"['data structures', 'disjoint set', 'graph theory', 'minimum spanning tree']"
4793,479300,The Red Gem,22,['geometry']
4794,479400,Science!,24,"['bipartite matching', 'maximum flow']"
4795,479500,The Worm in the Apple,25,"['convex hull', 'geometry', 'geometry; 3d']"
4796,479600,캠핑,5,"['greedy', 'mathematics']"
4797,479700,화학,14,"['implementation', 'parsing', 'string']"
4798,479800,등차수열에 관한 디리클레의 정리,20,"['extended euclidean algorithm', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
4799,479900,Fuel Stops,13,[]
4800,480000,대충 정렬,17,"['bitmask', 'bruteforcing', 'dynamic programming', 'dynamic programming using bitfield']"
4801,480100,Nine,6,"['bruteforcing', 'case work', 'implementation', 'string']"
4802,480200,함수 오버로딩,20,"['ad-hoc', 'dynamic programming', 'dynamic programming on trees', 'implementation', 'parsing', 'string', 'tree']"
4803,480300,트리,12,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'tree']"
4804,480400,Catching Shade in Flatland,14,['geometry']
4805,480500,Emergency Room,0,[]
4806,480600,줄 세기,3,['implementation']
4807,480700,Iterated Difference,4,"['implementation', 'simulation']"
4808,480800,Shape Number,0,[]
4809,480900,Stock Prices,6,"['implementation', 'sorting']"
4810,481000,Contour Tracing,11,"['depth-first search', 'graph theory', 'graph traversal', 'implementation']"
4811,481100,알약,12,['dynamic programming']
4812,481200,Robot Navigation,12,"['breadth-first search', 'graph theory', 'graph traversal']"
4813,481300,User Names,0,[]
4814,481400,Citizenship Application,15,"['case work', 'implementation']"
4815,481500,Wealthy Family,0,[]
4816,481600,Supply Mission,0,[]
4817,481700,괄호,15,"['parsing', 'string']"
4818,481800,Ropes,5,"['arithmetic', 'implementation', 'mathematics']"
4819,481900,Chain Code,0,[]
4820,482000,Task,0,[]
4821,482100,페이지 세기,6,"['implementation', 'parsing', 'string']"
4822,482200,축구,14,"['backtracking', 'bruteforcing', 'data structures', 'set / map by hashing', 'implementation', 'sorting', 'string']"
4823,482300,Railroad,0,[]
4824,482400,Post Office,4,"['case work', 'implementation']"
4825,482500,Aronson,0,[]
4826,482600,Range,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
4827,482700,Coverage,0,[]
4828,482800,XML,17,"['data structures', 'implementation', 'parsing', 'regular expression', 'stack', 'string']"
4829,482900,Clickomania,13,['dynamic programming']
4830,483000,Balance,8,"['implementation', 'mathematics', 'simulation']"
4831,483100,Resistors,0,[]
4832,483200,Shuffling,0,[]
4833,483300,Papa,0,[]
4834,483400,Wax,0,[]
4835,483500,Walk in the Park,15,"['data structures', 'precomputation', 'sorting']"
4836,483600,춤,7,"['implementation', 'parsing', 'string']"
4837,483700,Trucking,0,[]
4838,483800,When,20,"['parsing', 'string']"
4839,483900,소진법,7,"['implementation', 'mathematics', 'number theory', 'primality test']"
4840,484000,Tree Grafting,15,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
4841,484100,Look and Say,4,"['implementation', 'string']"
4842,484200,Server Relocation,13,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
4843,484300,Coin Toss,13,"['geometry', 'implementation', 'mathematics', 'probability theory']"
4844,484400,Vacation Rentals,15,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
4845,484500,Baseball,16,"['implementation', 'simulation']"
4846,484600,Team Work,0,[]
4847,484700,Wavelet Compression,0,[]
4848,484800,집합 숫자 표기법,9,"['data structures', 'dynamic programming', 'string']"
4849,484900,Bridge Bidding,14,['implementation']
4850,485000,Baskets of Gold Coins,3,"['arithmetic', 'mathematics']"
4851,485100,Toothpick Arithmetic,15,"['dynamic programming', 'mathematics', 'number theory']"
4852,485200,Winter Festival,9,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'string', 'set / map by trees']"
4853,485300,Knots,9,"['combinatorics', 'mathematics']"
4854,485400,String Equations,0,[]
4855,485500,Tire Dimensions,0,[]
4856,485600,Random Walk,0,[]
4857,485700,Paint Mix,0,[]
4858,485800,Open and Close,0,[]
4860,486000,Smallest Difference,10,['bruteforcing']
4861,486100,Faulty Odometer,7,"['mathematics', 'number theory']"
4862,486200,마지막 자리,18,"['euler totient function', 'exponentiation by squaring', 'mathematics', 'number theory']"
4863,486300,Suit Distribution,9,"['combinatorics', 'mathematics', 'probability theory']"
4864,486400,Gold Coins,4,"['arithmetic', 'implementation', 'mathematics']"
4865,486500,Shortest Prefixes,7,"['bruteforcing', 'string']"
4866,486600,Squares,13,"['bruteforcing', 'data structures', 'geometry', 'set / map by hashing']"
4868,486800,Mix and Build,14,"['bruteforcing', 'dynamic programming', 'graph theory', 'graph traversal', 'implementation']"
4869,486900,Blackjack,5,"['implementation', 'mathematics', 'probability theory']"
4872,487200,SPIN,5,"['implementation', 'string']"
4873,487300,SHAKE,0,[]
4874,487400,TOYS,0,[]
4875,487500,COMPRESS,8,"['mathematics', 'string']"
4876,487600,SHEET,0,[]
4877,487700,GYM,6,"['mathematics', 'probability theory']"
4878,487800,PLANKS,0,[]
4879,487900,PERMS,12,"['dynamic programming', 'mathematics']"
4880,488000,다음수,3,"['arithmetic', 'mathematics']"
4881,488100,자리수의 제곱,6,"['bruteforcing', 'implementation']"
4882,488200,정규형,13,"['data structures', 'stack', 'tree']"
4883,488300,삼각 그래프,10,['dynamic programming']
4884,488400,FIFA 월드컵,6,"['arithmetic', 'mathematics']"
4885,488500,월드 오브 큐브,0,[]
4886,488600,나이트 이야기,0,[]
4887,488700,Jumping Beans,0,[]
4888,488800,문시티 건설,15,"['bruteforcing', 'geometry', 'line segment intersection check', 'travelling salesman problem']"
4889,488900,안정적인 문자열,10,"['data structures', 'greedy', 'stack', 'string']"
4890,489000,"Tiles of Tetris, NOT!",4,"['euclidean algorithm', 'mathematics', 'number theory']"
4891,489100,Not So Flat After All,8,['mathematics']
4892,489200,숫자 맞추기 게임,3,"['arithmetic', 'implementation', 'mathematics']"
4893,489300,Hop — Don’t Walk!,14,"['breadth-first search', 'graph theory', 'graph traversal']"
4894,489400,Air Strike,14,[]
4895,489500,Stock Chase,0,[]
4896,489600,땅 나누기,0,[]
4897,489700,Kind of a Blur,0,[]
4898,489800,National Treasures,0,[]
4899,489900,Tobo or not Tobo,13,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation']"
4900,490000,7 더하기,9,"['implementation', 'string']"
4901,490100,Match Maker,0,[]
4902,490200,삼각형의 값,14,"['bruteforcing', 'implementation', 'mathematics', 'prefix sum', 'recursion']"
4903,490300,Relax! It’s just a game,5,"['combinatorics', 'mathematics']"
4904,490400,Einbahnstrasse,0,[]
4905,490500,Think I’ll Buy Me a Football Team,10,['constructive']
4906,490600,Musical Chairs,15,"['dynamic programming', 'mathematics']"
4907,490700,월쉬 행렬,13,"['bitmask', 'divide and conquer', 'mathematics']"
4908,490800,A Day at the Races,10,['sorting']
4909,490900,Judging Olympia,3,"['arithmetic', 'implementation', 'mathematics']"
4910,491000,Hide That Number,8,"['implementation', 'mathematics', 'string']"
4911,491100,Rotating Rings,7,[]
4912,491200,A Tale from the Dark Side of The Moon,6,"['implementation', 'string']"
4913,491300,페르마의 크리스마스 정리,12,"['mathematics', 'number theory', 'prefix sum', 'primality test', 'sieve of eratosthenes']"
4914,491400,Incidental Points,0,[]
4915,491500,Let’s Go to the Movies,0,[]
4916,491600,The Writer's Club,0,[]
4917,491700,Moving Sticks,0,[]
4918,491800,Jonny Hates Math,0,[]
4919,491900,Being Smarty!,9,"['implementation', 'mathematics', 'parsing', 'string']"
4920,492000,테트리스 게임,11,"['bruteforcing', 'implementation']"
4921,492100,나무 블록,7,"['data structures', 'implementation', 'simulation', 'stack']"
4922,492200,Walk Like an Egyptian,3,"['implementation', 'mathematics']"
4923,492300,The Great Sahara,8,"['implementation', 'mathematics']"
4924,492400,정수론 싫어,16,"['mathematics', 'number theory', 'prefix sum', 'primality test', 'sieve of eratosthenes']"
4925,492500,Minimum Spanning Tree,0,[]
4926,492600,A-to-Z,0,[]
4927,492700,Casting Out Nines,5,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
4928,492800,The Earth is Flat!,12,"['data structures', 'stack', 'string']"
4929,492900,수열 걷기,10,['implementation']
4930,493000,Alpha of Degree k,0,[]
4931,493100,큐 소트,0,[]
4932,493200,Still Johnny Can’t Add,5,"['arithmetic', 'implementation', 'mathematics']"
4933,493300,뉴턴의 사과,14,"['data structures', 'stack', 'tree']"
4934,493400,The Euclidian Clock,5,['geometry']
4935,493500,Chop Ahoy! Revisited!,10,['backtracking']
4936,493600,What’s your Logo?,16,"['data structures', 'euler characteristic (χ=v-e+f)', 'geometry']"
4937,493700,It’s All About Three,9,"['mathematics', 'number theory']"
4938,493800,Gift from the Goddess of Programming,10,"['implementation', 'simulation']"
4939,493900,The Sorcerer’s Donut,10,"['bruteforcing', 'data structures', 'set / map by hashing', 'implementation', 'string']"
4940,494000,Weaker than Planned,0,[]
4941,494100,Long Distance Taxi,16,"['data structures', ""dijkstra's"", 'graph theory', 'set / map by hashing']"
4942,494200,Driving an Icosahedral Rover,0,[]
4943,494300,City Merger,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'greedy', 'string']"
4944,494400,Captain Q’s Treasure,0,[]
4945,494500,ASCII Expression,0,[]
4946,494600,Encircling Circles,0,[]
4947,494700,Round Trip,0,[]
4948,494800,베르트랑 공준,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
4949,494900,균형잡힌 세상,7,"['data structures', 'stack', 'string']"
4950,495000,Identically Colored Panels Connection,12,"['backtracking', 'breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
4951,495100,"And Then, How Many Are There?",17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
4952,495200,Planning Rolling Blackouts,14,['dynamic programming']
4953,495300,Watchdog Corporation,0,[]
4954,495400,A Broken Door,18,[]
4955,495500,Pablo Squarson's Headache,6,['implementation']
4956,495600,Amazing Mazes,11,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
4957,495700,Pollock's conjecture,10,['dynamic programming']
4962,496200,Next Mayor,6,"['implementation', 'simulation']"
4963,496300,섬의 개수,9,"['graph theory', 'graph traversal', 'breadth-first search', 'depth-first search']"
4964,496400,단어 덧셈,12,"['backtracking', 'bruteforcing', 'mathematics', 'string']"
4965,496500,Discrete Speed,16,"[""dijkstra's"", 'graph theory']"
4966,496600,Cards,17,"['bipartite matching', 'euclidean algorithm', 'mathematics', 'number theory']"
4967,496700,Tighten Up!,0,[]
4968,496800,Equal Total Scores,5,"['bruteforcing', 'implementation', 'mathematics']"
4969,496900,월요일-토요일,10,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
4970,497000,디지털 회로 개론,12,"['bruteforcing', 'data structures', 'parsing', 'stack', 'string']"
4971,497100,Twirling Robot,15,"[""dijkstra's"", 'graph theory']"
4972,497200,Roll-A-Big-Ball,17,"['geometry', 'line segment intersection check', 'parametric search']"
4973,497300,ICPC: Intelligent Congruent Partition of Chocolate,0,[]
4974,497400,ICPC Score Totalizer Software,4,"['arithmetic', 'implementation', 'mathematics']"
4975,497500,Analyzing Login/Logout Records,8,"['implementation', 'simulation']"
4976,497600,Cut the Cake,11,"['implementation', 'simulation']"
4977,497700,Cliff Climbing,15,"[""dijkstra's"", 'graph theory', 'implementation']"
4978,497800,Twirl Around,0,[]
4979,497900,Dr. Podboq or: How We Became Asymmetric,0,[]
4980,498000,Dirichlet's Theorem on Arithmetic Progressions,7,"['bruteforcing', 'mathematics', 'number theory', 'primality test']"
4981,498100,Organize Your Train part II,7,"['bruteforcing', 'data structures', 'set / map by hashing', 'string']"
4982,498200,Hexerpents of Hexwamp,0,[]
4983,498300,Curling 2.0,11,"['backtracking', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
4984,498400,The Genome Database of All Space Life,17,"['parsing', 'recursion', 'string']"
4985,498500,Secrets in Shadows,0,[]
4986,498600,Ohgas' Fortune,8,"['implementation', 'mathematics', 'simulation']"
4987,498700,Polygonal Line Search,11,"['bruteforcing', 'geometry']"
4988,498800,Numeral System,7,"['parsing', 'string']"
4989,498900,Traveling by Stagecoach,16,"['bitmask', ""dijkstra's"", 'graph theory']"
4990,499000,Earth Observation with a Mobile Robot Team,24,"['breadth-first search', 'data structures', 'geometry', 'graph theory', 'graph traversal', 'implementation']"
4991,499100,로봇 청소기,14,"['breadth-first search', 'bitmask', 'bruteforcing', 'graph theory', 'graph traversal']"
4992,499200,Hanafuda Shuffle,7,"['data structures', 'implementation', 'stack']"
4993,499300,Red and Black,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
4994,499400,배수 찾기,15,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics']"
4995,499500,원과 점,19,"['geometry', 'mathematics']"
4996,499600,Water Tank,0,[]
4997,499700,Name the Crossing,0,[]
4998,499800,저금,4,"['implementation', 'mathematics', 'simulation']"
4999,499900,아!,1,"['implementation', 'string']"
5000,500000,빵 정렬,18,"['data structures', 'mathematics', 'segment tree']"
5001,500100,Cookie Selection,15,"['data structures', 'priority queue']"
5002,500200,도어맨,10,"['data structures', 'greedy', 'stack']"
5003,500300,Eco-driving,0,[]
5004,500400,파워 블로거,26,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'floyd–warshall', 'graph theory']"
5005,500500,Galactic Warlords,0,[]
5006,500600,Horror List,10,"['breadth-first search', 'graph theory', 'graph traversal']"
5007,500700,Infiltration,0,[]
5008,500800,Juice,18,[]
5009,500900,유치원,20,"['2-sat', 'graph theory', 'parametric search', 'strongly connected component']"
5010,501000,수화물,17,"['mathematics', 'sweeping']"
5011,501100,Robots on a grid,11,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
5012,501200,불만 정렬,17,"['data structures', 'segment tree']"
5013,501300,Death Knight Hero,4,"['implementation', 'string']"
5014,501400,스타트링크,11,"['breadth-first search', 'graph theory', 'graph traversal']"
5015,501500,ls,14,['dynamic programming']
5016,501600,Knigs of the Forest,12,"['data structures', 'implementation', 'priority queue', 'simulation']"
5017,501700,Car Trouble,0,[]
5018,501800,Private Space,0,[]
5019,501900,"홀수, 짝수, 그리고 창영",0,[]
5020,502000,Enemy Division,0,[]
5021,502100,왕위 계승,12,"['data structures', 'graph theory', 'set / map by hashing', 'topological sorting']"
5022,502200,연결,15,"['breadth-first search', 'graph theory', 'graph traversal']"
5023,502300,Borg Boogie,0,[]
5024,502400,Dirty Driving,6,['sorting']
5025,502500,낙서,18,"['euclidean algorithm', 'mathematics', 'number theory']"
5026,502600,박사 과정,4,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
5027,502700,Great Geek Game-show 3000!,0,[]
5028,502800,Polyomino Powers,0,[]
5029,502900,Statisticians,0,[]
5030,503000,Skyline,0,[]
5031,503100,Around the track,0,[]
5032,503200,탄산 음료,4,"['arithmetic', 'mathematics']"
5033,503300,Money Matters,10,"['breadth-first search', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
5034,503400,Allergy Test,16,"['backtracking', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
5035,503500,Rain Fall,9,['mathematics']
5036,503600,Speedy Escape,17,"['binary search', ""dijkstra's"", 'graph theory']"
5037,503700,Gokigen Naname,0,[]
5038,503800,Flight Planning,0,[]
5039,503900,Beacons,0,[]
5040,504000,Playfair Cipher,7,"['implementation', 'simulation', 'string']"
5041,504100,Code Permutations,19,"['combinatorics', 'dynamic programming', 'mathematics', 'möbius inversion', 'number theory']"
5042,504200,나무 옮기기,16,"['dynamic programming', 'sorting']"
5043,504300,정말 좋은 압축,5,['mathematics']
5044,504400,코드 절도,19,"['binary search', 'hashing', 'parametric search', 'rabin–karp', 'string', 'suffix array and lcp array']"
5045,504500,Dinner,0,[]
5046,504600,전국 대학생 프로그래밍 대회 동아리 연합,6,['implementation']
5047,504700,Fixing the Bugs,0,[]
5048,504800,Getting Gold,12,"['breadth-first search', 'graph theory', 'graph traversal']"
5049,504900,Hard Evidence,0,[]
5050,505000,Introspective Caching,0,[]
5051,505100,피타고라스의 정리,21,"['fast fourier transform', 'mathematics']"
5052,505200,전화번호 목록,12,"['data structures', 'sorting', 'string', 'tree', 'trie']"
5053,505300,Cuckoo Hashing,15,"['depth-first search', 'graph theory', 'graph traversal', 'implementation']"
5054,505400,주차의 신,4,"['implementation', 'mathematics']"
5055,505500,DNA 복사,0,[]
5056,505600,Circle of Debt,0,[]
5057,505700,Full Tank?,15,"[""dijkstra's"", 'graph theory']"
5058,505800,Nested Dolls,16,"['binary search', 'greedy', 'longest increasing sequence in o(n log n)']"
5059,505900,Shopaholic,7,"['greedy', 'sorting']"
5060,506000,무글 맵스,13,['dynamic programming']
5061,506100,Amphiphilic Carbon Molecules,0,[]
5062,506200,Different Digits,20,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory']"
5063,506300,TGN,3,"['arithmetic', 'mathematics']"
5064,506400,Jezzball,0,[]
5065,506500,Link and Pop -- the Block Game,0,[]
5066,506600,The Counting Problem,0,[]
5067,506700,Whac-a-Mole,13,['dynamic programming']
5068,506800,Random Walking,16,"['dynamic programming', 'mathematics']"
5069,506900,미로에 갇힌 상근,11,['dynamic programming']
5070,507000,The Rotation Game,18,"['backtracking', 'implementation']"
5071,507100,Tian Ji -- The Horse Racing,12,"['greedy', 'sorting']"
5072,507200,The Floor Bricks,0,[]
5073,507300,삼각형과 세 변,3,"['geometry', 'mathematics']"
5074,507400,When Do We Finish?,3,"['implementation', 'mathematics']"
5075,507500,Car Park,0,[]
5076,507600,Web Pages,12,"['data structures', 'parsing', 'stack', 'string']"
5077,507700,Maps,6,"['bruteforcing', 'implementation']"
5078,507800,Shirts,5,"['implementation', 'sorting', 'string']"
5079,507900,Discounts,11,['dynamic programming']
5080,508000,Microspikes,0,[]
5081,508100,Constellations,11,"['bruteforcing', 'data structures', 'disjoint set', 'graph theory']"
5082,508200,Image Segmentation,0,[]
5083,508300,Team Dessert,0,[]
5084,508400,Bat Positioning,0,[]
5085,508500,Gooseberry Tart BASIC,19,"['parsing', 'string']"
5086,508600,배수와 약수,3,"['arithmetic', 'mathematics']"
5087,508700,Card Cutting,3,['implementation']
5088,508800,Archaeological Digs,5,['implementation']
5089,508900,Travelling Salesman,5,"['data structures', 'set / map by hashing', 'sorting', 'string', 'set / map by trees']"
5090,509000,Street Numbers,0,[]
5091,509100,Hostel Nights,0,[]
5092,509200,Air Old Zeeland,6,"['data structures', 'implementation', 'set / map by trees']"
5093,509300,Letter Replacement,5,"['implementation', 'string']"
5094,509400,Balloons,0,[]
5095,509500,Matrix Powers,12,"['divide and conquer', 'exponentiation by squaring', 'linear algebra', 'mathematics']"
5096,509600,Standing Pins,0,[]
5097,509700,The God Delusion,0,[]
5098,509800,Adjacent Edges,0,[]
5099,509900,Vectors,0,[]
5100,510000,Jean and Joe’s Clothes,4,['implementation']
5101,510100,Sequences,3,"['arithmetic', 'mathematics']"
5102,510200,Sarah's Toys,3,"['arithmetic', 'implementation', 'mathematics']"
5103,510300,DVDs,4,"['implementation', 'simulation', 'string']"
5104,510400,NoMoPhobia,7,"['data structures', 'set / map by hashing', 'implementation', 'sorting', 'set / map by trees']"
5105,510500,Postman Joe,5,"['implementation', 'simulation']"
5106,510600,Target,6,['implementation']
5107,510700,마니또,10,"['data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'permutation cycle decomposition']"
5108,510800,Lego Bricks,0,[]
5109,510900,Extreme TTT,0,[]
5110,511000,A Foldy but a Goody,0,[]
5111,511100,Congested Networks,0,[]
5112,511200,Functional Programming Counts,0,[]
5113,511300,Packages Par Avion,0,[]
5114,511400,Ascii Art,0,[]
5115,511500,Coded Communication,7,[]
5116,511600,Water?,14,['prefix sum']
5117,511700,Martian Pranks,0,[]
5118,511800,Chemical Analysis,0,[]
5119,511900,Driving the Rover,12,[]
5120,512000,Martian Pits,15,"['graph theory', 'graph traversal', 'implementation']"
5121,512100,Alarmist,4,"['arithmetic', 'implementation', 'mathematics']"
5122,512200,Countdown,5,"['implementation', 'mathematics']"
5123,512300,Hiking Trails,0,[]
5124,512400,Emergency Rations,13,"['data structures', 'greedy', 'priority queue']"
5125,512500,Armageddon,10,['geometry']
5126,512600,Numerology,0,[]
5127,512700,Weird Currency,9,['implementation']
5128,512800,Bartering,0,[]
5129,512900,Runaway Time Machines,0,[]
5130,513000,Preventing Paradoxes,9,['geometry']
5131,513100,Geologic Strata,10,['implementation']
5132,513200,Exotic Foods,11,['dynamic programming']
5133,513300,Recipes,5,"['implementation', 'mathematics']"
5134,513400,Grocery Shopping,6,"['data structures', 'implementation', 'string']"
5135,513500,Ice Cream,12,"['ad-hoc', 'case work', 'greedy']"
5136,513600,Going to the Movies,0,[]
5137,513700,Mendelian Genetics,0,[]
5138,513800,Road Trip,0,[]
5139,513900,Oil Exploration,4,"['implementation', 'string']"
5140,514000,Rig Placement,0,[]
5141,514100,Safety Precautions,10,"['bruteforcing', 'dynamic programming']"
5142,514200,Oily Currents,0,[]
5143,514300,Seymour the Seal,12,"['breadth-first search', 'graph theory', 'graph traversal']"
5144,514400,Ecosystem,0,[]
5145,514500,Subway Fares,4,['implementation']
5146,514600,Segment Pricing,11,['dynamic programming']
5147,514700,Network Expansion,0,[]
5148,514800,Expansion Order,10,['greedy']
5149,514900,Map Interface,4,"['arithmetic', 'implementation', 'mathematics']"
5150,515000,Wireless Network,7,"['implementation', 'simulation']"
5151,515100,Lobbying,4,['implementation']
5152,515200,Emergency Room,0,[]
5153,515300,Social Network Vaccinations,11,"['backtracking', 'string']"
5154,515400,Cherry Picking,13,['dynamic programming']
5155,515500,Gadget Purchases,4,"['arithmetic', 'implementation', 'mathematics']"
5156,515600,Health Plan Comparison,0,[]
5157,515700,Bailout Bonus,3,"['arithmetic', 'implementation', 'mathematics']"
5158,515800,Risk Assessment,0,[]
5159,515900,Stock Trading,0,[]
5160,516000,Foreclosure Borough,14,"['geometry', 'point in convex polygon check', 'point in non-convex polygon check']"
5161,516100,Toxic Assets,5,"['arithmetic', 'implementation', 'mathematics']"
5162,516200,Stimulus Package,9,['bruteforcing']
5163,516300,Isn’t It Funny How a Bear Likes Honey?,3,"['arithmetic', 'implementation', 'mathematics']"
5164,516400,The Hare and the Hedgehogs,0,[]
5165,516500,Hermit Crabs,0,[]
5166,516600,Monkeys at Typewriters,9,"['mathematics', 'string']"
5167,516700,Swamp Kangaroo,0,[]
5168,516800,Zebra Herd,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
5169,516900,A Fistful of Dollars,5,"['bruteforcing', 'implementation']"
5170,517000,Clue,0,[]
5171,517100,Fingerprints,5,"['implementation', 'string']"
5172,517200,The Perfect Alibi,7,['implementation']
5173,517300,Emergency Response,15,"[""dijkstra's"", 'graph theory']"
5174,517400,Arsenic and Old Lace,0,[]
5175,517500,문제없는 문제,10,"['bitmask', 'bruteforcing']"
5176,517600,대회 자리,4,['implementation']
5177,517700,출력 형식이 잘못되었습니다,9,"['parsing', 'regular expression', 'string']"
5178,517800,시간 초과,18,"['convex hull', 'geometry', 'implementation', 'mathematics', 'parsing', 'string']"
5179,517900,우승자는 누구?,8,"['implementation', 'sorting']"
5180,518000,피자!,13,"['ad-hoc', 'bruteforcing', 'geometry']"
5181,518100,Overlap!,0,[]
5182,518200,Study Days,12,"['dynamic programming', 'knapsack']"
5183,518300,Exam Seating,0,[]
5184,518400,Yes or No?,8,"['greedy', 'sorting']"
5185,518500,Essay Writing,0,[]
5186,518600,파티를 열어라!!!,10,"['greedy', 'sorting']"
5187,518700,Civil Engineering,4,"['arithmetic', 'implementation', 'mathematics']"
5188,518800,Biomedical Engineering,10,"['dynamic programming', 'string']"
5189,518900,Electrical Engineering,0,[]
5190,519000,Aerospace & Mechanical Engineering,4,"['arithmetic', 'mathematics', 'physics']"
5191,519100,Industrial & Systems Engineering,12,['bruteforcing']
5192,519200,Computer Science,9,"['implementation', 'parsing', 'string']"
5193,519300,Fundraising,5,['implementation']
5194,519400,Gerrymandering,0,[]
5195,519500,Stump Speech,5,"['implementation', 'string']"
5196,519600,Campaign Stops,12,"['bruteforcing', 'graph theory', 'graph traversal']"
5197,519700,Butterfly Ballots,10,"['case work', 'greedy']"
5198,519800,And The Winner Is,0,[]
5199,519900,Volleyball Scores,0,[]
5200,520000,Sand Castles,0,[]
5201,520100,Swimming with Sharks,0,[]
5202,520200,Sun Bathing,18,"['calculus', 'geometry', 'geometry; 3d', 'mathematics']"
5203,520300,New Friends,0,[]
5204,520400,Beach Party,9,['bruteforcing']
5205,520500,School Colors,5,"['bruteforcing', 'implementation']"
5206,520600,Lunch,10,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
5207,520700,Orange Bowl,11,"['combinatorics', 'dynamic programming', 'mathematics']"
5208,520800,Course Load,10,"['bruteforcing', 'implementation']"
5209,520900,Lecture Screens,18,"['geometry', 'line segment intersection check', 'sweeping']"
5210,521000,Campus Buildings,5,['string']
5211,521100,가단조와 다장조,5,"['implementation', 'string']"
5212,521200,지구 온난화,9,"['implementation', 'simulation']"
5213,521300,과외맨,14,"['breadth-first search', 'graph theory', 'graph traversal']"
5214,521400,환승,14,"['breadth-first search', 'graph theory', 'graph traversal']"
5215,521500,로테이트,0,[]
5216,521600,축구,0,[]
5217,521700,쌍의 합,3,['implementation']
5218,521800,알파벳 거리,4,"['implementation', 'mathematics', 'string']"
5219,521900,String Transformations,6,['string']
5220,522000,Error Detection,3,"['implementation', 'mathematics']"
5221,522100,Pythogorean Triples,6,"['bruteforcing', 'sorting', 'string']"
5222,522200,Vigenère Cipher,4,"['implementation', 'string']"
5223,522300,Shut The Box I,8,[]
5224,522400,Battleground Preservation,0,[]
5225,522500,Breaking Vigenère Cipher,10,[]
5226,522600,Shut The Box II,0,[]
5227,522700,Game of Stones,18,"['game theory', 'graph theory', 'sprague–grundy theorem']"
5228,522800,Base K,0,"['mathematics', 'implementation']"
5229,522900,Most Frequent Square,0,[]
5230,523000,Prefix Codes,6,"['implementation', 'simulation']"
5231,523100,Rotation Maze,0,[]
5232,523200,Grid Nim,15,"['dynamic programming', 'game theory']"
5233,523300,"Buddy, Can You Spare a Tronk?",0,[]
5234,523400,Find Fame in Disc Arena,0,[]
5235,523500,Even Sum More Than Odd Sum,3,"['arithmetic', 'implementation', 'mathematics']"
5236,523600,Longest Decreasing Suffix,4,"['implementation', 'string']"
5237,523700,Connected or Not Connected,8,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
5238,523800,Stacked Floating Mountains,4,"['arithmetic', 'implementation', 'mathematics']"
5239,523900,Chess Puzzle,5,['implementation']
5240,524000,Life Connections,0,[]
5241,524100,Circle of Friends,0,[]
5242,524200,Floating Mountain Stability,13,[]
5243,524300,Aim It Right!,0,[]
5244,524400,Navi Navigation,0,[]
5245,524500,Locate Mining Center,0,[]
5246,524600,Checkerboard Rows,4,['implementation']
5247,524700,Mining Maps,7,['graph theory']
5248,524800,Hauling Ore,10,"['breadth-first search', 'graph theory', 'graph traversal', 'parsing', 'string']"
5249,524900,BOI-handsome,0,[]
5250,525000,최단 경로들,23,"['data structures', ""dijkstra's"", 'graph theory', 'segment tree with lazy propagation', 'lowest common ancestor', 'segment tree', 'tree']"
5251,525100,Spiral,24,[]
5252,525200,The Best Teams,21,"['data structures', 'segment tree']"
5253,525300,Fan Groups,21,"['graph theory', 'strongly connected component', 'topological sorting']"
5254,525400,Balls,21,"['convex hull trick', 'dynamic programming']"
5255,525500,2circles,25,"['binary search', 'convex hull', 'geometry', 'half plane intersection', 'rotating calipers']"
5256,525600,medians,15,"['ad-hoc', 'greedy']"
5257,525700,timeismoney,26,"['convex hull', 'divide and conquer', 'geometry', 'graph theory', 'minimum spanning tree']"
5258,525800,trapezoid,21,"['value / coordinate compression', 'data structures', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'segment tree', 'sweeping']"
5259,525900,pawns,16,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
5260,526000,puzzle,0,[]
5261,526100,sorting,0,[]
5262,526200,heritage,0,[]
5263,526300,samba,6,"['data structures', 'set / map by hashing', 'implementation', 'set / map by trees']"
5264,526400,spiral123,15,['implementation']
5265,526500,Cipher,0,[]
5266,526600,Strange Dream,0,[]
5267,526700,Points,0,[]
5268,526800,The stairways of Saharna,0,[]
5269,526900,Toponyms,0,[]
5337,533700,웰컴,1,['implementation']
5338,533800,마이크로소프트 로고,1,['implementation']
5339,533900,콜센터,1,['implementation']
5347,534700,LCM,6,"['euclidean algorithm', 'mathematics', 'number theory']"
5354,535400,J박스,3,['implementation']
5355,535500,화성 수학,4,"['arithmetic', 'implementation', 'mathematics']"
5361,536100,전투 드로이드 가격,3,"['arithmetic', 'mathematics']"
5363,536300,요다,4,"['implementation', 'string']"
5371,537100,Annoying Mosquitos,5,"['bruteforcing', 'implementation']"
5372,537200,나쁜 과학자,17,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
5373,537300,큐빙,16,"['implementation', 'simulation']"
5374,537400,올바른 바이너리 문자열,0,[]
5375,537500,공책 구매,16,"['dynamic programming', 'greedy']"
5376,537600,소수를 분수로,10,"['euclidean algorithm', 'mathematics', 'number theory', 'parsing', 'string']"
5377,537700,승혁이의 과외돌이네 집 탈출하기,21,"['convex hull', 'geometry', 'point in convex polygon check']"
5378,537800,Hex,11,"['graph theory', 'graph traversal']"
5379,537900,Islands,0,[]
5380,538000,Jumbled Letters,13,"['bitmask', 'data structures', 'set / map by hashing', 'implementation', 'sorting']"
5381,538100,Popping Balloons,0,[]
5382,538200,Quick out of the Harbour,13,"[""dijkstra's"", 'graph theory']"
5383,538300,안녕! 난 루피! 장래에 해적왕이 될 사내다!,24,['geometry']
5384,538400,Bad Wiring,16,"['bruteforcing', 'greedy']"
5385,538500,Ultimate Finishing Strike,0,[]
5386,538600,금화 게임,17,"['game theory', 'sprague–grundy theorem']"
5387,538700,Walking the Plank,0,[]
5388,538800,Parking Ships,18,"['dynamic programming', 'greedy']"
5389,538900,제곱근 작도,9,"['bruteforcing', 'mathematics', 'number theory']"
5390,539000,Gene Shuffle,6,"['data structures', 'set / map by trees']"
5391,539100,Top 2000,0,[]
5392,539200,The Twin Tower,10,[]
5393,539300,콜라츠,8,"['arithmetic', 'mathematics', 'number theory']"
5394,539400,시계,24,"['binary search', 'case work', 'geometry']"
5395,539500,Snooker,0,[]
5396,539600,Pie Division,0,[]
5397,539700,키로거,9,"['data structures', 'linked list', 'stack']"
5398,539800,틀렸습니다,20,['bipartite matching']
5399,539900,Penguin Bashing,0,[]
5400,540000,Gearbox,0,[]
5401,540100,Escape from the Minefield,28,"['data structures', 'delaunay triangulation', 'disjoint set', 'geometry']"
5402,540200,Baby’s Blocks,0,[]
5403,540300,The Pharaoh’s Curse,0,[]
5404,540400,차원 워프 드라이브,0,[]
5405,540500,프랙탈 거리,18,[]
5406,540600,"No Smoking, Please",19,"['maximum flow', 'graph theory', 'max-flow min-cut theorem']"
5407,540700,Song contest,14,"['data structures', 'geometry', 'set / map by hashing', 'implementation', 'mathematics', 'sorting']"
5408,540800,Message,15,"['implementation', 'mathematics']"
5409,540900,The skatepark's new ramps,0,[]
5410,541000,Road,0,[]
5411,541100,Warfare,0,[]
5412,541200,Blackjack,0,[]
5413,541300,Robintron,0,[]
5414,541400,Diamond Dealer,23,"['convex hull', 'geometry', 'mathematics', 'sorting', 'sweeping']"
5415,541500,ASM – The Abelian Sandpile Model,11,['implementation']
5416,541600,Cell Phones,0,[]
5417,541700,Evacuation,0,[]
5418,541800,Giant Cover,0,[]
5419,541900,북서풍,17,"['value / coordinate compression', 'data structures', 'segment tree', 'sweeping']"
5420,542000,Shepherds and Engineers,9,"['case work', 'implementation']"
5421,542100,Ski Lifts,18,"['graph theory', 'strongly connected component']"
5422,542200,Tables,0,[]
5423,542300,Another Dice Game,0,[]
5424,542400,천하제일 게임 대회,21,[]
5425,542500,자리합,15,['mathematics']
5426,542600,비밀 편지,6,"['implementation', 'mathematics', 'string']"
5427,542700,불,12,"['breadth-first search', 'graph theory', 'graph traversal']"
5428,542800,Good Coalition,0,[]
5429,542900,Hot Dogs in Manhattan,14,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal']"
5430,543000,AC,11,"['deque', 'parsing', 'implementation', 'string', 'data structures']"
5431,543100,책 쌓기,14,[]
5432,543200,Stifling the Mutiny,0,[]
5433,543300,RNG,0,[]
5434,543400,Attack of the Giant n-pus,0,[]
5435,543500,Polly Wants a Cracker,0,[]
5436,543600,Rolling Dice,0,[]
5437,543700,Dividing the Loot,7,['greedy']
5438,543800,Secret Island Base,24,['geometry']
5439,543900,Stealth Ninja,0,[]
5440,544000,In and Out,0,[]
5441,544100,Shuriken Game,0,[]
5442,544200,Evolution,0,[]
5443,544300,Have a Nice Day,0,[]
5444,544400,시리얼 넘버,16,"['dynamic programming', 'knapsack', 'sliding window']"
5445,544500,Equal Is Not Really Equal,0,[]
5446,544600,용량 부족,18,"['data structures', 'string', 'tree', 'trie']"
5447,544700,Stock Market,9,['dynamic programming']
5448,544800,Acrobat Reader,0,[]
5449,544900,Farmer John,17,"[""dijkstra's"", 'geometry', 'graph theory', 'line segment intersection check']"
5450,545000,Imagine,0,[]
5451,545100,My Cousin Obama,0,[]
5452,545200,Bancopia,0,[]
5453,545300,Flipping Networks,0,[]
5454,545400,Insecurity,0,[]
5455,545500,Mandalas,21,"['arbitrary precision / big integers', 'euler characteristic (χ=v-e+f)', 'geometry', 'mathematics']"
5456,545600,Minotaur,0,[]
5457,545700,Mondriaan,0,[]
5458,545800,Nim/3,0,[]
5459,545900,Venus Rover,0,[]
5460,546000,양궁,28,"['ad-hoc', 'binary search', 'data structures', 'greedy', 'segment tree']"
5461,546100,고용,17,"['data structures', 'greedy', 'priority queue', 'segment tree', 'sorting']"
5462,546200,POI,6,"['implementation', 'sorting']"
5463,546300,건포도,14,"['dynamic programming', 'prefix sum']"
5464,546400,주차장,9,"['data structures', 'implementation', 'queue', 'simulation']"
5465,546500,곰돌이,15,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal']"
5466,546600,상인,22,"['data structures', 'dynamic programming', 'segment tree']"
5467,546700,Type Printer,17,"['data structures', 'sorting', 'string', 'tree', 'trie']"
5468,546800,Islands,22,"['dynamic programming', 'dynamic programming on trees', 'tree']"
5469,546900,Fish,25,"['binary search', 'combinatorics', 'data structures', 'mathematics', 'segment tree', 'sorting', 'two-pointer']"
5470,547000,균형잡힌 직선형 정원,19,"['case work', 'dynamic programming', 'mathematics']"
5471,547100,Pyramid Base,20,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
5472,547200,Teleporters,22,"['permutation cycle decomposition', 'sorting']"
5473,547300,Flood,21,[]
5474,547400,Sails,21,"['data structures', 'greedy', 'segment tree', 'set / map by trees']"
5475,547500,Miners,15,['dynamic programming']
5476,547600,장난감 동물,21,"['binary search', 'data structures', 'segment tree']"
5477,547700,마라톤 훈련 방해하기,23,"['bitmask', 'cactus', 'depth-first search', 'dynamic programming', 'dynamic programming using bitfield', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'lowest common ancestor', 'tree']"
5479,547900,Pyramid,18,"['data structures', 'deque', 'multidimensional segment tree', 'prefix sum', 'priority queue', 'segment tree', 'sliding window']"
5480,548000,전함,20,"['value / coordinate compression', 'data structures', 'offline queries', 'segment tree']"
5481,548100,The Valley of Mexico,20,['dynamic programming']
5482,548200,Joining Points,23,"['ad-hoc', 'divide and conquer', 'geometry', 'point in convex polygon check']"
5483,548300,Polish Flag,0,[]
5484,548400,정원,19,"['dynamic programming', 'prefix sum', 'two-pointer']"
5485,548500,평균값 수열,14,"['ad-hoc', 'mathematics']"
5486,548600,Mountains,21,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
5487,548700,Birthday,0,[]
5488,548800,That Nice Euler Circuit,0,[]
5489,548900,Numbers,4,['implementation']
5491,549100,Artemis,0,[]
5492,549200,Hermes,20,[]
5493,549300,Empodia,20,"['ad-hoc', 'binary search', 'data structures', 'segment tree', 'stack']"
5494,549400,Comparing Code,0,[]
5495,549500,Amazing Robots,0,[]
5496,549600,Utopia Divided,23,"['ad-hoc', 'constructive', 'sorting']"
5498,549800,Batch Scheduling,18,"['convex hull trick', 'dynamic programming', 'prefix sum']"
5500,550000,Twofive,0,[]
5501,550100,Depot,8,['backtracking']
5502,550200,팰린드롬,13,['dynamic programming']
5503,550300,Car Parking,0,[]
5504,550400,Post Office,13,['dynamic programming']
5506,550600,Contact,16,['bitmask']
5507,550700,Starry Night,17,"['graph theory', 'graph traversal', 'implementation']"
5508,550800,Party Lamps,16,"['bruteforcing', 'data structures', 'set / map by trees']"
5509,550900,Polygon,0,[]
5519,551900,소수방진,20,['backtracking']
5520,552000,The Clocks,11,['bruteforcing']
5521,552100,The Circle,0,[]
5522,552200,카드 게임,1,"['arithmetic', 'mathematics']"
5523,552300,경기 결과,3,['implementation']
5524,552400,입실 관리,3,['string']
5525,552500,IOIOI,10,['string']
5526,552600,ダーツ (Darts),14,"['binary search', 'meet in the middle', 'two-pointer']"
5527,552700,전구 장식,12,['ad-hoc']
5528,552800,달려라 IOI 열차,15,['dynamic programming']
5529,552900,저택,16,"[""dijkstra's"", 'graph theory', 'graph traversal', 'implementation']"
5530,553000,JOIOI 탑,20,"['binary search', 'greedy']"
5531,553100,버블 정렬,24,"['data structures', 'divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
5532,553200,방학 숙제,2,"['arithmetic', 'mathematics']"
5533,553300,유니크,5,"['arithmetic', 'implementation', 'mathematics']"
5534,553400,간판,6,"['bruteforcing', 'string']"
5535,553500,패셔니스타,12,['dynamic programming']
5536,553600,물고기의 서식 범위,12,"['value / coordinate compression', 'sorting', 'sweeping']"
5537,553700,お土産購入計画 (Gifts),20,['dynamic programming']
5538,553800,JJOOII (JJOOII),10,"['implementation', 'string']"
5539,553900,たのしいカードゲーム (Card Game is Fun),9,"['bruteforcing', 'greedy']"
5540,554000,夜店 (Night Market),13,"['dynamic programming', 'knapsack']"
5541,554100,釘 (Nails),18,"['ad-hoc', 'prefix sum']"
5542,554200,JOI 국가의 행사,21,"['binary search', 'data structures', ""dijkstra's"", 'disjoint set', 'graph theory', 'parallel binary search']"
5543,554300,상근날드,2,"['arithmetic', 'mathematics']"
5544,554400,리그,5,['implementation']
5545,554500,최고의 피자,8,"['greedy', 'sorting']"
5546,554600,파스타,12,['dynamic programming']
5547,554700,일루미네이션,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
5548,554800,지그재그 숫자,19,"['dynamic programming', 'implementation']"
5549,554900,행성 탐사,11,['prefix sum']
5550,555000,헌책방,15,"['dynamic programming', 'prefix sum', 'sorting']"
5551,555100,쇼핑몰,16,"[""dijkstra's"", 'graph theory']"
5552,555200,걷는 산타클로스,16,"['mathematics', 'sorting']"
5553,555300,微生物実験 (Bug Party),18,"['data structures', 'greedy', 'priority queue', 'segment tree']"
5554,555400,심부름 가는 길,2,"['implementation', 'arithmetic', 'mathematics']"
5555,555500,반지,6,"['bruteforcing', 'string']"
5556,555600,타일,9,"['implementation', 'mathematics']"
5557,555700,1학년,11,['dynamic programming']
5558,555800,チーズ (Cheese),11,"['breadth-first search', 'graph theory', 'graph traversal']"
5559,555900,JOI 깃발,21,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
5560,556000,旅人,7,['prefix sum']
5561,556100,과자의 분할,16,['dynamic programming']
5562,556200,つらら,13,"['data structures', 'dynamic programming', 'implementation', 'priority queue']"
5563,556300,博覧会,23,[]
5564,556400,ダンジョン,24,[]
5565,556500,영수증,3,"['arithmetic', 'implementation', 'mathematics']"
5566,556600,주사위 게임,4,"['implementation', 'simulation']"
5567,556700,결혼식,9,"['graph theory', 'graph traversal']"
5568,556800,카드 놓기,7,"['bruteforcing', 'data structures', 'set / map by hashing', 'recursion']"
5569,556900,출근 경로,12,['dynamic programming']
5570,557000,산타클로스와 루돌프,19,"['backtracking', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
5571,557100,ピザ,12,['binary search']
5572,557200,사다리 게임,16,"['dynamic programming', 'sorting']"
5573,557300,산책,18,['dynamic programming']
5574,557400,認証レベル,20,[]
5575,557500,타임 카드,2,"['arithmetic', 'implementation', 'mathematics']"
5576,557600,콘테스트,4,"['implementation', 'sorting']"
5577,557700,RBY팡!,14,"['data structures', 'implementation', 'simulation', 'stack']"
5578,557800,薄氷渡り,12,"['backtracking', 'depth-first search', 'graph theory', 'graph traversal']"
5579,557900,シャッフル,19,[]
5580,558000,빙고 게임,15,['dynamic programming']
5581,558100,碁石ならべ,11,[]
5582,558200,공통 부분 문자열,11,"['dynamic programming', 'string']"
5583,558300,ぴょんぴょん川渡り,17,[]
5584,558400,ペンキの色,16,"['value / coordinate compression', 'graph theory', 'graph traversal', 'prefix sum']"
5585,558500,거스름돈,4,['greedy']
5586,558600,JOI와 IOI,4,"['implementation', 'string']"
5587,558700,카드 캡터 상근이,8,"['implementation', 'simulation']"
5588,558800,별자리 찾기,12,"['bruteforcing', 'data structures', 'set / map by hashing']"
5589,558900,おせんべい,9,"['bitmask', 'bruteforcing', 'greedy']"
5590,559000,船旅,11,"[""dijkstra's"", 'graph theory']"
5591,559100,最大の和,7,"['prefix sum', 'sliding window']"
5592,559200,最長の階段,9,"['implementation', 'two-pointer']"
5593,559300,最古の遺跡,14,"['bruteforcing', 'data structures', 'geometry', 'set / map by hashing', 'set / map by trees']"
5594,559400,最悪の記者,17,[]
5595,559500,最軽量のモビール,17,[]
5596,559600,시험 점수,2,"['arithmetic', 'implementation', 'mathematics']"
5597,559700,과제 안 내신 분..?,1,['implementation']
5598,559800,카이사르 암호,4,"['implementation', 'string']"
5599,559900,カードの並び替え,6,"['implementation', 'simulation']"
5600,560000,품질검사,8,['implementation']
5601,560100,通学経路,10,"['combinatorics', 'dynamic programming', 'mathematics']"
5602,560200,問題1,4,"['implementation', 'sorting']"
5603,560300,問題2,5,"['implementation', 'string']"
5604,560400,問題3,7,"['backtracking', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'recursion']"
5605,560500,問題4,10,[]
5606,560600,問題5,17,"['data structures', 'segment tree', 'sweeping']"
5607,560700,問題 １,3,"['arithmetic', 'implementation', 'mathematics']"
5608,560800,問題 ２,5,"['data structures', 'set / map by hashing', 'implementation', 'string']"
5609,560900,問題 ３,7,"['implementation', 'simulation']"
5610,561000,問題 ４,13,[]
5611,561100,問題 ５,16,[]
5612,561200,터널의 입구와 출구,3,"['implementation', 'simulation']"
5613,561300,계산기 프로그램,3,"['arithmetic', 'implementation', 'mathematics']"
5614,561400,問題 3,8,"['data structures', 'hashing', 'set / map by hashing', 'sorting']"
5615,561500,아파트 임대,20,"['mathematics', 'miller–rabin', 'number theory', 'primality test']"
5616,561600,로드샵,10,"['arbitrary precision / big integers', 'combinatorics', 'mathematics']"
5617,561700,問題 1,4,"['geometry', 'mathematics', 'pythagoras theorem']"
5618,561800,공약수,4,"['bruteforcing', 'mathematics', 'number theory']"
5619,561900,세 번째,9,"['bruteforcing', 'data structures', 'greedy', 'implementation', 'mathematics', 'pigeonhole principle', 'priority queue', 'sorting']"
5620,562000,가장 가까운 두 점의 거리,0,"['divide and conquer', 'sweeping', 'sorting']"
5621,562100,問題 5,0,[]
5622,562200,다이얼,4,['implementation']
5623,562300,수열의 합,7,['mathematics']
5624,562400,좋은 수,13,['dynamic programming']
5625,562500,페스트리,14,['prefix sum']
5626,562600,제단,16,['dynamic programming']
5627,562700,박테리아,21,"['chinese remainder theorem', 'graph theory', 'mathematics', 'number theory']"
5628,562800,바이너리 행렬,0,[]
5631,563100,방사능,11,"['binary search', 'geometry', 'sorting']"
5632,563200,버젼 관리 IDE,20,"['data structures', 'rope', 'string']"
5635,563500,생일,6,"['implementation', 'sorting', 'string']"
5636,563600,소수 부분 문자열,10,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes', 'string']"
5637,563700,가장 긴 단어,7,"['parsing', 'regular expression', 'string']"
5638,563800,수문,10,"['binary search', 'bitmask', 'bruteforcing', 'dynamic programming']"
5639,563900,이진 검색 트리,12,"['graph theory', 'graph traversal', 'recursion', 'tree']"
5640,564000,즐거운 색칠,15,['bruteforcing']
5641,564100,겉보기에 쌍둥이 소수,11,"['arbitrary precision / big integers', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
5642,564200,퀸 게임,0,"['game theory', 'precomputation', 'sprague–grundy theorem']"
5643,564300,Spelling Suggestion,0,[]
5644,564400,Coalescing Continents,15,"['bruteforcing', 'implementation']"
5645,564500,Fence Making,11,['geometry']
5646,564600,트리 경로,0,[]
5647,564700,연속 합,19,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
5648,564800,역원소 정렬,7,['sorting']
5649,564900,Line of Best Fit,13,"['linear algebra', 'mathematics']"
5650,565000,Software Licenses,0,[]
5651,565100,완전 중요한 간선,20,['maximum flow']
5655,565500,평점,0,[]
5656,565600,비교 연산자,4,"['implementation', 'string']"
5666,566600,Hot Dogs,3,"['arithmetic', 'implementation', 'mathematics']"
5667,566700,Tornado!,6,[]
5668,566800,Arranging Heaps,20,[]
5669,566900,Boxes and Stones,0,[]
5670,567000,휴대폰 자판,17,"['data structures', 'string', 'tree', 'trie']"
5671,567100,호텔 방 번호,6,"['bruteforcing', 'mathematics']"
5672,567200,Environment Protection,0,[]
5673,567300,Fix the Pond,0,[]
5674,567400,Game of Tiles,0,[]
5675,567500,시침과 분침,5,"['implementation', 'mathematics', 'simulation']"
5676,567600,음주 코딩,15,"['segment tree', 'data structures']"
5677,567700,Joining Couples,19,"['case work', 'graph theory', 'lowest common ancestor', 'topological sorting', 'tree']"
5678,567800,Bakugan,4,['implementation']
5679,567900,Hailstone Sequences,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
5680,568000,Army buddies,0,[]
5681,568100,공 쌓기,15,"['dynamic programming', 'prefix sum']"
5682,568200,Candy’s Candy,0,[]
5683,568300,상학어,0,[]
5684,568400,Electrical Pollution,0,[]
5685,568500,파일 검색,0,[]
5686,568600,Garden Fence,0,[]
5687,568700,Hedge Mazes,0,[]
5688,568800,In Braille,6,"['implementation', 'string']"
5689,568900,Jupiter Attacks!,19,[]
5690,569000,King’s Poker,5,['case work']
5691,569100,평균 중앙값 문제,4,"['arithmetic', 'mathematics']"
5692,569200,팩토리얼 진법,4,"['arithmetic', 'mathematics']"
5693,569300,Ants Colony,0,[]
5694,569400,Bingo!,5,"['implementation', 'mathematics']"
5695,569500,공원점,0,[]
5696,569600,숫자 세기,12,['mathematics']
5697,569700,Electric Needs,0,[]
5698,569800,Tautogram,4,"['implementation', 'parsing', 'string']"
5699,569900,문자열 농장,21,"['aho-corasick', 'data structures', 'dynamic programming', 'tree', 'trie']"
5700,570000,활동과잉 소년 강산이,0,[]
5701,570100,Ingenious Metro,0,[]
5702,570200,Jollo,11,['bruteforcing']
5703,570300,Kids’ Wishes,0,[]
5704,570400,팬그램,4,"['implementation', 'string']"
5705,570500,Hexagonal Tiles,7,[]
5706,570600,Another Crisis,0,[]
5707,570700,Brothers,11,"['implementation', 'simulation']"
5708,570800,Code Lock,0,[]
5709,570900,Dinner Hall,0,[]
5710,571000,전기 요금,12,"['binary search', 'implementation', 'mathematics']"
5711,571100,File Recover,0,[]
5712,571200,Grapevine,0,[]
5713,571300,Hooligan,0,[]
5714,571400,Isosceles Triangles,0,[]
5715,571500,Jingle Composing,4,['string']
5716,571600,Klingon Levels,6,"['implementation', 'mathematics']"
5717,571700,상근이의 친구들,2,"['arithmetic', 'mathematics']"
5718,571800,Abwords,0,[]
5719,571900,거의 최단 경로,16,"[""dijkstra's"", 'graph theory', 'graph traversal']"
5720,572000,진법 알아내기,0,[]
5721,572100,사탕 줍기 대회,12,['dynamic programming']
5722,572200,DNA 부분 수열,0,[]
5723,572300,Electricity,7,['implementation']
5724,572400,파인만,3,"['arithmetic', 'mathematics']"
5725,572500,Pole Position,6,['implementation']
5726,572600,Higgs Boson,0,[]
5727,572700,Traveling Shoemaker Problem,0,[]
5728,572800,Bora Bora,0,[]
5729,572900,수축하는 다각형,15,[]
5730,573000,Acquapia,0,[]
5731,573100,Ambiguous Codes,0,[]
5732,573200,Ballroom Lights,0,[]
5733,573300,Car Plates Competition,12,[]
5734,573400,Drop the Triples,0,[]
5735,573500,Emoticons :-),19,"['aho-corasick', 'data structures', 'tree', 'trie']"
5736,573600,Finding Seats,14,"['binary search', 'dynamic programming', 'prefix sum']"
5737,573700,Galou is back!,13,"['bipartite graph', 'graph theory', 'graph traversal']"
5738,573800,He is offside!,5,"['implementation', 'sorting']"
5739,573900,ICPC Scoreboard,0,[]
5740,574000,Justice League,0,[]
5741,574100,Soccer League,7,['sorting']
5742,574200,Weekend Lottery,5,['implementation']
5743,574300,Lazy Jumping Frog,14,"[""dijkstra's"", 'graph theory', 'prefix sum']"
5744,574400,Jukebox,0,[]
5745,574500,Bubble Maps,0,[]
5746,574600,Onion Layers,17,[]
5747,574700,Odd or Even,5,"['greedy', 'mathematics']"
5748,574800,Power Generation,16,"['depth-first search', 'graph theory', 'graph traversal', 'greedy']"
5749,574900,Report Recovery,0,[]
5750,575000,Turkish Roulette,0,[]
5751,575100,Head or Tail,3,['implementation']
5752,575200,Mission Impossible,0,[]
5753,575300,Pascal Library,3,['implementation']
5754,575400,ICPC Strikes Again,0,[]
5755,575500,Optical Fiber,0,[]
5756,575600,Where Are My Genes,0,[]
5757,575700,Computer DJ,0,[]
5758,575800,P-Networks,11,"['constructive', 'sorting']"
5759,575900,Light Up,0,[]
5760,576000,Land Division Tax,0,[]
5761,576100,Petanque,0,[]
5762,576200,Long Night of Museums,0,[]
5763,576300,Magic Trick,7,['implementation']
5764,576400,Two-Stacks Solitaire,0,[]
5765,576500,Zing Zhu’s Oyster Farm,0,[]
5766,576600,할아버지는 유명해!,7,['implementation']
5767,576700,Cutting Edge,0,[]
5768,576800,Divide and Conquer,5,[]
5769,576900,Make a Guess,0,[]
5770,577000,Dice,5,"['implementation', 'simulation']"
5771,577100,Secure Region,0,[]
5772,577200,Runner Pawns,0,[]
5773,577300,The Splitting Club,0,[]
5774,577400,Kryptonite Mine,0,[]
5775,577500,X-Mart,0,[]
5776,577600,Telecommunication Partners,0,[]
5777,577700,Child Play,0,[]
5778,577800,Fake tickets,4,['implementation']
5779,577900,Square Lottery,0,[]
5780,578000,Uncle Tom’s Inherited Land,18,"['bipartite matching', 'maximum flow']"
5781,578100,Grandpa’s Rubik Cube,16,"['implementation', 'simulation']"
5782,578200,This Sentence is False,0,[]
5783,578300,Will Indiana Jones Get There?,0,[]
5784,578400,Duty Free Shop,0,[]
5785,578500,Not Too Convex Hull,19,"['convex hull', 'dynamic programming', 'geometry']"
5786,578600,"I hate SPAM, but some people love it",12,"['breadth-first search', 'graph theory', 'graph traversal']"
5787,578700,Noise Effect,7,"['bruteforcing', 'implementation']"
5788,578800,Supermarket,10,[]
5789,578900,한다 안한다,4,"['implementation', 'string']"
5790,579000,Log Books,0,[]
5791,579100,Myth Busters,0,[]
5792,579200,CrossNumber,0,[]
5793,579300,Movers Problems,0,[]
5794,579400,Monkey Business,0,[]
5795,579500,Fridge lock,0,[]
5796,579600,Fat Ninjas,0,[]
5797,579700,Class Packing,12,"['dynamic programming', 'greedy']"
5798,579800,Esspe-Peasee,20,"['extended euclidean algorithm', 'mathematics', 'number theory']"
5799,579900,Slithering Serpent,0,[]
5800,580000,성적 통계,6,"['implementation', 'sorting']"
5801,580100,Avoiding a disaster,7,[]
5802,580200,Roll-call in Woop Woop High,0,[]
5803,580300,Difficult Routes,0,[]
5804,580400,RealPhobia,18,"['euclidean algorithm', 'extended euclidean algorithm', 'mathematics', 'number theory']"
5805,580500,Insidious Branding,0,[]
5806,580600,Help-or-else,0,[]
5807,580700,Pahom on Water,0,[]
5808,580800,Detour Buster,0,[]
5809,580900,Oil Skimming,0,[]
5810,581000,Numbers Game,0,[]
5811,581100,낙하산 고리들,24,"['case work', 'data structures', 'disjoint set', 'graph theory', 'implementation']"
5812,581200,크래이피쉬 글쓰는 기계,19,"['data structures', 'sparse table', 'tree']"
5813,581300,이상적인 도시,24,"['dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree']"
5814,581400,마상시합 토너먼트,22,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'lowest common ancestor', 'segment tree', 'tree']"
5815,581500,HIPERPROSTOR,20,"[""dijkstra's"", 'graph theory', 'mathematics']"
5816,581600,ROTACIJE,22,"['constructive', 'implementation']"
5817,581700,고통받는 난쟁이들,17,"['data structures', 'segment tree']"
5818,581800,SPIJUNI,14,"['graph theory', 'minimum spanning tree']"
5819,581900,열대 식물원,22,"['graph theory', 'graph traversal']"
5820,582000,경주,21,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'tree']"
5821,582100,쌀 창고,17,"['binary search', 'prefix sum', 'two-pointer']"
5822,582200,악어의 지하 도시,20,"[""dijkstra's"", 'graph theory']"
5823,582300,코끼리,26,"['greedy', 'square root decomposition']"
5824,582400,Photo,22,[]
5825,582500,Yin and Yang,22,[]
5826,582600,Figure Eight,20,[]
5827,582700,What's Up With Gravity,14,"['0-1 bfs', ""dijkstra's"", 'graph theory', 'implementation', 'simulation']"
5828,582800,Fuel Economy,16,"['data structures', 'greedy', 'stack']"
5829,582900,Luxury River Cruise,12,"['depth-first search', 'graph theory', 'graph traversal']"
5830,583000,Bovine Ballet,11,"['geometry', 'implementation', 'simulation']"
5831,583100,Blink,12,"['bitmask', 'graph theory', 'implementation']"
5832,583200,Photo,13,"['greedy', 'sorting']"
5833,583300,Haywire,16,"['backtracking', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'heuristics', 'meet in the middle']"
5834,583400,The Cow Run,18,['dynamic programming']
5835,583500,Hill Walk,0,[]
5836,583600,Necklace,20,"['knuth–morris–pratt', 'string']"
5837,583700,Poker Hands,11,['greedy']
5838,583800,Farm Painting,16,"['data structures', 'segment tree', 'sorting', 'sweeping', 'set / map by trees']"
5839,583900,Cow Race,6,"['implementation', 'simulation']"
5840,584000,Breed Proximity,6,['implementation']
5841,584100,Breed Assignment,9,['backtracking']
5842,584200,Partitioning the Farm,18,"['binary search', 'bitmask', 'bruteforcing']"
5843,584300,Taxi,20,"['mathematics', 'prefix sum']"
5844,584400,Route Design,17,"['dynamic programming', 'sorting']"
5845,584500,Perimeter,16,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by trees']"
5846,584600,Tractor,15,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal']"
5847,584700,Milk Scheduling,13,"['dynamic programming', 'graph theory', 'topological sorting']"
5848,584800,Message Relay,9,"['bruteforcing', 'graph theory', 'graph traversal', 'implementation']"
5849,584900,Cow Crossings,12,"['data structures', 'sorting', 'stack']"
5850,585000,Perimeter,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
5851,585100,Cow Lineup,17,"['value / coordinate compression', 'data structures', 'sliding window', 'two-pointer']"
5852,585200,Island Travels,17,"['breadth-first search', 'bitmask', ""dijkstra's"", 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal', 'implementation', 'travelling salesman problem']"
5853,585300,Seating,21,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
5854,585400,Painting the Fence,13,['sweeping']
5855,585500,Square Overlap,16,['sweeping']
5856,585600,Party Invitations,11,"['data structures', 'implementation', 'queue', 'set / map by trees']"
5857,585700,Mirrors,13,"['bruteforcing', 'implementation', 'simulation']"
5858,585800,Painting the Fence,13,['sweeping']
5859,585900,Liars and Truth Tellers,14,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
5860,586000,Gangs of Instanbull/Cowstantinople,20,"['greedy', 'implementation', 'simulation']"
5861,586100,First!,19,"['data structures', 'floyd–warshall', 'graph theory', 'string', 'tree', 'trie']"
5862,586200,Running Away From the Barn,18,"['data structures', 'smaller to larger technique']"
5863,586300,Crazy Fences,18,"['geometry', 'point in non-convex polygon check']"
5864,586400,Wifi Setup,12,['dynamic programming']
5865,586500,Milk Routing,14,"[""dijkstra's"", 'graph theory']"
5866,586600,Meet and Greet,6,"['implementation', 'simulation']"
5867,586700,Scrambled Letters,12,"['binary search', 'sorting']"
5868,586800,Crazy Fences,16,"['value / coordinate compression', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
5869,586900,Balanced Cow Breeds,16,['dynamic programming']
5870,587000,Concurrently Balanced Strings,20,"['binary search', 'data structures', 'prefix sum', 'stack']"
5871,587100,Balanced Trees,23,"['depth-first search', 'graph theory', 'graph traversal', 'greedy']"
5872,587200,Clumsy Cows,11,['greedy']
5873,587300,Distant Pastures,13,"['bruteforcing', ""dijkstra's"", 'floyd–warshall', 'graph theory']"
5874,587400,소를 찾아라,7,"['combinatorics', 'mathematics', 'prefix sum', 'sweeping']"
5875,587500,오타,13,"['data structures', 'prefix sum']"
5876,587600,Horseshoes,9,"['backtracking', 'bruteforcing', 'recursion']"
5877,587700,Tied Down,0,[]
5878,587800,Bookshelf,21,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
5879,587900,Balanced Cow Subsets,18,"['bitmask', 'meet in the middle']"
5880,588000,Unlocking Blocks,17,"['breadth-first search', 'geometry', 'graph theory', 'graph traversal', 'implementation']"
5881,588100,Bookshelf,12,['dynamic programming']
5882,588200,Running Laps,18,"['data structures', 'mathematics', 'prefix sum', 'segment tree', 'sorting']"
5883,588300,아이폰 9S,7,"['bruteforcing', 'implementation']"
5884,588400,감시 카메라,12,"['bruteforcing', 'geometry', 'sorting']"
5885,588500,Islands,10,"['implementation', 'sorting', 'sweeping']"
5886,588600,Unlocking Blocks,16,"['breadth-first search', 'bruteforcing', 'depth-first search', 'geometry', 'graph theory', 'graph traversal', 'implementation']"
5887,588700,Large Banner,0,[]
5888,588800,Haybale Restacking,18,"['mathematics', 'sorting']"
5889,588900,Cows in a Skyscraper,20,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
5890,589000,Tractor,12,"['0-1 bfs', 'breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
5891,589100,Flowerpot,15,"['binary search', 'data structures', 'deque', 'segment tree', 'sliding window', 'two-pointer']"
5892,589200,Landscaping,16,"['dynamic programming', 'maximum flow', 'minimum cost maximum flow']"
5893,589300,17배,2,"['arbitrary precision / big integers', 'implementation', 'mathematics']"
5894,589400,Connect the Cows,11,"['backtracking', 'bruteforcing', 'geometry', 'implementation']"
5895,589500,Wrong Directions,17,"['data structures', 'dynamic programming', 'geometry', 'set / map by hashing', 'implementation', 'prefix sum', 'simulation']"
5896,589600,효율적으로 소 사기,18,"['data structures', 'greedy', 'priority queue']"
5897,589700,Symmetry,0,[]
5898,589800,Nearby Cows,16,"['dynamic programming', 'dynamic programming on trees', 'inclusion and exclusion', 'tree']"
5899,589900,Overplanting,14,"['data structures', 'sweeping']"
5900,590000,Cow IDs,13,"['combinatorics', 'dynamic programming', 'mathematics']"
5901,590100,Relocation,15,"['bruteforcing', ""dijkstra's"", 'graph theory']"
5902,590200,Rope Folding,9,"['bruteforcing', 'implementation']"
5903,590300,Overplanting,13,"['inclusion and exclusion', 'sorting', 'sweeping']"
5904,590400,Moo 게임,11,"['divide and conquer', 'recursion']"
5905,590500,악당 로봇,20,"['aho-corasick', 'data structures', 'dynamic programming', 'string', 'tree', 'trie']"
5906,590600,Cow Run,0,[]
5907,590700,Bovine Alliance,16,"['combinatorics', 'data structures', 'graph theory', 'mathematics']"
5908,590800,Delivery Route,17,"['breadth-first search', 'value / coordinate compression', ""dijkstra's"", 'graph theory', 'graph traversal']"
5909,590900,Bale Share,15,"['dynamic programming', 'knapsack']"
5910,591000,Mountain Climbing,18,['greedy']
5911,591100,선물,8,"['bruteforcing', 'greedy', 'sorting']"
5912,591200,Haybale Stacking,10,['prefix sum']
5913,591300,준규와 사과,11,"['backtracking', 'bruteforcing']"
5914,591400,Cow Photography,17,['sorting']
5915,591500,Simplifying the Farm,18,"['graph theory', 'minimum spanning tree']"
5916,591600,농장 관리,20,"['data structures', 'heavy-light decomposition', 'segment tree with lazy propagation', 'lowest common ancestor', 'segment tree', 'tree']"
5917,591700,Roadblock,14,"[""dijkstra's"", 'graph theory']"
5918,591800,Umbrellas for Cows,14,['dynamic programming']
5919,591900,Hay Bales,4,"['implementation', 'mathematics']"
5920,592000,Cow Photography,16,"['ad-hoc', 'sorting']"
5921,592100,Escaping the Farm,8,"['bruteforcing', 'implementation']"
5922,592200,Above the Median,17,"['data structures', 'segment tree']"
5923,592300,바이너리 스도쿠,20,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
5924,592400,Cow Steeplechase,18,"['bipartite matching', 'geometry']"
5925,592500,Cow Beauty Pageant,15,"['breadth-first search', 'graph theory', 'graph traversal']"
5926,592600,Cow Lineup,13,"['value / coordinate compression', 'sorting', 'two-pointer']"
5927,592700,Tile Exchanging,13,"['dynamic programming', 'knapsack']"
5928,592800,Contest Timing,2,"['arithmetic', 'implementation', 'mathematics']"
5929,592900,Awkward Digits,5,"['bruteforcing', 'implementation', 'mathematics', 'string']"
5930,593000,Moo Sick,7,"['bruteforcing', 'implementation', 'sorting']"
5931,593100,Cow Beauty Pageant,10,"['breadth-first search', 'graph theory', 'graph traversal']"
5932,593200,Cow Photographs,18,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
5933,593300,Buying Feed,20,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
5934,593400,Visiting Cows,14,"['dynamic programming', 'dynamic programming on trees', 'tree']"
5935,593500,Banner,12,"['bruteforcing', 'euclidean algorithm', 'mathematics', 'number theory']"
5936,593600,Candy,13,"['depth-first search', 'graph theory', 'graph traversal', 'knapsack']"
5937,593700,Chocolate Milk,13,"['graph theory', 'topological sorting']"
5938,593800,Daisy Chains in the Field,8,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
5939,593900,Race Results,6,"['implementation', 'sorting']"
5940,594000,Math Practice,4,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics', 'precomputation']"
5941,594100,Cow Calisthenics,20,"['binary search', 'greedy']"
5942,594200,Big Macs Around the World,15,"['bellman–ford', 'graph theory', 'mathematics']"
5943,594300,Threatening Letter,22,"['data structures', 'segment tree', 'string', 'suffix array and lcp array']"
5944,594400,Apple Delivery,12,"[""dijkstra's"", 'graph theory']"
5945,594500,Treasure Chest,13,"['dynamic programming', 'game theory']"
5946,594600,The Trough Game,10,"['bitmask', 'bruteforcing']"
5947,594700,Book Club,5,"['bruteforcing', 'implementation']"
5948,594800,Bad Random Numbers,5,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
5949,594900,Adding Commas,3,['string']
5950,595000,Bottleneck,23,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'priority queue', 'slope trick', 'smaller to larger technique', 'tree']"
5951,595100,The Continental Cowngress,18,"['2-sat', 'graph theory', 'strongly connected component']"
5952,595200,Roads and Planes,19,"[""dijkstra's"", 'graph theory', 'topological sorting']"
5953,595300,Profits,10,['dynamic programming']
5954,595400,Dividing the Gold,13,"['dynamic programming', 'knapsack']"
5955,595500,Traffic Lights,16,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal', 'implementation', 'simulation']"
5956,595600,Symmetry,4,"['mathematics', 'recursion']"
5957,595700,Cleaning the Dishes,6,"['data structures', 'implementation', 'simulation', 'stack']"
5958,595800,Space Exploration,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
5959,595900,Crop Circles,4,"['bruteforcing', 'geometry', 'pythagoras theorem']"
5960,596000,Cowlphabet,13,[]
5961,596100,The Lost Cows,0,[]
5962,596200,Generic Cow Protests,18,"['value / coordinate compression', 'data structures', 'dynamic programming', 'prefix sum', 'segment tree']"
5963,596300,Cow Line,10,"['combinatorics', 'mathematics']"
5964,596400,Best Parenthesis,9,"['data structures', 'mathematics', 'stack']"
5965,596500,The Triangle,15,"['prefix sum', 'sweeping']"
5966,596600,Cow Cotillion,7,"['data structures', 'stack']"
5967,596700,Cow Treats,7,"['implementation', 'simulation']"
5968,596800,Hexagonal Pasture Network,12,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'mathematics']"
5969,596900,Brownie Slicing,0,[]
5970,597000,Tree Decoration,0,[]
5971,597100,Meeting Place,12,"['lowest common ancestor', 'tree']"
5972,597200,택배 배송,11,"[""dijkstra's"", 'graph theory']"
5973,597300,Bovine Bridge Battle,13,"['ad-hoc', 'data structures', 'set / map by trees']"
5974,597400,Lucky Charms,4,"['arithmetic', 'mathematics']"
5975,597500,Pathfinding,9,"['breadth-first search', 'graph theory', 'graph traversal']"
5976,597600,A spiral walk,6,['implementation']
5977,597700,Mowing the Lawn,18,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
5978,597800,Odd degrees,19,"['depth-first search', 'graph theory', 'graph traversal']"
5979,597900,납땜하기,26,"['convex hull trick', 'dynamic programming', 'dynamic programming on trees', 'smaller to larger technique', 'tree']"
5980,598000,Corn Maze,11,"['breadth-first search', 'graph theory', 'graph traversal']"
5981,598100,Cow Checkers,18,['game theory']
5982,598200,Forgotten Password,15,"['dynamic programming', 'string']"
5983,598300,Learning Languages,15,"['data structures', 'disjoint set', 'graph theory']"
5984,598400,The Bovine Fire Drill,5,"['implementation', 'simulation']"
5985,598500,Skewed Sorting,7,"['divide and conquer', 'implementation', 'recursion']"
5986,598600,3D Space Exploration,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
5987,598700,String Function Encoding,5,"['implementation', 'string']"
5988,598800,홀수일까 짝수일까,3,"['arbitrary precision / big integers', 'arithmetic', 'mathematics', 'string']"
5989,598900,The Robot Plow,5,['implementation']
5990,599000,Barn Echoes,8,[]
5991,599100,Papaya Jungle,7,"['graph theory', 'graph traversal', 'implementation', 'simulation']"
5992,599200,The Leisurely Stroll,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
5993,599300,Invasion of the Milkweed,9,"['breadth-first search', 'graph theory', 'graph traversal']"
5994,599400,Allowance,0,[]
5995,599500,Bessie's Weight Problem,11,"['dynamic programming', 'knapsack']"
5996,599600,Heat Wave,11,"[""dijkstra's"", 'graph theory']"
5997,599700,Who Brings the Cookies?,18,"['bipartite matching', 'maximum flow']"
5998,599800,Lights,16,"['bit set', 'meet in the middle']"
5999,599900,Cow Rescue,0,[]
6000,600000,동전 게임,18,"['dynamic programming', 'game theory']"
6001,600100,The Grand Farm-off,7,"['mathematics', 'sorting']"
6002,600200,Job Hunt,12,"['bellman–ford', 'graph theory']"
6003,600300,Claustrophobic Cows,5,"['bruteforcing', 'geometry', 'pythagoras theorem']"
6004,600400,The Chivalrous Cow,9,"['breadth-first search', 'graph theory', 'graph traversal']"
6005,600500,Cow Pinball,10,"['bruteforcing', 'dynamic programming']"
6006,600600,Dizzy Cows,17,"['graph theory', 'topological sorting']"
6007,600700,Cow Toll Paths,0,[]
6008,600800,Video Game Troubles,15,['dynamic programming']
6009,600900,Bobsledding,16,[]
6010,601000,Music Notes,9,['binary search']
6011,601100,Selfish Grazing,8,['greedy']
6012,601200,The Big Dance,8,['recursion']
6013,601300,Lonesome Partners,4,['bruteforcing']
6014,601400,Shorter Musical Notes,5,['implementation']
6015,601500,Taking Turns,0,[]
6016,601600,Shipping Around an Island,0,[]
6017,601700,Cow Telephones,0,[]
6018,601800,Tea Time,10,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
6019,601900,"Buying Feed, II",8,"['dynamic programming', 'sorting']"
6020,602000,Cheese Towers,11,[]
6021,602100,DNA Sequencing,6,"['implementation', 'string']"
6022,602200,Theater Seating,8,"['geometry', 'implementation', 'pythagoras theorem', 'sorting']"
6023,602300,Word Morph,11,"['breadth-first search', 'binary search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation', 'precomputation', 'sorting', 'string']"
6024,602400,Covering the Corral,0,[]
6025,602500,Cows on Ice,0,[]
6026,602600,Slowing down,0,[]
6027,602700,Chocolate Buying,11,[]
6028,602800,Chocolate Giving,12,"[""dijkstra's"", 'graph theory']"
6029,602900,Chocolate Eating,0,[]
6030,603000,Scavenger Hunt,3,"['bruteforcing', 'mathematics', 'number theory']"
6031,603100,Feeding Time,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
6032,603200,Toy Shopping,6,"['greedy', 'implementation', 'sorting']"
6033,603300,Great Cow Gathering,0,[]
6034,603400,Barn Allocation,0,[]
6035,603500,StarCowraft,21,[]
6036,603600,The Rock Game,11,[]
6037,603700,Test Taking,0,[]
6038,603800,Need For Speed,13,['greedy']
6039,603900,Need For Speed,7,"['bitmask', 'bruteforcing']"
6040,604000,Hexadecimal Conversion,4,"['arbitrary precision / big integers', 'implementation', 'mathematics']"
6041,604100,MasterMind,9,"['bruteforcing', 'implementation']"
6042,604200,Longest Contiguous Subsequence,10,"['bruteforcing', 'dynamic programming']"
6043,604300,Cow Politics,17,"['data structures', 'greedy', 'lowest common ancestor', 'tree', 'set / map by trees']"
6044,604400,Rocks and Trees,0,[]
6045,604500,Driving Out the Piggies,0,[]
6047,604700,Cow Hopscotch,21,['dynamic programming']
6048,604800,Water Slides,0,[]
6049,604900,Triangle Counting,18,[]
6050,605000,Mountain Watching,12,"['dynamic programming', 'implementation']"
6051,605100,시간 여행,13,"['data structures', 'implementation', 'stack']"
6052,605200,Cow Pals,6,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
6053,605300,Mountain Watching,7,['ad-hoc']
6054,605400,Relay race,11,"[""dijkstra's"", 'graph theory', 'implementation', 'simulation']"
6056,605600,Darts,6,['bruteforcing']
6057,605700,Building A Fence,13,"['dynamic programming', 'mathematics']"
6058,605800,Machine Schedule,0,[]
6059,605900,Pasture Walking,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'lowest common ancestor', 'tree']"
6060,606000,Wheel Rotation,4,"['implementation', 'mathematics']"
6061,606100,Holedox Moving,0,[]
6062,606200,Mixed Up Cows,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
6063,606300,Rubik's Cube,16,"['implementation', 'simulation']"
6064,606400,카잉 달력,10,"['chinese remainder theorem', 'mathematics', 'number theory']"
6065,606500,Watering - 5,8,[]
6066,606600,Buying Hay,12,"['dynamic programming', 'knapsack']"
6067,606700,Guarding the Farm,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
6068,606800,시간 관리하기,11,"['greedy', 'sorting']"
6069,606900,Switching Lights,5,"['implementation', 'simulation']"
6070,607000,Chocolate,0,[]
6071,607100,Game Prediction,0,[]
6072,607200,Trick or Treat on the Farm,13,"['depth-first search', 'graph theory', 'graph traversal']"
6073,607300,Secret Message,16,"['data structures', 'tree', 'trie']"
6074,607400,Winning Checkers,0,[]
6075,607500,Largest Fence,22,[]
6076,607600,Hay For Sale,9,[]
6077,607700,Patting Heads,0,[]
6078,607800,Jigsaw Puzzles,0,[]
6079,607900,Checkers,12,"['backtracking', 'bruteforcing', 'implementation']"
6080,608000,Bad Grass,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
6081,608100,Hay Expenses,4,"['implementation', 'prefix sum']"
6082,608200,Earthquake Damage,0,[]
6083,608300,The Baric Bovine,0,[]
6084,608400,Safe Travel,0,[]
6085,608500,Best Spot,0,[]
6086,608600,최대 유량,0,"['graph theory', 'implementation', 'simulation']"
6087,608700,레이저 통신,13,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
6089,608900,Pumps and Pipes,0,[]
6090,609000,Casting,25,"['geometry', 'rotating calipers']"
6091,609100,핑크 플로이드,15,"['graph theory', 'minimum spanning tree']"
6092,609200,Strange Towers of Hanoi,7,['precomputation']
6093,609300,Competition,0,[]
6094,609400,The Leprechaun,0,[]
6095,609500,Surround the Islands,12,"['data structures', 'disjoint set']"
6096,609600,Bulls and Cows,11,['dynamic programming']
6097,609700,Cruel Math Teacher,4,"['arbitrary precision / big integers', 'arithmetic', 'mathematics', 'string']"
6098,609800,"Cruel Math Teacher, II",12,"['mathematics', 'numerical analysis', 'parametric search']"
6099,609900,Exams,12,"['binary search', 'meet in the middle']"
6100,610000,Moon Mooing,13,[]
6101,610100,식당,18,['dynamic programming']
6102,610200,Earthquake Damage 2,0,[]
6103,610300,Sand Castle,9,"['greedy', 'sorting']"
6104,610400,Cow Frisbee Team,12,"['dynamic programming', 'mathematics', 'number theory']"
6105,610500,Look Up,9,"['data structures', 'stack']"
6106,610600,Payback,9,['greedy']
6107,610700,Plumbing the Pond,6,"['bruteforcing', 'implementation']"
6108,610800,The Perfect Cow,6,"['implementation', 'sorting']"
6109,610900,Dairy Queen,10,"['dynamic programming', 'knapsack']"
6110,611000,Watering - 2,6,"['ad-hoc', 'constructive']"
6111,611100,Watering - 3,7,"['ad-hoc', 'constructive']"
6112,611200,Holiday Painting,0,[]
6114,611400,Ski Lessons,11,['dynamic programming']
6115,611500,Work Scheduling,15,"['data structures', 'greedy', 'priority queue']"
6116,611600,케이크,20,['dynamic programming']
6117,611700,Bovine Embroidery,21,"['data structures', 'geometry', 'sweeping']"
6118,611800,숨바꼭질,10,"['breadth-first search', 'graph theory', 'graph traversal']"
6119,611900,Cow Line,8,"['data structures', 'deque']"
6120,612000,Cow Digit Game,12,"['dynamic programming', 'game theory']"
6121,612100,Grazing2,0,[]
6122,612200,Time Cards,5,"['implementation', 'simulation']"
6123,612300,O Those Fads,6,"['greedy', 'sorting']"
6124,612400,Good Grass,6,['bruteforcing']
6125,612500,Treasure Cave,9,"['graph theory', 'graph traversal', 'tree']"
6126,612600,Cow Cash,9,"['dynamic programming', 'knapsack']"
6127,612700,Super Paintball,7,[]
6128,612800,Bessie's Secret Pasture,9,['bruteforcing']
6129,612900,Obstacle Course,11,"['0-1 bfs', 'breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
6130,613000,Privileged Cows,10,"['ad-hoc', 'greedy', 'mathematics']"
6131,613100,완전 제곱수,3,"['arithmetic', 'bruteforcing', 'mathematics']"
6132,613200,전화선,18,['dynamic programming']
6133,613300,Random Walk,0,[]
6134,613400,Sunscreen,17,['greedy']
6135,613500,Cow Hurdles,12,"['floyd–warshall', 'graph theory']"
6136,613600,Milking Time,12,"['dynamic programming', 'sorting']"
6137,613700,문자열 생성,12,"['greedy', 'string', 'two-pointer']"
6138,613800,Exploration,6,"['implementation', 'simulation', 'sorting']"
6139,613900,Speed Reading,4,"['implementation', 'mathematics', 'simulation']"
6140,614000,Radar Installation,0,[]
6141,614100,Sightseeing Cows,19,"['bellman–ford', 'binary search', 'graph theory', 'parametric search']"
6142,614200,Gourmet Grazers,17,"['binary search', 'data structures', 'greedy', 'set / map by trees']"
6143,614300,문자열 생성 2,14,"['greedy', 'string', 'suffix array and lcp array']"
6144,614400,Charm Bracelet,10,"['dynamic programming', 'knapsack', 'sliding window']"
6145,614500,Watering - 4,8,"['case work', 'precomputation']"
6146,614600,신아를 만나러,10,"['breadth-first search', 'graph theory', 'graph traversal']"
6147,614700,Bookshelf,6,"['greedy', 'sorting']"
6148,614800,Bookshelf 2,7,"['backtracking', 'bitmask', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
6149,614900,Card Stacking,7,"['data structures', 'implementation', 'queue', 'simulation']"
6150,615000,Summing Sums,18,"['exponentiation by squaring', 'mathematics', 'number theory']"
6151,615100,The Bovine Accordion and Banjo Orchestra,20,[]
6152,615200,Treasure,0,[]
6153,615300,Haybale Guessing,20,"['binary search', 'data structures', 'segment tree with lazy propagation', 'segment tree']"
6154,615400,Artificial Lake,20,[]
6155,615500,Cell Phone Network,18,"['dynamic programming', 'dynamic programming on trees', 'tree']"
6156,615600,Cow Contest,12,"['floyd–warshall', 'graph theory', 'graph traversal']"
6159,615900,코스튬 파티,6,"['bruteforcing', 'prefix sum', 'sorting', 'two-pointer']"
6160,616000,Election Time,6,"['implementation', 'mathematics', 'sorting']"
6161,616100,iCow,5,"['implementation', 'simulation']"
6162,616200,Superlatives,3,"['implementation', 'mathematics']"
6164,616400,Hotel,20,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
6165,616500,Game of Lines,7,"['bruteforcing', 'mathematics']"
6166,616600,Meteor Shower,13,"['breadth-first search', 'graph theory', 'graph traversal']"
6167,616700,Eating Together,14,['dynamic programming']
6168,616800,Dining Cows,6,"['bruteforcing', 'prefix sum']"
6169,616900,Long Distance Racing,5,"['implementation', 'simulation']"
6170,617000,World Cup Noise,8,['dynamic programming']
6171,617100,땅따먹기,21,"['convex hull trick', 'dynamic programming']"
6172,617200,Cow Jogging,16,"['backtracking', ""dijkstra's"", 'graph theory', 'topological sorting']"
6173,617300,Pearl Pairing,14,"['constructive', 'greedy']"
6174,617400,The Loathesome Hay Baler,8,"['depth-first search', 'graph theory', 'graph traversal']"
6175,617500,Cow Travelling,12,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
6176,617600,River Crossing,12,['dynamic programming']
6177,617700,Statistics,6,"['implementation', 'sorting']"
6178,617800,Lake Making,7,"['implementation', 'simulation']"
6179,617900,Oh Those Rollers,8,"['depth-first search', 'geometry', 'graph theory', 'graph traversal', 'mathematics', 'pythagoras theorem']"
6180,618000,Crisis on the Farm,14,[]
6181,618100,플러드 필 (Flood Fill),21,"['data structures', 'divide and conquer', 'sweeping']"
6182,618200,Roads Around The Farm,9,"['bruteforcing', 'divide and conquer', 'mathematics', 'recursion']"
6183,618300,Word Power,12,"['bruteforcing', 'greedy', 'string']"
6184,618400,Cow Cars,13,"['greedy', 'sorting']"
6185,618500,Clear And Present Danger,11,"['floyd–warshall', 'graph theory']"
6186,618600,Best Grass,7,"['graph theory', 'graph traversal', 'implementation']"
6187,618700,Going to the Movies,7,"['backtracking', 'bruteforcing']"
6188,618800,Clear Cold Water,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
6189,618900,Munching,10,"['breadth-first search', 'graph theory', 'graph traversal']"
6190,619000,Another Cow Number Game,3,"['arithmetic', 'implementation', 'mathematics']"
6191,619100,Cows on Skates,11,"['breadth-first search', 'graph theory', 'graph traversal']"
6192,619200,Cow Pie Treasures,9,['dynamic programming']
6193,619300,Hungry Cows,9,['dynamic programming']
6194,619400,Building the Moat,16,"['convex hull', 'geometry']"
6195,619500,Fence Repair,12,"['data structures', 'greedy', 'priority queue']"
6196,619600,Corn Fields,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
6197,619700,Roadblocks,16,"[""dijkstra's"", 'graph theory']"
6198,619800,옥상 정원 꾸미기,11,"['data structures', 'stack']"
6199,619900,Big Square,12,"['bruteforcing', 'geometry']"
6200,620000,Round Numbers,18,"['combinatorics', 'dynamic programming', 'mathematics']"
6201,620100,New Cow Brands,9,"['backtracking', 'bruteforcing']"
6203,620300,Serious Cow Tag,7,"['geometry', 'implementation', 'simulation', 'sorting']"
6205,620500,The Fewest Coins,19,"['dynamic programming', 'knapsack']"
6206,620600,Milk Patterns,18,"['binary search', 'hashing', 'rabin–karp', 'string', 'suffix array and lcp array']"
6207,620700,Cow Picnic,10,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
6208,620800,Cow Roller Coaster,12,"['dynamic programming', 'knapsack']"
6209,620900,제자리 멀리뛰기,14,"['binary search', 'greedy', 'parametric search']"
6210,621000,Wonderprime Brands,18,"['backtracking', 'bruteforcing', 'implementation', 'mathematics', 'number theory', 'primality test']"
6211,621100,The Eating Puzzle,8,"['backtracking', 'bruteforcing']"
6212,621200,Dream Counting,6,"['bruteforcing', 'mathematics']"
6213,621300,Balanced Lineup,15,"['data structures', 'segment tree']"
6214,621400,Problem Solving,15,['dynamic programming']
6216,621600,Protecting the Flowers,14,"['greedy', 'mathematics', 'sorting']"
6217,621700,Tallest Cow,15,['ad-hoc']
6218,621800,Balanced Lineup,15,"['data structures', 'segment tree']"
6219,621900,소수의 자격,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
6220,622000,Making Change,9,['dynamic programming']
6221,622100,The Bale Tower,8,"['bruteforcing', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'sorting']"
6222,622200,Building A New Barn,15,[]
6223,622300,Cow Sorting,20,"['greedy', 'permutation cycle decomposition']"
6226,622600,Silver Lilypad Pond,16,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
6227,622700,Time Planner,0,[]
6228,622800,Cow Yahtzee,10,"['bruteforcing', 'parsing', 'string']"
6229,622900,Bronze Lilypad Pond,8,"['breadth-first search', 'graph theory', 'graph traversal']"
6230,623000,Buy One Get One Free,7,"['greedy', 'sorting', 'two-pointer']"
6231,623100,Gold Balanced Lineup,16,"['data structures', 'hashing', 'set / map by hashing', 'prefix sum', 'set / map by trees']"
6232,623200,Ranking the Cows,17,"['depth-first search', 'graph theory', 'graph traversal']"
6233,623300,Face The Right Way,14,"['prefix sum', 'sliding window']"
6235,623500,Argus,11,"['data structures', 'implementation', 'priority queue']"
6236,623600,용돈 관리,9,"['binary search', 'parametric search']"
6240,624000,Cheapest Palindrome,15,['dynamic programming']
6241,624100,Dining,20,['maximum flow']
6242,624200,City Horizon,13,"['data structures', 'set / map by hashing', 'sweeping', 'set / map by trees']"
6243,624300,Mileage Bank,0,[]
6244,624400,Moving Object Recognition,0,[]
6245,624500,Cow Solitaire,7,"['bruteforcing', 'dynamic programming']"
6246,624600,풍선 놀이,4,['implementation']
6247,624700,Widening of Channels,10,"['graph theory', 'graph traversal']"
6248,624800,Bronze Cow Party,11,"[""dijkstra's"", 'graph theory']"
6249,624900,TV Reports,3,['implementation']
6250,625000,ATM PIN Theft,9,"['combinatorics', 'implementation', 'mathematics']"
6251,625100,Leaking Dike,0,[]
6252,625200,Fire Evacuation Plan,0,[]
6253,625300,Forgetful Waiter,0,[]
6254,625400,Computerizing a Stockroom,0,[]
6255,625500,Harvesting a Farm,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
6256,625600,Rectangular Painting,0,[]
6257,625700,Corrupted BST,0,[]
6258,625800,Sightseeing,0,[]
6259,625900,WonderTeam,8,['mathematics']
6260,626000,Encrypted SMS,5,"['implementation', 'string']"
6261,626100,Hopeless Coach,0,[]
6262,626200,Yungom,14,"['data structures', 'greedy', 'priority queue']"
6263,626300,New Island,0,[]
6264,626400,Sub-dictionary,20,"['graph theory', 'strongly connected component', 'topological sorting']"
6265,626500,Sharif Super Computer,0,[]
6266,626600,Circle Artwork,0,[]
6267,626700,Crazy Bits,20,"['bitmask', 'maximum flow', 'minimum cost maximum flow']"
6268,626800,누리카베,24,"['backtracking', 'constructive', 'implementation']"
6269,626900,Team Arrangement,0,[]
6270,627000,Barbara Bennett's Wild Numbers,0,[]
6271,627100,Calculating Taxi Fare,0,[]
6272,627200,Party at Hali-Bula,17,[]
6273,627300,Against Mammoths,0,[]
6274,627400,Chessboard Dance,0,[]
6275,627500,Islands and Bridges,0,[]
6276,627600,Treasure of the Chimp Island,0,[]
6277,627700,Warez Test,0,[]
6278,627800,Zombie’s Treasure Chest,0,[]
6279,627900,삼각형 피자,17,"['combinatorics', 'implementation', 'mathematics', 'precomputation']"
6280,628000,Xavier is Learning to Count,24,"['combinatorics', 'fast fourier transform', 'mathematics']"
6281,628100,Winmine.exe,0,[]
6282,628200,Very Boring Homework,0,[]
6283,628300,Universal Question Answering System,0,[]
6284,628400,Triangles and Quadrangle,0,[]
6285,628500,Share the Cakes,0,[]
6286,628600,리벤지 오브 피보나치,19,"['arbitrary precision / big integers', 'data structures', 'mathematics', 'tree', 'trie']"
6287,628700,Quelling Blade,0,[]
6288,628800,Ball Machine,20,"['data structures', 'euler tour technique', 'lowest common ancestor', 'priority queue', 'sparse table', 'tree']"
6289,628900,무-팰린드롬 숫자,19,['dynamic programming']
6290,629000,Pipes,21,['graph theory']
6291,629100,Brunhilda’s Birthday,18,"['dynamic programming', 'greedy', 'mathematics', 'number theory']"
6292,629200,Tracks in the Snow,16,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
6293,629300,Vim,27,"['case work', 'dynamic programming']"
6294,629400,Solitaire,20,"['bruteforcing', 'implementation', 'meet in the middle']"
6295,629500,Left labyrinths,0,[]
6296,629600,Crazy Search,6,"['data structures', 'set / map by hashing']"
6297,629700,Intervals,22,"['breadth-first search', 'graph theory', 'graph traversal']"
6298,629800,Family,0,[]
6299,629900,Timetable,0,[]
6300,630000,단어 퍼즐,21,"['aho-corasick', 'data structures', 'implementation', 'string', 'tree', 'trie']"
6301,630100,Water Treatment Plants,0,[]
6302,630200,Servers,0,[]
6303,630300,Optimal Programs,0,[]
6304,630400,The die is cast,12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'sorting']"
6305,630500,"It's not a Bug, it's a Feature!",0,[]
6306,630600,Reflections,0,[]
6307,630700,Going in circles on Alpha Centauri,0,[]
6308,630800,Blowing Fuses,6,"['implementation', 'simulation']"
6309,630900,Fast Food,0,[]
6310,631000,Sorting Slides,0,[]
6311,631100,Single-Player Games,0,[]
6312,631200,Triangles,18,['dynamic programming']
6313,631300,Instant Complexity,0,[]
6314,631400,There’s treasure everywhere!,9,"['geometry', 'implementation', 'parsing', 'simulation', 'string']"
6315,631500,Video Surveillance,9,"['ad-hoc', 'geometry']"
6316,631600,Pushing Boxes,14,"['breadth-first search', 'bit set', 'graph theory', 'graph traversal']"
6317,631700,Always on the run,0,[]
6318,631800,Box of Bricks,4,"['arithmetic', 'implementation', 'mathematics']"
6319,631900,Island of Logic,15,"['bruteforcing', 'case work', 'implementation', 'parsing', 'string']"
6320,632000,MBone,0,[]
6321,632100,IBM 빼기 1,3,"['string', 'implementation']"
6322,632200,직각 삼각형의 두 변,4,"['arithmetic', 'geometry', 'mathematics', 'pythagoras theorem']"
6323,632300,Carbon Dating,5,['mathematics']
6324,632400,URLs,10,"['case work', 'parsing', 'string']"
6325,632500,Definite Values,6,"['data structures', 'implementation', 'set / map by trees']"
6326,632600,Atlantis,11,"['value / coordinate compression', 'geometry', 'mathematics', 'sorting', 'sweeping']"
6327,632700,Cog-Wheels,0,[]
6328,632800,Erdös Numbers,13,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'string']"
6329,632900,Number Game,0,[]
6330,633000,Ouroboros Snake,0,[]
6331,633100,Fold-up Patterns,0,[]
6332,633200,Railroad,0,[]
6333,633300,Smith Numbers,12,"['bruteforcing', 'mathematics', 'number theory', 'primality test']"
6334,633400,Maze,0,[]
6335,633500,Date bugs,5,"['bruteforcing', 'implementation']"
6336,633600,Robbery,15,['implementation']
6337,633700,Dreisam Equations,0,[]
6338,633800,Formatting Text,0,[]
6339,633900,The Game,0,[]
6340,634000,Dividing,0,[]
6341,634100,S-Trees,0,[]
6342,634200,Treasure,15,"['ad-hoc', 'case work', 'dynamic programming']"
6343,634300,King,0,[]
6344,634400,Prime Land,0,[]
6345,634500,Word,0,[]
6346,634600,Time,0,[]
6347,634700,Puzzle,0,[]
6348,634800,Append,0,[]
6349,634900,Gossiping,0,[]
6350,635000,Tin Cutter,0,[]
6351,635100,FORCAL,0,[]
6352,635200,L-system,0,[]
6353,635300,Packets,0,[]
6354,635400,Crosswords,13,"['graph theory', 'graph traversal', 'implementation']"
6355,635500,Intervals,0,[]
6356,635600,Robot,12,"['breadth-first search', 'graph theory', 'graph traversal']"
6357,635700,Network,0,[]
6358,635800,Four Quarters,8,"['dynamic programming', 'mathematics', 'probability theory']"
6359,635900,만취한 상범,4,"['implementation', 'mathematics', 'number theory', 'simulation']"
6360,636000,L-I-N-G-O: LINGO,12,"['case work', 'implementation', 'string']"
6361,636100,Number Base Conversion,4,"['arbitrary precision / big integers', 'arithmetic', 'implementation', 'mathematics', 'string']"
6362,636200,Unimodal Palindromic Decompositions,13,['dynamic programming']
6363,636300,Extended Lights Out,13,"['bruteforcing', 'greedy']"
6364,636400,Dehuff,0,[]
6365,636500,Picture Puzzle,0,[]
6366,636600,Strictly Inscribed Similar Triangles,0,[]
6367,636700,Color Me Less,5,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
6368,636800,"P,MTHBGWB",5,"['implementation', 'simulation', 'string']"
6369,636900,Plato’s Blocks,17,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'greedy', 'implementation']"
6370,637000,Bode Plot,10,"['calculus', 'mathematics', 'physics']"
6371,637100,Follow My Logic,17,"['graph theory', 'graph traversal', 'implementation', 'simulation']"
6372,637200,Microprocessor Simulation,8,"['implementation', 'simulation']"
6373,637300,Round and Round We Go,8,"['arbitrary precision / big integers', 'arithmetic', 'implementation', 'mathematics', 'simulation', 'string']"
6374,637400,To the Max,9,"['bruteforcing', 'dynamic programming', 'prefix sum']"
6375,637500,Set Me,6,"['bruteforcing', 'implementation', 'string']"
6376,637600,e 계산,4,"['arithmetic', 'mathematics']"
6377,637700,Problem Bee,16,"['case work', 'geometry']"
6378,637800,디지털 루트,3,"['arbitrary precision / big integers', 'implementation', 'mathematics']"
6379,637900,Scramble Sort,8,"['implementation', 'parsing', 'sorting', 'string']"
6380,638000,A Well-Formed Problem,15,"['data structures', 'implementation', 'parsing', 'stack', 'string']"
6381,638100,Entropy,13,"['data structures', 'greedy', 'priority queue', 'string']"
6382,638200,N-Credible Mazes,11,"['breadth-first search', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing']"
6383,638300,SPF,11,"['articulation points and bridges', 'breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
6384,638400,Area,12,"['geometry', ""pick's theorem""]"
6386,638600,Cog-Wheels,0,[]
6388,638800,Enigma,0,[]
6389,638900,Gridland,11,['mathematics']
6391,639100,Number Game,0,[]
6393,639300,Code Breaking,0,[]
6394,639400,Eeny Meeny,0,[]
6395,639500,Hearts,16,['implementation']
6396,639600,Bonus Bonds,0,[]
6397,639700,Bit Maps,12,['divide and conquer']
6398,639800,Laser Lines,0,[]
6399,639900,Roman Numerals,0,[]
6400,640000,Calculator Language,19,"['parsing', 'string']"
6401,640100,Network Wars,0,[]
6402,640200,Strategy,0,[]
6403,640300,Keywords,0,[]
6404,640400,City Navigation,0,[]
6405,640500,Paper Folding,0,[]
6406,640600,Shuffling Patience,0,[]
6407,640700,String Computer,0,[]
6408,640800,Stamps,0,[]
6409,640900,Making Change,9,"['bruteforcing', 'greedy', 'implementation']"
6410,641000,The Sultan's Successors,11,['backtracking']
6411,641100,Theseus and the Minotaur,0,[]
6412,641200,Xenosemantics,0,[]
6413,641300,Clock Patience,0,[]
6414,641400,Car Trialling,0,[]
6415,641500,Mapping the Route,0,[]
6416,641600,트리인가?,12,"['data structures', 'graph theory', 'tree']"
6417,641700,코코넛 그 두 번째 이야기,6,"['bruteforcing', 'implementation']"
6418,641800,Nonstop Travel,0,[]
6419,641900,Doing Windows,0,[]
6420,642000,Numerically Speaking,6,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
6421,642100,It's Ir-Resist-Able,0,[]
6422,642200,Getting Chorded,9,"['parsing', 'string']"
6423,642300,"Run, Run, Runaround Numbers",8,[]
6424,642400,Optimal Array Multiplication Sequence,0,[]
6425,642500,Transferable Voting,0,[]
6426,642600,Psuedo-Random Numbers,5,"['implementation', 'simulation']"
6428,642800,Stars,0,[]
6429,642900,Hexagon,0,[]
6430,643000,Domino Effect,16,"['bruteforcing', 'floyd–warshall', 'graph theory']"
6431,643100,Pendulum,0,[]
6432,643200,Border,0,[]
6434,643400,Ships,0,[]
6436,643600,Floppies,3,"['arithmetic', 'implementation', 'mathematics']"
6437,643700,Golf,3,['implementation']
6438,643800,Reverse Text,4,['string']
6439,643900,교차,15,"['geometry', 'line segment intersection check']"
6440,644000,Synchronous Design,0,[]
6441,644100,Graph Coloring,0,[]
6442,644200,Triangle,0,[]
6443,644300,애너그램,10,"['backtracking', 'string']"
6444,644400,스프레드시트,17,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'parsing', 'string', 'topological sorting']"
6446,644600,Peter's Calculator,20,[]
6448,644800,Stockbroker Grapevine,12,"['floyd–warshall', 'graph theory']"
6449,644900,Frame Stacking,0,[]
6450,645000,Channel Allocation,19,[]
6451,645100,Alien Security,0,[]
6452,645200,Octal Fractions,0,[]
6454,645400,Trip Routing,13,"['data structures', ""dijkstra's"", 'graph theory', 'set / map by hashing', 'implementation', 'parsing', 'string']"
6455,645500,Transaction Processing,0,[]
6456,645600,Perfect Hash,0,[]
6457,645700,Pascal Program Lengths,0,[]
6458,645800,Circle Through Three Points,15,"['geometry', 'implementation']"
6460,646000,Pizza Anyone?,7,"['bitmask', 'bruteforcing']"
6461,646100,Adam's Genes,0,[]
6462,646200,Risk,10,"['breadth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
6463,646300,팩트,6,"['arbitrary precision / big integers', 'mathematics', 'number theory']"
6464,646400,Horse Shoe Scoring,0,[]
6465,646500,Stats,0,[]
6467,646700,Prime Cuts,6,"['implementation', 'mathematics', 'number theory', 'primality test']"
6468,646800,Gears on a Board,0,[]
6469,646900,Uniform Generator,4,"['implementation', 'mathematics']"
6470,647000,"Excuses, Excuses!",8,"['implementation', 'parsing', 'string']"
6473,647300,Unix ls,0,[]
6474,647400,Palindromes,5,"['data structures', 'set / map by hashing', 'implementation', 'string']"
6475,647500,M*A*S*H,0,[]
6476,647600,Postscript,16,"['implementation', 'parsing', 'precomputation', 'string']"
6477,647700,Radar Scopes,0,[]
6478,647800,Message Routing,10,['implementation']
6479,647900,Factorial Frequencies,4,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
6480,648000,Identifying Legal Pascal Real Constants,0,[]
6481,648100,Extrapolation Using a Difference Table,0,[]
6482,648200,Evaluating Simple C Expressions,13,"['parsing', 'string']"
6483,648300,The Finite State Text-Processing Machine,0,[]
6484,648400,PostScript Emulation,0,[]
6485,648500,Inventory Maintenance,8,"['data structures', 'set / map by hashing', 'implementation']"
6486,648600,Cowculations,0,[]
6487,648700,두 직선의 교차 여부,9,['geometry']
6488,648800,Hi-Q,0,[]
6489,648900,Call Forwarding,0,[]
6490,649000,Making the Grade,0,[]
6491,649100,Perfection,3,"['bruteforcing', 'implementation', 'mathematics', 'number theory']"
6492,649200,Shipping Routes,9,"['floyd–warshall', 'graph theory', 'graph traversal', 'implementation']"
6493,649300,Slurpys,12,"['recursion', 'regular expression', 'string']"
6494,649400,Another lottery,6,"['euclidean algorithm', 'greedy', 'mathematics', 'number theory']"
6495,649500,Ballot evaluation,6,"['arbitrary precision / big integers', 'case work', 'data structures', 'set / map by hashing', 'implementation', 'parsing', 'string']"
6496,649600,Cyclic antimonotonic permutations,18,"['constructive', 'mathematics']"
6497,649700,전력난,12,"['graph theory', 'minimum spanning tree']"
6498,649800,엘리어스 감마 코드,11,[]
6499,649900,Food portion size,8,[]
6500,650000,랜덤 숫자 만들기,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
6501,650100,Hotel booking,12,[]
6502,650200,동혁 피자,4,"['geometry', 'implementation', 'mathematics', 'pythagoras theorem']"
6503,650300,망가진 키보드,10,"['string', 'two-pointer']"
6504,650400,킬로미터를 마일로,5,['mathematics']
6505,650500,문자열 디코딩,14,['permutation cycle decomposition']
6506,650600,엘 도라도,11,['dynamic programming']
6507,650700,Forest,0,[]
6508,650800,A Game with Marbles,4,"['implementation', 'mathematics', 'simulation']"
6509,650900,Help Bob,13,[]
6510,651000,Annoying painting tool,10,['greedy']
6511,651100,Black and white painting,0,[]
6512,651200,Cylinder,10,['geometry']
6513,651300,Deli Deli,7,"['case work', 'data structures', 'set / map by hashing', 'implementation', 'string']"
6514,651400,Expressions,0,[]
6515,651500,Frequent values,19,"['data structures', ""mo's"", 'offline queries', 'segment tree']"
6516,651600,Grocery store,7,['bruteforcing']
6517,651700,Halloween treats,0,[]
6518,651800,오타 자동 수정,0,[]
6519,651900,Basic wall maze,0,[]
6520,652000,Construct the wall maze,0,[]
6521,652100,Dihedral groups,13,['mathematics']
6522,652200,Economic phone calls,0,[]
6523,652300,요세푸스 한 번 더!,15,"['data structures', 'graph theory']"
6524,652400,Wine trading in Gergovia,0,[]
6525,652500,동차 수열,12,['ad-hoc']
6526,652600,Ambiguous permutations,6,"['implementation', 'permutation cycle decomposition']"
6527,652700,빙고라니!,8,"['implementation', 'string']"
6528,652800,106 miles to Chicago,12,"[""dijkstra's"", 'graph theory']"
6529,652900,Decorate the wall,16,"['value / coordinate compression', 'sweeping']"
6530,653000,European railroad tracks,0,[]
6531,653100,이런 문제는 유치원생도 해결할 수 있어,16,"['dynamic programming', 'string']"
6532,653200,Game schedule required,0,[]
6533,653300,Help the problem setter,0,[]
6534,653400,All Discs Considered,13,"['breadth-first search', 'graph theory', 'graph traversal']"
6535,653500,Boolean Logic,20,"['implementation', 'parsing', 'string']"
6536,653600,Code,16,"['backtracking', 'graph theory']"
6537,653700,In Danger,7,[]
6538,653800,Run Length Encoding,6,"['implementation', 'parsing', 'string']"
6539,653900,Fractran,0,[]
6540,654000,Huffman's Greed,0,[]
6541,654100,Binary Search Heap Construction,0,[]
6542,654200,Assistance Required,9,[]
6543,654300,그래프의 싱크,17,"['graph theory', 'strongly connected component']"
6544,654400,Fixed Partition Contest Management,0,[]
6545,654500,"Drink, on Ice",6,"['case work', 'mathematics', 'physics']"
6546,654600,Edge,0,[]
6547,654700,Fold,0,[]
6548,654800,Genetic Code,0,[]
6549,654900,히스토그램에서 가장 큰 직사각형,16,"['data structures', 'divide and conquer', 'segment tree', 'stack']"
6550,655000,부분 문자열,6,"['greedy', 'string']"
6551,655100,Balanced Food,0,[]
6552,655200,California Jones and the Gate to Freedom,0,[]
6553,655300,Diplomatic License,6,['geometry']
6554,655400,Polygon Programming with Ease,10,['geometry']
6555,655500,The Sierpinski Fractal,9,"['implementation', 'recursion']"
6556,655600,Paths on a Grid,7,"['combinatorics', 'mathematics']"
6557,655700,Hall of Fountains,0,[]
6558,655800,Average is not Fast Enough!,0,[]
6559,655900,Bound Found,0,[]
6560,656000,Code the Tree,0,[]
6561,656100,Decode the Tree,0,[]
6562,656200,Etaoin Shrdlu,6,[]
6563,656300,Fiber Network,0,[]
6564,656400,Global Roaming,10,"['geometry', 'mathematics']"
6565,656500,"Hard to Believe, but True!",4,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
6566,656600,애너그램 그룹,9,"['data structures', 'set / map by hashing', 'implementation', 'sorting', 'string', 'set / map by trees']"
6567,656700,Let it Bead,16,"['bruteforcing', ""burnside's lemma"", 'combinatorics', 'mathematics']"
6568,656800,귀도 반 로썸은 크리스마스날 심심하다고 파이썬을 만들었다,11,"['implementation', 'simulation']"
6569,656900,몬드리안의 꿈,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
6570,657000,Equidistance,0,[]
6571,657100,피보나치 수의 개수,8,"['arbitrary precision / big integers', 'dynamic programming', 'mathematics']"
6572,657200,Phylogenetic Trees Inherited,0,[]
6573,657300,Hike on a Graph,0,[]
6574,657400,새로운 과일,14,"['dynamic programming', 'string']"
6575,657500,Bee Maja,0,[]
6576,657600,쿼드 트리,8,['recursion']
6577,657700,From Dusk till Dawn (or Vladimir the Vampire),11,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing']"
6578,657800,Euro Cup 2000,0,[]
6579,657900,Friends,11,"['data structures', 'parsing', 'stack', 'string']"
6580,658000,쿼드 트리,8,"['divide and conquer', 'parsing', 'recursion', 'string']"
6581,658100,HTML,11,"['parsing', 'string']"
6582,658200,Artificial Intelligence?,9,"['implementation', 'parsing', 'string']"
6583,658300,Balancing Bank Accounts,0,[]
6584,658400,The Settlers of Catan,10,"['backtracking', 'depth-first search', 'graph theory', 'graph traversal']"
6585,658500,Team Queue,9,"['data structures', 'implementation', 'queue']"
6586,658600,Error Correction,13,[]
6587,658700,France '98,12,"['implementation', 'simulation']"
6588,658800,골드바흐의 추측,10,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
6589,658900,Heavy Cargo,11,"['data structures', ""dijkstra's"", 'graph theory', 'set / map by hashing', 'string']"
6590,659000,덧셈 체인,13,"['backtracking', 'bruteforcing', 'precomputation']"
6591,659100,이항 쇼다운,7,"['combinatorics', 'mathematics']"
6592,659200,Compromise,13,['dynamic programming']
6593,659300,상범 빌딩,11,"['breadth-first search', 'graph theory', 'graph traversal']"
6594,659400,방정식 풀이,14,"['ad-hoc', 'mathematics', 'parsing', 'string']"
6595,659500,프로거,13,"['floyd–warshall', 'graph theory']"
6596,659600,Globetrotter,0,[]
6597,659700,트리 복구,12,"['depth-first search', 'divide and conquer', 'graph theory', 'graph traversal', 'recursion', 'tree']"
6598,659800,Arbitrage,14,"['floyd–warshall', 'graph theory']"
6599,659900,The Tower of Babylon,10,"['bruteforcing', 'dynamic programming', 'graph theory', 'sorting', 'topological sorting']"
6600,660000,원의 둘레,8,"['geometry', 'mathematics']"
6601,660100,Knight Moves,10,"['breadth-first search', 'graph theory', 'graph traversal']"
6602,660200,Eeny Meeny Moo,10,"['data structures', 'queue']"
6603,660300,로또,9,"['backtracking', 'combinatorics', 'mathematics', 'recursion']"
6604,660400,Matrix Chain Multiplication,8,"['data structures', 'stack']"
6605,660500,Humble Numbers,13,"['data structures', 'priority queue']"
6606,660600,Charlie the Cockchafer,0,[]
6607,660700,Gregory the Grasshopper,0,[]
6608,660800,Lisa the Ladybug,0,[]
6609,660900,모기곱셈,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
6610,661000,Rhinoceros Beetle,0,[]
6611,661100,Simon the Spider,0,[]
6612,661200,개미의 이동,14,"['ad-hoc', 'sorting']"
6613,661300,버그잡는 꿍,19,"['knuth–morris–pratt', 'string']"
6614,661400,Analog Clock Display,17,"['geometry', 'implementation']"
6615,661500,콜라츠 추측,8,"['bruteforcing', 'lowest common ancestor', 'tree']"
6616,661600,문자열 암호화,8,"['implementation', 'string']"
6617,661700,Mine the Gradient,0,[]
6618,661800,Invasion,0,[]
6619,661900,Intergalactic Mortgage,0,[]
6620,662000,Simple Polygon,21,"['data structures', 'geometry', 'line segment intersection check', 'sweeping', 'set / map by trees']"
6621,662100,Ambiguous Result,0,[]
6622,662200,Domino tiling,12,['backtracking']
6623,662300,Arbitrage?,0,[]
6624,662400,Bus Schedules,0,[]
6625,662500,Bus Clock Display,0,[]
6626,662600,Measuring Problem Difficulty,21,"['data structures', 'divide and conquer', 'dynamic programming', 'segment tree', 'sorting', 'sweeping']"
6627,662700,The Easiest Problem is This One,5,"['bruteforcing', 'implementation', 'mathematics']"
6628,662800,Prohibición de fumar,0,[]
6629,662900,Pyramid Guards,0,[]
6630,663000,Hack around the Lock,0,[]
6631,663100,God Save the i-th Queen,0,[]
6632,663200,Arable Area,15,"['convex hull', 'geometry']"
6633,663300,Clock Captcha,0,[]
6634,663400,Digital Display,7,"['implementation', 'precomputation']"
6635,663500,Intriguing Identifiers,9,"['case work', 'implementation', 'parsing', 'string']"
6636,663600,Letter Lies,0,[]
6637,663700,Odd Opportunities,0,[]
6638,663800,Peculiar Primes,0,[]
6639,663900,Robotic Rails,0,[]
6640,664000,Suspicious Stocks,7,"['dynamic programming', 'greedy']"
6641,664100,Alea iacta est,0,[]
6642,664200,On-Line Banking,5,"['implementation', 'simulation']"
6643,664300,International Collegiate Programming Contest,0,[]
6644,664400,Careful Declaration,16,['dynamic programming']
6645,664500,Stock Exchange,5,"['implementation', 'string']"
6646,664600,Wooden Fence,0,[]
6647,664700,Safe Gambling,20,"['data structures', 'greedy', 'prefix sum', 'segment tree']"
6648,664800,Government Help,0,[]
6649,664900,Tree Insertions,0,[]
6650,665000,Catch the Bus!,0,[]
6651,665100,Calendar of Events,9,['implementation']
6652,665200,Roman Expressions,14,"['implementation', 'parsing', 'string']"
6653,665300,Geometric Shapes,0,[]
6654,665400,Corporate Identity,16,"['hashing', 'string', 'suffix array and lcp array']"
6655,665500,"Money Money Money, Must Be Funny",0,[]
6656,665600,Railway Transportation,0,[]
6657,665700,Soccer Tournament,0,[]
6658,665800,Hypertheseus,0,[]
6659,665900,All Friends,0,[]
6660,666000,Board Game,0,[]
6661,666100,Crane,0,[]
6662,666200,Divisors,8,"['mathematics', 'number theory', 'primality test']"
6663,666300,Emag eht htiw Em Pleh,0,[]
6664,666400,Failing Roads,0,[]
6665,666500,Go Endgame,0,[]
6666,666600,Help Me with the Game,7,"['implementation', 'parsing', 'sorting', 'string']"
6667,666700,IVXLCDM,0,[]
6668,666800,Agents,0,[]
6669,666900,Boatherds,0,[]
6670,667000,C Looooops,16,"['extended euclidean algorithm', 'mathematics', 'number theory']"
6671,667100,Death to Binary?,0,[]
6672,667200,Electricity,17,"['articulation points and bridges', 'biconnected component', 'graph theory']"
6673,667300,Firepersons,0,[]
6674,667400,God of the Vile Baskers,0,[]
6675,667500,Herbalists,0,[]
6676,667600,Inglish-Number Translator,10,"['parsing', 'string']"
6677,667700,Japan Plotter Driver,14,['implementation']
6678,667800,Bridge Hands,0,[]
6679,667900,싱기한 네자리 숫자,4,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
6680,668000,Building a New Depot,11,[]
6681,668100,Truck History,0,[]
6682,668200,Base Numbers,13,"['arbitrary precision / big integers', 'dynamic programming']"
6683,668300,Paper Cutting,0,[]
6684,668400,Hexagonal Routes,0,[]
6685,668500,Storehouse,0,[]
6686,668600,Traffic Jam,0,[]
6687,668700,Sea Battle,0,[]
6688,668800,The Die Is Cast,12,"['graph theory', 'graph traversal']"
6689,668900,Defragmentation,0,[]
6690,669000,Formatting Text,0,[]
6691,669100,Hole Cutter,0,[]
6692,669200,Interesting Maze Game,19,"['bruteforcing', 'graph theory', 'graph traversal', 'implementation', 'parsing', 'string']"
6693,669300,Complicated Route,0,[]
6694,669400,The Perfect Symmetry,8,"['data structures', 'geometry', 'set / map by hashing', 'set / map by trees']"
6695,669500,Mysterious Villa,0,[]
6696,669600,Too Much Water,4,"['geometry', 'mathematics', 'pythagoras theorem']"
6697,669700,Pizza delivery,0,[]
6698,669800,Ball bearings,0,[]
6699,669900,S-Nim,0,[]
6700,670000,Sylvester construction,9,"['divide and conquer', 'recursion']"
6701,670100,Who owns the Amiga?,0,[]
6702,670200,Lazy Evaluation,0,[]
6703,670300,Easter holidays,0,[]
6704,670400,Tourist,16,['dynamic programming']
6705,670500,Hardware,0,[]
6706,670600,Budget,0,[]
6707,670700,Frogger,0,[]
6708,670800,Gallup,0,[]
6709,670900,Jackpot,6,"['euclidean algorithm', 'mathematics', 'number theory']"
6710,671000,Spiderman’s workout,0,[]
6711,671100,Subway planning,0,[]
6712,671200,Exploding CPU,0,[]
6713,671300,The Mailbox Manufacturers Problem,11,['dynamic programming']
6714,671400,Parallel computer simulator,9,[]
6715,671500,Moving Pianos,0,[]
6716,671600,Collecting Beepers,9,['bruteforcing']
6717,671700,Quantum,0,[]
6718,671800,Goldbach’s conjecture,10,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
6719,671900,Downpayment,0,[]
6720,672000,Simplified λ-evaluations,0,[]
6721,672100,Backward numbers,3,"['arithmetic', 'implementation', 'mathematics', 'string']"
6722,672200,Christmas presents,0,[]
6723,672300,Tournament ranking,0,[]
6724,672400,Directed mazes,14,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
6725,672500,Connecting islands,17,"['bruteforcing', 'geometry', 'graph theory', 'line segment intersection check', 'minimum spanning tree']"
6726,672600,A language for constants,10,"['breadth-first search', 'graph theory', 'graph traversal']"
6727,672700,Bridge placements,0,[]
6728,672800,Request for permission,0,[]
6729,672900,Traffic planning,0,[]
6730,673000,A model railroad,0,[]
6731,673100,Comment removal,0,[]
6732,673200,R.Ø.L.P.,0,[]
6733,673300,A fair jury,0,[]
6734,673400,Radio direction finder,16,"['gaussian elimination', 'geometry', 'linear algebra', 'mathematics']"
6735,673500,Returning books,0,[]
6736,673600,The Idiot of the Year Contest!,4,"['arbitrary precision / big integers', 'arithmetic', 'implementation', 'mathematics', 'string']"
6737,673700,Parsing Real Numbers,0,[]
6738,673800,Co-workers from Hell,0,[]
6739,673900,Connected Gheeves,0,[]
6740,674000,Rotating Scoreboard,0,[]
6741,674100,ACM Underground,0,[]
6742,674200,Expression Evaluator,10,['implementation']
6743,674300,Rectangle Cutting,0,[]
6744,674400,Parallelogram Counting,17,"['combinatorics', 'data structures', 'geometry', 'set / map by hashing', 'mathematics']"
6745,674500,Software Company,0,[]
6746,674600,The Happy Worm,0,[]
6747,674700,Median Weight Bead,13,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
6748,674800,Odd Loving Bakers,0,[]
6749,674900,Next in line,2,"['implementation', 'mathematics']"
6750,675000,Rotating letters,3,"['implementation', 'string']"
6751,675100,From 1987 to 2013,4,"['bruteforcing', 'implementation']"
6752,675200,Time on task,6,"['greedy', 'sorting']"
6753,675300,Chances of winning,9,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'recursion']"
6754,675400,Bridge transport,7,"['data structures', 'queue']"
6755,675500,Who is taller?,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
6756,675600,Factor Solitaire,11,"['greedy', 'mathematics', 'number theory']"
6757,675700,팰린드롬 진법,16,['mathematics']
6758,675800,Tourney,0,[]
6759,675900,LHC,0,[]
6760,676000,A Romantic Movie Outing,0,[]
6761,676100,Transforming Comets,0,[]
6762,676200,Repetitivity,22,"['dynamic programming', 'mathematics']"
6763,676300,Speed fines are not fine!,2,['implementation']
6764,676400,Sounds fishy!,2,['implementation']
6765,676500,Icon Scaling,4,"['implementation', 'string']"
6766,676600,Big Bang Secrets,4,"['implementation', 'string']"
6767,676700,A Coin Game,11,"['breadth-first search', 'graph theory', 'graph traversal']"
6768,676800,Don’t pass me the ball!,3,"['combinatorics', 'mathematics']"
6769,676900,Aromatic Numbers,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
6770,677000,Absolutely Acidic,7,"['implementation', 'sorting']"
6771,677100,Mouse Journey,11,['dynamic programming']
6772,677200,Choose Your Own Arithmetic,9,"['backtracking', 'breadth-first search', 'depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
6773,677300,The Hungary Games,15,"[""dijkstra's"", 'graph theory']"
6774,677400,Mhocskian Languages,0,[]
6775,677500,Editor Distance,0,[]
6776,677600,Sample Size,0,[]
6777,677700,The Winds Of War,0,[]
6778,677800,Which Alien?,2,['implementation']
6779,677900,Who Has Seen The Wind,3,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
6780,678000,Sumac Sequences,3,"['arithmetic', 'implementation', 'mathematics']"
6781,678100,Boring Business,0,[]
6782,678200,Unfriend,0,[]
6783,678300,English or French?,4,"['implementation', 'string']"
6784,678400,Multiple Choice,3,['implementation']
6785,678500,Alice Through the Looking Glass,8,"['divide and conquer', 'recursion']"
6786,678600,Blood Distribution,17,"['bipartite matching', 'bitmask', 'maximum flow']"
6787,678700,Switch,13,"['bruteforcing', 'dynamic programming']"
6788,678800,Putnam,0,[]
6789,678900,Vampire Tunnels,0,[]
6790,679000,Spies Like Us,0,[]
6791,679100,Reorganization,0,[]
6792,679200,Fixing Disks,0,[]
6793,679300,Biggest (Zero Carbon) Footprint,0,[]
6794,679400,"What is n, Daddy?",3,"['mathematics', 'precomputation']"
6795,679500,Up and Down,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
6796,679600,Punchy,5,"['implementation', 'simulation']"
6797,679700,Global Warming,7,['bruteforcing']
6798,679800,Knight Hop,8,"['breadth-first search', 'graph theory', 'graph traversal']"
6799,679900,Computer Purchase,5,"['implementation', 'sorting', 'string']"
6800,680000,Huffman Encoding,8,"['greedy', 'tree']"
6801,680100,Firehose,0,[]
6802,680200,Animal Farm,0,[]
6803,680300,Nutrient Tree,0,[]
6804,680400,Barking Dogs!,0,[]
6805,680500,Tree Pruning,0,[]
6806,680600,Wowow,17,"['data structures', 'segment tree']"
6807,680700,Computer Purchase Return,0,[]
6808,680800,Space Miner,13,"['geometry', 'geometry; 3d', 'linear algebra', 'mathematics']"
6809,680900,Shuffle,7,"['exponentiation by squaring', 'implementation', 'mathematics', 'string']"
6810,681000,ISBN,2,"['arithmetic', 'implementation', 'mathematics']"
6811,681100,Old Fishin’ Hole,4,"['arithmetic', 'bruteforcing', 'mathematics']"
6812,681200,Good times,3,"['arithmetic', 'implementation', 'mathematics']"
6813,681300,Signage,9,"['greedy', 'implementation', 'mathematics', 'string']"
6814,681400,Degrees of Separation,0,[]
6820,682000,Dinner,0,[]
6850,685000,Cows,16,"['convex hull', 'geometry', 'area of a polygon']"
6851,685100,Snowflakes,7,"['data structures', 'set / map by hashing', 'sorting']"
6852,685200,Bowling for Numbers++,0,[]
6881,688100,Number Matrix,11,"['breadth-first search', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
6882,688200,The Great Spamway Strike,0,[]
6884,688400,소수 부분 수열,9,"['bruteforcing', 'mathematics', 'number theory', 'prefix sum', 'primality test', 'sieve of eratosthenes']"
6885,688500,Segments,13,['dynamic programming']
6965,696500,Censor,4,"['implementation', 'string']"
6970,697000,Sentences,5,[]
6971,697100,Nasty Numbers,6,"['mathematics', 'number theory']"
6972,697200,Double Knockout Competition,8,"['implementation', 'simulation']"
6973,697300,Dynamic Dictionary Coding,7,"['data structures', 'set / map by hashing', 'parsing', 'string']"
6974,697400,Long Division,3,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
6975,697500,"Deficient, Perfect, and Abundant",3,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics', 'number theory']"
6976,697600,Divisibility by 11,4,"['arbitrary precision / big integers', 'arithmetic', 'implementation', 'mathematics']"
6977,697700,Pattern Generator,7,['backtracking']
6978,697800,When in Rome...,8,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
6979,697900,Maximum Distance,4,['bruteforcing']
6980,698000,Train Swapping,5,"['implementation', 'sorting']"
6981,698100,Safebreaker,0,[]
6982,698200,Quadtrees,0,[]
6983,698300,Where's Waldorf?,9,"['bruteforcing', 'implementation']"
6984,698400,All Roads Lead Where?,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
6985,698500,Hoppers,13,"['breadth-first search', 'graph theory', 'graph traversal']"
6986,698600,절사평균,8,"['implementation', 'sorting']"
6987,698700,월드컵,11,"['backtracking', 'bruteforcing']"
6988,698800,타일 밟기,15,"['binary search', 'dynamic programming']"
6989,698900,채점,18,"['bitmask', 'bit set', 'dynamic programming']"
6990,699000,달팽이,21,"['geometry', 'implementation', 'line segment intersection check', 'sorting']"
6991,699100,계통 트리,19,"['graph theory', 'hashing']"
6992,699200,Arithmetic Sequence,4,"['implementation', 'mathematics']"
6993,699300,Shift Letters,4,"['implementation', 'string']"
6994,699400,Hobbiton Farms,14,['geometry']
6995,699500,Hand Detection,4,"['bruteforcing', 'implementation']"
6996,699600,애너그램,5,"['implementation', 'sorting', 'string']"
6997,699700,Guessing Game I,5,"['implementation', 'string']"
6998,699800,Tree Isomorphism,11,"['graph theory', 'graph traversal', 'sorting', 'tree', 'tree isomorphism']"
6999,699900,Guessing Game II,0,[]
7000,700000,Ent Numbers,0,[]
7001,700100,King Thrór’s Gold Problem,0,[]
7002,700200,Maximum Damage,0,[]
7003,700300,Checker Board,18,"['game theory', 'sprague–grundy theorem']"
7004,700400,Poly-polygonal Numbers,14,"['data structures', 'mathematics', 'priority queue']"
7005,700500,Stacking Cubes,10,['implementation']
7006,700600,"To bet, or not to bet",0,[]
7007,700700,BSP Trees,0,[]
7008,700800,Double Trouble,9,"['bruteforcing', 'implementation', 'string']"
7009,700900,Relief Supplies,0,[]
7010,701000,Snowball Fight,0,[]
7011,701100,Weather Forecasting,0,[]
7012,701200,Building Snowmen,0,[]
7013,701300,Walking on Thin Ice,0,[]
7014,701400,Snow Cones,9,['string']
7015,701500,Millennium,4,"['implementation', 'simulation']"
7016,701600,Recurring Decimals,8,"['implementation', 'mathematics', 'simulation', 'sorting']"
7017,701700,Biased Dice,13,"['implementation', 'simulation']"
7018,701800,Railway Connection,14,"[""dijkstra's"", 'floyd–warshall', 'graph theory']"
7019,701900,Chain-Confined Path,22,"['dynamic programming', 'geometry', 'implementation']"
7020,702000,Generic Poker,0,[]
7021,702100,Patisserie ACM,0,[]
7024,702400,Letter Game,0,[]
7025,702500,Packing Rectangles,0,[]
7026,702600,Shopping Offers,0,[]
7030,703000,Little Shop of Flowers,11,['dynamic programming']
7031,703100,Hidden Codes,0,[]
7033,703300,Flatten,0,[]
7034,703400,A Strip of Land,0,[]
7035,703500,Recycling proteins,0,[]
7036,703600,Grazing on the Run,18,['dynamic programming']
7038,703800,Cow Patterns,20,"['knuth–morris–pratt', 'string']"
7039,703900,Barn Expansion,0,[]
7040,704000,밥 먹기,20,"['bellman–ford', 'graph theory', 'greedy']"
7041,704100,Dividing the Path,17,"['data structures', 'deque', 'dynamic programming', 'greedy', 'sliding window']"
7042,704200,Cow Ski Area,17,"['data structures', 'graph theory', 'graph traversal', 'strongly connected component']"
7043,704300,Cleaning Shifts,10,"['greedy', 'sorting']"
7044,704400,Bad Cowtractors,12,"['graph theory', 'minimum spanning tree', 'sorting']"
7045,704500,Tree Cutting,13,"['센트로이드', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
7046,704600,Journey,9,"['graph theory', 'graph traversal', 'tree']"
7047,704700,Clouds,0,[]
7048,704800,Sweets,16,"['combinatorics', 'mathematics']"
7049,704900,Trips,0,[]
7050,705000,Football league,0,[]
7051,705100,Puzzle,20,['constructive']
7052,705200,Two sawmills,16,"['convex hull trick', 'dynamic programming']"
7053,705300,시프트 레지스터,18,"['gaussian elimination', 'linear algebra', 'mathematics']"
7054,705400,Trip,0,[]
7055,705500,"Bugs Integrated, Inc.",0,[]
7056,705600,A decorative fence,0,[]
7057,705700,A highway and the seven dwarfs,21,"['binary search', 'convex hull', 'geometry', 'rotating calipers']"
7058,705800,Royal guards,18,['bipartite matching']
7060,706000,Printed Circuit,0,[]
7064,706400,Air Raid,19,"['bipartite matching', 'graph theory']"
7068,706800,Diamonds,0,[]
7070,707000,Cards,0,[]
7080,708000,A New Beginning,0,[]
7081,708100,Reading,19,"['dynamic programming', 'exponentiation by squaring', 'mathematics', 'prefix sum']"
7082,708200,Strip,0,[]
7083,708300,CPU,0,[]
7084,708400,Requests,0,[]
7085,708500,Couples,0,[]
7086,708600,Sailing race,0,[]
7087,708700,Tickets,0,[]
7088,708800,Word counting,0,[]
7093,709300,The Running Man,0,[]
7094,709400,Task Execution,0,[]
7095,709500,Factorials,6,"['arbitrary precision / big integers', 'mathematics']"
7096,709600,Street Network,0,[]
7097,709700,Cycle Detection,0,[]
7098,709800,QuadTrees,0,[]
7106,710600,Wonderful Fours,11,['bruteforcing']
7107,710700,Journey of A Knight,9,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
7108,710800,Billiards,0,[]
7109,710900,The Value of an Expression,0,[]
7110,711000,The Folded Sheet,0,[]
7111,711100,The Strange Sequence,13,"['bruteforcing', 'dynamic programming', 'greedy', 'mathematics', 'recursion']"
7112,711200,Cutting Out of Factorials,18,"['bruteforcing', 'mathematics', 'number theory']"
7113,711300,Rectangle,6,"['mathematics', 'number theory', 'recursion']"
7114,711400,Numbers,6,"['bruteforcing', 'mathematics']"
7115,711500,Circle,8,"['geometry', 'implementation', 'mathematics', 'pythagoras theorem']"
7116,711600,Series,14,"['implementation', 'mathematics']"
7117,711700,"Sevens, twos and zeros",16,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'meet in the middle', 'number theory']"
7118,711800,Ones,12,"['mathematics', 'number theory']"
7119,711900,The Magician,11,"['ad-hoc', 'breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'set / map by trees']"
7120,712000,String,4,['string']
7121,712100,Pencil Factory,7,"['euclidean algorithm', 'inclusion and exclusion', 'mathematics', 'number theory']"
7122,712200,Heating Main,0,[]
7138,713800,Robots,22,"['data structures', ""dijkstra's"", 'graph theory', 'implementation', 'priority queue']"
7139,713900,Toll,27,"['bruteforcing', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'lowest common ancestor', 'minimum spanning tree', 'tree']"
7140,714000,데이터 만들기 1,12,"['ad-hoc', 'constructive', ""dijkstra's"", 'floyd–warshall', 'graph theory']"
7141,714100,데이터 만들기 2,17,"['ad-hoc', 'bellman–ford', 'constructive', 'floyd–warshall', 'graph theory']"
7142,714200,데이터 만들기 3,12,"['ad-hoc', 'bellman–ford', 'constructive', 'floyd–warshall', 'graph theory']"
7143,714300,데이터 만들기 4,20,"['ad-hoc', 'constructive', ""dijkstra's"", 'floyd–warshall', 'graph theory']"
7144,714400,데이터 만들기 5,17,"['ad-hoc', 'bellman–ford', 'constructive', ""dijkstra's"", 'graph theory']"
7145,714500,데이터 만들기 6,20,"['ad-hoc', 'bellman–ford', 'constructive', ""dijkstra's"", 'graph theory']"
7146,714600,데이터 만들기 7,13,"['backtracking', 'constructive']"
7147,714700,데이터 만들기 8,17,['constructive']
7148,714800,Winter Roads,19,"['bruteforcing', 'graph theory', 'minimum spanning tree', 'offline queries']"
7149,714900,Can of Worms,23,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'strongly connected component', 'segment tree']"
7150,715000,Automatic Trading,0,[]
7151,715100,3D Printer,20,"['geometry', 'geometry; 3d']"
7152,715200,Flooding Fields,0,[]
7153,715300,Goat Ropes,22,"['duality', 'maximum flow', 'linear programming', 'minimum cost maximum flow']"
7154,715400,Job Postings,18,"['maximum flow', 'minimum cost maximum flow']"
7155,715500,Overlapping Maps,13,['mathematics']
7156,715600,Unreal Estate,0,[]
7157,715700,조건문,0,[]
7158,715800,유니폼 서브트리,0,[]
7159,715900,Pack,7,"['implementation', 'simulation']"
7160,716000,Puzzle of numbers,0,[]
7161,716100,Swimming pool,16,"['data structures', ""dijkstra's"", 'graph theory', 'graph traversal', 'priority queue']"
7162,716200,House construction,0,[]
7286,728600,Ancient Keyboard,4,['implementation']
7287,728700,등록,1,['implementation']
7288,728800,Changing Phone Numbers,16,"['data structures', 'offline queries']"
7289,728900,Entertainment,0,[]
7290,729000,Fortune at El Dorado,0,[]
7291,729100,Griddy Hobby,0,[]
7292,729200,Scrabble Scoring,8,['implementation']
7293,729300,Intercepting Missiles,18,"['bipartite matching', 'maximum flow', 'geometry']"
7294,729400,Joy of Mobile Routing,0,[]
7295,729500,IOI Photos,0,[]
7296,729600,Vice City,0,[]
7297,729700,Fixing Codes,0,[]
7298,729800,Wiping Words,0,[]
7299,729900,Food Cubes,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
7300,730000,Points,0,[]
7301,730100,ACM-Telecom,0,[]
7302,730200,Prince of Persia,0,[]
7303,730300,House Numbers,0,[]
7304,730400,Rotten Ropes,7,"['greedy', 'sorting']"
7305,730500,Optimal Keypad,0,[]
7306,730600,"Hey, Pay Day!",0,[]
7307,730700,Unfoldung,0,[]
7308,730800,A DP Problem,12,"['mathematics', 'parsing', 'string']"
7309,730900,Map Labeler,0,[]
7310,731000,Balanced Chemical Equations,0,[]
7311,731100,Grandpa's Other Estate,0,[]
7312,731200,Afshung Pizza Delivery,0,[]
7313,731300,Housing Complexes,0,[]
7314,731400,Spacecraft Malfunction,0,[]
7315,731500,Blue x Red = Bang,0,[]
7316,731600,JaWs,0,[]
7317,731700,Skew Binary,5,['mathematics']
7318,731800,Parencodings,8,"['data structures', 'stack']"
7319,731900,The Bermuda Triangle,0,[]
7320,732000,Deformed Wheel,0,[]
7321,732100,Illusive Chase,0,[]
7322,732200,Puzzle Out,0,[]
7323,732300,The Willy Memorial Program,0,[]
7324,732400,Parallel Expectations,0,[]
7325,732500,University Entrance Examination,0,[]
7326,732600,Number Steps,5,"['case work', 'implementation', 'mathematics']"
7327,732700,Puzzlestan,0,[]
7328,732800,Dynamic Declaration Language (DDL),0,[]
7329,732900,Color Tunnels,0,[]
7330,733000,Lazy Math Instructor,0,[]
7331,733100,Buggy Sat,0,[]
7332,733200,편의점 알바,21,"['bellman–ford', 'binary search', 'graph theory']"
7333,733300,Dolphin Pool,0,[]
7334,733400,3002 Rubbery,0,[]
7335,733500,(Your)((Term)((Project))),12,[]
7336,733600,Painting A Board,0,[]
7337,733700,Crossed Matchings,0,[]
7338,733800,Counting Rectangles,0,[]
7339,733900,An Old Stone Game,0,[]
7340,734000,Magazine Delivery,11,['dynamic programming']
7341,734100,Space Ant,0,[]
7342,734200,The Erythea Campaign,0,[]
7343,734300,달력 놀이,14,"['dynamic programming', 'game theory']"
7344,734400,나무 막대,14,"['greedy', 'sorting']"
7345,734500,다항식의 나머지 연산,8,"['bitmask', 'implementation', 'mathematics']"
7346,734600,유전자 함수,13,['dynamic programming']
7347,734700,플립과 시프트,8,['mathematics']
7348,734800,테이블 옮기기,8,['implementation']
7349,734900,Farmland,0,[]
7350,735000,정사각형 부수기,0,[]
7351,735100,What's In A Name?,0,[]
7352,735200,Sorting It All Out,14,"['breadth-first search', 'depth-first search', 'floyd–warshall', 'graph theory', 'graph traversal', 'topological sorting']"
7353,735300,Web Navigation,14,[]
7354,735400,트리의 순서,15,"['divide and conquer', 'dynamic programming', 'mathematics']"
7355,735500,Space Station Shielding,0,[]
7356,735600,Roads Scholar,0,[]
7357,735700,Robots,0,[]
7358,735800,Square Ice,12,"['implementation', 'simulation']"
7359,735900,The Worm Turns,6,"['implementation', 'simulation']"
7360,736000,Undercut,4,"['case work', 'implementation']"
7361,736100,Currency Exchange,5,"['arithmetic', 'mathematics']"
7362,736200,Picnic Planning,0,[]
7363,736300,Rational Approximation,0,[]
7364,736400,Checker's Check,0,[]
7365,736500,Ride My Bicycle,6,['sorting']
7366,736600,Counting Sheep,4,"['implementation', 'string']"
7367,736700,Sequence,6,"['bruteforcing', 'mathematics']"
7368,736800,Untidy Desktops,4,"['geometry', 'implementation']"
7369,736900,Maya Calendar,6,"['implementation', 'mathematics', 'string']"
7370,737000,Transportation,10,['bruteforcing']
7371,737100,John's trip,0,[]
7374,737400,Joseph,7,['precomputation']
7375,737500,Cipher,0,[]
7377,737700,Word Encoding,17,"['binary search', 'dynamic programming', 'string']"
7378,737800,Watchdog,6,"['bruteforcing', 'geometry', 'implementation', 'pythagoras theorem']"
7379,737900,Taxi Cab Scheme,0,[]
7380,738000,Pseudo-random Numbers,0,[]
7381,738100,Card Game Cheater,0,[]
7382,738200,Investment,0,[]
7383,738300,Pipes,0,[]
7384,738400,SETI,18,"['gaussian elimination', 'linear algebra', 'mathematics']"
7385,738500,Minimax Triangulation,17,"['dynamic programming', 'geometry']"
7386,738600,Ancient Cipher,5,"['implementation', 'sorting', 'string']"
7387,738700,Box,7,"['bruteforcing', 'case work', 'mathematics']"
7388,738800,Chandelier,0,[]
7389,738900,Document Indexing,0,[]
7390,739000,Easy Trading,6,['implementation']
7391,739100,Find the Border,0,[]
7392,739200,Gunman,0,[]
7393,739300,Irrelevant Elements,0,[]
7394,739400,Joke with Turtles,0,[]
7395,739500,Kingdom of Magic,0,[]
7396,739600,Lattice Animals,14,"['bruteforcing', 'geometry', 'implementation', 'precomputation']"
7397,739700,Alternative Scale of Notation,7,"['arbitrary precision / big integers', 'mathematics', 'number theory']"
7398,739800,Bring Them There,0,[]
7399,739900,Code Formatting,10,"['parsing', 'string']"
7400,740000,Data Mining,0,[]
7401,740100,Entropy,0,[]
7402,740200,Farmer Bill’s Problem,0,[]
7403,740300,Game,16,['game theory']
7404,740400,Hypertransmission,0,[]
7405,740500,Illumination,0,[]
7406,740600,Jurassic Remains,14,['bruteforcing']
7407,740700,King’s Quest,0,[]
7408,740800,Amusing Numbers,13,"['ad-hoc', 'mathematics']"
7409,740900,Bricks,0,[]
7410,741000,Cricket Field,0,[]
7411,741100,Decoding Task,4,"['arithmetic', 'mathematics', 'string']"
7412,741200,Evacuation Plan,0,[]
7413,741300,Folding,0,[]
7414,741400,Ghost Busters,0,[]
7415,741500,Heroes Of Might And Magic,0,[]
7416,741600,Inlay Cutters,0,[]
7417,741700,Team them up!,0,[]
7418,741800,Brackets sequence,0,[]
7419,741900,Cable master,8,['binary search']
7420,742000,맹독 방벽,16,"['convex hull', 'geometry']"
7421,742100,Chemical reactions,0,[]
7422,742200,Statistical trouble,0,[]
7423,742300,Library,0,[]
7424,742400,숫자 쌍,19,"['backtracking', 'implementation']"
7425,742500,Flip Game,8,['bruteforcing']
7426,742600,Buffer Manager,0,[]
7427,742700,Triathlon,0,[]
7428,742800,Domino Puzzle,18,"['bruteforcing', 'case work', 'eulerian path / circuit', 'graph theory']"
7429,742900,Binary Search,0,[]
7430,743000,Frontier,0,[]
7431,743100,Garland,0,[]
7432,743200,디스크 트리,13,"['data structures', 'string', 'tree', 'trie']"
7433,743300,Divisibility,12,['dynamic programming']
7434,743400,Loan,0,[]
7435,743500,Expression,0,[]
7436,743600,Computer Dialogue,0,[]
7437,743700,Lock Manager,0,[]
7438,743800,Dictionary,0,[]
7439,743900,Highways,13,"['graph theory', 'minimum spanning tree']"
7440,744000,Advertisement,0,[]
7441,744100,False coin,8,"['bruteforcing', 'implementation']"
7442,744200,Rating,0,[]
7443,744300,Fence,17,"['calculus', 'geometry', 'mathematics']"
7444,744400,Parliament,13,"['greedy', 'mathematics']"
7445,744500,Defragment,0,[]
7446,744600,The dog task,0,[]
7447,744700,Spell checker,6,"['implementation', 'string']"
7448,744800,Gangsters,12,['dynamic programming']
7449,744900,The mysterious X network,0,[]
7450,745000,Bin Packing,11,"['greedy', 'sorting']"
7452,745200,Buy or Build,0,[]
7453,745300,합이 0인 네 정수,14,"['binary search', 'meet in the middle', 'sorting', 'two-pointer']"
7459,745900,Angry Teacher,0,[]
7460,746000,Beth Tableaux,0,[]
7461,746100,Collecting Bugs,13,"['dynamic programming', 'mathematics', 'probability theory']"
7462,746200,Drawing Windows,0,[]
7463,746300,Ellipse,19,"['geometry', 'mathematics']"
7464,746400,Fool’s Day,0,[]
7465,746500,Graveyard Design,12,['two-pointer']
7466,746600,젖과 꿀의 땅,5,"['geometry', 'mathematics', 'pythagoras theorem']"
7467,746700,Incredible! Impossible!,0,[]
7468,746800,Jackpot,0,[]
7469,746900,K번째 수,19,"['binary search', 'data structures', 'merge sort tree', 'segment tree', 'sorting']"
7470,747000,Artinals,0,[]
7471,747100,Banal Tickets,0,[]
7472,747200,Crankshaft,0,[]
7473,747300,Destroying The Graph,0,[]
7474,747400,"Experiment ""X"": Explosions Expected",0,[]
7475,747500,Factoring a Polynomial,12,['mathematics']
7476,747600,최대 공통 증가 수열,15,['dynamic programming']
7477,747700,Highways,4,['greedy']
7478,747800,Invariant Polynomials,0,[]
7479,747900,Jogging,0,[]
7480,748000,Key Insertion,19,"['splay tree', 'tree']"
7481,748100,ATM놀이,8,['mathematics']
7482,748200,상자 만들기,4,['mathematics']
7483,748300,Weird sort,15,"['greedy', 'sorting']"
7484,748400,Bowling,6,"['implementation', 'simulation']"
7485,748500,Exam,0,[]
7486,748600,Platforms,0,[]
7487,748700,The Very Greatest Common Divisor,6,"['arbitrary precision / big integers', 'euclidean algorithm', 'mathematics', 'number theory']"
7488,748800,앵그리 라바,0,[]
7489,748900,팩토리얼,4,"['arbitrary precision / big integers', 'mathematics']"
7490,749000,0 만들기,11,"['backtracking', 'bruteforcing', 'implementation', 'string']"
7491,749100,Lucky Controller,0,[]
7492,749200,Bukazoids,0,[]
7493,749300,Collisions,16,"['ad-hoc', 'data structures', 'segment tree']"
7494,749400,Dancers,0,[]
7495,749500,Embassy,0,[]
7496,749600,Dictionary of Obscene Words,0,[]
7497,749700,Greatest Product,14,"['dynamic programming', 'greedy', 'recursion']"
7498,749800,Fractal Cake,0,[]
7499,749900,Hexaroman Numbers,0,[]
7500,750000,Beam in Tunnel,0,[]
7501,750100,Key,20,"['mathematics', 'miller–rabin', 'number theory', 'primality test']"
7502,750200,Game on Chessboard,0,[]
7503,750300,Dart Challenge,11,[]
7504,750400,Online Shopping,0,[]
7505,750500,Playground Hideout,0,[]
7506,750600,Rain on your Parade,0,[]
7507,750700,올림픽 게임,9,[]
7508,750800,Filthy Rich,0,[]
7509,750900,Robotic Invasion,0,[]
7510,751000,고급 수학,3,"['geometry', 'mathematics', 'pythagoras theorem']"
7511,751100,소셜 네트워킹 어플리케이션,11,"['data structures', 'disjoint set', 'graph theory']"
7512,751200,연속하는 소수의 합,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes', 'sliding window']"
7513,751300,준살 프로그래밍 대회,5,"['implementation', 'string']"
7514,751400,Palindromes,0,[]
7515,751500,Prehistoric Operating Systems,7,['dynamic programming']
7516,751600,알렉산드리아의 디오판토스,14,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
7517,751700,Tudoku,18,"['backtracking', 'dancing links', ""knuth's x""]"
7518,751800,Traveling Queen Problem,0,[]
7519,751900,Mine Map,0,[]
7520,752000,Knights of the Round Table,0,[]
7522,752200,Relocation,0,[]
7523,752300,Gauß,4,"['arithmetic', 'mathematics']"
7524,752400,Kick-Tipp,0,[]
7525,752500,Number Tricks,14,"['mathematics', 'number theory', 'primality test']"
7526,752600,Citystar,0,[]
7527,752700,Escape,0,[]
7528,752800,Holiday Gifts,0,[]
7529,752900,Soccer,0,[]
7530,753000,Stamps,8,[]
7531,753100,A Knight’s Journey,0,[]
7532,753200,Dart Scoring,7,"['implementation', 'simulation']"
7533,753300,Pimp My Ride,0,[]
7534,753400,Scavenger Hunt,10,"['data structures', 'graph theory', 'graph traversal', 'set / map by hashing']"
7535,753500,A Bug’s Life,14,"['graph theory', 'graph traversal']"
7536,753600,Jamie's Contact Groups,0,[]
7537,753700,Acid Text,18,"['data structures', 'set / map by hashing', 'implementation', 'parsing', 'string', 'set / map by trees']"
7538,753800,Incomplete chess boards,12,"['ad-hoc', 'mathematics']"
7539,753900,Military Recruit,13,"['floyd–warshall', 'graph theory']"
7540,754000,Strategies,6,"['greedy', 'implementation', 'simulation', 'sorting']"
7541,754100,StuPId,6,"['arithmetic', 'bruteforcing', 'mathematics']"
7542,754200,Forest Fires,0,[]
7543,754300,Pia’s Party,0,[]
7544,754400,Castle Walls,0,[]
7545,754500,DNA Laboratory,0,[]
7546,754600,소수의 주기,8,"['implementation', 'mathematics']"
7547,754700,Heavy Transportation,12,"['data structures', 'disjoint set']"
7548,754800,Dory’s Phonebook,0,[]
7549,754900,Yeehaa!,10,"['geometry', 'mathematics']"
7550,755000,Magic Trick,8,"['implementation', 'parsing', 'simulation', 'string']"
7551,755100,Formula Racing,0,[]
7552,755200,Ancient Plates,0,[]
7553,755300,Box Art,0,[]
7554,755400,Brainman,6,"['implementation', 'sorting']"
7555,755500,Friends,0,[]
7556,755600,Manhattan 2025,9,"['geometry', 'geometry; 3d', 'implementation']"
7557,755700,Mayan Dates,0,[]
7558,755800,제곱잉여,13,"['mathematics', 'number theory', 'primality test']"
7559,755900,Regetni,0,[]
7560,756000,Cocktails,0,[]
7561,756100,크래머의 공식,11,"['linear algebra', 'mathematics']"
7562,756200,나이트의 이동,10,"['breadth-first search', 'graph theory', 'graph traversal']"
7563,756300,Rat Attack,10,['bruteforcing']
7564,756400,Automatic Poetry,0,[]
7565,756500,Ranking List,0,[]
7566,756600,Ship Journey,0,[]
7567,756700,그릇,4,"['implementation', 'string']"
7568,756800,덩치,6,"['bruteforcing', 'implementation']"
7569,756900,토마토,11,"['breadth-first search', 'graph theory', 'graph traversal']"
7570,757000,줄 세우기,13,"['dynamic programming', 'greedy']"
7571,757100,점 모으기,10,"['mathematics', 'sorting']"
7572,757200,간지(干支),4,"['arithmetic', 'implementation', 'mathematics']"
7573,757300,고기잡이,12,['bruteforcing']
7574,757400,개구리,19,"['data structures', 'graph theory', 'graph traversal', 'segment tree', 'sweeping']"
7575,757500,바이러스,16,"['knuth–morris–pratt', 'string']"
7576,757600,토마토,11,"['breadth-first search', 'graph theory', 'graph traversal']"
7577,757700,탐사,21,"['bellman–ford', 'floyd–warshall', 'graph theory']"
7578,757800,공장,16,"['data structures', 'segment tree']"
7579,757900,앱,13,"['dynamic programming', 'knapsack']"
7580,758000,Team Selection,0,[]
7581,758100,Cuboids,3,"['arithmetic', 'mathematics']"
7582,758200,On the Bus,4,"['implementation', 'simulation']"
7583,758300,Jumbled Words,4,"['implementation', 'string']"
7584,758400,Noughts & Crosses,5,"['implementation', 'simulation']"
7585,758500,Brackets,7,"['data structures', 'parsing', 'stack', 'string']"
7586,758600,Untied Airlines,5,"['data structures', 'set / map by hashing']"
7587,758700,Anagrams,7,"['sorting', 'string']"
7588,758800,Amicable,11,"['implementation', 'mathematics']"
7589,758900,Balanced Change,8,"['bruteforcing', 'parsing', 'string']"
7590,759000,Expressions,0,[]
7591,759100,Circles,0,[]
7592,759200,Stars,0,[]
7593,759300,Missing Letters,0,[]
7594,759400,Jury Compromise,0,[]
7595,759500,Triangles,3,['implementation']
7596,759600,MP3 Songs,6,['sorting']
7597,759700,Tennis,5,"['implementation', 'simulation']"
7598,759800,Bookings,4,['implementation']
7599,759900,Library Codes,4,['implementation']
7600,760000,문자가 몇갤까,4,"['implementation', 'string']"
7601,760100,Outfits,4,['implementation']
7602,760200,Exercise,5,['implementation']
7603,760300,Queen Kingdom,0,[]
7604,760400,Reconstruction Trees,14,['tree']
7605,760500,Traffic Engineering,0,[]
7606,760600,The Race,0,[]
7607,760700,리스트 계산기,24,"['implementation', 'parsing', 'string']"
7608,760800,Bargain or No Bargain,0,[]
7609,760900,Vote-Value Disparity 1,8,"['constructive', 'heuristics']"
7610,761000,Synchronization,24,"['euler tour technique', 'link/cut tree', 'tree']"
7611,761100,Watching,20,"['binary search', 'dynamic programming']"
7612,761200,SSSP,0,[]
7613,761300,보이 스카우트,23,"['convex hull trick', 'convex hull', 'dynamic programming', 'geometry']"
7614,761400,Parity,0,[]
7615,761500,해싱,21,[]
7616,761600,교실로 가는 길,19,['maximum flow']
7617,761700,Company,0,[]
7618,761800,트리 유사도,22,['dynamic programming']
7619,761900,음식값,17,[]
7620,762000,편집 거리,16,"['dynamic programming', 'string']"
7621,762100,Fish Catch,0,[]
7622,762200,The (Bayesian) Hound and the Hare,0,[]
7623,762300,무한 게임,21,"['mathematics', 'number theory']"
7624,762400,Minesweeper,0,[]
7625,762500,Space Boomerang,0,[]
7626,762600,직사각형,20,"['value / coordinate compression', 'data structures', 'segment tree', 'sweeping']"
7627,762700,스패닝 트리,22,"['data structures', 'disjoint set', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
7628,762800,Another Rock-Paper-Scissors Problem,11,['mathematics']
7629,762900,Ball Painting,15,"['combinatorics', 'mathematics']"
7630,763000,City Driving,21,"['lowest common ancestor', 'tree']"
7631,763100,Drunken Walk,20,['dynamic programming']
7632,763200,Empty Triangles,21,"['geometry', 'graph theory']"
7633,763300,Fighting for Triangles,19,['game theory']
7634,763400,Guessing Game,18,"['bellman–ford', 'graph theory']"
7635,763500,Hidden Code,12,"['bruteforcing', 'implementation', 'string']"
7636,763600,Identity Checker,19,"['bruteforcing', 'data structures', 'stack']"
7637,763700,AAAAHH! Overbooked!,5,"['implementation', 'parsing', 'string']"
7638,763800,Betting Sets,9,"['greedy', 'mathematics', 'probability theory']"
7639,763900,Counting Pixels,11,['mathematics']
7640,764000,Matryoshka Dolls,7,"['data structures', 'greedy', 'set / map by hashing', 'sorting']"
7641,764100,Equilateral Dominoes,0,[]
7642,764200,Four Gate Push,6,['bruteforcing']
7643,764300,Game Rigging,0,[]
7644,764400,Highway Construction,18,"['depth-first search', 'graph theory', 'graph traversal', 'lowest common ancestor', 'tree']"
7645,764500,A Reasonable Ranking,0,[]
7646,764600,Burns’ Rods,0,[]
7648,764800,"Matryoshka Dolls, Again",19,[]
7649,764900,Energy Collection,0,[]
7650,765000,Futurama,0,[]
7651,765100,G-Avoiding Sequence,25,[]
7652,765200,Bonsai,0,[]
7653,765300,Fruit Bowl,0,[]
7654,765400,Number Game,12,"['game theory', 'mathematics']"
7655,765500,Leap Frog,0,[]
7656,765600,만능 오라클,6,"['parsing', 'string']"
7657,765700,Rectangles,17,"['dynamic programming', 'sorting']"
7658,765800,Rectangles Too!,20,[]
7659,765900,Rubik 2^3,17,"['breadth-first search', 'bidirectional search', 'graph theory', 'graph traversal', 'implementation']"
7660,766000,Apocalyptic Alignment,0,[]
7661,766100,Boundless Boxes,0,[]
7662,766200,이중 우선순위 큐,12,"['data structures', 'priority queue', 'set / map by trees']"
7663,766300,Dreadful Deadlines,0,[]
7664,766400,Earthquake Emendations,0,[]
7665,766500,Folded Fixtures,0,[]
7666,766600,Globulous Gumdrops,0,[]
7667,766700,Honed Hops,0,[]
7668,766800,Divisibility,9,"['mathematics', 'string']"
7669,766900,Go,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
7670,767000,Game Dice,0,[]
7671,767100,Baking Cakes,15,['dynamic programming']
7672,767200,Pool,0,[]
7673,767300,Jogger,16,['graph theory']
7674,767400,Censorship,0,[]
7675,767500,Change,0,[]
7676,767600,Saruman’s army,10,"['greedy', 'sorting']"
7677,767700,Fibonacci,14,"['exponentiation by squaring', 'mathematics', 'number theory']"
7678,767800,Football,15,"['sliding window', 'tree']"
7679,767900,Robot,17,[]
7680,768000,Spam,11,"['dynamic programming', 'string']"
7681,768100,Sudoku,22,"['backtracking', 'dancing links', ""knuth's x"", 'parsing', 'string']"
7682,768200,틱택토,11,"['backtracking', 'implementation']"
7683,768300,Scrabble,6,"['implementation', 'string']"
7684,768400,Convex area,23,"['convex hull', 'geometry', 'geometry; 3d']"
7685,768500,Nim,13,"['game theory', 'sprague–grundy theorem']"
7686,768600,Dropping tests,14,"['binary search', 'greedy', 'parametric search']"
7687,768700,지구 직육면체설,19,"['case work', 'geometry', 'geometry; 3d', 'implementation', 'mathematics', 'pythagoras theorem']"
7688,768800,Colored stones,0,[]
7689,768900,RSI,0,[]
7690,769000,Do it!,0,[]
7691,769100,Cake Cutting,0,[]
7692,769200,Election,0,[]
7693,769300,Nash Equilibrium,0,[]
7694,769400,Triangle,13,"['geometry', 'mathematics', 'number theory', ""pick's theorem""]"
7695,769500,Brackets,11,['dynamic programming']
7696,769600,반복하지 않는 수,7,"['bruteforcing', 'implementation']"
7697,769700,Planet Hunting,0,[]
7718,771800,2D Matrix,0,[]
7719,771900,Purify,20,[]
7720,772000,Vigener Cipher,0,[]
7721,772100,Hiring the crew,0,[]
7722,772200,Real Fun,19,[]
7723,772300,Cypher,0,[]
7724,772400,One way roads,0,[]
7725,772500,Voting,0,[]
7726,772600,개꿀잼,22,[]
7727,772700,Byephone,25,"['divide and conquer', ""hirschberg's""]"
7728,772800,Painting patter,0,[]
7729,772900,Tree Game,20,"['dynamic programming', 'dynamic programming on trees', 'game theory', 'tree']"
7730,773000,Necklace,0,[]
7731,773100,Neighbours,0,[]
7732,773200,Downtown,0,[]
7733,773300,Book-case,0,[]
7734,773400,Vista 0,8,"['bruteforcing', 'combinatorics', 'mathematics', 'travelling salesman problem']"
7735,773500,Duopoly,0,[]
7736,773600,Stock Exchange,0,[]
7737,773700,삼각분할,20,"['combinatorics', 'data structures', 'exponentiation by squaring', 'mathematics', 'number theory', 'primality test', 'segment tree']"
7738,773800,Collision of asteroids,0,[]
7739,773900,Cards,0,[]
7740,774000,Ugly lines,0,[]
7741,774100,Cars,18,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
7742,774200,Railway,17,"['lowest common ancestor', 'tree']"
7743,774300,Triangles,0,[]
7744,774400,Cakes,17,"['greedy', 'sorting']"
7745,774500,Coloring maps,0,[]
7746,774600,Reverse numbers,0,[]
7747,774700,Three Bit Computer,12,['ad-hoc']
7748,774800,Encoding,0,[]
7749,774900,Cell phone tunes,0,[]
7750,775000,Three Bit Computer Strikes Back,0,[]
7751,775100,Coloured leaves,0,[]
7760,776000,Cocktail,0,[]
7761,776100,Increasing subsequences,0,[]
7762,776200,Map Generator,0,[]
7763,776300,Map Generator returns (MG-II),0,[]
7764,776400,Trigonometric optimization,0,[]
7765,776500,Supersquare,20,"['ad-hoc', 'mathematics', 'precomputation']"
7766,776600,Pseudographical recognizer,0,[]
7767,776700,“Roman” corridor,0,[]
7768,776800,Parabolic teleports,0,[]
7769,776900,Magic pyramid,0,[]
7770,777000,아즈텍 피라미드,4,['mathematics']
7771,777100,배틀쉽,13,['constructive']
7772,777200,구조 이성질체,21,"['dynamic programming', 'mathematics']"
7773,777300,Deepest Station,0,[]
7774,777400,콘센트,8,"['greedy', 'sorting']"
7775,777500,최종 순위,13,"['constructive', 'greedy', 'mathematics']"
7776,777600,Grid,0,[]
7777,777700,병원,22,"['dominator tree', 'maximum flow', 'graph theory', 'tree']"
7778,777800,Intelligent Design,23,"['bruteforcing', 'implementation', 'parsing', 'string']"
7779,777900,Juggle with Criteria,20,"['ad-hoc', 'bruteforcing', 'precomputation']"
7780,778000,Kingdom Subdivision,0,[]
7781,778100,Log Analysis,0,[]
7782,778200,Alien,3,"['bruteforcing', 'implementation']"
7783,778300,B-행렬,19,"['dynamic programming', 'prefix sum', 'two-pointer']"
7784,778400,서로 다른 숫자,20,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory']"
7785,778500,회사에 있는 사람,6,"['data structures', 'set / map by hashing']"
7786,778600,합 찾기,14,['mathematics']
7787,778700,"빨간 칩, 초록 칩",17,"['game theory', 'sprague–grundy theorem']"
7788,778800,복도,19,"['geometry', 'graph theory', 'minimum spanning tree', 'parametric search']"
7789,778900,텔레프라임,4,"['mathematics', 'number theory', 'primality test']"
7790,779000,Joke,4,['string']
7791,779100,KBTU party,20,[]
7792,779200,Superstitious Skylab Tower,0,[]
7793,779300,Panda Land 5: Panda Programming Language,0,[]
7794,779400,Almost Clear,0,[]
7795,779500,먹을 것인가 먹힐 것인가,8,"['binary search', 'sorting', 'two-pointer']"
7796,779600,Indomie,13,"['dynamic programming', 'mathematics']"
7797,779700,In Queries,13,"['data structures', 'implementation', 'segment tree', 'simulation']"
7798,779800,Hotel,5,"['implementation', 'simulation']"
7799,779900,Walaweh,17,"['implementation', 'recursion', 'string']"
7800,780000,The Chosen Sub Matrix,7,"['bruteforcing', 'data structures', 'set / map by hashing', 'implementation', 'sorting', 'set / map by trees']"
7801,780100,Avoiding Financial Nightmare,7,['binary search']
7802,780200,No Pause Telegraph,9,"['greedy', 'implementation', 'string']"
7803,780300,"Burger, French Fries, Soft Drink",6,"['combinatorics', 'mathematics', 'string']"
7804,780400,Taxi!,0,[]
7805,780500,Minimum Swap,5,['sorting']
7806,780600,GCD!,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
7807,780700,Playing With Domino,0,[]
7808,780800,Email from The Professor,8,['sorting']
7809,780900,The Adventure in Panda Land Part I: Panda Number,0,[]
7810,781000,Jakarta Traffic Jam,0,[]
7811,781100,Sultan's Land,0,[]
7812,781200,중앙 트리,16,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
7822,782200,Worst Locations,0,[]
7823,782300,Counting BST,0,[]
7824,782400,Playing With Stones,0,[]
7825,782500,Arm Wrestling Tournament,0,[]
7826,782600,Lightning Energy Report,0,[]
7827,782700,Transitive Closure,10,"['depth-first search', 'graph theory', 'graph traversal']"
7828,782800,더해,0,[]
7829,782900,Serial Numbers,0,[]
7830,783000,Romantic Date,6,['greedy']
7831,783100,Fire Drill,17,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
7839,783900,Pizza schedule,0,[]
7840,784000,Texture Tile,0,[]
7841,784100,Count Squares,0,[]
7842,784200,Road Accident,0,[]
7843,784300,Terrarium,0,[]
7844,784400,Sudoku Checker,8,['implementation']
7845,784500,ACM Computer Factory,0,[]
7846,784600,ACM Rank Table,7,['sorting']
7847,784700,Sales Report,7,"['data structures', 'set / map by hashing', 'implementation', 'set / map by trees']"
7848,784800,Random Gap,7,"['implementation', 'simulation']"
7849,784900,Radio Coverage,0,[]
7850,785000,Circle Drawing,0,[]
7851,785100,Harder Sokoban Problem,16,"['breadth-first search', 'graph theory', 'graph traversal']"
7852,785200,Nearest number - 2,11,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
7853,785300,Advanced ASCII Cubes,11,['implementation']
7854,785400,Water pipe,0,[]
7855,785500,"One is good, but two is better",0,[]
7856,785600,Beach cut,0,[]
7857,785700,Simple prefix compression,4,"['bruteforcing', 'implementation', 'string']"
7858,785800,Tetris Alphabet,14,"['depth-first search', 'graph theory', 'graph traversal', 'topological sorting']"
7859,785900,Network Saboteur,10,['recursion']
7860,786000,Burned Calendar,0,[]
7861,786100,Longest Ordered Subsequence,9,['dynamic programming']
7862,786200,Falling cards,0,[]
7863,786300,Very Simple Problem,5,[]
7864,786400,Binary Witch,9,"['data structures', 'dynamic programming', 'set / map by hashing', 'implementation', 'simulation', 'set / map by trees']"
7865,786500,Fool Game,0,[]
7866,786600,Spreadsheet,0,[]
7867,786700,PreQueL,0,[]
7868,786800,해밍 수열,11,"['bruteforcing', 'mathematics', 'number theory', 'sorting']"
7869,786900,두 원,14,"['case work', 'geometry', 'mathematics']"
7870,787000,Accountant notes,24,"['aho-corasick', 'data structures', 'dynamic programming', 'hashing', 'implementation', 'string', 'tree', 'trie']"
7871,787100,Better and faster!,0,[]
7872,787200,Cave,18,"['data structures', 'deque', 'divide and conquer', 'implementation', 'segment tree', 'simulation', 'stack']"
7873,787300,Decision,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
7874,787400,Everybody may get lost in space,0,[]
7875,787500,(False) faces,28,"['linear algebra', 'mathematics']"
7876,787600,Garlands,0,[]
7877,787700,Hypervisor MacrOS,0,[]
7878,787800,Islands,16,"['binary search', 'data structures', 'disjoint set', 'sorting', 'sweeping']"
7879,787900,Jack’s socks,22,"['articulation points and bridges', 'graph theory']"
7880,788000,Knowledge for the masses,0,[]
7881,788100,YAPTCHA,12,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
7882,788200,Skyscrapers,13,[]
7883,788300,Business Cards,17,"['mathematics', 'number theory']"
7884,788400,Museum,0,[]
7885,788500,Morphing is fun,0,[]
7886,788600,Tower,0,[]
7887,788700,Suffix reconstruction,0,[]
7888,788800,두 교수,22,"['data structures', 'graph theory', 'greedy', 'priority queue', 'sorting']"
7889,788900,힙 세기,0,[]
7890,789000,가까운 점 찾기,25,"['delaunay triangulation', 'geometry', 'voronoi diagram']"
7891,789100,Can you add this?,2,"['arithmetic', 'implementation', 'mathematics']"
7892,789200,Johnny and the Quadratic Equation,20,"['backtracking', 'case work', 'mathematics', 'number theory']"
7893,789300,Vase collection,0,[]
7894,789400,큰 수,13,['mathematics']
7895,789500,Prison rearrangement,0,[]
7896,789600,Sightseeing tour,0,[]
7897,789700,A number game,0,[]
7898,789800,Euro Efficiency,14,[]
7899,789900,Markov Trains,0,[]
7900,790000,Hansel and Grethel,10,"['geometry', 'mathematics']"
7901,790100,Floors,11,[]
7902,790200,The Picnic,0,[]
7903,790300,Pearls,9,['dynamic programming']
7904,790400,허프만 트리,0,[]
7905,790500,Input,11,"['bruteforcing', 'case work', 'geometry', 'implementation', 'mathematics']"
7906,790600,Arithmetic Rectangle,22,[]
7907,790700,Bytean Road Race,23,"['graph theory', 'planar graph', 'topological sorting']"
7908,790800,Will It Stop?,9,['mathematics']
7909,790900,Ants,22,['mathematics']
7910,791000,Gophers,20,"['data structures', 'segment tree']"
7911,791100,Laundry,17,"['data structures', 'greedy', 'set / map by trees']"
7912,791200,Bits Generator,0,[]
7913,791300,Afternoon Tea,15,['mathematics']
7914,791400,Intelligence Quotient,19,"['bipartite matching', 'maximum flow', 'max-flow min-cut theorem']"
7915,791500,Cave,17,"['dynamic programming', 'dynamic programming on trees', 'mathematics', 'number theory', 'tree']"
7916,791600,Cross Spider,16,[]
7917,791700,Potrójne drzewa,0,[]
7918,791800,Triangulacja,0,[]
7919,791900,Strażak,21,"['backtracking', 'depth-first search', 'graph theory', 'graph traversal']"
7920,792000,Słoneczna wyspa,0,[]
7921,792100,Dziadkowie,6,"['implementation', 'mathematics']"
7922,792200,Ciasteczkowy potwór,13,['mathematics']
7923,792300,Spacer,0,[]
7924,792400,Suma kontrolna,0,[]
7925,792500,Wąż,0,[]
7926,792600,Chciwi rolnicy,0,[]
7927,792700,ADOM,0,[]
7928,792800,Artefakt,0,[]
7929,792900,Bardzo brudny łańcuch,18,"['string', 'suffix array and lcp array']"
7930,793000,Ciekawy Książę,0,[]
7931,793100,Dzień Szachisty,0,[]
7932,793200,Egzotyczny układ mechaniczny,0,[]
7933,793300,Fiołkowe puzzle,0,[]
7934,793400,Goździki,0,[]
7935,793500,Historia bawełny,14,"['combinatorics', 'dynamic programming', 'mathematics']"
7936,793600,N의 존재,24,"['discrete logarithm', 'mathematics', 'number theory']"
7937,793700,Jaka data?,0,[]
7938,793800,Mniam mniam,21,"['inclusion and exclusion', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
7939,793900,Sygnał,0,[]
7940,794000,Armaty,0,[]
7941,794100,Sortowanie,17,"['data structures', 'segment tree']"
7942,794200,Piąty wymiar,0,[]
7943,794300,Tetris,21,"['bitmask', 'case work', 'dynamic programming', 'dynamic programming using bitfield', 'exponentiation by squaring', 'mathematics']"
7944,794400,Autostrady,0,[]
7945,794500,Hurtownia czekolady,0,[]
7946,794600,Supermarket,6,['sorting']
7947,794700,Koncert,3,"['arithmetic', 'implementation', 'mathematics']"
7948,794800,Smok,15,"['greedy', 'sorting']"
7949,794900,Cebula,18,"['convex hull', 'geometry']"
7950,795000,Szaszłyki,0,[]
7951,795100,Radio,0,[]
7952,795200,Jaskinia,0,[]
7953,795300,Skarb,14,"['breadth-first search', 'graph theory', 'graph traversal']"
7954,795400,Liczby Erdösa,17,"['dynamic programming', 'graph theory', 'offline queries', 'parsing', 'string']"
7955,795500,Popisowa samoobrona,0,[]
7956,795600,Liczby piwne,8,"['ad-hoc', 'arbitrary precision / big integers', 'mathematics']"
7957,795700,Cash Dispenser,0,[]
7958,795800,Points,0,[]
7959,795900,Toy Cars,0,[]
7960,796000,Piggy Banks,0,[]
7961,796100,Knights,0,[]
7962,796200,A Journey to Mars,16,[]
7963,796300,Bank Notes,20,[]
7964,796400,Fibonacci Sums,23,"['implementation', 'mathematics', 'number theory']"
7965,796500,Dicing,21,[]
7966,796600,Template,21,[]
7967,796700,Balance,9,"['backtracking', 'bruteforcing']"
7968,796800,Special Forces Manoeuvres,0,[]
7970,797000,Double-row,0,[]
7971,797100,The Bus,18,"['value / coordinate compression', 'data structures', 'segment tree']"
7972,797200,Mirror Trap,0,[]
7973,797300,Dextrogyrate Camel,22,[]
7974,797400,Vending Machine,0,[]
7975,797500,버스 여행,19,[]
7976,797600,수열,14,"['dynamic programming', 'greedy']"
7977,797700,크리스 마틴,13,"['constructive', 'greedy']"
7978,797800,Evaluation of an Expression,0,[]
7979,797900,Formula One,25,['ad-hoc']
7980,798000,Save the Dinosaurs,24,[]
7981,798100,장비를 정지합니다,19,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
7982,798200,순열 그래프의 연결성 판별,15,['ad-hoc']
7983,798300,내일 할거야,11,"['greedy', 'sorting']"
7984,798400,두더지 잡기,21,['dynamic programming']
7987,798700,Spies,21,"['graph theory', 'greedy', 'topological sorting']"
7989,798900,The Bridge,12,"['greedy', 'mathematics', 'sorting']"
7990,799000,Gates,0,[]
7992,799200,Passage,0,[]
7993,799300,후르츠 치킨,21,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'topological sorting', 'tree']"
7994,799400,The Islands,19,[]
7995,799500,C-algae,24,"['data structures', 'graph theory', 'hashing', 'set / map by hashing', 'mathematics']"
7996,799600,Maximal Orders of Permutations,0,[]
7997,799700,Sequences without Stammers,24,['ad-hoc']
7998,799800,Chocolate,15,['dynamic programming']
7999,799900,Numerals of Przesmyks,19,"['arbitrary precision / big integers', 'dynamic programming', 'implementation', 'string']"
8000,800000,Printed-Circuit Boards,0,[]
8001,800100,Smugglers,0,[]
8002,800200,Mastermind II,8,[]
8003,800300,Motorways,22,[]
8004,800400,Trinomial,16,['mathematics']
8005,800500,Tiles,0,[]
8006,800600,Connections,17,"['data structures', ""dijkstra's"", 'graph theory']"
8007,800700,Treasure,0,[]
8008,800800,Sums,19,"[""dijkstra's"", 'graph theory', 'mathematics', 'number theory']"
8009,800900,Holiday Costing,8,"['implementation', 'mathematics']"
8010,801000,Shuffle,0,[]
8011,801100,Railways,0,[]
8012,801200,한동이는 영업사원!,16,"['lowest common ancestor', 'tree']"
8013,801300,Superknight,0,[]
8014,801400,Island,0,[]
8015,801500,Castle,0,[]
8016,801600,Insulator,6,"['greedy', 'implementation', 'mathematics', 'sorting']"
8017,801700,Parcel,15,"['data structures', 'disjoint set', 'sorting']"
8018,801800,Counting-Out Rhyme,0,[]
8019,801900,Resort,0,[]
8020,802000,Protocols,14,"['arbitrary precision / big integers', 'dynamic programming']"
8021,802100,Minuses,0,[]
8022,802200,Skiers,0,[]
8023,802300,Balance,0,[]
8024,802400,B-Smooth Numbers,0,[]
8025,802500,Brackets,0,[]
8026,802600,Pionek,0,[]
8027,802700,Antiprime Numbers,13,"['mathematics', 'number theory', 'precomputation']"
8028,802800,Green Game,0,[]
8029,802900,Density Map,6,[]
8030,803000,Intervals,10,[]
8031,803100,Weaker Goldbach,15,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
8032,803200,Peaceful Comission,0,[]
8033,803300,Island,0,[]
8034,803400,Ants and the Ladybug,0,[]
8035,803500,Travel Plan (Small),0,[]
8036,803600,Wandering Flea Trainers,0,[]
8037,803700,Necklaces,0,[]
8038,803800,City Tour,0,[]
8039,803900,Bank,0,[]
8040,804000,Goldmine,18,"['data structures', 'segment tree', 'sweeping']"
8041,804100,Chain,0,[]
8042,804200,Where to Build a Brewery?,14,"['bruteforcing', 'implementation']"
8043,804300,Stripes,0,[]
8044,804400,Viruses,0,[]
8045,804500,Signatures,0,[]
8046,804600,Automorphisms,0,[]
8047,804700,Triple-Arm Crane,0,[]
8048,804800,Code,15,"['combinatorics', 'dynamic programming', 'mathematics', 'tree']"
8049,804900,The Labyrinth of Wells,0,[]
8050,805000,Lollobrigida,10,['greedy']
8051,805100,P-Broken-Line,0,[]
8052,805200,Agents,0,[]
8053,805300,Repetitions,17,"['binary search', 'knuth–morris–pratt', 'string']"
8054,805400,Promotion,0,[]
8055,805500,Polygons,0,[]
8056,805600,Musketeers,0,[]
8057,805700,Empty Cuboids,0,[]
8058,805800,Rockets,0,[]
8059,805900,Speleology,0,[]
8060,806000,Sleepwalker,0,[]
8061,806100,Bitmap,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
8062,806200,Ice rink,0,[]
8063,806300,Three-Coloring of Binary Trees,0,[]
8064,806400,Store-Keeper,21,[]
8065,806500,Map,0,[]
8066,806600,Altars,0,[]
8067,806700,Primitivus,0,[]
8068,806800,Water,16,"['breadth-first search', 'data structures', ""dijkstra's"", 'graph theory', 'graph traversal', 'priority queue']"
8069,806900,AB-words,0,[]
8070,807000,Painter's Studio,0,[]
8071,807100,One-sequence,11,"['ad-hoc', 'constructive', 'mathematics']"
8072,807200,Polygon,0,[]
8073,807300,Road Net,7,"['bruteforcing', 'graph theory']"
8074,807400,How to Pack Containers?,0,[]
8075,807500,Word Equations,15,"['arbitrary precision / big integers', 'breadth-first search', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'precomputation', 'string']"
8076,807600,Window,20,[]
8077,807700,Frogman,12,['dynamic programming']
8078,807800,Assembler Circuits,0,[]
8079,807900,ATMs,0,[]
8080,808000,Chase,0,[]
8081,808100,The Lightest Language,24,[]
8082,808200,Flat Broken Lines,0,[]
8083,808300,Rectangles,20,[]
8084,808400,The Number of Symmetrical Choices,20,"['data structures', 'dynamic programming', 'graph theory', 'meet in the middle', 'string', 'tree', 'trie']"
8085,808500,Jumps,12,[]
8086,808600,Cheap Travels,0,[]
8087,808700,XOR Gates,12,['dynamic programming']
8088,808800,Airports,14,"['constructive', 'data structures', 'graph theory', 'greedy', 'priority queue']"
8089,808900,Addon,0,[]
8090,809000,Genotypes,0,[]
8091,809100,Petrol,0,[]
8092,809200,Recursive Ant,0,[]
8093,809300,Credibility of Witnesses,0,[]
8094,809400,Canoes,9,['greedy']
8095,809500,The Number of N-k-special Sets,12,"['arbitrary precision / big integers', 'dynamic programming']"
8096,809600,Monochromatic Triangles,17,"['combinatorics', 'mathematics']"
8097,809700,Ali Baba,0,[]
8098,809800,Lecture Halls Reservation,11,"['dynamic programming', 'sorting']"
8099,809900,Messengers,0,[]
8100,810000,Containers,0,[]
8101,810100,Rods,14,"['binary search', 'mathematics']"
8102,810200,Castle,0,[]
8103,810300,Rooks,18,"['data structures', 'greedy', 'priority queue']"
8104,810400,Fibonacci Words,0,[]
8105,810500,Gambling,0,[]
8106,810600,Agents,0,[]
8107,810700,Boxes,0,[]
8108,810800,Knights,0,[]
8109,810900,Word Equalizing,19,"['0-1 bfs', 'data structures', ""dijkstra's"", 'graph theory', 'hashing', 'tree', 'trie']"
8110,811000,Trees,10,['implementation']
8111,811100,0과 1,16,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics']"
8112,811200,0과 1 - 2,17,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics']"
8113,811300,Disk Optimization,0,[]
8114,811400,Palindromes,14,"['dynamic programming', 'implementation']"
8115,811500,The Right-Turn Drivers' Club,14,"[""dijkstra's"", 'graph theory']"
8116,811600,Mudstock Bis,0,[]
8117,811700,Triangles,6,"['bruteforcing', 'geometry', 'greedy', 'sorting']"
8118,811800,Board Covering,17,"['bipartite matching', 'maximum flow']"
8119,811900,Polygon,0,[]
8120,812000,Coding of Permutations,15,"['binary search', 'data structures', 'segment tree']"
8121,812100,Step Traversing a Tree,17,"['constructive', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
8122,812200,Chute,0,[]
8123,812300,The Concatenation of Words,0,[]
8124,812400,Job Scheduling,17,['sorting']
8125,812500,Professor Szu,21,"['graph theory', 'strongly connected component', 'topological sorting']"
8126,812600,Warehouse,19,['greedy']
8127,812700,Schools,18,"['maximum flow', 'minimum cost maximum flow']"
8128,812800,Subway,23,[]
8129,812900,The Invasion,17,"['dynamic programming', 'geometry', 'sweeping', 'two-pointer']"
8130,813000,The Postman,20,"['eulerian path / circuit', 'graph theory']"
8131,813100,Ploughing,23,"['dynamic programming', 'greedy', 'two-pointer']"
8132,813200,Dancing in Circles,0,[]
8133,813300,Aesthetic Text,21,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
8134,813400,Crystals,23,"['combinatorics', 'dynamic programming', 'linear algebra', 'mathematics']"
8135,813500,Teddies,0,[]
8136,813600,Palindromes,20,"['knuth–morris–pratt', 'string']"
8137,813700,Sophie,18,"['bruteforcing', 'graph theory']"
8138,813800,Tourist Attractions,20,"['bitmask', ""dijkstra's"", 'graph theory', 'travelling salesman problem']"
8140,814000,Trees,26,[]
8141,814100,Axes of Symmetry,22,"['geometry', 'knuth–morris–pratt', ""manacher's"", 'string']"
8142,814200,Ridges and Valleys,13,"['depth-first search', 'graph theory', 'graph traversal']"
8143,814300,The Flood,19,"['data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'sweeping']"
8144,814400,Rock Garden,22,['mathematics']
8145,814500,Megalopolis,19,"['data structures', 'heavy-light decomposition', 'segment tree', 'tree']"
8146,814600,Tetris Attack,22,"['data structures', 'greedy', 'stack']"
8147,814700,Railway,0,[]
8148,814800,Gas Pipelines,0,[]
8149,814900,Weights,19,"['binary search', 'greedy', 'parametric search']"
8150,815000,Driving Exam,20,"['data structures', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'segment tree', 'two-pointer']"
8151,815100,Building Blocks,0,[]
8152,815200,Quaternary Balance,0,[]
8153,815300,Toll,0,[]
8154,815400,Building blocks,0,[]
8155,815500,Postering,16,"['data structures', 'divide and conquer', 'segment tree', 'stack']"
8156,815600,Robinson,0,[]
8157,815700,Mirror trap,0,[]
8158,815800,Blockade,21,"['articulation points and bridges', 'graph theory']"
8159,815900,BBB,19,"['data structures', 'greedy', 'segment tree', 'sparse table']"
8160,816000,Trains,19,['hashing']
8161,816100,Mafia,20,"['breadth-first search', 'graph theory', 'graph traversal']"
8162,816200,The Great Escape,0,[]
8163,816300,Lights,0,[]
8164,816400,Plot purchase,0,[]
8165,816500,Subdivision of Kingdom,0,[]
8166,816600,Triangles,18,"['geometry', 'linear algebra', 'mathematics', 'prefix sum', 'sorting']"
8167,816700,Permutation,0,[]
8168,816800,Station,0,[]
8169,816900,소화기 설치,24,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'tree']"
8170,817000,Pebbles,21,[]
8171,817100,Algorithm Speedup,25,[]
8172,817200,Elephants,20,"['greedy', 'permutation cycle decomposition']"
8173,817300,Fire Brigade,24,"['case work', 'data structures', 'segment tree', 'sweeping']"
8174,817400,Isles in a Triangular Grid,0,[]
8175,817500,The Walk of Bytie-boy,20,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
8176,817600,Ticket Inspector,18,['dynamic programming']
8177,817700,Ice Skates,22,"['data structures', ""hall's theorem"", 'segment tree']"
8178,817800,Hexer,19,[]
8179,817900,Words 2,0,[]
8180,818000,Words,0,[]
8181,818100,Arrays,15,[]
8182,818200,Island,24,"['convex hull', 'geometry', 'greedy']"
8183,818300,The Code,0,[]
8184,818400,Guilds,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
8185,818500,Railway,23,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'segment tree']"
8186,818600,Beads,19,"['hashing', 'rabin–karp', 'string']"
8187,818700,Divine Divisor,0,[]
8188,818800,Intelligence Test,15,['binary search']
8189,818900,Antisymmetry,18,"[""manacher's"", 'string']"
8190,819000,Hamsters,21,"['dynamic programming', 'exponentiation by squaring', 'graph theory', 'knuth–morris–pratt', 'mathematics', 'string', 'suffix array and lcp array']"
8191,819100,Blocks,22,['two-pointer']
8192,819200,Sheep,20,"['dynamic programming', 'geometry']"
8193,819300,킹세종,19,"['ad-hoc', 'graph theory', 'graph traversal', 'greedy']"
8194,819400,Monotonicity,19,[]
8195,819500,Monotonicity 2,21,"['data structures', 'dynamic programming', 'segment tree']"
8196,819600,The Minima Game,16,"['dynamic programming', 'game theory', 'greedy']"
8197,819700,Lamp,26,"['data structures', 'segment tree']"
8198,819800,Frog,17,"['data structures', 'sparse table', 'two-pointer']"
8199,819900,Ones,0,[]
8200,820000,Bridges,21,"['binary search', 'eulerian path / circuit', 'maximum flow', 'graph theory', 'parametric search']"
8201,820100,Pilots,17,"['data structures', 'deque']"
8202,820200,Conspiracy,22,"['graph theory', 'mathematics']"
8203,820300,Lollipop,19,"['ad-hoc', 'mathematics']"
8204,820400,Lightning Conductor,20,"['binary search', 'divide and conquer']"
8205,820500,Shift,20,"['ad-hoc', 'constructive', 'mathematics']"
8206,820600,Plot,24,"['binary search', 'geometry', 'randomization']"
8207,820700,Strongbox,0,[]
8208,820800,Difference,18,"['dynamic programming', 'greedy']"
8209,820900,Garbage,18,"['eulerian path / circuit', 'graph theory']"
8210,821000,Tree Rotations 2,22,"['data structures', 'segment tree', 'smaller to larger technique']"
8211,821100,Tree Rotations,21,"['data structures', 'segment tree', 'smaller to larger technique', 'tree']"
8212,821200,Temperature,20,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
8213,821300,Dynamite,22,"['binary search', 'dynamic programming', 'dynamic programming on trees', 'tree']"
8214,821400,Party,19,"['constructive', 'graph theory']"
8215,821500,Inspection,0,[]
8216,821600,Periodicity,23,"['greedy', 'knuth–morris–pratt', 'string']"
8217,821700,유성,22,"['binary search', 'data structures', 'parallel binary search', 'segment tree']"
8218,821800,Sticks,18,"['ad-hoc', 'data structures', 'sorting', 'set / map by trees']"
8219,821900,Programming Contest,19,['maximum flow']
8220,822000,Festival,22,"['floyd–warshall', 'graph theory', 'strongly connected component']"
8221,822100,Letters,16,"['data structures', 'greedy', 'segment tree']"
8222,822200,Distance,21,"['mathematics', 'number theory']"
8223,822300,Rendezvous,20,"['lowest common ancestor', 'tree']"
8224,822400,Well,20,"['binary search', 'dynamic programming', 'parametric search', 'slope trick']"
8225,822500,Tour de Byteotia,18,"['constructive', 'data structures', 'disjoint set', 'graph theory']"
8226,822600,Vouchers,17,['mathematics']
8227,822700,Cloakroom,22,"['dynamic programming', 'knapsack', 'offline queries']"
8228,822800,A Horrible Poem,21,"['string', 'suffix array and lcp array']"
8229,822900,Fibonacci Representation,17,"['greedy', 'mathematics']"
8230,823000,Squarks,17,"['bruteforcing', 'data structures', 'mathematics', 'sorting', 'set / map by trees']"
8231,823100,Salaries,21,"['greedy', 'tree']"
8232,823200,Leveling Ground,24,"['mathematics', 'number theory']"
8233,823300,Minimalist Security,20,"['depth-first search', 'graph theory', 'graph traversal']"
8234,823400,Warehouse Store,18,"['data structures', 'greedy', 'segment tree with lazy propagation', 'segment tree', 'set / map by trees']"
8235,823500,Prefixuffix,24,"['hashing', ""manacher's"", 'string']"
8236,823600,Price List,25,"[""dijkstra's"", 'graph theory']"
8237,823700,Tapestries,27,['geometry']
8238,823800,Multidrink,23,"['dynamic programming', 'dynamic programming on trees', 'tree']"
8239,823900,Taxis,19,"['greedy', 'sorting']"
8240,824000,Take-out,18,"['data structures', 'prefix sum', 'stack']"
8241,824100,Walk,21,"['data structures', 'graph theory', 'set / map by hashing']"
8242,824200,Inspector,24,"['binary search', 'greedy', 'implementation', 'simulation']"
8243,824300,Triumphal arch,19,"['binary search', 'dynamic programming', 'dynamic programming on trees', 'tree']"
8244,824400,Tales of seafaring,16,"['breadth-first search', 'graph theory', 'graph traversal', 'offline queries']"
8245,824500,Obraz,5,"['implementation', 'string']"
8246,824600,Stół,4,['mathematics']
8247,824700,Mecze,11,['sorting']
8248,824800,Wojna,15,"['game theory', 'greedy']"
8249,824900,Dookoła świata,20,"[""dijkstra's"", 'graph theory']"
8250,825000,Malowanie,21,"['value / coordinate compression', 'data structures', 'prefix sum', 'segment tree', 'sweeping']"
8251,825100,Bandżo,19,"['value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
8252,825200,Renowacja dróg,22,"['maximum flow', 'hungarian', 'minimum cost maximum flow']"
8253,825300,Nożyczki,25,"['data structures', 'geometry', 'mathematics', 'sweeping', 'set / map by trees']"
8254,825400,Tanie linie,21,[]
8255,825500,Wypożyczalnia nart,0,[]
8256,825600,Zima,0,[]
8257,825700,Dwójkowy zbijak,0,[]
8258,825800,Fosa,0,[]
8259,825900,Korniki,0,[]
8260,826000,Pająk,0,[]
8261,826100,Niekolejne,6,['mathematics']
8262,826200,Dwa torty,0,[]
8263,826300,Inwazja kosmitów,0,[]
8264,826400,Kręgi w zbożu,22,[]
8265,826500,Plecak,0,[]
8266,826600,Podatek,19,[]
8267,826700,Sad,0,[]
8268,826800,Tasowanie,0,[]
8269,826900,Transformacje,0,[]
8270,827000,Tulips,4,[]
8271,827100,Rooks,6,"['bipartite matching', 'constructive', 'greedy']"
8272,827200,Unlucky,13,['mathematics']
8273,827300,Climbing,10,"['ad-hoc', 'greedy', 'implementation', 'two-pointer']"
8274,827400,Journeys,22,"['data structures', ""dijkstra's"", 'graph theory', 'segment tree']"
8275,827500,Pedestrian Crossing,0,[]
8276,827600,Fuel,0,[]
8277,827700,Plotter,0,[]
8278,827800,Declining Sequences,0,[]
8279,827900,Double Factorial,12,"['arbitrary precision / big integers', 'mathematics', 'number theory']"
8280,828000,Trails,0,[]
8281,828100,Vacation,0,[]
8282,828200,Automorphisms,21,"['tree', 'tree isomorphism']"
8283,828300,Kangaroos,24,"['data structures', ""mo's"", 'offline queries', 'segment tree']"
8284,828400,Laser Pool,0,[]
8285,828500,The Shortest Period,0,[]
8286,828600,Road Network 2,16,"['constructive', 'degree sequence', 'graph theory', 'tree']"
8287,828700,Computational Biology,19,"['graph theory', 'hashing', 'string']"
8288,828800,Byteland Worldbeat Publishers,24,[]
8289,828900,Exam,21,[]
8290,829000,Computational Geometry,12,"['constructive', 'geometry']"
8291,829100,Coprime Numbers,19,"['inclusion and exclusion', 'mathematics', 'number theory']"
8292,829200,Telescope,22,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'greedy']"
8293,829300,Prime prime power,20,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
8294,829400,Hard Choice,20,[]
8295,829500,Rectangles,4,"['arithmetic', 'bruteforcing', 'mathematics']"
8296,829600,Orienteering,8,['implementation']
8297,829700,Mushrooms,8,['greedy']
8298,829800,Coins,14,"['data structures', 'prefix sum', 'set / map by trees']"
8299,829900,Fragments,0,[]
8300,830000,Squared Words,13,"['dynamic programming', 'string']"
8301,830100,Evacuation,0,[]
8302,830200,Map,16,"['dynamic programming', 'sorting']"
8303,830300,The Goat,0,[]
8304,830400,Map 2,17,"['dynamic programming', 'sorting']"
8305,830500,Termites,25,[]
8306,830600,Bytie's Display,0,[]
8307,830700,Byton Tree,0,[]
8308,830800,Firm,19,[]
8309,830900,Planning the Roadworks,0,[]
8310,831000,Riddle,22,"['2-sat', 'graph theory', 'strongly connected component']"
8311,831100,Variable Subsequences,14,['dynamic programming']
8312,831200,Rectangles 2,9,"['combinatorics', 'mathematics']"
8313,831300,Sweets,21,"['data structures', 'meet in the middle', 'segment tree', 'set / map by trees']"
8314,831400,Acyclic Decomposition,16,"['ad-hoc', 'graph theory', 'graph traversal', 'topological sorting']"
8315,831500,Divisors,0,[]
8316,831600,Byteball Match,19,[]
8317,831700,Army Training,23,[]
8318,831800,Blindfold Nim,0,[]
8319,831900,Termites 2,22,[]
8320,832000,직사각형을 만드는 방법,4,"['implementation', 'mathematics']"
8321,832100,Tables,5,"['greedy', 'sorting']"
8322,832200,"(K,N)-나이트",16,"['case work', 'implementation', 'mathematics', 'number theory']"
8323,832300,Dice,15,"['dynamic programming', 'mathematics']"
8324,832400,Pawn,0,[]
8325,832500,Drilling,0,[]
8326,832600,The Way to Bytemountain,0,[]
8327,832700,Stamps,0,[]
8328,832800,Byteantean Towns,0,[]
8329,832900,Circular Game,0,[]
8330,833000,순열,18,"['data structures', 'greedy', 'segment tree with lazy propagation', 'segment tree']"
8331,833100,Quasi-template,0,[]
8332,833200,Cakes,0,[]
8333,833300,Diamond,0,[]
8334,833400,Cards,0,[]
8335,833500,Fishes,0,[]
8336,833600,Chess,15,[]
8337,833700,Rectangles 2,13,['mathematics']
8338,833800,Type Two de Bruijn Sequences,0,[]
8339,833900,Fibonacci Machine,20,"['data structures', 'segment tree with lazy propagation', 'linear algebra', 'mathematics', 'segment tree']"
8340,834000,Colouring,8,[]
8341,834100,Programming Contest,20,"['bitmask', 'bruteforcing', 'dynamic programming', 'dynamic programming using bitfield', 'greedy', 'square root decomposition']"
8342,834200,Permutations,13,"['ad-hoc', 'case work', 'mathematics']"
8343,834300,Watchmen,0,[]
8344,834400,Tram,0,[]
8345,834500,A Cat on a Keyboard,5,"['implementation', 'string']"
8346,834600,Logarithmic Paprika,9,['mathematics']
8347,834700,Bug,12,"[""dijkstra's"", 'graph theory']"
8348,834800,Paper Clips,0,[]
8349,834900,Diagonals,0,[]
8350,835000,Studies,0,[]
8351,835100,Mosaicism,7,"['bitmask', 'mathematics']"
8352,835200,Turns,18,"['string', 'suffix array and lcp array']"
8353,835300,Cliquers,23,['mathematics']
8354,835400,Journey,0,[]
8355,835500,Questions,0,[]
8356,835600,Chessboard,0,[]
8357,835700,Cliquers Strike Back,0,[]
8358,835800,Safe,0,[]
8359,835900,Dragon Milkdrinker,0,[]
8360,836000,Potato,0,[]
8361,836100,Near 2,0,[]
8362,836200,Near,7,['sorting']
8363,836300,Balloons,19,['mathematics']
8364,836400,Idempotent Functions,16,"['combinatorics', 'mathematics']"
8365,836500,Reconstruction of Byteland,0,[]
8366,836600,Return of the Cliquers,0,[]
8367,836700,Electricity,0,[]
8368,836800,Computation of a Road Network Plan,0,[]
8369,836900,Enumeration of Road Network Plans,0,[]
8370,837000,Plane,1,"['arithmetic', 'mathematics']"
8371,837100,Dyslexia,3,"['implementation', 'string']"
8372,837200,Conference - Rectification,0,[]
8373,837300,Conference,0,[]
8374,837400,Encyclopedia,10,['greedy']
8375,837500,Sheets,0,[]
8376,837600,Improvisation,0,[]
8377,837700,Sport Clubs,0,[]
8378,837800,Buses,0,[]
8379,837900,Clouds,0,[]
8380,838000,Video-Poker,0,[]
8381,838100,Brackets,17,['dynamic programming']
8382,838200,Subsets,23,"['fast fourier transform', 'mathematics']"
8383,838300,Almost Conjugates,0,[]
8384,838400,Cubes,0,[]
8385,838500,ROT13,9,"['binary search', 'value / coordinate compression', 'data structures', 'set / map by hashing', 'sorting', 'string']"
8386,838600,Barricades,19,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
8387,838700,Dyslexia,3,"['implementation', 'string']"
8388,838800,Inversions,16,['dynamic programming']
8389,838900,Speed Limits,0,[]
8390,839000,Straight Lines 2,0,[]
8391,839100,Microchips,0,[]
8392,839200,Sunsets,0,[]
8393,839300,합,1,"['implementation', 'mathematics']"
8394,839400,악수,8,"['dynamic programming', 'mathematics']"
8395,839500,Segments,0,[]
8396,839600,Sawmills,0,[]
8397,839700,Byteland Lottery,13,"['combinatorics', 'mathematics', 'number theory']"
8398,839800,Worms,0,[]
8399,839900,Farmer's Field,0,[]
8400,840000,Crayfish,0,[]
8401,840100,Words,0,[]
8402,840200,Travel Agency,20,"['maximum flow', 'max-flow min-cut theorem']"
8403,840300,Ant,0,[]
8404,840400,Straight Lines,0,[]
8405,840500,The Temple,0,[]
8406,840600,피보나치 단어,26,"['case work', 'mathematics']"
8407,840700,Professor Laugh's Numbers,15,"['mathematics', 'number theory']"
8408,840800,Polygons,20,"['geometry', 'sorting']"
8409,840900,Strong-box,0,[]
8410,841000,Meeting,14,"['dynamic programming', 'mathematics']"
8411,841100,Motorways,17,[]
8412,841200,The Game,0,[]
8413,841300,Contour Lines,0,[]
8414,841400,Tetris,0,[]
8415,841500,Rooks,20,"['gaussian elimination', 'graph theory', 'linear algebra', 'mathematics']"
8416,841600,Czy umiesz potęgować?,5,"['mathematics', 'number theory']"
8417,841700,Jasio,5,"['implementation', 'string']"
8418,841800,Biblioteka,0,[]
8419,841900,Wielomian,7,['mathematics']
8420,842000,Linie autobusowe,0,[]
8421,842100,Suma,12,"['mathematics', 'number theory']"
8422,842200,Autostrady,0,[]
8423,842300,Liczby cykliczne,15,"['mathematics', 'number theory']"
8424,842400,Formuły,0,[]
8425,842500,Jan,0,[]
8426,842600,Kosmiczna budowa,0,[]
8427,842700,Pudełka,0,[]
8428,842800,Dziurawa szachownica,0,[]
8429,842900,Drogi,0,[]
8430,843000,Superkomputer,0,[]
8431,843100,Bilard,0,[]
8432,843200,Dźwigi,0,[]
8433,843300,Usługi kurierskie,0,[]
8434,843400,Wielomian,0,[]
8435,843500,Wygaszacz ekranu,0,[]
8436,843600,Kamil,4,"['arithmetic', 'combinatorics', 'implementation', 'mathematics', 'string']"
8437,843700,Julka,1,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
8438,843800,Dyzio,9,['recursion']
8439,843900,Jasiek,14,"['ad-hoc', 'geometry', 'area of a polygon']"
8440,844000,Bajtocka Agencja Informacyjna,0,[]
8441,844100,Nawiasy,17,"['data structures', 'segment tree']"
8442,844200,Zbrodnia na Piccadilly Circus,9,"['bruteforcing', 'implementation', 'prefix sum', 'sorting']"
8443,844300,Superliczby w permutacji,0,[]
8444,844400,Tomki,0,[]
8445,844500,Tańce gordyjskie Krzyśków,0,[]
8446,844600,Rączy jelonek,14,"['arbitrary precision / big integers', 'breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'precomputation']"
8447,844700,Kostka,0,[]
8448,844800,Wczasy,14,"['geometry', 'geometry; 3d', 'implementation', 'mathematics']"
8449,844900,Czekolada,0,[]
8450,845000,Ninja,0,[]
8451,845100,Wieczór kawalerski,0,[]
8452,845200,그래프와 쿼리,20,"['breadth-first search', 'graph theory', 'graph traversal', 'offline queries']"
8453,845300,Plan budowy autostrad,21,[]
8454,845400,Rysunek,0,[]
8455,845500,Wychowanie fizyczne,0,[]
8456,845600,Obława,0,[]
8457,845700,Prefikso-sufiksy,19,"['data structures', 'segment tree', 'string', 'suffix array and lcp array']"
8458,845800,Roboty binarne,21,[]
8459,845900,Gruntowny przekręt,19,[]
8460,846000,Tramwaje,21,"['dynamic programming', 'greedy']"
8461,846100,Gra w dzielniki,20,"['dynamic programming', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
8462,846200,배열의 힘,19,"[""mo's"", 'offline queries']"
8463,846300,Zagadka,0,[]
8464,846400,Non-Squarefree Numbers,21,"['binary search', 'inclusion and exclusion', 'mathematics', 'number theory']"
8465,846500,Peaks,22,"['data structures', 'offline queries', 'persistent segment tree', 'segment tree', 'smaller to larger technique', 'set / map by trees']"
8466,846600,Creative Accounting,14,[]
8467,846700,Keyboard,19,[]
8468,846800,Garden,21,"['data structures', 'set / map by hashing', 'square root decomposition']"
8469,846900,Matchings,20,[]
8470,847000,Life of the Party,22,[]
8471,847100,Party,24,[]
8472,847200,Vacation,23,"['maximum flow', 'minimum cost maximum flow']"
8473,847300,Monopoly,21,[]
8474,847400,Brackets,15,"['parsing', 'string']"
8475,847500,Tower,21,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
8476,847600,Highways,20,[]
8477,847700,Palindromic Equivalence,23,"['bit set', ""manacher's"", 'string']"
8478,847800,Chessboard,14,[]
8479,847900,Godzilla,16,"['graph theory', 'greedy', 'sorting']"
8480,848000,Excursion,21,"['convex hull trick', 'dynamic programming']"
8481,848100,Generator,23,"['ad-hoc', 'arbitrary precision / big integers', 'bitmask', 'case work', 'combinatorics', 'constructive', 'divide and conquer', 'dynamic programming', 'exponentiation by squaring', 'graph theory', 'graph traversal', 'implementation', 'mathematics', 'number theory', 'parsing', 'precomputation', 'primality test', 'sieve of eratosthenes', 'string']"
8482,848200,Express Delivery,0,[]
8483,848300,Earthquake,22,"['extended euclidean algorithm', 'mathematics', 'number theory']"
8484,848400,Trójkąty,14,"['ad-hoc', 'bruteforcing', 'geometry', 'mathematics']"
8485,848500,BARMAN,0,[]
8486,848600,Cykl nieparzysty,0,[]
8487,848700,Satelity,0,[]
8488,848800,Ciąg,0,[]
8489,848900,Listonosze,0,[]
8490,849000,Skoczki,0,[]
8491,849100,Modernizacja autostrady,0,[]
8492,849200,Taniec,0,[]
8493,849300,Bajtori,0,[]
8494,849400,Drzewa,0,[]
8495,849500,Światłowody,0,[]
8496,849600,Godzilla,27,"['binary search', 'data structures', 'disjoint set', 'divide and conquer', 'graph theory', 'offline queries', 'parallel binary search', 'strongly connected component']"
8497,849700,Mapa,0,[]
8499,849900,Mechagodzilla,0,[]
8500,850000,Wesołe miasteczko,0,[]
8501,850100,Zamknąć Godzillę!,22,[]
8502,850200,Genomy,0,[]
8503,850300,Nieokiełzane drzewo,0,[]
8504,850400,Przedziały,0,[]
8505,850500,Komputery trzybitowe,0,[]
8506,850600,Leonardo's Numbers,21,"['berlekamp–massey', 'exponentiation by squaring', 'mathematics']"
8507,850700,Pejntbrasz,0,[]
8508,850800,Komputery Trzybitowe kontratakują,0,[]
8509,850900,Proste,0,[]
8510,851000,Żaglówka,0,[]
8511,851100,Wędrówki górskie,0,[]
8512,851200,Mapa,0,[]
8513,851300,Wirusy,0,[]
8514,851400,Biuro,0,[]
8515,851500,Klocki,0,[]
8516,851600,Klocki powracają,0,[]
8517,851700,Zbiory,0,[]
8518,851800,Klocki reaktywacja,0,[]
8519,851900,Walkie-talkie,0,[]
8520,852000,Approximation,0,[]
8521,852100,General Bytor,0,[]
8522,852200,Hyperclock,0,[]
8523,852300,Dice,12,"['combinatorics', 'mathematics']"
8524,852400,Mapy,0,[]
8525,852500,Cylinders,0,[]
8526,852600,Races,0,[]
8527,852700,Divers,0,[]
8528,852800,Plan zajęć,0,[]
8529,852900,NumberEater,7,"['data structures', 'set / map by hashing', 'sorting', 'set / map by trees']"
8530,853000,Ritual,0,[]
8531,853100,The Lost Fraction,14,[]
8532,853200,Excursion,0,[]
8533,853300,Zachody Słońca 2,0,[]
8534,853400,Żarłacz bitowy,0,[]
8535,853500,Guessing Game,16,"['binary search', 'bipartite graph', 'value / coordinate compression', 'data structures', 'disjoint set', 'graph theory', 'graph traversal']"
8536,853600,땅콩의 개수,0,[]
8537,853700,Imiona mrówek,4,['string']
8538,853800,Bałagan i Stonki,5,"['data structures', 'set / map by hashing', 'string']"
8539,853900,LinkNet,10,"['sorting', 'sweeping']"
8540,854000,Wrocławskie ZOO,0,[]
8541,854100,Trikontenerowiec,13,"['data structures', 'greedy', 'priority queue']"
8542,854200,Żuki,0,[]
8543,854300,Superszybkie wyścigi w kółko,0,[]
8544,854400,Megawirus,7,"['arithmetic', 'bitmask', 'mathematics']"
8545,854500,Zadanie próbne,1,"['implementation', 'string']"
8546,854600,Szyfr,5,"['arithmetic', 'mathematics']"
8547,854700,Patyki,11,"['data structures', 'greedy', 'priority queue', 'set / map by trees']"
8548,854800,Tarasy,12,"['prefix sum', 'two-pointer']"
8549,854900,Autostrady,12,"['graph theory', 'minimum spanning tree']"
8550,855000,Turniej,14,"['data structures', 'graph theory', 'priority queue', 'topological sorting']"
8551,855100,Blokada,19,"['maximum flow', 'max-flow min-cut theorem']"
8552,855200,Gra Fibonacziego,0,[]
8553,855300,Korekcja błędów,13,['dynamic programming']
8554,855400,Widoczność,0,[]
8555,855500,Logo,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'implementation']"
8556,855600,Pająki,0,[]
8557,855700,Sojusz,18,['bipartite matching']
8558,855800,Silnia,2,"['arithmetic', 'mathematics']"
8559,855900,Potęga,4,"['mathematics', 'string']"
8560,856000,Waga binarna,6,"['mathematics', 'sorting']"
8561,856100,Restauracje,13,"[""dijkstra's"", 'graph theory']"
8562,856200,Rozkłady dwójkowe,14,"['arbitrary precision / big integers', 'mathematics', 'recursion']"
8563,856300,Dwubarwne wieże Hanoi,10,"['arbitrary precision / big integers', 'mathematics']"
8564,856400,Inwestycja,12,"['combinatorics', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'mathematics', 'tree']"
8565,856500,Ustawiony turniej,0,[]
8566,856600,Wycieczka,0,[]
8567,856700,Wiejski listonosz,0,[]
8568,856800,Skoczki,0,[]
8570,857000,Nawiasy,11,"['data structures', 'stack']"
8571,857100,Apteka,19,[]
8572,857200,Dwa słowa,0,[]
8573,857300,Podróżnik,0,[]
8574,857400,Ratownik,3,"['geometry', 'mathematics', 'pythagoras theorem']"
8575,857500,Śpiew,7,"['greedy', 'mathematics']"
8576,857600,Przyciski,10,"['data structures', 'set / map by hashing']"
8577,857700,Skrzaty,0,[]
8578,857800,Wiersz,0,[]
8579,857900,Gumka do mazania,0,[]
8580,858000,Lampy,0,[]
8581,858100,Pieczątki,0,[]
8582,858200,Park,6,"['dynamic programming', 'implementation']"
8583,858300,Skracalne liczby pierwsze,13,"['backtracking', 'mathematics', 'number theory', 'primality test']"
8584,858400,Urzędnicy,13,"['ad-hoc', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal', 'greedy', 'tree']"
8585,858500,Wyścig,0,[]
8586,858600,Zapałki,8,"['bruteforcing', 'dynamic programming', 'prefix sum']"
8587,858700,Monety,9,"['combinatorics', 'mathematics', 'sorting']"
8588,858800,Obwarzanki,0,[]
8589,858900,Tort,15,"['binary search', 'parametric search', 'sorting', 'two-pointer']"
8590,859000,Bracia,0,[]
8591,859100,Tamy,0,[]
8592,859200,Tygrysy,0,[]
8593,859300,Porachunki,0,[]
8594,859400,Program,8,"['data structures', 'stack']"
8595,859500,히든 넘버,5,"['parsing', 'string']"
8596,859600,Wąż,12,"['breadth-first search', 'graph theory', 'graph traversal']"
8597,859700,Wieżyczki,14,['prefix sum']
8598,859800,Zając,10,"['breadth-first search', 'graph theory', 'graph traversal']"
8599,859900,Kupiec,14,['prefix sum']
8600,860000,Pociąg,0,[]
8601,860100,Warsztaty,0,[]
8602,860200,Chochlik,13,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
8603,860300,Kosmiczny pościg,0,[]
8604,860400,Kwadrat magiczny,0,[]
8605,860500,Waga,0,[]
8606,860600,Klasy,0,[]
8607,860700,Naszyjniki,0,[]
8608,860800,Run Bajtocja,7,"['arbitrary precision / big integers', 'euclidean algorithm', 'mathematics', 'number theory']"
8609,860900,Statystyki,0,[]
8610,861000,Szyfr,4,"['implementation', 'string']"
8611,861100,팰린드롬 숫자,6,"['implementation', 'mathematics']"
8612,861200,Domek z kart,0,[]
8613,861300,Kalendarze,10,"['binary search', 'prefix sum']"
8614,861400,Pocztówka,8,"['combinatorics', 'mathematics']"
8615,861500,Mur,0,[]
8616,861600,Aquapark,0,[]
8617,861700,Klocki,12,"['dynamic programming', 'knapsack']"
8618,861800,Taśma,8,"['ad-hoc', 'bruteforcing', 'data structures', 'set / map by hashing']"
8619,861900,Autobus,0,[]
8620,862000,Hurtownia,5,"['data structures', 'set / map by hashing', 'implementation']"
8621,862100,Magazyny,0,[]
8622,862200,Reakcje chemiczne,0,[]
8623,862300,Zdjęcia,0,[]
8624,862400,Lista,4,['mathematics']
8625,862500,Minimalna liczba,6,"['mathematics', 'pigeonhole principle']"
8626,862600,Statki kosmiczne,11,"['binary search', 'two-pointer']"
8627,862700,Żabka Bajtozja,9,"['breadth-first search', 'depth-first search', 'geometry', 'graph theory', 'graph traversal']"
8628,862800,Ostatnie cyfry,11,"['mathematics', 'number theory', 'precomputation']"
8629,862900,Centrala telefoniczna,0,[]
8630,863000,Ciąg,14,"['dynamic programming', 'mathematics']"
8631,863100,Żołnierze,10,"['combinatorics', 'data structures', 'set / map by hashing', 'mathematics', 'sorting']"
8632,863200,Byteland,17,"['data structures', 'disjoint set', 'graph theory', 'lowest common ancestor', 'minimum spanning tree', 'tree']"
8633,863300,Sortowanie biżuterii,6,"['sorting', 'string']"
8634,863400,Sumujący Jaś,7,"['arbitrary precision / big integers', 'implementation']"
8635,863500,Zliczacz liter,4,"['implementation', 'string']"
8636,863600,Bankiet,9,['permutation cycle decomposition']
8637,863700,Bierki,8,['binary search']
8638,863800,Zwycięzcy,4,['implementation']
8639,863900,Bitocja,13,"['floyd–warshall', 'graph theory']"
8640,864000,Diamentowy szyfr,13,"['arbitrary precision / big integers', 'constructive', 'mathematics']"
8641,864100,Sklep,8,"['value / coordinate compression', 'data structures', 'set / map by hashing']"
8642,864200,Kwadrat,9,"['mathematics', 'number theory']"
8643,864300,Loteria,10,['dynamic programming']
8644,864400,Jednoręki bandyta,0,[]
8645,864500,Strajk,0,[]
8646,864600,Karty,26,"['ad-hoc', 'data structures', 'stack']"
8647,864700,Panorama Bajhattanu,0,[]
8648,864800,Genom,0,[]
8649,864900,Iloczyn,0,[]
8650,865000,Konduktorzy,0,[]
8651,865100,Mutacje,0,[]
8652,865200,Podatki,0,[]
8653,865300,Raper,24,[]
8654,865400,Działka,0,[]
8655,865500,Filary,0,[]
8656,865600,Kryształ,0,[]
8657,865700,Mrówki,0,[]
8658,865800,Liczba,3,"['bruteforcing', 'mathematics', 'number theory']"
8659,865900,Samochody,5,"['implementation', 'prefix sum']"
8660,866000,Sumy i różnice,4,['mathematics']
8661,866100,Stopki,3,"['arithmetic', 'mathematics']"
8662,866200,Szuflady,6,['greedy']
8663,866300,Konik polny,4,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
8664,866400,Kwadrat,6,"['case work', 'geometry']"
8665,866500,Odległość,10,['prefix sum']
8666,866600,Zakład,6,"['greedy', 'sorting']"
8667,866700,Gwoździe,7,"['data structures', 'sorting', 'set / map by trees', 'two-pointer']"
8668,866800,Konik polny 2,4,['mathematics']
8669,866900,Las,4,"['data structures', 'set / map by hashing', 'implementation']"
8670,867000,Przegrody,5,"['ad-hoc', 'implementation']"
8671,867100,Długa taśma,4,"['ad-hoc', 'implementation', 'mathematics']"
8672,867200,Drabina,8,['dynamic programming']
8673,867300,Krany,7,"['prefix sum', 'sorting']"
8674,867400,Tabliczka,2,['mathematics']
8675,867500,Dwie wieże,7,['prefix sum']
8676,867600,Figury,4,['bruteforcing']
8677,867700,Miasta,8,['dynamic programming']
8678,867800,Zbiór,3,"['arithmetic', 'mathematics', 'number theory']"
8679,867900,Odważniki,11,"['binary search', 'prefix sum', 'sorting']"
8680,868000,Drzewko,7,"['bitmask', 'mathematics', 'tree']"
8681,868100,Dzieci,10,"['depth-first search', 'graph theory', 'graph traversal', 'permutation cycle decomposition']"
8682,868200,Wesoła małpka,7,"['euclidean algorithm', 'mathematics', 'number theory']"
8683,868300,Budowla,0,[]
8684,868400,Losy,10,['dynamic programming']
8685,868500,Zapałki,10,"['dynamic programming', 'sorting']"
8686,868600,Banki,12,"['mathematics', 'number theory']"
8687,868700,Pasy Ruchu,9,"['0-1 bfs', 'breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
8688,868800,Wycinek,0,[]
8689,868900,Gra,8,['dynamic programming']
8690,869000,Grzybki,14,"['binary search', 'implementation', 'mathematics', 'prefix sum', 'sorting', 'sweeping']"
8691,869100,Radiotelegraf,0,[]
8692,869200,Sadzenie bulw,8,"['greedy', 'mathematics', 'sorting']"
8693,869300,Hodowla,11,['prefix sum']
8694,869400,Szklanki,0,[]
8695,869500,Pociąg,0,[]
8696,869600,Chińczyk,0,[]
8697,869700,Drzewa,0,[]
8698,869800,Halloween,0,[]
8699,869900,Podciągi arytmetyczne,0,[]
8700,870000,Operacje,0,[]
8701,870100,Robot,0,[]
8702,870200,Drogi ekspresowe,0,[]
8703,870300,Obława,19,"['data structures', 'prefix sum', 'priority queue', 'segment tree']"
8704,870400,Trójmiasto,0,[]
8705,870500,Punkty,0,[]
8706,870600,Wrogie Państwa,0,[]
8707,870700,Dolary i Euro,0,[]
8708,870800,Sprężyny,0,[]
8709,870900,Zmaksymalizowany podzbiór,0,[]
8710,871000,Koszykarz,2,"['arithmetic', 'mathematics']"
8711,871100,Odchudzanie,4,['implementation']
8712,871200,Wężyk,4,['implementation']
8713,871300,Znak działania,4,"['arithmetic', 'case work', 'implementation', 'mathematics']"
8714,871400,Monety,3,['implementation']
8715,871500,Permutacja,4,['implementation']
8716,871600,Pole,4,"['geometry', 'mathematics']"
8717,871700,Taśma,5,"['implementation', 'prefix sum']"
8718,871800,Bałwanek,2,"['implementation', 'mathematics']"
8719,871900,Piłeczka,3,"['implementation', 'mathematics', 'simulation']"
8720,872000,Manipulacja rankingu,4,[]
8721,872100,Wykreślanka,3,['implementation']
8722,872200,Kratki,5,"['arithmetic', 'mathematics']"
8723,872300,Patyki,2,"['arithmetic', 'geometry', 'mathematics', 'pythagoras theorem']"
8724,872400,Pinezki,4,['implementation']
8725,872500,Szachy,3,['implementation']
8726,872600,Dziewczynki,6,['two-pointer']
8727,872700,Farby,4,"['implementation', 'mathematics']"
8728,872800,Grusze i jabłonie,4,[]
8729,872900,Siłownia,10,"['euclidean algorithm', 'mathematics', 'number theory']"
8730,873000,Kostki domina,12,"['ad-hoc', 'constructive', 'data structures', 'eulerian path / circuit', 'graph theory', 'set / map by hashing', 'sorting']"
8731,873100,Sznurki,5,['greedy']
8732,873200,Tablica,11,"['ad-hoc', 'prefix sum']"
8733,873300,Wieża,8,"['binary search', 'offline queries']"
8734,873400,Akwarium,8,"['implementation', 'simulation', 'sorting']"
8735,873500,Obwody,5,"['greedy', 'sorting']"
8736,873600,Wieża 2,9,['binary search']
8737,873700,Karty,7,"['data structures', 'deque', 'linked list']"
8738,873800,Rolki papieru,7,"['mathematics', 'sorting']"
8739,873900,Domino,0,[]
8740,874000,Las,12,"['binary search', 'graph theory', 'graph traversal', 'parametric search']"
8741,874100,이진수 합,4,"['implementation', 'mathematics']"
8742,874200,Przyjęcie,15,['mathematics']
8743,874300,Turniej,4,['mathematics']
8744,874400,Wykres,5,['implementation']
8745,874500,Cykl,0,[]
8746,874600,Śmieszny konkurs informatyczny,0,[]
8747,874700,Zegary,0,[]
8748,874800,ABC,0,[]
8749,874900,Ciężkie klocki,0,[]
8750,875000,Najdłuższe rosnące podciągi,0,[]
8751,875100,Guziki,0,[]
8752,875200,Pokoje,0,[]
8753,875300,Przyjazne punkty,0,[]
8754,875400,Kupiec,0,[]
8755,875500,Materiały Wybuchowe,0,[]
8756,875600,Dziwna planeta,0,[]
8757,875700,Bubu,12,"[""dijkstra's"", 'graph theory']"
8758,875800,Myszka,0,[]
8759,875900,Najdłuższy Wspólny Rosnący,0,[]
8760,876000,Schronisko,2,"['arithmetic', 'mathematics']"
8761,876100,Metro,6,"['greedy', 'implementation']"
8762,876200,Brakujące cyfry,6,"['bruteforcing', 'mathematics', 'string']"
8763,876300,Berek,0,[]
8764,876400,Kontynent,0,[]
8765,876500,Slajdy,0,[]
8766,876600,Przewody,0,[]
8767,876700,Marsz Pierwszości,0,[]
8768,876800,Posłańcy,0,[]
8769,876900,Podsłowa,0,[]
8770,877000,Zaginanie papieru,0,[]
8771,877100,Kieszonkowe,5,"['arithmetic', 'mathematics']"
8772,877200,Szyfr Cezara,4,"['implementation', 'string']"
8773,877300,Szlaczek,7,"['ad-hoc', 'mathematics']"
8774,877400,Kurs,9,"['data structures', 'stack']"
8775,877500,Przeprawa,0,[]
8776,877600,Strażnice,0,[]
8777,877700,Podzielność,0,[]
8778,877800,Zagroda,11,[]
8779,877900,Rywalizacja,0,[]
8780,878000,Sejf,0,[]
8781,878100,Handel,22,"['circulation', 'maximum flow']"
8782,878200,Eurozwrotnica,10,"['data structures', 'greedy', 'implementation', 'queue', 'simulation']"
8783,878300,Architektura niezależna,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
8784,878400,Pamięć doskonała,8,"['arithmetic', 'constructive', 'mathematics']"
8785,878500,Dlaczego oni śpiewają?,16,['geometry']
8786,878600,Dalsze kłopoty z ogrodem,9,['greedy']
8787,878700,Paweł i Gaweł,0,[]
8788,878800,Trasy,0,[]
8789,878900,Poezja z gwiazdką,17,"['binary search', 'data structures', 'sorting', 'string', 'tree', 'trie']"
8790,879000,Paweł i Gaweł 2,0,[]
8791,879100,Bukiety,0,[]
8792,879200,Podgatunki,0,[]
8793,879300,Sylwester,5,"['ad-hoc', 'arithmetic', 'mathematics']"
8794,879400,Poniedziałki,3,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
8795,879500,Karaoke,7,['string']
8796,879600,Indiana Jones wśród zombie,10,"['breadth-first search', 'graph theory', 'graph traversal']"
8797,879700,Konkotenacja,9,"['dynamic programming', 'string']"
8798,879800,Mosty,13,"['graph theory', 'greedy', 'topological sorting']"
8799,879900,Zapytania,0,[]
8800,880000,Indiana Jones wśród zombie 2,0,[]
8801,880100,Domino,0,[]
8802,880200,Pługi,0,[]
8803,880300,Nigdy nie mów nigdy,0,[]
8804,880400,Palindromy,5,"['ad-hoc', 'string']"
8805,880500,Konduktor,5,"['implementation', 'mathematics']"
8806,880600,Papier kamień nożyczki,3,"['arithmetic', 'mathematics']"
8807,880700,Przedziały,9,['sweeping']
8808,880800,Malowane liczby,8,"['mathematics', 'number theory']"
8809,880900,Mistrzostwa,0,[]
8810,881000,Studnia,9,[]
8811,881100,Inwestycje,0,[]
8812,881200,Jaś Robaczek,18,"['data structures', 'lowest common ancestor', 'sparse table', 'tree']"
8813,881300,Proste separujące,0,[]
8814,881400,Słownik,15,"['breadth-first search', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'string', 'set / map by trees']"
8815,881500,Test,3,"['arithmetic', 'mathematics', 'string']"
8816,881600,Klasa,6,"['combinatorics', 'mathematics']"
8817,881700,Rozgrywka,7,"['game theory', 'mathematics']"
8818,881800,Deski,4,['mathematics']
8819,881900,Wlazł kotek na płotek,7,"['bruteforcing', 'euclidean algorithm', 'mathematics', 'number theory']"
8820,882000,Fabryka butów,6,['prefix sum']
8821,882100,Cegły,0,[]
8822,882200,Turniej,13,[]
8823,882300,Ułamki,0,[]
8824,882400,Wycieczka,0,[]
8825,882500,Sieć Wi-Fi,0,[]
8826,882600,Spacer,4,"['implementation', 'simulation']"
8827,882700,Bukmacherzy,5,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
8828,882800,Ciastka,11,"['prefix sum', 'sorting']"
8829,882900,Muzeum,0,[]
8830,883000,Awans,0,[]
8831,883100,Program,0,[]
8832,883200,Reszty,0,[]
8833,883300,Manewry,0,[]
8834,883400,Kolejka,16,"['data structures', 'segment tree']"
8835,883500,Mnożenie,0,[]
8836,883600,Złodziejki,4,"['arithmetic', 'implementation', 'mathematics']"
8837,883700,Sprawdziany,0,[]
8838,883800,Portal Kombat,12,"['data structures', 'greedy', 'priority queue', 'stack']"
8839,883900,Zbyszek,0,[]
8840,884000,Chomik,0,[]
8841,884100,Zgadywanka,6,['mathematics']
8842,884200,Paski,17,"['combinatorics', 'divide and conquer', 'mathematics']"
8843,884300,Dostawa,0,[]
8844,884400,Ilotrzyny,17,"['data structures', 'inclusion and exclusion', 'mathematics', 'segment tree']"
8845,884500,Gra,0,[]
8846,884600,Wymiana żarówki,4,"['mathematics', 'number theory']"
8847,884700,Kłopoty z ogrodem,8,['two-pointer']
8848,884800,Puzzle,10,"['bruteforcing', 'constructive', 'graph theory']"
8849,884900,Eksperyment,14,"['graph theory', 'topological sorting']"
8850,885000,Witraż,13,"['combinatorics', 'data structures', 'euclidean algorithm', 'geometry', 'set / map by hashing', 'mathematics', 'number theory', 'sorting']"
8851,885100,Zalew,14,"['binary search', 'depth-first search', 'graph theory', 'graph traversal']"
8852,885200,Kaktus,0,[]
8853,885300,Magiczny prostokąt,0,[]
8854,885400,Baner,18,"['dynamic programming', 'string']"
8855,885500,Formuła,0,[]
8856,885600,Moda na zwycięstwo,0,[]
8857,885700,Kodowanie,8,['dynamic programming']
8858,885800,Bankier,13,"['data structures', 'priority queue', 'stack']"
8859,885900,Górnicy,14,"['depth-first search', 'graph theory', 'graph traversal', 'two-pointer']"
8860,886000,Hossa,0,[]
8861,886100,ASK,10,"['constructive', 'greedy']"
8862,886200,Wzorzec,0,[]
8863,886300,Jesienna wycieczka,0,[]
8864,886400,Podobne miasta,0,[]
8865,886500,Prawie jak LCS,0,[]
8866,886600,Wizy,0,[]
8867,886700,POlitycy,0,[]
8868,886800,Tekstowe,0,[]
8869,886900,System zapisów,0,[]
8870,887000,Zadanie próbne,9,"['arithmetic', 'mathematics', 'precomputation']"
8871,887100,Zadanie próbne 2,1,"['arithmetic', 'mathematics']"
8872,887200,빌라봉,19,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'greedy', 'tree']"
8873,887300,미술 시간,0,['heuristics']
8874,887400,웜뱃,25,"['data structures', 'dynamic programming', 'knuth optimization', 'segment tree', 'square root decomposition']"
8875,887500,장난감 정리 로봇,20,"['binary search', 'data structures', 'greedy', 'parametric search', 'priority queue']"
8876,887600,바자와 샤자,21,"['data structures', 'multidimensional segment tree', 'segment tree']"
8877,887700,Self-Assembly,18,"['floyd–warshall', 'graph theory']"
8878,887800,"Hey, Better Bettor",26,"['calculus', 'combinatorics', 'mathematics']"
8879,887900,Surely You Congest,20,"[""dijkstra's"", 'maximum flow', 'graph theory']"
8880,888000,인수,19,"['backtracking', 'mathematics', 'number theory']"
8881,888100,Harvard,25,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'implementation', 'parsing', 'string']"
8882,888200,Low Power,17,"['binary search', 'greedy', 'sorting']"
8883,888300,종이 지도,29,"['ad-hoc', 'geometry', 'implementation', 'sorting']"
8884,888400,마트료시카,20,['dynamic programming']
8885,888500,Pirate Chest,23,"['data structures', 'stack']"
8886,888600,오염 해결책,20,['geometry']
8887,888700,Up a Tree,26,['bruteforcing']
8888,888800,Accelerator,0,[]
8889,888900,등고선 지도,19,"['value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
8890,889000,Critical 3-Path,19,['dynamic programming']
8891,889100,점 숫자,7,"['bruteforcing', 'implementation', 'mathematics']"
8892,889200,팰린드롬,6,"['bruteforcing', 'string']"
8893,889300,Pandora,12,"['geometry', 'implementation']"
8894,889400,Pattern Lock,13,['backtracking']
8895,889500,막대 배치,15,"['combinatorics', 'dynamic programming', 'mathematics']"
8896,889600,가위 바위 보,7,"['implementation', 'simulation']"
8897,889700,Slicing Tree,21,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'stack', 'tree']"
8898,889800,스포츠 전문 채널 GSK,23,['bipartite matching']
8899,889900,Square Annulus,20,[]
8900,890000,Block Compaction,15,"['dynamic programming', 'implementation']"
8901,890100,화학 제품,10,['bruteforcing']
8902,890200,색상의 길이,18,['dynamic programming']
8903,890300,장비,17,"['bitmask', 'bruteforcing', 'case work']"
8904,890400,가구 공장,20,['maximum flow']
8905,890500,리트,13,"['backtracking', 'bruteforcing']"
8906,890600,랩탑,0,[]
8907,890700,네온 사인,17,"['combinatorics', 'mathematics']"
8908,890800,Pizza Delivery,20,['dynamic programming']
8909,890900,Soju,17,"['data structures', 'priority queue', 'sorting', 'sweeping']"
8910,891000,Traveling Spiders,0,[]
8911,891100,거북이,8,"['implementation', 'simulation']"
8912,891200,Sales,4,['implementation']
8913,891300,문자열 뽑기,13,"['bruteforcing', 'dynamic programming']"
8914,891400,Password,11,"['implementation', 'string']"
8915,891500,Mines,0,[]
8916,891600,이진 검색 트리,16,"['combinatorics', 'mathematics', 'tree']"
8917,891700,Tour Belt,0,[]
8918,891800,String Phone,0,[]
8919,891900,Installations,0,[]
8920,892000,음식점 개업,0,[]
8921,892100,KTX 열차 기지,21,[]
8922,892200,두찌 수열,7,"['implementation', 'simulation']"
8923,892300,The Lord of the Rings,0,[]
8924,892400,Airport,0,[]
8925,892500,GC-비율,20,"['binary search', 'data structures', 'segment tree']"
8926,892600,점프,0,[]
8927,892700,Squares,19,"['convex hull', 'geometry', 'rotating calipers']"
8928,892800,Sizeof,0,[]
8929,892900,Kingdom,0,[]
8930,893000,Cellular Network,17,"['dynamic programming', 'greedy', 'sorting']"
8931,893100,Jinhan,20,"['2-sat', 'depth-first search', 'graph theory', 'graph traversal', 'strongly connected component']"
8932,893200,7종 경기,3,"['arithmetic', 'implementation', 'mathematics']"
8933,893300,MCS,8,"['data structures', 'set / map by hashing', 'sliding window']"
8934,893400,Homing,0,[]
8935,893500,Cycle,0,[]
8936,893600,Archery,0,[]
8937,893700,Processor,0,[]
8938,893800,Salesmen,0,[]
8939,893900,Hubble Space Telescope,0,[]
8940,894000,Metal,0,[]
8941,894100,Molar mass,5,"['implementation', 'parsing', 'string']"
8942,894200,Network,0,[]
8943,894300,PHONE,9,"['case work', 'data structures', 'disjoint set', 'geometry', 'implementation']"
8944,894400,이진 검색 트리 2,17,"['combinatorics', 'mathematics', 'tree']"
8945,894500,Meteor,0,[]
8946,894600,Signals,0,[]
8947,894700,Puzzle,0,[]
8948,894800,Turtle Graphics,0,[]
8949,894900,대충 더해,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
8950,895000,Grid Panel,0,[]
8951,895100,Travel,0,[]
8952,895200,Roommate,0,[]
8953,895300,Gas,0,[]
8954,895400,Tree,0,[]
8955,895500,Period,0,[]
8956,895600,Fire Tower,0,[]
8957,895700,Log Jumping,0,[]
8958,895800,OX퀴즈,4,"['implementation', 'string']"
8959,895900,Stuttering Strings,8,['backtracking']
8960,896000,PushPush,0,[]
8961,896100,Seminar Room,0,[]
8962,896200,Cannon’s Move,0,[]
8963,896300,Bond,0,[]
8964,896400,Roof,0,[]
8965,896500,Circular Sequence,4,"['bruteforcing', 'string']"
8966,896600,Symmetry,0,[]
8967,896700,Circle Dance,0,[]
8968,896800,Graceful Prime Decomposition,0,[]
8969,896900,Wire Connection,0,[]
8970,897000,Fair Share,0,[]
8971,897100,Depth Order,0,[]
8972,897200,미친 아두이노,12,"['implementation', 'simulation']"
8973,897300,수학 공책,9,[]
8974,897400,희주의 수학시험,5,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
8975,897500,PJESMA,6,"['data structures', 'set / map by hashing', 'string', 'set / map by trees']"
8976,897600,LAGNO,7,"['bruteforcing', 'implementation', 'simulation']"
8977,897700,DISPLEJ,6,"['arithmetic', 'implementation', 'mathematics']"
8978,897800,VLAK,6,"['implementation', 'simulation', 'string']"
8979,897900,올림픽,6,"['implementation', 'sorting']"
8980,898000,택배,14,"['greedy', 'sorting']"
8981,898100,입력숫자,11,['implementation']
8982,898200,수족관 1,13,"['implementation', 'simulation']"
8983,898300,사냥꾼,12,"['binary search', 'sorting']"
8984,898400,막대기,16,"['value / coordinate compression', 'dynamic programming', 'sorting']"
8985,898500,수족관 2,19,"['data structures', 'divide and conquer', 'segment tree']"
8986,898600,전봇대,16,['ternary search']
8987,898700,수족관 3,23,"['data structures', 'divide and conquer', 'greedy', 'segment tree with lazy propagation', 'segment tree', 'tree']"
8988,898800,Old bill,0,[]
8989,898900,시계,9,"['implementation', 'mathematics', 'simulation', 'sorting']"
8990,899000,Pocket Ball,0,[]
8991,899100,People like people,0,[]
8992,899200,집기 게임,19,"['maximum flow', 'geometry', 'line segment intersection check', 'minimum cost maximum flow']"
8993,899300,ChonSu,0,[]
8994,899400,Cycle Game,0,[]
8995,899500,Intelligent Robots,0,[]
8996,899600,Digital Onion,0,[]
8997,899700,The K-League,13,['implementation']
8998,899800,A Lazy Worker,0,[]
8999,899900,Work at a library is tough,0,[]
9000,900000,Moving Pegs,0,[]
9001,900100,Rectangle Coloring,11,"['breadth-first search', 'data structures', 'depth-first search', 'disjoint set', 'geometry', 'graph theory', 'graph traversal']"
9002,900200,Match Maker,20,"['graph theory', 'stable marriage problem']"
9003,900300,Taekwondo,0,[]
9004,900400,Lost Lists,0,[]
9006,900600,다리,16,['mathematics']
9007,900700,카누 선수,13,"['binary search', 'meet in the middle', 'sorting']"
9008,900800,Castle,19,"['depth-first search', 'graph theory', 'graph traversal', 'sorting', 'sweeping']"
9009,900900,피보나치,10,"['greedy', 'mathematics']"
9010,901000,Möbius Strip,13,['mathematics']
9011,901100,순서,11,"['constructive', 'implementation']"
9012,901200,괄호,7,"['data structures', 'stack', 'string']"
9013,901300,Parents,21,"['dynamic programming', 'dynamic programming on trees', 'smaller to larger technique', 'tree']"
9014,901400,PCB,21,"['ad-hoc', 'binary search']"
9015,901500,정사각형,14,"['bruteforcing', 'data structures', 'geometry', 'set / map by trees']"
9016,901600,Castles,0,[]
9017,901700,크로스 컨트리,7,['implementation']
9018,901800,Cube of a Graph,0,[]
9019,901900,DSLR,12,"['breadth-first search', 'graph theory', 'graph traversal']"
9020,902000,골드바흐의 추측,9,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
9021,902100,숫자 퍼즐,24,"['case work', 'constructive', 'implementation', 'mathematics']"
9022,902200,Stains,18,"['convex hull trick', 'dynamic programming', 'sorting']"
9023,902300,연습시즌,14,"['dynamic programming', 'implementation']"
9024,902400,두 수의 합,11,"['binary search', 'sorting', 'two-pointer']"
9025,902500,Widest Path,13,"['breadth-first search', 'data structures', ""dijkstra's"", 'disjoint set', 'graph theory', 'graph traversal', 'parametric search']"
9026,902600,Three Pin Bowling,0,[]
9027,902700,Stadium,12,"['ad-hoc', 'constructive']"
9028,902800,Iris (비밀번호),13,"['implementation', 'string']"
9029,902900,정육면체,14,['dynamic programming']
9030,903000,Bridge,0,[]
9031,903100,Message Broadcasting,0,[]
9032,903200,울타리,0,[]
9033,903300,Sewerage Planning,0,[]
9034,903400,순위,18,"['value / coordinate compression', 'data structures', 'segment tree']"
9035,903500,Detective Conan,0,[]
9036,903600,Pennant race,0,[]
9037,903700,The candy war,6,"['implementation', 'simulation']"
9038,903800,Display,5,"['implementation', 'string']"
9039,903900,노선도,0,[]
9040,904000,Maze,0,[]
9041,904100,Cube,0,[]
9042,904200,Shoe-print,0,[]
9043,904300,Delivery,0,[]
9044,904400,Conference Table,0,[]
9045,904500,Golf Courses,0,[]
9046,904600,복호화,4,"['implementation', 'string']"
9047,904700,6174,5,"['implementation', 'simulation']"
9048,904800,수위 아저씨의 고민,8,"['bruteforcing', 'greedy']"
9049,904900,Electric Network,0,[]
9050,905000,L-Shape Covering,0,[]
9051,905100,Rubik’s Cube,0,[]
9052,905200,Delivery,0,[]
9053,905300,Homework,15,"['bitmask', 'bruteforcing', 'dynamic programming', 'dynamic programming using bitfield']"
9054,905400,나일강,0,[]
9055,905500,Pile of Cubes,0,[]
9056,905600,Letter Bank,4,"['implementation', 'string']"
9057,905700,ACM-UCPC,10,"['implementation', 'sorting']"
9058,905800,Maximum Detour,0,[]
9059,905900,Servicing Clients,0,[]
9060,906000,감시체계,0,[]
9061,906100,두 직사각형,13,['sorting']
9062,906200,랜덤게임,0,[]
9063,906300,대지,3,"['geometry', 'implementation', 'mathematics']"
9064,906400,War Game,0,[]
9065,906500,Fence Watch,0,[]
9066,906600,금고,16,['mathematics']
9067,906700,馬,0,[]
9068,906800,Tree Labeling,0,[]
9069,906900,치킨집 배치,0,[]
9070,907000,장보기,4,"['arithmetic', 'implementation', 'mathematics']"
9071,907100,KTX,0,[]
9072,907200,Wiring Cost,0,[]
9073,907300,말이 안되는 명대사,0,[]
9074,907400,쇠줄 곧게 펴기,0,[]
9075,907500,Missile Protector,0,[]
9076,907600,점수 집계,4,"['implementation', 'sorting']"
9077,907700,지뢰제거,14,"['bruteforcing', 'data structures', 'prefix sum', 'segment tree']"
9078,907800,정렬,14,"['constructive', 'mathematics', 'sorting']"
9079,907900,동전 게임,9,"['bitmask', 'bruteforcing']"
9080,908000,PC방 요금,11,"['case work', 'implementation', 'mathematics', 'simulation']"
9081,908100,단어 맞추기,10,"['combinatorics', 'implementation', 'mathematics', 'string']"
9082,908200,지뢰찾기,11,"['ad-hoc', 'dynamic programming', 'greedy', 'mathematics']"
9083,908300,셔틀버스,0,[]
9084,908400,동전,11,"['dynamic programming', 'knapsack']"
9085,908500,더하기,3,"['arithmetic', 'implementation', 'mathematics']"
9086,908600,문자열,1,"['implementation', 'string']"
9087,908700,단어 찾기,0,[]
9088,908800,게임,0,[]
9089,908900,줄다리기,0,[]
9090,909000,역기 정렬하기,0,[]
9091,909100,소수 판정,0,[]
9092,909200,테이블 정리,0,[]
9093,909300,단어 뒤집기,5,"['implementation', 'string']"
9094,909400,수학적 호기심,3,"['bruteforcing', 'mathematics']"
9095,909500,"1, 2, 3 더하기",8,['dynamic programming']
9096,909600,Tiling Up Blocks,0,[]
9097,909700,Quad Trees,11,"['divide and conquer', 'recursion']"
9098,909800,The Suspects,12,"['data structures', 'disjoint set', 'graph theory']"
9114,911400,킹과 폰,13,"['implementation', 'simulation']"
9115,911500,Frobenius,11,"['dynamic programming', 'knapsack', 'mathematics']"
9116,911600,Mineshaft,0,[]
9117,911700,Colour Sequence,7,"['greedy', 'string']"
9118,911800,Projects,12,['dynamic programming']
9119,911900,Booksort,15,['meet in the middle']
9120,912000,Oulipo,16,"['knuth–morris–pratt', 'string']"
9121,912100,Lucky Light,0,[]
9122,912200,Sightseeing,0,[]
9123,912300,Word Ladder,15,"['floyd–warshall', 'graph theory']"
9124,912400,Bonus Word,0,[]
9125,912500,Contest,0,[]
9126,912600,Cycling,20,[]
9127,912700,Escape,0,[]
9128,912800,피곤한 외판원,0,[]
9129,912900,Space,0,[]
9130,913000,Herbert,0,[]
9131,913100,"Oh, Those Achin' Feet",0,[]
9134,913400,Komunikace,14,"['graph theory', 'implementation', 'minimum spanning tree']"
9135,913500,Směrnice,10,"['case work', 'data structures', 'set / map by hashing', 'implementation', 'simulation', 'string']"
9136,913600,Number That Count,0,[]
9137,913700,Matematické cvičení,7,"['arbitrary precision / big integers', 'arithmetic', 'mathematics', 'number theory', 'string']"
9138,913800,Červotoči,6,"['implementation', 'string']"
9139,913900,Algebra,15,"['data structures', 'mathematics', 'segment tree']"
9140,914000,Přeprava materiálu,11,"[""dijkstra's"", 'graph theory']"
9141,914100,Dámy,14,['ad-hoc']
9142,914200,Nástěnky,0,[]
9143,914300,Zpětné inženýrství,8,['mathematics']
9144,914400,Gnome,0,[]
9145,914500,Herci,0,[]
9146,914600,Linie,12,"['bruteforcing', 'geometry']"
9147,914700,Počítáme ponorky,0,[]
9148,914800,Rozejděte se!,17,['backtracking']
9149,914900,Pražská spojka,0,[]
9150,915000,Tokeny,0,[]
9151,915100,Starship Hakodate-maru,4,"['bruteforcing', 'mathematics']"
9152,915200,e-Market,0,[]
9153,915300,Fishnet,14,[]
9154,915400,77377,0,[]
9155,915500,Beehives,0,[]
9156,915600,"Young, Poor and Busy",0,[]
9157,915700,Nim,16,"['dynamic programming', 'game theory', 'sprague–grundy theorem']"
9158,915800,Super Star,21,"['geometry', 'geometry; 3d', 'heuristics', 'minimum enclosing circle']"
9159,915900,What is the air speed velocity...,5,"['arithmetic', 'implementation', 'mathematics']"
9160,916000,The Brave Sir Robin’s cAsE cOrReCtOr,4,"['implementation', 'string']"
9161,916100,Sir Bedavere’s Bogus Division Solutions,3,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
9162,916200,One...Two...Five!,10,"['backtracking', 'bruteforcing', 'data structures', 'set / map by hashing']"
9163,916300,Taunt Exposure Estimation,0,[]
9164,916400,Ye Holy Hand Grenades!,0,[]
9165,916500,Nested Shrubbery Boxes,0,[]
9166,916600,And Now For Something Completely Different!,0,[]
9167,916700,도발 봇,16,"['implementation', 'parsing', 'recursion', 'string']"
9168,916800,No Left Turns,13,"['breadth-first search', 'graph theory', 'graph traversal']"
9169,916900,나는 9999번 문제를 풀 수 있다,19,"['maximum flow', 'max-flow min-cut theorem']"
9170,917000,Single Digit Adder,8,[]
9171,917100,Job Scheduling by Open Bidding,11,['knapsack']
9172,917200,Consecutive Digits in a Rational Number,6,"['arithmetic', 'implementation', 'mathematics', 'number theory']"
9173,917300,Constant Irritation,0,[]
9174,917400,If only I could think Linearly...,0,[]
9175,917500,Who needs 8 Queens when you can have N?,18,"['case work', 'constructive']"
9176,917600,메르센 합성수,12,"['mathematics', 'number theory', 'precomputation', 'primality test']"
9177,917700,단어 섞기,12,"['dynamic programming', 'graph theory', 'graph traversal']"
9178,917800,Jill’s Tour Paths,11,"['backtracking', 'graph theory', 'sorting']"
9179,917900,"Boundaries on ""A New Kind of Science""",10,"['implementation', 'simulation']"
9180,918000,Rate of Return,0,[]
9181,918100,A Card Trick,0,[]
9182,918200,Biorhythms,4,"['bruteforcing', 'mathematics', 'number theory']"
9183,918300,Gone Fishing,12,['dynamic programming']
9184,918400,신나는 함수 실행,9,"['dynamic programming', 'recursion']"
9185,918500,Unscrambling Images,0,[]
9186,918600,The Same Game,12,"['implementation', 'simulation']"
9187,918700,Square Cipher,11,"['implementation', 'string']"
9188,918800,String Matching,7,"['bruteforcing', 'string']"
9189,918900,Triangle War,16,"['dynamic programming', 'game theory', 'implementation']"
9196,919600,정수 직사각형,6,"['bruteforcing', 'precomputation', 'sorting']"
9198,919800,Hierarchical Democracy,10,"['divide and conquer', 'parsing', 'sorting', 'string']"
9202,920200,Boggle,16,"['backtracking', 'bruteforcing', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'string', 'tree', 'trie']"
9203,920300,호텔 예약,13,"['dynamic programming', 'greedy', 'parsing', 'sorting', 'string']"
9204,920400,체스,10,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'mathematics']"
9205,920500,맥주 마시면서 걸어가기,10,"['breadth-first search', 'graph theory', 'graph traversal']"
9206,920600,나무 말고 꽃,18,"['calculus', 'mathematics', 'numerical analysis']"
9207,920700,페그 솔리테어,12,"['backtracking', 'bruteforcing', 'implementation']"
9208,920800,링월드,23,"['data structures', 'greedy', ""hall's theorem""]"
9209,920900,The King of the North,20,"['maximum flow', 'max-flow min-cut theorem']"
9210,921000,복권 표,0,[]
9211,921100,타이밍,0,[]
9212,921200,트라이앵글,22,"['geometry', 'geometry; 3d']"
9213,921300,꽤 좋은 수,14,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
9214,921400,첫 번째 항,5,"['implementation', 'string']"
9215,921500,신나는 분수 계산,7,"['arbitrary precision / big integers', 'euclidean algorithm', 'implementation', 'mathematics', 'number theory', 'parsing', 'string']"
9216,921600,The Queen's English,0,[]
9217,921700,Powerbase Format,0,[]
9218,921800,Jumble Match,0,[]
9219,921900,Road Trip,0,[]
9220,922000,Bafﬂed!,0,[]
9221,922100,A Voting Protocol,0,[]
9222,922200,Family Trees,0,[]
9223,922300,The Jury is out,19,['dynamic programming']
9224,922400,Box Toppling,0,[]
9225,922500,Superstitious Helicopter Pilots,0,[]
9226,922600,도깨비말,4,"['implementation', 'string']"
9227,922700,W**h y**r mouth out with s**p,5,"['implementation', 'simulation', 'string']"
9228,922800,Check Digits,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
9229,922900,단어 사다리,5,"['implementation', 'string']"
9230,923000,TAXI ROUTES,8,"['combinatorics', 'dynamic programming', 'mathematics']"
9231,923100,URNS,0,[]
9232,923200,Crossword Puzzle Clue Numbering,0,[]
9233,923300,"Molecules, Molecules",14,"['bruteforcing', 'implementation']"
9234,923400,"Molecules, Molecules 2",19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'maximum flow']"
9235,923500,Fragment reassembly,0,[]
9236,923600,고급 레스토랑,0,[]
9237,923700,이장님 초대,6,"['greedy', 'sorting']"
9238,923800,당근 볶기,18,"['data structures', 'greedy', 'priority queue']"
9239,923900,스티브 잡숭,7,"['bruteforcing', 'mathematics']"
9240,924000,로버트 후드,18,"['convex hull', 'geometry', 'rotating calipers']"
9241,924100,바이러스 복제,11,"['greedy', 'implementation', 'string']"
9242,924200,폭탄 해체,7,"['implementation', 'parsing', 'string']"
9243,924300,파일 완전 삭제,4,['string']
9244,924400,핀볼,22,"['data structures', 'geometry', 'segment tree', 'sweeping', 'set / map by trees']"
9245,924500,댄스,0,[]
9246,924600,다트판,14,"['calculus', 'mathematics', 'probability theory']"
9247,924700,절벽 걷기,0,[]
9248,924800,Suffix Array,18,"['string', 'suffix array and lcp array']"
9249,924900,최장 공통 부분 문자열,18,"['hashing', 'rabin–karp', 'string', 'suffix array and lcp array']"
9250,925000,문자열 집합 판별,19,"['aho-corasick', 'data structures', 'string', 'tree', 'trie']"
9251,925100,LCS,11,"['dynamic programming', 'string']"
9252,925200,LCS 2,12,['dynamic programming']
9253,925300,스페셜 저지,4,"['string', 'implementation']"
9254,925400,역행렬,14,"['gaussian elimination', 'linear algebra', 'mathematics']"
9255,925500,The Friend of My Enemy is My Enemy,6,"['graph theory', 'implementation']"
9256,925600,"Call Me Back, Please!",0,[]
9257,925700,Suspicious Orders,0,[]
9258,925800,Code Breakers,0,[]
9259,925900,Privacy Loss,11,['dynamic programming']
9260,926000,E-Mail Snooping,5,"['implementation', 'parsing', 'string']"
9263,926300,Russian Dolls,10,"['greedy', 'sorting']"
9264,926400,Intercity,20,"['breadth-first search', 'binary search', 'graph theory', 'graph traversal']"
9265,926500,Count,6,[]
9266,926600,체스 게임,20,"['breadth-first search', 'game theory', 'graph theory', 'graph traversal', 'implementation']"
9267,926700,A+B,21,"['extended euclidean algorithm', 'mathematics', 'number theory']"
9268,926800,Dragon Pattern,22,"['dynamic programming', 'exponentiation by squaring', 'knuth–morris–pratt', 'mathematics', 'string']"
9269,926900,Points,11,['dynamic programming']
9270,927000,Red John Game,18,"['ad-hoc', 'mathematics']"
9271,927100,Influence,0,[]
9272,927200,상근이의 아이디어,8,"['mathematics', 'number theory']"
9273,927300,정제헌을 팔자!,9,"['bruteforcing', 'mathematics', 'number theory']"
9274,927400,종이 지도,0,[]
9275,927500,토끼와 상근,18,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
9276,927600,채소 보호,18,"['convex hull', 'geometry', 'implementation']"
9277,927700,꽃병,0,[]
9278,927800,절망적인 줄,12,"['combinatorics', 'dynamic programming', 'mathematics']"
9279,927900,얼어붙은 스프링쿨러,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
9280,928000,False Sense of Security,0,[]
9281,928100,전차,0,[]
9282,928200,Splot,27,"['case work', 'dynamic programming', 'implementation', 'parsing', 'string']"
9283,928300,"보드 게임 ""트리""",0,[]
9284,928400,Adriatic,23,"['dynamic programming', 'prefix sum', 'recursion']"
9285,928500,Watering - 1,5,"['ad-hoc', 'constructive']"
9286,928600,Gradabase,3,['implementation']
9287,928700,Jenga,5,[]
9288,928800,More Dice,3,"['bruteforcing', 'implementation', 'mathematics', 'simulation']"
9289,928900,Morse Code,6,[]
9290,929000,틱택토 이기기,7,"['bruteforcing', 'implementation']"
9291,929100,스도쿠 채점,7,['implementation']
9292,929200,Robot In A Room,0,[]
9293,929300,모험을 떠나자,0,[]
9294,929400,Even More Dice,9,[]
9295,929500,주사위,3,"['arithmetic', 'implementation', 'mathematics']"
9296,929600,Grading Exams,4,"['implementation', 'string']"
9297,929700,Reducing Improper Fractions,3,"['arithmetic', 'mathematics']"
9298,929800,Ant Entrapment,3,"['geometry', 'mathematics']"
9299,929900,Math Tutoring,3,"['calculus', 'implementation', 'mathematics']"
9300,930000,Where’s the Rainbow,6,"['geometry', 'mathematics']"
9301,930100,Painting Party,5,['implementation']
9302,930200,Back and Forth,11,"['implementation', 'simulation']"
9303,930300,Hoo’s Afraid of the Big Bad Wolf?,13,"[""dijkstra's"", 'graph theory']"
9304,930400,Canyon Crossing,12,"['geometry', 'graph theory', 'graph traversal']"
9305,930500,Yahtzee,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'implementation']"
9306,930600,Practice: Roll Call,4,['implementation']
9307,930700,Geometric Inflation,9,"['arithmetic', 'mathematics']"
9308,930800,Public Transit,0,[]
9309,930900,Password Validation,7,"['implementation', 'string']"
9310,931000,Arithmetic and Geometric Sums,3,"['arithmetic', 'implementation', 'mathematics']"
9311,931100,Robot in a Maze,8,"['breadth-first search', 'graph theory', 'graph traversal']"
9312,931200,Triangular Matrices,10,"['data structures', 'implementation', 'stack']"
9313,931300,Integer Flipping,4,"['implementation', 'mathematics']"
9314,931400,Property Lines,0,[]
9315,931500,Lifeboat Balancing,0,[]
9316,931600,Hello Judge,2,['implementation']
9317,931700,Monitor DPI,3,"['implementation', 'mathematics']"
9318,931800,위성 사진,17,"['value / coordinate compression', 'data structures', 'segment tree', 'sweeping']"
9319,931900,도청 장치,9,['implementation']
9320,932000,금고 열기,13,"['combinatorics', 'mathematics']"
9321,932100,Dreaded Alternating Game,0,[]
9322,932200,철벽 보안 알고리즘,6,"['data structures', 'set / map by hashing', 'string']"
9323,932300,무임승차,17,[]
9324,932400,진짜 메시지,6,"['implementation', 'parsing', 'string']"
9325,932500,얼마?,3,"['arithmetic', 'mathematics']"
9326,932600,MI6,11,"['mathematics', 'number theory', 'primality test']"
9327,932700,용량 확보,15,"['dynamic programming', 'knapsack']"
9328,932800,열쇠,15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
9329,932900,패스트 푸드 상금,5,"['bruteforcing', 'greedy', 'implementation', 'simulation']"
9330,933000,Seven Kingdoms,19,"['2-sat', 'graph theory', 'strongly connected component']"
9331,933100,Institute of Advanced Category Manipulation,18,"['bruteforcing', 'geometry', 'geometry; 3d']"
9332,933200,Digital Content Protection,14,"['data structures', 'tree', 'set / map by trees']"
9333,933300,돈 갚기,9,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
9334,933400,IQ 테스트,17,"['berlekamp–massey', 'linear algebra', 'mathematics']"
9335,933500,소셜 광고,9,['bruteforcing']
9336,933600,아스키 아트 표,11,['implementation']
9337,933700,Flood-It,12,"['bruteforcing', 'graph theory', 'graph traversal', 'greedy']"
9338,933800,Chemicals Monitoring,0,[]
9339,933900,마라토너,5,['implementation']
9340,934000,Network Planning,0,[]
9341,934100,ZZ,19,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
9342,934200,염색체,8,"['regular expression', 'string']"
9343,934300,랜덤 걷기,15,"['combinatorics', ""fermat's little theorem"", 'mathematics', 'modular multiplicative inverse', 'number theory']"
9344,934400,도로,13,"['graph theory', 'minimum spanning tree']"
9345,934500,디지털 비디오 디스크(DVDs),18,"['data structures', 'segment tree']"
9346,934600,영화관,0,[]
9347,934700,울타리,13,"['0-1 bfs', 'breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
9348,934800,Magic Graphs,0,[]
9349,934900,Fegla and the Bed Bugs,4,['mathematics']
9350,935000,Do Not Disturb!,0,[]
9351,935100,Casino,10,['string']
9352,935200,Fundraised,0,[]
9353,935300,You Shall Not Pass!!,0,[]
9354,935400,It Is Cold,0,[]
9355,935500,Passwords,0,[]
9356,935600,Skill,13,"['combinatorics', 'dynamic programming', 'mathematics']"
9357,935700,Eligibility,7,"['data structures', 'set / map by trees']"
9358,935800,순열 접기 게임,5,"['implementation', 'simulation']"
9359,935900,서로소,15,"['inclusion and exclusion', 'mathematics', 'number theory']"
9360,936000,윔블던,0,[]
9361,936100,Manhattan Sort,13,['sorting']
9362,936200,Cipher,0,[]
9363,936300,큰 나눗셈,12,"['mathematics', 'number theory']"
9364,936400,Calculator,10,[]
9365,936500,Crank,10,"['breadth-first search', 'graph theory', 'graph traversal']"
9366,936600,삼각형 분류,3,"['arithmetic', 'case work', 'implementation', 'mathematics']"
9367,936700,관리 난항,9,"['implementation', 'simulation']"
9368,936800,매수,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
9369,936900,암호 깨기,13,['implementation']
9370,937000,미확인 도착지,14,"[""dijkstra's"", 'graph theory']"
9371,937100,인코딩 좌표,16,"['exponentiation by squaring', 'implementation', 'mathematics', 'modular multiplicative inverse', 'number theory']"
9372,937200,상근이의 여행,7,"['graph theory', 'tree']"
9373,937300,복도 뚫기,19,"['geometry', 'graph theory', 'minimum spanning tree']"
9374,937400,감시 카메라,20,"['binary search', 'geometry', 'line segment intersection check', 'area of a polygon']"
9375,937500,패션왕 신해빈,8,"['combinatorics', 'data structures', 'set / map by hashing', 'mathematics']"
9376,937600,탈옥,17,"['0-1 bfs', 'breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
9377,937700,String LD,4,"['bruteforcing', 'implementation', 'simulation', 'string']"
9378,937800,Painting,0,[]
9379,937900,Another Brick in the Wall,11,"['bruteforcing', 'implementation', 'simulation']"
9380,938000,Blast the Enemy!,0,[]
9381,938100,deltree,0,[]
9382,938200,Solar Eclipse,0,[]
9383,938300,Hurry Plotter,0,[]
9384,938400,ACM Coalition,0,[]
9385,938500,Fruit Weights,0,[]
9386,938600,Royal Gems,0,[]
9387,938700,Gholam’s Simple Game,4,"['implementation', 'simulation']"
9388,938800,Arbiter Login,5,"['case work', 'implementation', 'string']"
9389,938900,Drop7,12,"['implementation', 'simulation']"
9390,939000,Seven Segment Counter,0,[]
9391,939100,Bus Shuttle,0,[]
9392,939200,Conditional Statements,0,[]
9393,939300,Genome Evolution,13,[]
9394,939400,World Cup Nominations,0,[]
9395,939500,Killbots,0,[]
9396,939600,Indisputable Right,0,[]
9397,939700,The Mayo Empire,0,[]
9398,939800,A Password Policy Requirement,4,"['bruteforcing', 'string']"
9399,939900,Best Friends,7,"['case work', 'mathematics']"
9400,940000,Calculate the Fence Needed,7,['implementation']
9401,940100,Diamonds,0,[]
9402,940200,The Avaricious ISP,0,[]
9403,940300,Border Conflict,0,[]
9404,940400,Goguryeo and the Crown Prince,0,[]
9405,940500,Array Game,0,[]
9406,940600,Tracking Robots,0,[]
9407,940700,ACM Revenge,0,[]
9411,941100,실수 계산,13,"['arbitrary precision / big integers', 'implementation']"
9413,941300,제주도 관광,19,"['maximum flow', 'minimum cost maximum flow']"
9414,941400,프로그래밍 대회 전용 부지,7,"['greedy', 'sorting']"
9417,941700,최대 GCD,7,"['bruteforcing', 'euclidean algorithm', 'mathematics', 'number theory']"
9421,942100,소수상근수,10,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
9423,942300,레슬링 팀 선발,14,"['bit set', 'dynamic programming', 'knapsack']"
9426,942600,중앙값 측정,16,"['data structures', 'segment tree']"
9427,942700,Drop Zone,0,[]
9428,942800,Effective Infection Time,0,[]
9429,942900,Outpost Navigation,0,[]
9430,943000,Multikill,0,[]
9431,943100,Virology,0,[]
9432,943200,Worst Case Scenario,0,[]
9433,943300,Zombie Invasion,4,"['implementation', 'simulation']"
9434,943400,Zombdar,8,"['parsing', 'string']"
9435,943500,Welcome Party,0,[]
9436,943600,Round Robin,8,"['implementation', 'simulation']"
9437,943700,사라진 페이지 찾기,4,"['arithmetic', 'mathematics']"
9438,943800,Probability Paradox,20,"['gaussian elimination', 'linear algebra', 'mathematics', 'probability theory']"
9439,943900,Letter Cubes,0,[]
9440,944000,숫자 더하기,8,"['greedy', 'sorting']"
9441,944100,Cash Cow,14,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
9442,944200,Sort Me,7,"['sorting', 'string']"
9443,944300,Arrangement of Contest,3,"['implementation', 'string']"
9444,944400,Ballot Analyzing Device,6,"['arithmetic', 'mathematics']"
9445,944500,Correcting Curiosity,0,[]
9446,944600,아이템 제작,16,"[""dijkstra's"", 'graph theory']"
9447,944700,Energy Tycoon,6,['greedy']
9448,944800,Flight Boarding Optimization,0,[]
9449,944900,Garage,4,"['arithmetic', 'geometry', 'mathematics']"
9450,945000,Heavy Chain Clusterization,0,[]
9451,945100,Intellectual Property,0,[]
9452,945200,J,18,"['parsing', 'string']"
9453,945300,학생의 수,18,[]
9454,945400,Lonely Mountain,0,[]
9455,945500,박스,5,['implementation']
9456,945600,Buckets,0,[]
9457,945700,기하학문양,14,['dynamic programming']
9458,945800,Golf Field,0,[]
9459,945900,International Event,0,[]
9460,946000,메탈,15,"['binary search', 'parametric search', 'sorting']"
9461,946100,파도반 수열,8,"['dynamic programming', 'mathematics']"
9462,946200,Passwords,0,[]
9463,946300,순열 그래프,16,"['data structures', 'segment tree']"
9464,946400,직사각형 집합,15,"['greedy', 'mathematics']"
9465,946500,스티커,10,['dynamic programming']
9466,946600,텀 프로젝트,13,"['depth-first search', 'graph theory', 'graph traversal']"
9467,946700,문자열 경로,0,[]
9468,946800,Islands in the Data Stream,6,['implementation']
9469,946900,폰 노이만,3,"['arithmetic', 'mathematics']"
9470,947000,Strahler 순서,13,"['graph theory', 'topological sorting']"
9471,947100,피사노 주기,7,"['mathematics', 'number theory']"
9472,947200,알고리즘 기말고사,13,"['combinatorics', 'inclusion and exclusion', 'mathematics']"
9473,947300,Chomp,14,"['dynamic programming', 'game theory']"
9474,947400,삼각 분할과 삼각형,16,"['constructive', 'geometry', 'implementation', 'mathematics']"
9475,947500,파스칼 제곱,17,"['combinatorics', 'linear algebra', 'mathematics']"
9476,947600,Contraband,0,[]
9477,947700,아름다운 강산,18,"['bruteforcing', 'case work', 'mathematics', 'number theory', 'prefix sum', 'primality test', 'sieve of eratosthenes']"
9478,947800,Nested 팰린드롬,0,[]
9479,947900,Ping!,7,['greedy']
9480,948000,Electric Car Rally,0,[]
9481,948100,Skyscrapers,0,[]
9482,948200,가까운 만유인력,23,"['data structures', 'geometry']"
9483,948300,Tandem Repeats,22,"['string', 'suffix array and lcp array']"
9484,948400,"최대삼각형, 최소삼각형",23,"['geometry', 'sweeping']"
9485,948500,It Takes a Village,0,[]
9486,948600,이름 남기기,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
9487,948700,Cut the Cake,0,[]
9488,948800,The n Days of Christmas,5,['mathematics']
9489,948900,사촌,12,"['data structures', 'tree']"
9490,949000,Decimal Representation,10,"['mathematics', 'number theory']"
9491,949100,Politics,8,['sorting']
9492,949200,Perfect Shuffle,5,['implementation']
9493,949300,"길면 기차, 기차는 빨라, 빠른 것은 비행기",3,"['arithmetic', 'mathematics']"
9494,949400,Text Roll,5,"['implementation', 'string']"
9495,949500,바둑,22,['bipartite matching']
9496,949600,조 나누기,18,['bipartite matching']
9497,949700,피라미드 수열,18,"['euclidean algorithm', 'mathematics', 'number theory']"
9498,949800,시험 성적,1,['implementation']
9499,949900,보물 상자,0,[]
9500,950000,아름다운 직사각형,0,[]
9501,950100,꿍의 우주여행,3,"['arithmetic', 'implementation', 'mathematics']"
9502,950200,Bones’s Battery,15,"['binary search', 'floyd–warshall', 'graph theory']"
9503,950300,Crusher’s Code,19,"['combinatorics', 'dynamic programming', 'mathematics']"
9504,950400,Delta Quadrant,0,[]
9505,950500,엔터프라이즈호 탈출,12,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
9506,950600,약수들의 합,5,"['mathematics', 'number theory']"
9507,950700,Generations of Tribbles,8,['dynamic programming']
9508,950800,Holodeck Hacking,20,"['dynamic programming', 'mathematics']"
9509,950900,Interstellar Trade,0,[]
9510,951000,Janeway’s Journey,0,[]
9511,951100,Klingon Warfare,0,[]
9512,951200,Languages,6,"['implementation', 'parsing', 'string']"
9513,951300,Mass Production,21,"['maximum flow', 'minimum cost maximum flow']"
9514,951400,카드 게임,16,"['bitmask', 'dynamic programming', 'game theory', 'knapsack']"
9515,951500,지우기 게임,0,[]
9516,951600,아름다운 홀수 배열,0,[]
9517,951700,아이 러브 크로아티아,3,"['implementation', 'simulation']"
9518,951800,로마 카톨릭 미사,8,"['bruteforcing', 'implementation', 'mathematics']"
9519,951900,졸려,10,"['implementation', 'simulation', 'string']"
9520,952000,NP-hard,17,['dynamic programming']
9521,952100,색칠 공부,19,"['combinatorics', 'dynamic programming', 'graph theory', 'graph traversal', 'mathematics']"
9522,952200,직선 게임,22,['bipartite matching']
9523,952300,Arithmetic with Morse,7,"['data structures', 'stack', 'string']"
9524,952400,Beautiful Yekaterinburg,0,['implementation']
9525,952500,룩 배치하기,18,['bipartite matching']
9526,952600,꿍글리쉬,22,[]
9527,952700,1의 개수 세기,14,"['bitmask', 'mathematics', 'prefix sum']"
9528,952800,Disjoint water supply,16,"['dynamic programming', 'graph theory']"
9529,952900,11 (십 일),19,"['combinatorics', 'dynamic programming', 'mathematics', 'number theory']"
9530,953000,Football,10,"['greedy', 'sorting']"
9531,953100,Go up the Ultras,0,[]
9532,953200,Hide and seek,0,[]
9533,953300,Inverting Huffman,15,['greedy']
9534,953400,Join two kingdoms,20,"['binary search', 'data structures', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'euler tour technique', 'graph theory', 'graph traversal', 'segment tree with lazy propagation', 'segment tree', 'tree', 'two-pointer']"
9535,953500,Rubik's Rectangle,24,"['ad-hoc', 'constructive', 'implementation']"
9536,953600,여우는 어떻게 울지?,7,"['parsing', 'string']"
9537,953700,잘생긴 GCD,19,"['data structures', 'mathematics', 'number theory']"
9538,953800,Subway,19,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'parsing', 'string']"
9539,953900,Escape,25,"['data structures', 'disjoint set', 'greedy', 'priority queue', 'tree']"
9540,954000,Draughts,10,"['backtracking', 'depth-first search', 'graph theory', 'graph traversal']"
9541,954100,역사 시간,28,"['binary search', 'data structures', 'greedy', 'segment tree']"
9542,954200,Chain & Co.,18,[]
9543,954300,Crane,15,['constructive']
9544,954400,Captain Obvious and the Rabbit-Man,22,['mathematics']
9545,954500,폭탄 받아라,16,"['constructive', 'depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
9546,954600,3000번 버스,4,"['arithmetic', 'mathematics']"
9547,954700,대통령 선거,8,['implementation']
9548,954800,무제,20,"['data structures', 'rope', 'splay tree', 'string', 'tree']"
9549,954900,암호화된 비밀번호,10,"['sliding window', 'string']"
9550,955000,아이들은 사탕을 좋아해,3,"['arithmetic', 'mathematics']"
9551,955100,바꾸기 놀이,0,[]
9552,955200,잠금 패턴,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
9553,955300,양궁,11,"['geometry', 'linearity of expectation', 'mathematics', 'probability theory']"
9554,955400,섬 연결하기,0,[]
9555,955500,대회 장소 준비,9,['implementation']
9556,955600,수학 숙제,17,"['exponentiation by squaring', 'mathematics', 'number theory']"
9557,955700,Arabic and English,5,[]
9558,955800,Between the Mountains,4,"['bruteforcing', 'implementation']"
9559,955900,Circleland,9,"['case work', 'prefix sum']"
9560,956000,Dice on a Board,0,[]
9561,956100,Error,0,[]
9562,956200,Fence,0,[]
9563,956300,Go,0,[]
9564,956400,Homework,0,[]
9565,956500,Identify the Number,0,[]
9566,956600,Joy of the Cylinder Game,0,[]
9567,956700,Empty Stalls,13,[]
9568,956800,Line of Sight,15,"['geometry', 'sorting']"
9569,956900,No Change,17,"['binary search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
9570,957000,Farmer John has no Large Brown Cow,15,"['combinatorics', 'data structures', 'implementation', 'mathematics', 'set / map by trees']"
9571,957100,Crowded Cows,16,"['data structures', 'segment tree', 'set / map by trees', 'two-pointer']"
9572,957200,Pogo-Cow,16,['dynamic programming']
9573,957300,Combination Lock,9,['bruteforcing']
9574,957400,Goldilocks and the N Cows,10,"['value / coordinate compression', 'prefix sum', 'sorting']"
9575,957500,행운의 수,7,"['bruteforcing', 'data structures', 'set / map by hashing', 'mathematics', 'sorting']"
9576,957600,책 나눠주기,14,"['bipartite matching', 'greedy']"
9577,957700,토렌트,17,['bipartite matching']
9579,957900,ASCII Puzzle,20,['implementation']
9580,958000,Bonus Cards,15,"['combinatorics', 'dynamic programming', 'mathematics']"
9581,958100,Cactus Automorphisms,26,"['cactus', 'graph theory', 'hashing', 'tree', 'tree isomorphism']"
9582,958200,Dictionary,26,"['directed minimum spanning tree', 'graph theory']"
9583,958300,Easy Geometry,25,['geometry']
9584,958400,Fraud Busters,4,"['implementation', 'string']"
9585,958500,Green Energy,20,"['geometry', 'mathematics']"
9586,958600,Hack Protection,19,[]
9587,958700,Join the Conversation,17,"['dynamic programming', 'parsing', 'string']"
9588,958800,Kabaleo Lite,18,['case work']
9589,958900,Mixing Colours,23,['dynamic programming']
9590,959000,It Can Be Arranged,19,['maximum flow']
9591,959100,Shopping Malls,14,"[""dijkstra's"", 'graph theory']"
9592,959200,Decoding the Hallway,18,[]
9593,959300,Joe is learning to speak,0,[]
9594,959400,Odd and Even Zeroes,17,"['mathematics', 'number theory']"
9595,959500,VivoParc,0,[]
9596,959600,바이너리 트리,13,['dynamic programming']
9597,959700,Trending Topic,13,['prefix sum']
9598,959800,Cleaning the Hallway,24,"['calculus', 'case work', 'geometry', ""green's theorem"", 'mathematics']"
9599,959900,Equal Sum Sets,11,"['backtracking', 'bitmask', 'bruteforcing', 'dynamic programming']"
9600,960000,The Last Ant,9,"['implementation', 'simulation']"
9601,960100,Count the Regions,15,"['breadth-first search', 'value / coordinate compression', 'depth-first search', 'graph theory', 'graph traversal']"
9602,960200,Clock Hands,0,[]
9603,960300,Dragon’s Cruller,0,[]
9604,960400,Directional Resemblance,25,"['geometry', 'geometry; 3d']"
9605,960500,Longest Chain,22,"['binary search', 'data structures', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'parametric search', 'set / map by trees']"
9606,960600,Don’t Burst the Balloon,21,"['geometry', 'geometry; 3d']"
9607,960700,Hidden Tree,0,[]
9608,960800,C(O|W|A*RD*|S)* CROSSWORD Puzzle,0,[]
9609,960900,PSU Campuses,7,[]
9610,961000,사분면,3,"['implementation', 'mathematics']"
9611,961100,Vicinity,4,"['bruteforcing', 'geometry', 'pythagoras theorem']"
9612,961200,Maximum Word Frequency,7,"['data structures', 'set / map by hashing', 'sorting', 'string']"
9613,961300,GCD 합,7,"['euclidean algorithm', 'mathematics', 'number theory']"
9614,961400,잠금 패턴과 스패닝 트리,16,"['gaussian elimination', 'linear algebra', 'mathematics']"
9615,961500,Teaching Hazard,0,[]
9616,961600,홀수 정사각형,15,"['combinatorics', 'mathematics']"
9617,961700,SSD,0,[]
9618,961800,Airport Sort,0,[]
9619,961900,박스,0,[]
9620,962000,Meeting Room Arrangement,9,"['greedy', 'sorting']"
9621,962100,팰린드롬 여행,0,[]
9622,962200,Cabin Baggage,3,['implementation']
9623,962300,부분 수열의 길이,17,"['binary search', 'value / coordinate compression', 'data structures', 'prefix sum', 'segment tree']"
9624,962400,Safari Park,0,[]
9625,962500,BABBA,6,['dynamic programming']
9626,962600,크로스워드 퍼즐,6,['implementation']
9627,962700,문장,7,"['bruteforcing', 'implementation', 'precomputation', 'string']"
9628,962800,KOLINJE,13,['mathematics']
9629,962900,두 정수의 거리,19,['dynamic programming']
9630,963000,TV 송신기,24,"['data structures', 'geometry', 'stack']"
9631,963100,The Alphabet Sticker,7,"['combinatorics', 'mathematics', 'string']"
9632,963200,Swyper Keyboard,0,[]
9633,963300,Increasing Shortest Path,19,"['dynamic programming', 'offline queries']"
9634,963400,Cup of Cowards,0,[]
9635,963500,Balloons Colors,3,['implementation']
9636,963600,NASSA’s Robot,4,['greedy']
9637,963700,The Stones Game,0,[]
9638,963800,Super Ants,0,[]
9639,963900,Omar Loves Candies,10,['prefix sum']
9640,964000,Modified LCS,0,[]
9641,964100,Mario Kart,0,[]
9642,964200,Omar’s Bug,14,[]
9643,964300,Absurdistan Roads,0,[]
9644,964400,Battle for Silver,13,['ad-hoc']
9645,964500,Card Trick,16,"['dynamic programming', 'mathematics', 'probability theory']"
9646,964600,다이어그램과 태블로,12,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
9647,964700,Exponential Towers,22,"['mathematics', 'number theory']"
9648,964800,First Date,8,"['case work', 'implementation', 'mathematics']"
9649,964900,Grachten,6,"['geometry', 'mathematics']"
9650,965000,Highway of the Future,0,[]
9651,965100,Infix to Prefix,0,[]
9652,965200,Jingle Balls,16,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'parsing', 'stack', 'string', 'tree']"
9653,965300,스타워즈 로고,1,['implementation']
9654,965400,나부 함대 데이터,1,['implementation']
9655,965500,돌 게임,6,"['dynamic programming', 'game theory', 'mathematics']"
9656,965600,돌 게임 2,6,"['dynamic programming', 'game theory']"
9657,965700,돌 게임 3,8,"['dynamic programming', 'game theory']"
9658,965800,돌 게임 4,9,"['dynamic programming', 'game theory']"
9659,965900,돌 게임 5,8,['game theory']
9660,966000,돌 게임 6,11,['game theory']
9661,966100,돌 게임 7,13,"['game theory', 'mathematics']"
9662,966200,돌 게임 8,19,"['dynamic programming', 'game theory']"
9663,966300,N-Queen,12,"['backtracking', 'bruteforcing']"
9664,966400,NASLJEDSTVO,3,"['arithmetic', 'bruteforcing', 'mathematics']"
9665,966500,GMO,10,"['bruteforcing', 'dynamic programming']"
9666,966600,SUMO,18,"['binary search', 'bipartite graph', 'data structures', 'disjoint set', 'graph theory']"
9667,966700,GUMA,18,"['inclusion and exclusion', 'mathematics', 'number theory']"
9668,966800,ČOKOLADE,18,['mathematics']
9669,966900,UTRKA,21,"['data structures', 'floyd–warshall', 'graph theory', 'sparse table']"
9670,967000,Movie,5,['geometry']
9671,967100,SMS Poll,0,[]
9672,967200,Traitor,0,[]
9673,967300,Intelligent Traffic Surveillance,0,[]
9674,967400,BitTorrent,0,[]
9675,967500,2D-Solar System,0,[]
9676,967600,Bowling Ball,0,[]
9677,967700,LED에 전원 같은 걸 끼얹기,0,[]
9678,967800,Mixed Flight Plans,0,[]
9679,967900,Sweeping Robot,0,[]
9680,968000,Wedding Hall,0,[]
9681,968100,Suitcases,0,[]
9682,968200,The Motorway,22,[]
9683,968300,Bytehattan,23,[]
9684,968400,The Carpenter,24,[]
9685,968500,Demonstrations,19,[]
9686,968600,The Exam,14,['greedy']
9687,968700,Speed Cameras,0,[]
9688,968800,Marbles,0,[]
9689,968900,The Hero,0,[]
9690,969000,Genetic Engineering,0,[]
9691,969100,Janosik,8,"['arithmetic', 'mathematics', 'number theory']"
9692,969200,Blankets,0,[]
9693,969300,시파르,7,"['mathematics', 'number theory']"
9694,969400,무엇을 아느냐가 아니라 누구를 아느냐가 문제다,13,"[""dijkstra's"", 'graph theory']"
9695,969500,Filter And Perform,0,[]
9696,969600,Show Me The Operators,11,"['arithmetic', 'case work', 'data structures', 'deque', 'implementation', 'mathematics', 'parsing', 'string']"
9697,969700,THE SULTAN'S CHAPATI,10,"['implementation', 'sorting']"
9698,969800,SAHUR & IMSA’,3,"['arithmetic', 'implementation', 'mathematics']"
9699,969900,RICE SACK,3,['implementation']
9700,970000,RAINFOREST CANOPY,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
9701,970100,EVEN POSITIVE CLOSURE SUM,15,"['combinatorics', 'dynamic programming', 'mathematics']"
9702,970200,LIS,15,['longest increasing sequence in o(n log n)']
9703,970300,Anti-Arithmetic Permutation,4,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
9704,970400,Longest Balanced Sub-Sequence,0,[]
9705,970500,CHARITY BOOTH RENTAL,8,"['combinatorics', 'dynamic programming', 'mathematics']"
9706,970600,FIND THE MARBLES,11,"['bruteforcing', 'geometry']"
9707,970700,Supercap Travels,0,[]
9708,970800,Charles Babbage's Difference Engine,5,"['implementation', 'mathematics', 'simulation']"
9709,970900,Lights,0,[]
9710,971000,Rooks,12,"['greedy', 'sorting']"
9711,971100,피보나치,8,"['dynamic programming', 'mathematics']"
9712,971200,Prefix Free Subsets,0,[]
9713,971300,Sum of Odd Sequence,3,"['arithmetic', 'mathematics']"
9714,971400,Spiral,9,"['case work', 'implementation', 'mathematics']"
9715,971500,면적 구하기,7,"['geometry', 'geometry; 3d', 'implementation', 'mathematics']"
9716,971600,Table,12,"['ad-hoc', 'sorting']"
9717,971700,Huge Knight,16,"['ad-hoc', 'breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'set / map by trees']"
9718,971800,Matrix Transformation,12,"['ad-hoc', 'greedy', 'mathematics']"
9719,971900,Bi‐coloring,11,"['bipartite graph', 'graph theory', 'graph traversal']"
9720,972000,Sorting,0,[]
9722,972200,Qurban 2011,0,[]
9723,972300,Right Triangle,3,"['arithmetic', 'geometry', 'mathematics', 'pythagoras theorem']"
9724,972400,Perfect Cube,3,['mathematics']
9725,972500,Mod-3 Permutation,10,"['ad-hoc', 'greedy']"
9726,972600,Negative Binary,12,[]
9727,972700,Mini Sudoku X,6,['implementation']
9728,972800,Pair Sum,7,"['binary search', 'data structures', 'set / map by hashing', 'two-pointer']"
9729,972900,XOR,0,[]
9730,973000,Sequence Merging,10,['greedy']
9731,973100,Recurrence,21,"['combinatorics', 'mathematics']"
9732,973200,Division Game,18,"['game theory', 'sprague–grundy theorem']"
9733,973300,꿀벌,6,"['data structures', 'set / map by hashing', 'implementation', 'string']"
9734,973400,순환 소수,10,"['euclidean algorithm', 'mathematics', 'number theory', 'parsing', 'string']"
9735,973500,삼차 방정식 풀기,17,"['mathematics', 'numerical analysis']"
9736,973600,정이면체군,12,['mathematics']
9737,973700,Area Between Outer Hull and Inner Hull,0,[]
9738,973800,Sharkovski’s Ordering,0,[]
9739,973900,M M Detour,0,[]
9740,974000,More Fun in Bicol,0,[]
9741,974100,Interior Lattice Points,0,[]
9742,974200,순열,8,['backtracking']
9743,974300,방정식 부수기,0,[]
9753,975300,짝 곱,9,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
9763,976300,마을의 친밀도,9,['bruteforcing']
9764,976400,서로 다른 자연수의 합,10,['dynamic programming']
9765,976500,여섯 방정식,11,"['euclidean algorithm', 'mathematics', 'number theory']"
9798,979800,Cartesian Tree,16,"['data structures', 'recursion', 'segment tree', 'tree']"
9799,979900,Strange Graph,19,"['eulerian path / circuit', 'graph theory', 'graph traversal']"
9800,980000,Patience,0,[]
9801,980100,Commuter train,0,[]
9802,980200,Self-Replicating Numbers,0,[]
9803,980300,Magic Multiplying Machine,12,['dynamic programming']
9804,980400,Intuitionistic Logic,0,[]
9805,980500,Pyramids,8,"['arbitrary precision / big integers', 'geometry', 'geometry; 3d', 'implementation', 'mathematics']"
9806,980600,The King,0,[]
9813,981300,Computing,14,"['arithmetic', 'bruteforcing', 'mathematics']"
9814,981400,Coding of Permutations,0,[]
9815,981500,Cabric Number Problem,6,"['implementation', 'simulation']"
9816,981600,Number of Locks,7,"['backtracking', 'bitmask', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'precomputation']"
9817,981700,Necklace of Beads,19,"[""burnside's lemma"", 'combinatorics', 'mathematics']"
9818,981800,Quantity of White Mice,0,[]
9819,981900,Color Change of Go Game Pieces,7,"['arbitrary precision / big integers', 'bitmask', 'exponentiation by squaring', 'implementation', 'mathematics', 'simulation']"
9820,982000,Placement of Keys,0,[]
9821,982100,Selecting the Optimal Teaching Fiends,0,[]
9822,982200,Global Warming,8,['sorting']
9823,982300,Trucking Diesel,0,[]
9824,982400,Ferries,0,[]
9825,982500,MODSUM,10,"['bruteforcing', 'dynamic programming', 'mathematics', 'number theory']"
9826,982600,Pancake,14,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal', 'precomputation']"
9827,982700,Forensic,0,[]
9828,982800,Walking,0,[]
9829,982900,Change,9,"['greedy', 'mathematics', 'number theory']"
9830,983000,Paint,7,"['greedy', 'sorting']"
9831,983100,Tour,0,[]
9832,983200,TUTOR,0,[]
9833,983300,Sequence,0,[]
9834,983400,Card,7,"['data structures', 'deque', 'implementation', 'simulation']"
9835,983500,BESTP,8,"['implementation', 'parsing', 'string']"
9836,983600,Sailing,0,[]
9837,983700,Weather,0,[]
9838,983800,XMAS,3,['implementation']
9839,983900,Invest,0,[]
9840,984000,Lazycat,13,"['breadth-first search', 'graph theory', 'graph traversal', 'travelling salesman problem']"
9841,984100,Cipher,0,[]
9842,984200,Prime,7,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
9843,984300,LVM,7,"['data structures', 'implementation', 'stack']"
9844,984400,Gecko,7,['dynamic programming']
9845,984500,Housing,9,['dynamic programming']
9846,984600,Rank,0,[]
9847,984700,4SUM,10,['bruteforcing']
9848,984800,Gift,3,['implementation']
9849,984900,Rect,4,"['geometry', 'mathematics']"
9850,985000,Cipher,4,['bruteforcing']
9851,985100,Hole,0,[]
9852,985200,Jawbreak,0,[]
9853,985300,Street,0,[]
9854,985400,Battleships,0,[]
9855,985500,Cuckoo for Hashing,7,['implementation']
9856,985600,Playing Fair with Cryptography,11,"['implementation', 'string']"
9857,985700,Rent-A-Pixel,0,[]
9858,985800,Stampede!,0,[]
9859,985900,Super Phyllis,12,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by trees']"
9860,986000,Tree Lighting,0,[]
9861,986100,The Urge to Merge,0,[]
9862,986200,Xenospeak,0,[]
9863,986300,Calling All Programmers,6,"['data structures', 'implementation', 'queue']"
9864,986400,Rocky,0,[]
9865,986500,Undercut,0,[]
9866,986600,Vacation Planning,15,"[""dijkstra's"", 'graph theory', 'graph traversal']"
9867,986700,Optimal Milking,19,"['data structures', 'divide and conquer', 'segment tree']"
9868,986800,The Bessie Shuffle,18,"['data structures', 'sparse table']"
9869,986900,Milk Scheduling,13,"['data structures', 'greedy', 'priority queue', 'sorting']"
9870,987000,Vacation Planning,12,"['floyd–warshall', 'graph theory']"
9871,987100,The Bessie Shuffle,16,"['exponentiation by squaring', 'mathematics']"
9872,987200,Record Keeping,8,"['data structures', 'set / map by hashing', 'sorting', 'string']"
9873,987300,Cow Baseball,8,"['binary search', 'bruteforcing', 'sorting']"
9874,987400,Wormholes,14,"['backtracking', 'bruteforcing', 'graph theory', 'graph traversal']"
9875,987500,Cow Curling,19,"['convex hull', 'geometry', 'point in convex polygon check']"
9876,987600,Building a Ski Course,18,"['dynamic programming', 'prefix sum']"
9877,987700,Ski Course Rating,20,"['binary search', 'data structures', 'disjoint set', 'parallel binary search']"
9878,987800,Bessie Slows Down,11,"['data structures', 'implementation', 'mathematics', 'priority queue', 'sorting']"
9879,987900,Cross Country Skiing,13,"['binary search', 'data structures', 'disjoint set', 'graph theory', 'graph traversal', 'minimum spanning tree']"
9880,988000,Recording the Moolympics,12,"['dynamic programming', 'greedy', 'sorting']"
9881,988100,Ski Course Design,6,"['bruteforcing', 'sweeping']"
9882,988200,Balanced Teams,8,['backtracking']
9883,988300,Morton Numbers,4,"['implementation', 'mathematics', 'string']"
9884,988400,Euclid,4,"['euclidean algorithm', 'implementation', 'mathematics', 'number theory']"
9885,988500,Claws,12,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
9886,988600,E-Casino,10,[]
9887,988700,Genome,12,['dynamic programming']
9888,988800,Fludtown,0,[]
9889,988900,Heng,0,[]
9890,989000,Matrix,10,['greedy']
9891,989100,Rect,5,"['case work', 'geometry', 'implementation']"
9892,989200,Width,0,[]
9893,989300,Paths,11,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
9894,989400,Pair,0,[]
9895,989500,Word,0,[]
9896,989600,Gray,4,[]
9897,989700,Lamp,4,"['bruteforcing', 'data structures', 'set / map by hashing', 'implementation', 'simulation', 'string']"
9898,989800,Domino,15,"['bitmask', 'dynamic programming']"
9899,989900,Train,11,"['breadth-first search', 'graph theory', 'graph traversal']"
9900,990000,Small,0,[]
9901,990100,RNA,0,[]
9907,990700,ID,3,"['arithmetic', 'implementation', 'mathematics']"
9908,990800,Carpet,6,"['bruteforcing', 'implementation']"
9909,990900,Cellular,10,"['bitmask', 'bruteforcing', 'implementation']"
9910,991000,Progress,10,['bruteforcing']
9911,991100,ERP,14,"[""dijkstra's"", 'graph theory', 'implementation']"
9912,991200,Lexical,9,"['combinatorics', 'mathematics']"
9913,991300,Max,4,['implementation']
9914,991400,Kansas,9,"['implementation', 'simulation']"
9915,991500,Cars,9,"['implementation', 'simulation']"
9916,991600,Zeros,4,"['arbitrary precision / big integers', 'arithmetic', 'implementation', 'mathematics']"
9917,991700,Rank,10,"['depth-first search', 'graph theory', 'graph traversal']"
9918,991800,Cube,15,"['bruteforcing', 'case work', 'depth-first search', 'geometry', 'geometry; 3d', 'graph theory', 'graph traversal', 'implementation']"
9919,991900,Route,6,['implementation']
9920,992000,Image,9,"['divide and conquer', 'recursion']"
9921,992100,Coin,10,['dynamic programming']
9922,992200,Magic,0,[]
9923,992300,Triple,0,[]
9932,993200,미스테리,0,[]
9933,993300,민균이의 비밀번호,5,"['data structures', 'set / map by hashing', 'implementation', 'string']"
9934,993400,완전 이진 트리,10,"['recursion', 'tree']"
9935,993500,문자열 폭발,12,"['data structures', 'stack', 'string']"
9936,993600,체스로 도미노를 타자,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
9937,993700,직선으로 만드는 삼각형,15,"['combinatorics', 'mathematics']"
9938,993800,방 청소,18,"['data structures', 'disjoint set']"
9939,993900,Bowling Score Assistant,0,[]
9940,994000,Spectrum,14,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
9941,994100,One Move from Towers of Hanoi,11,['recursion']
9942,994200,하노이의 네 탑,13,"['dynamic programming', 'mathematics']"
9943,994300,Light Switches,0,[]
9944,994400,NxM 보드 완주하기,13,"['backtracking', 'implementation']"
9945,994500,Centroid of Point Masses,3,"['arithmetic', 'mathematics']"
9946,994600,단어 퍼즐,5,"['sorting', 'string']"
9947,994700,Coin tossing,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
9948,994800,Have you had your birthday yet?,5,[]
9949,994900,Hide those Letters,4,"['implementation', 'string']"
9950,995000,Rectangles,3,"['arithmetic', 'implementation', 'mathematics']"
9951,995100,Word Extraction,7,[]
9952,995200,Bree's pantry,8,"['data structures', 'deque', 'sorting']"
9953,995300,Paula's search,6,"['binary search', 'implementation']"
9954,995400,Cedric's Cypher,4,"['implementation', 'string']"
9955,995500,Recycling,8,[]
9956,995600,Reversing Words,8,['string']
9957,995700,Word Crosses,0,[]
9958,995800,All Squares,12,"['geometry', 'mathematics']"
9959,995900,Dominosa,0,[]
9960,996000,Digit Sums,19,['dynamic programming']
9961,996100,Stamps,0,[]
9962,996200,Assimilation,0,[]
9971,997100,The Hardest Problem Ever,4,"['implementation', 'string']"
9972,997200,Rubik’s Cube Solver,16,"['case work', 'implementation', 'simulation']"
9973,997300,Polar Explorer,7,"['geometry', 'mathematics']"
9974,997400,Door Man,12,"['case work', 'eulerian path / circuit', 'graph theory', 'parsing', 'string']"
9975,997500,The Umbrella Problem: 2054,0,[]
9976,997600,"Blue Gene, Jr.",11,"['implementation', 'recursion', 'string']"
9977,997700,Byte Me!,9,"['implementation', 'simulation']"
9978,997800,World’s Worst Bus Schedule,8,"['implementation', 'parsing', 'simulation', 'string']"
9979,997900,Does This Make Me Look Fat?,6,"['implementation', 'parsing', 'sorting', 'string']"
9980,998000,Manifest Destiny,0,[]
9981,998100,Treasure Hunters,7,"['bitmask', 'bruteforcing', 'implementation', 'simulation']"
9982,998200,Frogger's For Dinner,5,"['implementation', 'simulation']"
9983,998300,더 푸르게,13,"['backtracking', 'bruteforcing', 'implementation']"
9984,998400,Get Out 'Da Way!,0,[]
9985,998500,Missing Piece 2001,19,"['bruteforcing', 'data structures', 'meet in the middle', 'set / map by trees']"
9986,998600,Asteroids!,11,"['breadth-first search', 'graph theory', 'graph traversal']"
9987,998700,포켓몬 마스터,0,[]
9988,998800,Roadblock,13,"[""dijkstra's"", 'graph theory']"
9989,998900,Cow Decathlon,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
9990,999000,Airplane Boarding,25,"['splay tree', 'tree']"
9991,999100,Auto-Complete,12,"['binary search', 'sorting', 'string']"
9992,999200,비밀 메시지,14,['dynamic programming']
9993,999300,Mirror Field,10,"['bruteforcing', 'graph theory']"
9994,999400,Secret Code,13,"['bruteforcing', 'divide and conquer', 'dynamic programming', 'recursion', 'string']"
9995,999500,HM과 TM,0,[]
9996,999600,한국이 그리울 땐 서버에 접속하지,8,"['regular expression', 'string']"
9997,999700,폰트,13,"['bitmask', 'bruteforcing', 'recursion']"
9998,999800,블록 쌓기,13,"['binary search', 'ternary search']"
9999,999900,구구,0,[]
10000,1000000,원 영역,17,"['data structures', 'disjoint set', 'geometry', 'sorting', 'stack', 'sweeping']"
10001,1000100,Hash,17,"['exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'meet in the middle', 'modular multiplicative inverse', 'number theory']"
10003,1000300,Tower Defense Game,18,"['graph theory', 'graph traversal']"
10004,1000400,Bytecomputer,17,['dynamic programming']
10005,1000500,Maze,25,"['constructive', 'geometry']"
10006,1000600,Colorful Chain,15,"['sliding window', 'two-pointer']"
10007,1000700,레이저,20,"['dynamic programming', 'geometry', 'prefix sum', 'sweeping']"
10008,1000800,Polarization,23,"['센트로이드', 'graph theory', 'knapsack', 'mathematics', 'tree']"
10009,1000900,Loteria 2,0,[]
10010,1001000,Bajtokrąg,21,"['binary search', 'two-pointer']"
10011,1001100,Zadanie Eulera,0,[]
10012,1001200,Kamyki,14,"['constructive', 'game theory', 'mathematics', 'number theory']"
10013,1001300,Graf planarny,0,[]
10014,1001400,Traveling Saga Problem,24,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'segment tree', 'tree']"
10015,1001500,Śnieżyca,21,"['data structures', 'segment tree', 'set / map by trees']"
10016,1001600,Świetliki,18,['ternary search']
10017,1001700,Tester wioseł,25,"['2-sat', 'graph theory', 'strongly connected component', 'two-pointer']"
10018,1001800,The Lazy Cow,19,"['data structures', 'segment tree', 'sweeping']"
10019,1001900,Sabotage,17,"['binary search', 'dynamic programming', 'parametric search', 'prefix sum']"
10020,1002000,Counting Friends,18,['graph theory']
10021,1002100,Watering the Fields,13,"['graph theory', 'minimum spanning tree']"
10022,1002200,The Lazy Cow,12,['prefix sum']
10023,1002300,Mooo Moo,11,"['dynamic programming', 'knapsack']"
10024,1002400,Reordering the Cows,8,"['implementation', 'permutation cycle decomposition']"
10025,1002500,게으른 백곰,8,"['sliding window', 'two-pointer']"
10026,1002600,적록색약,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
10027,1002700,CSS,22,"['parsing', 'string']"
10028,1002800,HISTOGRAMI,21,"['data structures', 'dynamic programming', 'segment tree']"
10029,1002900,MOSTOVI,23,"['data structures', 'segment tree', 'set / map by trees']"
10030,1003000,Fair Photography,0,[]
10031,1003100,Cow Optics,23,"['case work', 'data structures', 'graph theory', 'graph traversal', 'implementation', 'segment tree']"
10032,1003200,Code Breaking,26,[]
10033,1003300,Fair Photography,16,"['binary search', 'prefix sum']"
10034,1003400,Odometer,18,['dynamic programming']
10035,1003500,Odometer,10,['bruteforcing']
10036,1003600,Fair Photography,15,"['prefix sum', 'sorting', 'two-pointer']"
10037,1003700,Decorating the Pastures,14,"['breadth-first search', 'bipartite graph', 'depth-first search', 'graph theory', 'graph traversal']"
10038,1003800,Dueling GPSs,16,"[""dijkstra's"", 'graph theory']"
10039,1003900,평균 점수,2,"['arithmetic', 'mathematics']"
10040,1004000,투표,4,"['implementation', 'simulation']"
10041,1004100,관광,5,"['arithmetic', 'case work', 'mathematics']"
10042,1004200,部活のスケジュール表 (Schedule),12,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
10043,1004300,タクシー (Taxis),17,"['data structures', ""dijkstra's"", 'graph theory', 'priority queue']"
10044,1004400,小籠包 (Xiao Long Bao),20,['dynamic programming']
10045,1004500,JOI 紋章 (JOI Emblem),12,"['bruteforcing', 'implementation']"
10046,1004600,IOI 饅頭 (IOI Manju),15,['dynamic programming']
10047,1004700,バームクーヘン (Baumkuchen),17,"['binary search', 'two-pointer']"
10048,1004800,フクロモモンガ (Sugar Glider),21,"[""dijkstra's"", 'graph theory']"
10049,1004900,切り取り線 (Cutting),26,"['data structures', 'disjoint set', 'euler characteristic (χ=v-e+f)', 'geometry', 'segment tree with lazy propagation', 'segment tree']"
10050,1005000,블록,25,"['ad-hoc', 'constructive']"
10051,1005100,Buffed Buffet,22,[]
10052,1005200,Crane Balancing,22,"['geometry', 'mathematics', 'physics', 'area of a polygon']"
10053,1005300,필승 전략,20,['dynamic programming']
10054,1005400,Maze Reduction,24,[]
10055,1005500,Messenger,23,"['binary search', 'geometry']"
10056,1005600,Metal Processing Plant,25,"['2-sat', 'binary search', 'data structures', 'disjoint set', 'graph theory', 'strongly connected component']"
10057,1005700,Pachinko,26,"['gaussian elimination', 'linear algebra', 'mathematics']"
10058,1005800,센서 네트워크,26,"['bipartite matching', 'geometry']"
10059,1005900,Skiing,0,[]
10060,1006000,감시 카메라,21,"['data structures', 'greedy', 'sparse table']"
10061,1006100,Wire Crossing,0,[]
10062,1006200,은기의 DNA 분자,25,[]
10063,1006300,KOSTA,24,[]
10064,1006400,GRAD,25,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'tree', 'tree decomposition']"
10065,1006500,KRAVE,22,[]
10066,1006600,팰린드롬,23,"['data structures', ""manacher's"", 'palindrome tree', 'string', 'suffix array and lcp array', 'tree']"
10067,1006700,수열 나누기,21,"['convex hull trick', 'dynamic programming']"
10068,1006800,구슬이 서말이라도 꿰어야 보배,23,"['dynamic programming', 'dynamic programming on trees', 'tree']"
10069,1006900,Rail,24,"['ad-hoc', 'sorting']"
10070,1007000,벽,21,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
10071,1007100,Game,20,"['data structures', 'disjoint set', 'graph theory', 'greedy']"
10072,1007200,곤돌라 - 곤돌라 수열 확인,13,"['case work', 'implementation']"
10073,1007300,곤돌라 - 교체 수열,15,['constructive']
10074,1007400,곤돌라 - 교체 수열의 개수 세기,17,"['combinatorics', 'exponentiation by squaring', 'mathematics']"
10075,1007500,친구,26,['greedy']
10076,1007600,휴가,24,"['data structures', 'divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'persistent segment tree', 'segment tree']"
10077,1007700,Orchard,0,[]
10078,1007800,Sightseeing,0,[]
10079,1007900,CATS,0,[]
10080,1008000,Obelisk,0,[]
10081,1008100,Big Circle,19,"['divide and conquer', 'sweeping']"
10082,1008200,Fuleco and Brazil ant,11,[]
10083,1008300,Strategy,15,"['mathematics', 'number theory']"
10084,1008400,Mascot Song,0,[]
10085,1008500,Tickets,0,[]
10086,1008600,Andres Iniesta,0,[]
10087,1008700,Orbit,18,"['binary search', 'geometry', 'mathematics']"
10088,1008800,XOR,0,[]
10089,1008900,Profit,21,"['data structures', 'depth-first search', 'euler tour technique', 'graph theory', 'graph traversal', 'segment tree with lazy propagation', 'segment tree', 'tree']"
10090,1009000,Counting Inversions,16,"['data structures', 'divide and conquer', 'segment tree', 'sorting']"
10091,1009100,Cyclic Marathon,0,[]
10092,1009200,Decreasing Sequences of Points,0,[]
10093,1009300,숫자,4,['implementation']
10094,1009400,Computer Network,16,"['ad-hoc', 'breadth-first search', 'differential cryptanalysis', 'graph theory', 'graph traversal']"
10095,1009500,Cop and Robber,0,[]
10096,1009600,세 친구,13,"['ad-hoc', 'string']"
10097,1009700,수열,23,[]
10098,1009800,양분,26,['geometry']
10099,1009900,Portals,18,"['breadth-first search', 'graph theory', 'graph traversal']"
10100,1010000,Senior Postmen,19,"['eulerian path / circuit', 'graph theory']"
10101,1010100,삼각형 외우기,2,"['geometry', 'implementation']"
10102,1010200,개표,3,['string']
10103,1010300,주사위 게임,3,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
10104,1010400,Party Invitation,4,"['data structures', 'implementation', 'linked list', 'simulation']"
10105,1010500,Assigning Partners,5,"['data structures', 'set / map by hashing', 'implementation', 'string']"
10106,1010600,The Geneva Confection,8,"['data structures', 'stack']"
10107,1010700,Tinted Glass Window,0,[]
10108,1010800,Lazy Fox,0,[]
10109,1010900,Troyangles,12,['dynamic programming']
10110,1011000,King Gruff,17,"['binary search', ""dijkstra's"", 'graph theory', 'offline queries', 'prefix sum']"
10111,1011100,Werewolf,0,[]
10112,1011200,Where’s That Fuel?,9,"['greedy', 'sorting']"
10113,1011300,Early Exam Evacuation,0,[]
10114,1011400,Gates,0,[]
10116,1011600,The Forest of Fangorn,21,['geometry']
10117,1011700,Question,21,"['ad-hoc', 'mathematics']"
10118,1011800,007,19,[]
10119,1011900,Cake,20,"['data structures', 'segment tree']"
10120,1012000,The Wall,26,"[""dijkstra's"", 'dual graph', 'graph theory', 'greedy', 'planar graph']"
10121,1012100,Salad Bar,18,"['data structures', 'segment tree', 'stack']"
10122,1012200,Hotels,17,"['combinatorics', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'tree']"
10123,1012300,Bricks,20,"['case work', 'constructive', 'greedy']"
10124,1012400,Couriers,20,"['data structures', 'randomization', 'segment tree']"
10125,1012500,Snake,0,[]
10126,1012600,Cards,21,"['data structures', 'segment tree']"
10127,1012700,criminals,19,"['ad-hoc', 'dynamic programming']"
10128,1012800,Supercomputer,25,"['convex hull trick', 'greedy', 'mathematics', 'tree']"
10129,1012900,작은 새,20,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
10130,1013000,Rally,23,"['data structures', 'graph theory', 'segment tree', 'sweeping', 'topological sorting']"
10131,1013100,FarmCraft,19,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'sorting', 'tree']"
10132,1013200,Around the world,21,"['greedy', 'two-pointer']"
10133,1013300,Ant colony,17,"['binary search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
10134,1013400,Tourism,25,"['backtracking', 'bitmask', 'depth-first search', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'graph traversal']"
10135,1013500,Solar lamps,26,"['data structures', 'divide and conquer', 'segment tree']"
10136,1013600,Solar Panels,21,"['mathematics', 'number theory']"
10137,1013700,Freight,20,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque']"
10138,1013800,Kuglarz,17,[]
10139,1013900,Lustra,6,['sorting']
10140,1014000,Bohater,0,[]
10141,1014100,Pakowanie,0,[]
10142,1014200,Drużyny,25,"['data structures', 'divide and conquer', 'dynamic programming', 'segment tree']"
10143,1014300,Parking,0,[]
10144,1014400,Ciągi,0,[]
10145,1014500,Fiolki,0,[]
10146,1014600,Muzeum,24,[]
10147,1014700,Plemiona,0,[]
10148,1014800,Bazarek,0,[]
10149,1014900,Budowa,0,[]
10150,1015000,Gra w podwajanie,0,[]
10151,1015100,Królestwo,0,[]
10152,1015200,Matryca,0,[]
10153,1015300,Wykładzina,0,[]
10154,1015400,Zadanie,0,[]
10155,1015500,Żarówki,0,[]
10156,1015600,과자,2,"['arithmetic', 'mathematics']"
10157,1015700,자리배정,7,['implementation']
10158,1015800,개미,7,"['ad-hoc', 'arithmetic', 'mathematics']"
10159,1015900,저울,12,"['floyd–warshall', 'graph theory', 'graph traversal']"
10160,1016000,암호,15,['dynamic programming']
10161,1016100,톨게이트,0,[]
10162,1016200,전자레인지,3,"['greedy', 'implementation', 'mathematics']"
10163,1016300,색종이,5,['implementation']
10164,1016400,격자상의 경로,9,"['combinatorics', 'dynamic programming', 'mathematics']"
10165,1016500,버스 노선,16,"['greedy', 'sorting', 'sweeping']"
10166,1016600,관중석,10,"['euclidean algorithm', 'mathematics', 'number theory']"
10167,1016700,금광,21,"['value / coordinate compression', 'data structures', 'segment tree', 'sweeping']"
10168,1016800,파발마,21,"['convex hull trick', 'dynamic programming']"
10169,1016900,안전한 비상연락망,22,"['data structures', 'disjoint set', 'graph theory', 'heavy-light decomposition', 'segment tree with lazy propagation', 'lowest common ancestor', 'minimum spanning tree', 'segment tree', 'tree']"
10170,1017000,NFC West vs North,1,['implementation']
10171,1017100,고양이,1,['implementation']
10172,1017200,개,1,['implementation']
10173,1017300,니모를 찾아서,4,['string']
10174,1017400,팰린드롬,4,"['implementation', 'string']"
10175,1017500,Dominant Species,5,['implementation']
10176,1017600,Opposite Words,5,"['implementation', 'string']"
10177,1017700,Magic Squares,5,[]
10178,1017800,할로윈의 사탕,3,"['arithmetic', 'mathematics']"
10179,1017900,쿠폰,3,"['arithmetic', 'implementation', 'mathematics']"
10180,1018000,Ship Selection,3,"['arithmetic', 'mathematics']"
10181,1018100,Federation Favorites,5,['mathematics']
10182,1018200,AcidBase,5,"['implementation', 'mathematics']"
10183,1018300,Snake2,8,[]
10193,1019300,Word Swap,4,['string']
10194,1019400,Aligned Calender,6,['implementation']
10195,1019500,Underwater Trip,0,[]
10196,1019600,Minion Walk,9,"['graph theory', 'graph traversal']"
10197,1019700,Word Ladder,11,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'string']"
10198,1019800,Crossing River,12,[]
10199,1019900,Shark Tour,0,[]
10200,1020000,Jam Factory,12,[]
10201,1020100,The Minions Build a Brick Wall,0,[]
10202,1020200,Longest Subsequence,4,"['implementation', 'string']"
10203,1020300,Count Vowels,4,['string']
10204,1020400,Neighborhoods in Graphs,8,"['breadth-first search', 'depth-first search', 'floyd–warshall', 'graph theory', 'graph traversal', 'parsing', 'string']"
10205,1020500,헤라클레스와 히드라,3,"['implementation', 'string']"
10206,1020600,Odysseus and the Sirens,0,[]
10207,1020700,Heracles and the Stables of Augeas,13,"['dynamic programming', 'geometry']"
10208,1020800,Milo of Croton and the Calf,0,[]
10209,1020900,Theseus and the Minotaur,7,"['data structures', 'stack']"
10210,1021000,The Trojan Horse,11,"['depth-first search', 'graph theory', 'graph traversal']"
10211,1021100,Maximum Subarray,7,"['bruteforcing', 'dynamic programming', 'prefix sum']"
10212,1021200,Mystery,0,[]
10213,1021300,XH Company,20,"['convex hull trick', 'convex hull', 'geometry']"
10214,1021400,Baseball,3,['implementation']
10215,1021500,Colored Bead Works,17,"['bitmask', 'bruteforcing', 'case work', 'dynamic programming', 'dynamic programming using bitfield', 'implementation', 'mathematics', 'probability theory']"
10216,1021600,Count Circle Groups,11,"['data structures', 'disjoint set', 'geometry', 'graph theory', 'graph traversal']"
10217,1021700,KCM Travel,16,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
10218,1021800,Maze,16,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'implementation']"
10219,1021900,Meats On The Grill,5,"['ad-hoc', 'constructive', 'implementation']"
10220,1022000,Self Representing Seq,17,"['ad-hoc', 'mathematics']"
10221,1022100,Test Data Analysis,21,"['case work', 'dynamic programming', 'prefix sum']"
10222,1022200,Tons Of Damage,19,"['combinatorics', 'mathematics']"
10223,1022300,Fertilizing,21,"['data structures', 'greedy', 'segment tree with lazy propagation', 'mathematics', 'segment tree']"
10224,1022400,Watering,22,"['bruteforcing', 'geometry', 'line segment intersection check']"
10225,1022500,Cluedo,7,"['implementation', 'two-pointer']"
10226,1022600,Hotter Colder,0,[]
10227,1022700,삶의 질,18,"['binary search', 'parametric search', 'prefix sum']"
10228,1022800,Memory,5,['implementation']
10229,1022900,Traffic Congestion,13,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
10230,1023000,Maze 1,3,"['ad-hoc', 'constructive']"
10231,1023100,Languages,22,"['ad-hoc', 'hashing', 'heuristics', 'mathematics', 'statistics']"
10232,1023200,Saveit,24,"['ad-hoc', 'graph theory', 'graph traversal', 'tree']"
10240,1024000,Banjo,0,[]
10241,1024100,Cheats,0,[]
10242,1024200,Diplomacy,14,"['bruteforcing', 'floyd–warshall', 'graph theory', 'graph traversal']"
10243,1024300,Fantastic Problem,23,"['data structures', 'mathematics', 'number theory', 'primality test', 'segment tree', 'sieve of eratosthenes']"
10244,1024400,최대공약수들,16,"['euclidean algorithm', 'mathematics', 'number theory']"
10245,1024500,Gold Bandits,18,"['backtracking', 'bruteforcing', ""dijkstra's"", 'graph theory']"
10246,1024600,부동산 경매,11,"['bruteforcing', 'mathematics']"
10247,1024700,Reconnaissance,15,['ternary search']
10248,1024800,Super Mario 169,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'implementation', 'travelling salesman problem']"
10249,1024900,Two Knight’s Poem,14,"['graph theory', 'graph traversal']"
10250,1025000,ACM 호텔,4,"['arithmetic', 'implementation', 'mathematics']"
10251,1025100,운전 면허 시험,16,['dynamic programming']
10252,1025200,그리드 그래프,9,"['ad-hoc', 'constructive']"
10253,1025300,헨리,11,"['implementation', 'mathematics']"
10254,1025400,고속도로,19,"['convex hull', 'geometry', 'rotating calipers']"
10255,1025500,교차점,17,"['case work', 'geometry', 'line segment intersection check']"
10256,1025600,돌연변이,19,"['aho-corasick', 'data structures', 'string', 'tree', 'trie']"
10257,1025700,얼룩,21,"['bruteforcing', 'case work', 'dynamic programming']"
10258,1025800,스위치 배열,15,"['ad-hoc', 'mathematics']"
10259,1025900,Amanda Lounges,15,"['depth-first search', 'graph theory', 'graph traversal']"
10260,1026000,Basin City Surveillance,23,[]
10261,1026100,Catalan Square,6,"['arbitrary precision / big integers', 'combinatorics', 'mathematics']"
10262,1026200,주사위 게임,4,"['arithmetic', 'implementation', 'mathematics', 'probability theory']"
10263,1026300,Opening Ceremony,9,"['binary search', 'greedy']"
10264,1026400,Particle Swapping,22,"['binary search', 'data structures', 'disjoint set', 'graph theory', 'lowest common ancestor', 'minimum spanning tree', 'parallel binary search', 'tree']"
10265,1026500,MT,17,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'knapsack', 'strongly connected component']"
10266,1026600,시계 사진들,16,"['knuth–morris–pratt', 'string']"
10267,1026700,사각형은 몇 개?,19,['geometry']
10268,1026800,Road Work,20,"['case work', 'dynamic programming']"
10269,1026900,Train Passengers,5,"['implementation', 'simulation']"
10270,1027000,Algebraic Teamwork,4,"['combinatorics', 'mathematics']"
10271,1027100,Beam me out!,12,[]
10272,1027200,현상금 사냥꾼 김정은,16,['dynamic programming']
10273,1027300,고대 동굴 탐사,15,"['dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'topological sorting', 'tree']"
10274,1027400,Equator,11,[]
10275,1027500,골드 러시,5,"['implementation', 'mathematics']"
10276,1027600,Jewelry Exhibition,17,['bipartite matching']
10277,1027700,JuQueen,19,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
10278,1027800,Laser Cutting,0,[]
10279,1027900,부분 수열이 아님,18,['dynamic programming']
10280,1028000,Pizza voting,5,"['greedy', 'mathematics']"
10281,1028100,Choosing Ice Cream,12,"['implementation', 'mathematics', 'probability theory', 'simulation']"
10282,1028200,해킹,12,"[""dijkstra's"", 'graph theory']"
10283,1028300,Floor Painting,0,[]
10284,1028400,Lift Problems,12,['dynamic programming']
10285,1028500,Pawns,0,[]
10286,1028600,Runway Planning,5,"['arithmetic', 'mathematics']"
10287,1028700,Spy Network,20,"['euclidean algorithm', 'graph theory', 'mathematics', 'number theory', 'strongly connected component', 'topological sorting']"
10288,1028800,Talent Selection,0,[]
10289,1028900,Train Station Tunnel,0,[]
10290,1029000,Word Search,13,"['bruteforcing', 'case work', 'implementation']"
10291,1029100,Ribbon,8,"['euclidean algorithm', 'mathematics', 'number theory']"
10292,1029200,Man in the Middle,16,"['articulation points and bridges', 'graph theory']"
10293,1029300,Ranks in groups,18,"['data structures', 'disjoint set', 'smaller to larger technique', 'set / map by trees']"
10294,1029400,Shops,12,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
10295,1029500,Hiking,10,"[""dijkstra's"", 'graph theory']"
10296,1029600,IceBucketChallenge,6,"['binary search', 'implementation', 'mathematics']"
10297,1029700,ผู้เฒ่าเต่า,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
10298,1029800,Tigger,10,['dynamic programming']
10299,1029900,아미노산,0,[]
10300,1030000,Goldbach Partition,10,[]
10301,1030100,Cookie Farm,0,[]
10302,1030200,การแบ่งพื้นที่แบบบันไดวน,10,[]
10303,1030300,Headshot,6,['mathematics']
10304,1030400,Golden Khon Kaen,0,[]
10305,1030500,Maximal Sum,0,[]
10306,1030600,Radix 32,0,[]
10307,1030700,Van Gogh,0,[]
10308,1030800,Two’s Network,0,[]
10309,1030900,Kolonie,0,[]
10310,1031000,Most,0,[]
10311,1031100,Stavitel,12,['greedy']
10312,1031200,Lodê,3,"['mathematics', 'number theory']"
10313,1031300,Direct Visibility,0,[]
10314,1031400,Karel the Robot,0,[]
10315,1031500,More or Less Accurate,0,[]
10316,1031600,Self-Intersecting Path,0,[]
10317,1031700,Lengthy Traveling Salesman,0,[]
10318,1031800,Picture Validator,0,[]
10319,1031900,좀비 아포칼립스,21,['maximum flow']
10320,1032000,Button Bashing,9,"['breadth-first search', 'graph theory', 'graph traversal']"
10321,1032100,요새 건설,20,"['convex hull', 'geometry', 'ternary search', 'two-pointer']"
10322,1032200,Dropping Directions,0,[]
10323,1032300,Excellent Engineers,19,"['data structures', 'segment tree']"
10324,1032400,Floating Formation,20,"['breadth-first search', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'greedy', 'segment tree with lazy propagation', 'segment tree', 'tree']"
10325,1032500,Growling Gears,11,['mathematics']
10326,1032600,Highway Hassle,0,[]
10327,1032700,피보나치 문제해결전략,18,"['extended euclidean algorithm', 'mathematics', 'number theory']"
10328,1032800,Jury Jeopardy,7,"['graph theory', 'implementation', 'simulation']"
10329,1032900,Key to Knowledge,19,"['bidirectional search', 'bruteforcing', 'data structures', 'graph theory', 'meet in the middle', 'set / map by trees']"
10330,1033000,비트 문자열 재배열하기,12,"['breadth-first search', 'bitmask', 'bit set', 'graph theory', 'graph traversal']"
10331,1033100,Miscalculation,9,"['mathematics', 'parsing', 'string']"
10332,1033200,Shopping,10,"['greedy', 'sorting', 'sweeping']"
10333,1033300,Space Golf,16,"['calculus', 'geometry', 'mathematics', 'physics']"
10334,1033400,Automotive Navigation,19,['implementation']
10335,1033500,There is No Alternative,17,"['articulation points and bridges', 'bruteforcing', 'graph theory', 'minimum spanning tree']"
10336,1033600,Flipping Parentheses,19,"['data structures', 'segment tree']"
10337,1033700,Cornering at Poles,24,[]
10338,1033800,Sweet War,22,[]
10339,1033900,Exhibition,26,[]
10340,1034000,L∞ Jumps,0,[]
10341,1034100,(More) Multiplication,0,[]
10342,1034200,Fun House,7,"['implementation', 'simulation']"
10343,1034300,Lexicography,12,"['combinatorics', 'mathematics', 'string']"
10344,1034400,The Leprechaun Hunt,0,[]
10345,1034500,Word Cloud,0,[]
10346,1034600,The Maze Makers,0,[]
10347,1034700,Reverse Rot,4,[]
10348,1034800,Shrine Maintenance,0,[]
10349,1034900,Wet Tiles,0,[]
10350,1035000,은행,26,"['ad-hoc', 'mathematics', 'prefix sum']"
10351,1035100,Circle of digits,0,[]
10352,1035200,UFO,0,[]
10353,1035300,Frame,6,"['case work', 'mathematics', 'number theory']"
10354,1035400,Points,0,[]
10355,1035500,Most Influential Pumpkin,23,[]
10356,1035600,Grammar,15,['dynamic programming']
10357,1035700,Triples,10,"['bruteforcing', 'mathematics', 'number theory', 'two-pointer']"
10358,1035800,Multi-Machine Scheduling of Two Applications,0,[]
10359,1035900,Strange Antennas,0,[]
10360,1036000,The Mountain of Gold?,14,"['bellman–ford', 'graph theory']"
10361,1036100,Sequence,17,"['combinatorics', 'dynamic programming', 'mathematics']"
10362,1036200,Turtle Graphics,5,"['implementation', 'simulation']"
10363,1036300,Circle and Marble,0,[]
10364,1036400,Group of Strangers,20,"['inclusion and exclusion', 'mathematics']"
10365,1036500,Pantun Grader,0,[]
10366,1036600,Hari Merdeka,0,[]
10367,1036700,Túnel de Rata,0,[]
10368,1036800,Best Position,0,[]
10369,1036900,Spokes Wheel,0,[]
10370,1037000,Ball,18,"['combinatorics', 'mathematics']"
10371,1037100,Irrigation Lines,18,['bipartite matching']
10372,1037200,Alarm Clock,5,"['bruteforcing', 'implementation']"
10373,1037300,Buffcraft,11,"['bruteforcing', 'prefix sum', 'sorting']"
10374,1037400,Combinator Expression,0,[]
10375,1037500,Digits,12,['greedy']
10376,1037600,Expression,0,[]
10377,1037700,Fragmentation,22,['dynamic programming']
10378,1037800,Grave,8,['geometry']
10379,1037900,Hiking in the Hills,17,"['data structures', 'geometry', 'graph theory', 'priority queue']"
10380,1038000,Instruction,15,"['bit set', 'implementation', 'simulation', 'tree']"
10381,1038100,Joy of Flight,12,"['constructive', 'geometry', 'mathematics']"
10382,1038200,Kebab House,18,['dynamic programming']
10383,1038300,The Cost of Moving,4,"['sorting', 'string']"
10384,1038400,팬그램,6,"['implementation', 'string']"
10385,1038500,This Too Shall Pass,0,[]
10386,1038600,\(\text{Con}+\cfrac{\text{tin}}{\text{ued}+\cfrac{\text{Frac}}{\text{tions}}}\),14,"['arithmetic', 'mathematics']"
10387,1038700,A Cure for the Common Code,0,[]
10388,1038800,Domiyahtzee!,0,[]
10389,1038900,Generalized Roman Numerals,0,[]
10390,1039000,Inspectors,0,[]
10391,1039100,Path of Least Persistence,0,[]
10392,1039200,Speed Skills,0,[]
10393,1039300,Time Warp,0,[]
10394,1039400,"Watch, Man!",0,[]
10395,1039500,Automated Checking Machine,3,['implementation']
10396,1039600,Black and white stones,14,"['dynamic programming', 'greedy']"
10397,1039700,Counting substhreengs,10,"['dynamic programming', 'mathematics', 'parsing', 'string']"
10398,1039800,Dividing the names,21,[]
10399,1039900,Even distribution,17,[]
10400,1040000,Fence the vegetables,0,[]
10401,1040100,Galaxy collision,15,"['depth-first search', 'graph theory', 'graph traversal']"
10402,1040200,Help cupid,8,"['greedy', 'sorting']"
10403,1040300,Intrepid climber,12,[]
10404,1040400,Journey through the kingdom,0,[]
10405,1040500,Knights of the Round Table,0,[]
10406,1040600,The fellowship of the ring,3,['implementation']
10407,1040700,2 타워,8,"['mathematics', 'number theory']"
10408,1040800,The return of the King,5,"['implementation', 'string']"
10409,1040900,서버,3,"['arithmetic', 'implementation', 'mathematics']"
10410,1041000,Eligibility,4,['implementation']
10411,1041100,Plane Ticket Pricing,13,['dynamic programming']
10412,1041200,Facility Locations,14,"['data structures', 'disjoint set']"
10413,1041300,반복되는 부분 문자열,19,"['string', 'suffix array and lcp array']"
10414,1041400,Landline Telephone Network,17,"['graph theory', 'minimum spanning tree']"
10415,1041500,Aquarium Tank,17,"['binary search', 'geometry']"
10416,1041600,Restaurant Ratings,13,"['combinatorics', 'mathematics']"
10417,1041700,Locked Treasure,12,"['combinatorics', 'dynamic programming', 'mathematics']"
10418,1041800,Yet Satisfiability Again!,11,"['bitmask', 'bruteforcing']"
10419,1041900,지각,3,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
10420,1042000,기념일 1,5,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
10421,1042100,수식 완성하기,11,"['backtracking', 'bruteforcing']"
10422,1042200,괄호,13,"['combinatorics', 'dynamic programming', 'mathematics']"
10423,1042300,전기가 부족해,14,"['graph theory', 'minimum spanning tree']"
10424,1042400,알고리즘 기말고사,9,['implementation']
10425,1042500,피보나치 인버스,10,"['arbitrary precision / big integers', 'binary search']"
10426,1042600,기념일 2,5,['implementation']
10427,1042700,빚,11,"['greedy', 'prefix sum', 'sorting']"
10428,1042800,마법의 약,16,"['combinatorics', 'dynamic programming', 'mathematics']"
10429,1042900,QUENTO,12,"['depth-first search', 'graph theory', 'graph traversal', 'implementation']"
10430,1043000,나머지,1,"['implementation', 'arithmetic', 'mathematics']"
10431,1043100,줄세우기,6,"['implementation', 'simulation']"
10432,1043200,데이터 스트림의 섬,7,"['bruteforcing', 'data structures', 'stack']"
10433,1043300,부동소수점 형식 변환,0,[]
10434,1043400,행복한 소수,9,"['implementation', 'mathematics', 'number theory', 'primality test', 'simulation']"
10435,1043500,만칼라,18,"['ad-hoc', 'backtracking', 'constructive']"
10436,1043600,무한 유리수 트리,12,"['mathematics', 'tree']"
10437,1043700,자라나는 직교 나선,11,"['ad-hoc', 'mathematics']"
10438,1043800,페리 수열의 합,19,"['euler totient function', 'mathematics', 'number theory']"
10439,1043900,여왕님의 테라스,15,"['dynamic programming', 'geometry']"
10440,1044000,The Binary Search Efficiency Doubter,13,['mathematics']
10441,1044100,Preorder Traversals,10,[]
10442,1044200,Rank Order,8,['sorting']
10443,1044300,Mokia,21,"['data structures', 'divide and conquer', 'segment tree']"
10444,1044400,Anagram Pyramids,0,[]
10445,1044500,Groundwater Reserves,0,[]
10446,1044600,Algorist Club,27,"['graph theory', 'mathematics']"
10447,1044700,Deduction,0,[]
10448,1044800,유레카 이론,5,"['bruteforcing', 'mathematics']"
10449,1044900,Exploration,0,[]
10450,1045000,Marbles,0,[]
10451,1045100,순열 사이클,8,['permutation cycle decomposition']
10452,1045200,Road Repair,0,[]
10453,1045300,문자열 변환,10,['ad-hoc']
10454,1045400,세 네모,19,"['backtracking', 'binary search']"
10455,1045500,Torus,0,[]
10456,1045600,Travel Card,15,[]
10457,1045700,Two Yachts,0,[]
10458,1045800,How Does Your Garden Grow?,0,[]
10459,1045900,Compressed Words?,6,"['implementation', 'parsing', 'string']"
10460,1046000,Java vs. Scheme Smackdown,12,"['bruteforcing', 'implementation', 'mathematics', 'parsing', 'string']"
10461,1046100,Time Travel,0,[]
10462,1046200,Matryoshka Dolls,16,"['dynamic programming', 'sorting']"
10463,1046300,Repel,0,[]
10464,1046400,XOR,12,['mathematics']
10465,1046500,Rolling Encryption,8,"['implementation', 'string']"
10466,1046600,Mailing Origami,22,"['convex hull', 'geometry', 'rotating calipers']"
10467,1046700,Line Sweep,0,[]
10468,1046800,숫자뽑기게임,17,['dynamic programming']
10469,1046900,사이 나쁜 여왕들,6,['implementation']
10470,1047000,빨강 검정 징검다리,22,[]
10471,1047100,공간을 만들어 봅시다,4,['bruteforcing']
10472,1047200,십자뒤집기,10,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
10473,1047300,인간 대포,14,"[""dijkstra's"", 'graph theory']"
10474,1047400,분수좋아해?,3,"['arithmetic', 'mathematics']"
10475,1047500,모기 넌 내꺼야,18,"['bruteforcing', 'geometry']"
10476,1047600,좁은 미술전시관,11,['dynamic programming']
10477,1047700,경운기,12,"['bruteforcing', 'mathematics']"
10478,1047800,단위,13,"['floyd–warshall', 'graph theory', 'graph traversal']"
10479,1047900,따르릉 따르릉,18,['geometry']
10480,1048000,Oddities,3,"['arithmetic', 'implementation', 'mathematics']"
10481,1048100,Ternarian Weights,8,[]
10482,1048200,Goldbach’s Conjecture,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
10483,1048300,Shotcube,22,"['breadth-first search', 'bitmask', 'graph theory', 'graph traversal']"
10484,1048400,Erratic Ants,9,"['graph theory', 'graph traversal']"
10485,1048500,Plotting Polynomials,14,"['combinatorics', 'mathematics']"
10486,1048600,Trapezoid Walkway,11,[]
10487,1048700,4 thought,8,"['backtracking', 'bruteforcing', 'implementation']"
10488,1048800,Biggest Slice,15,[]
10489,1048900,Even Up Solitaire,7,"['data structures', 'stack']"
10490,1049000,Island Buses,14,"['graph theory', 'graph traversal']"
10491,1049100,Quite a problem,4,"['parsing', 'string']"
10492,1049200,Multi-touch gesture classification,17,[]
10493,1049300,Stacking Curvy Blocks,15,[]
10494,1049400,Unicycle counting,6,[]
10495,1049500,Choosing Numbers,7,"['bruteforcing', 'euclidean algorithm', 'mathematics', 'number theory', 'sorting']"
10496,1049600,Loopy transit,10,[]
10497,1049700,Hitting the Targets,5,"['geometry', 'implementation']"
10498,1049800,Texas Summers,11,[]
10499,1049900,Out of context,22,[]
10500,1050000,Maze movement,15,[]
10501,1050100,Ragged Right,4,"['implementation', 'string']"
10502,1050200,Parades,23,"['bitmask', 'dynamic programming', 'tree']"
10503,1050300,Mountainous landscape,23,[]
10504,1050400,덧셈,13,"['bruteforcing', 'mathematics']"
10505,1050500,Wheels,15,"['depth-first search', 'graph theory', 'graph traversal', 'implementation']"
10506,1050600,Can’t stop playing,21,['dynamic programming']
10507,1050700,Vocabulary,19,['dynamic programming']
10508,1050800,Virus synthesis,0,[]
10509,1050900,Good morning!,8,"['bruteforcing', 'implementation']"
10510,1051000,Bricks,16,"['greedy', 'mathematics']"
10511,1051100,Pork barrel,22,[]
10512,1051200,The Imp,21,"['dynamic programming', 'greedy', 'sorting']"
10513,1051300,외계 침략자,22,"['dynamic programming', 'sorting']"
10514,1051400,A Walk Together,0,[]
10515,1051500,Refueling Stops,10,"['greedy', 'implementation', 'simulation']"
10516,1051600,Check Amount Validation,0,[]
10517,1051700,Radar Coverage,13,"['case work', 'geometry', 'minimum enclosing circle']"
10518,1051800,Around the Track,25,"['floyd–warshall', 'geometry', 'graph theory', 'line segment intersection check']"
10519,1051900,Biking Duck,21,"['geometry', 'implementation', 'ternary search']"
10520,1052000,Cent Savings,14,"['dynamic programming', 'prefix sum']"
10521,1052100,Digi Comp II,17,"['graph theory', 'topological sorting']"
10522,1052200,Euclidean TSP,12,['ternary search']
10523,1052300,직선 찾기,16,"['geometry', 'randomization']"
10524,1052400,Gathering,18,[]
10525,1052500,Hyacinth,16,"['depth-first search', 'graph theory', 'graph traversal', 'greedy', 'tree']"
10526,1052600,왜판원 순회,20,"['bidirectional search', 'bitmask', 'graph theory', 'meet in the middle']"
10527,1052700,Judging Troubles,7,"['data structures', 'set / map by hashing', 'implementation', 'sorting']"
10528,1052800,Knapsack Collection,19,"['implementation', 'simulation']"
10529,1052900,GREAT + SWERC = PORTO,11,"['backtracking', 'bruteforcing', 'mathematics', 'string']"
10530,1053000,Flowery Trails,14,"[""dijkstra's"", 'graph theory', 'graph traversal']"
10531,1053100,Golf Bot,20,"['fast fourier transform', 'mathematics']"
10532,1053200,Book Club,18,['bipartite matching']
10533,1053300,Ricochet Robots,18,"['breadth-first search', 'graph theory', 'graph traversal']"
10534,1053400,락페스티벌,20,"['data structures', 'disjoint set', 'sweeping']"
10535,1053500,Playing with Geometry,0,[]
10536,1053600,Money Transfers,0,[]
10537,1053700,The Safe Secret,19,"['bruteforcing', 'dynamic programming']"
10538,1053800,빅 픽쳐,20,"['aho-corasick', 'data structures', 'hashing', 'knuth–morris–pratt', 'string', 'tree', 'trie']"
10539,1053900,수빈이와 수열,4,"['arithmetic', 'mathematics']"
10540,1054000,KLOPKA,4,"['geometry', 'implementation']"
10541,1054100,싸리와 버드의 피라미드,15,"['implementation', 'mathematics', 'prefix sum']"
10542,1054200,마피아 게임,18,"['ad-hoc', 'depth-first search', 'graph theory', 'graph traversal']"
10543,1054300,ZABAVA,14,"['dynamic programming', 'mathematics']"
10544,1054400,KAMP,20,"['dynamic programming', 'dynamic programming on trees', 'tree']"
10545,1054500,뚜기뚜기메뚜기,5,"['implementation', 'string']"
10546,1054600,배부른 마라토너,7,"['data structures', 'set / map by hashing']"
10547,1054700,STUDENTSKO,12,['dynamic programming']
10548,1054800,BOB,18,"['combinatorics', 'data structures', 'dynamic programming', 'mathematics', 'stack']"
10549,1054900,ŠUMA,0,[]
10550,1055000,NORMA,24,[]
10551,1055100,STROJOPIS,4,"['implementation', 'string']"
10552,1055200,DOM,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
10553,1055300,SILUETA,9,"['implementation', 'sweeping']"
10554,1055400,COCI,19,[]
10555,1055500,STOGOVI,17,"['data structures', 'lowest common ancestor', 'stack', 'tree']"
10556,1055600,KAMIONI,22,"['binary search', 'square root decomposition']"
10557,1055700,Runes,9,"['parsing', 'string']"
10558,1055800,Alchemy,0,[]
10559,1055900,Containment,0,[]
10560,1056000,Function,0,[]
10561,1056100,언덕수,17,['dynamic programming']
10562,1056200,나이트,21,"['berlekamp–massey', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics']"
10563,1056300,정수 게임,16,"['dynamic programming', 'game theory']"
10564,1056400,팔굽혀펴기,14,['dynamic programming']
10565,1056500,Salary Inequity,19,"['data structures', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
10566,1056600,도장 도장,24,[]
10567,1056700,Towers,19,['backtracking']
10568,1056800,Wormholes,12,"['floyd–warshall', 'graph theory']"
10569,1056900,다면체,3,"['arithmetic', 'euler characteristic (χ=v-e+f)', 'geometry', 'mathematics']"
10570,1057000,Favorite Number,5,"['implementation', 'sorting']"
10571,1057100,다이아몬드,10,['dynamic programming']
10572,1057200,Gold Leaf,0,[]
10573,1057300,증가하는 수,12,['dynamic programming']
10574,1057400,Ranked Choice,0,[]
10575,1057500,Top 25,0,[]
10576,1057600,Wrench,0,[]
10589,1058900,마법의 체스판,12,"['ad-hoc', 'constructive', 'mathematics']"
10590,1059000,Burrito King,13,"['greedy', 'mathematics']"
10591,1059100,Cactus Generator,25,"['cactus', 'data structures', 'disjoint set', 'eulerian path / circuit', 'graph theory', 'implementation', 'parsing', 'string']"
10592,1059200,Damage Assessment,0,[]
10593,1059300,Epic Win!,18,"['ad-hoc', 'constructive']"
10594,1059400,Filter,7,"['bitmask', 'bit set', 'implementation']"
10595,1059500,Hidden Maze,0,[]
10596,1059600,Improvements,19,[]
10597,1059700,순열장난,10,['backtracking']
10598,1059800,Knockout Racing,5,"['implementation', 'mathematics']"
10599,1059900,페르시아의 왕들,3,"['arithmetic', 'implementation', 'mathematics']"
10600,1060000,Web Colors,5,[]
10601,1060100,Ideal Scoreboard,0,[]
10602,1060200,Elevators,0,[]
10603,1060300,Antennas,0,[]
10604,1060400,Working Hours,6,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
10605,1060500,드래곤 죽이기,17,"['graph theory', 'graph traversal', 'greedy']"
10606,1060600,Toll,0,[]
10607,1060700,Robot Race,0,[]
10608,1060800,Bus,0,[]
10609,1060900,Line Fiting,0,[]
10610,1061000,30,7,"['greedy', 'mathematics', 'number theory', 'sorting', 'string']"
10611,1061100,PŠENICA,11,[]
10612,1061200,PRIPREME,13,['greedy']
10613,1061300,MRAVI,13,"['breadth-first search', 'binary search', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
10614,1061400,SABOR,0,[]
10615,1061500,STANOVI,22,[]
10616,1061600,Bulletproof Car Testing,0,[]
10617,1061700,Magnetos,0,[]
10618,1061800,Ambiguous Encodings,0,[]
10619,1061900,The One Dollar Gambler,0,[]
10620,1062000,Urdu orthography verification,0,[]
10621,1062100,Web Service Dependencies,0,[]
10622,1062200,A Population of Rabbits,0,[]
10623,1062300,Breadth-First Search by Foxpower,17,"['breadth-first search', 'graph theory', 'graph traversal', 'lowest common ancestor', 'tree']"
10624,1062400,Cube Coloring,13,['prefix sum']
10625,1062500,Decoding Ancient Messages,0,[]
10626,1062600,LR,16,"['bruteforcing', 'depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'greedy', 'parsing', 'recursion', 'string']"
10627,1062700,Parentheses,19,['greedy']
10628,1062800,Polygon Guards,0,[]
10629,1062900,Proportional Representation,26,[]
10630,1063000,RLE Replacement,15,"['bruteforcing', 'case work', 'implementation', 'string']"
10631,1063100,Tokyo Olympics Center,0,[]
10632,1063200,Unfair Game,21,"['case work', 'game theory', 'sprague–grundy theorem']"
10633,1063300,Everlasting Zero,14,"['breadth-first search', 'depth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
10634,1063400,Integer in Integer,0,[]
10635,1063500,Iyasugigappa,0,[]
10636,1063600,Medical Inspection,0,[]
10637,1063700,Minimum Spanning Tree,22,"['data structures', 'disjoint set', 'graph theory', 'heavy-light decomposition', 'lowest common ancestor', 'minimum spanning tree', 'segment tree', 'tree']"
10638,1063800,Point Distance,21,"['fast fourier transform', 'mathematics']"
10639,1063900,Revenge of Minimum Cost Flow,0,[]
10640,1064000,Rings,15,"['geometry', 'geometry; 3d']"
10641,1064100,The J-th Number,23,"['binary search', 'value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'parallel binary search', 'persistent segment tree', 'segment tree']"
10642,1064200,Tree Reconstruction,0,[]
10643,1064300,FUNGHI,4,"['bruteforcing', 'implementation']"
10644,1064400,ZMIJA,8,[]
10645,1064500,TRAKTOR,8,[]
10646,1064600,ZGODAN,15,[]
10647,1064700,JABUKE,16,"['binary search', 'implementation']"
10648,1064800,DIVLJAK,0,[]
10649,1064900,프리스비,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'greedy']"
10650,1065000,Marathon,18,"['data structures', 'segment tree']"
10651,1065100,Cow Jog,16,['longest increasing sequence in o(n log n)']
10652,1065200,Piggy Back,13,"['breadth-first search', 'graph theory', 'graph traversal']"
10653,1065300,마라톤 2,12,['dynamic programming']
10654,1065400,Cow Jog,10,"['data structures', 'implementation', 'stack']"
10655,1065500,마라톤 1,8,"['bruteforcing', 'geometry', 'implementation']"
10656,1065600,십자말풀이,7,"['implementation', 'sorting']"
10657,1065700,Cow Jog,6,"['data structures', 'stack']"
10658,1065800,Learning by Example,14,"['case work', 'mathematics', 'sorting', 'sweeping']"
10659,1065900,Dictionary,13,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'string', 'topological sorting']"
10660,1066000,Texas hold 'em,0,[]
10661,1066100,Median Tree,14,"['data structures', 'disjoint set', 'graph theory', 'minimum spanning tree']"
10662,1066200,Billiard,23,[]
10663,1066300,Stack Maze,21,['dynamic programming']
10664,1066400,Counting 1's,22,[]
10665,1066500,Ancient Commemorative Monolith,0,[]
10666,1066600,Magical Bridges,22,[]
10667,1066700,Hashigo Sama,26,[]
10668,1066800,Ancient Scrolls,21,[]
10669,1066900,Cow Rectangles,19,"['data structures', 'segment tree', 'sweeping']"
10670,1067000,Moovie Mooving,18,"['binary search', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
10671,1067100,Grass Cownoisseur,20,"['dynamic programming', 'graph theory', 'strongly connected component', 'topological sorting']"
10672,1067200,Stampede,15,"['data structures', 'priority queue', 'sweeping', 'set / map by trees']"
10673,1067300,Cow Routing,14,"[""dijkstra's"", 'graph theory']"
10674,1067400,Meeting Time,13,['dynamic programming']
10675,1067500,Cow Routing,4,['implementation']
10676,1067600,Cow Routing II,10,"['implementation', 'meet in the middle']"
10677,1067700,It's All About the Base,11,"['binary search', 'mathematics', 'number theory']"
10678,1067800,Meeting Time,8,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'recursion', 'sorting']"
10679,1067900,Broken Audio Signal,11,"['case work', 'greedy']"
10680,1068000,Restore Calculation,13,"['dynamic programming', 'mathematics']"
10681,1068100,SIRO Challenge,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'floyd–warshall', 'graph theory']"
10682,1068200,Everlasting -One-,17,"['data structures', 'disjoint set', 'graph theory']"
10683,1068300,Putter,0,[]
10684,1068400,Shipura,0,[]
10685,1068500,Floating Islands,22,[]
10686,1068600,Venn Diagram,0,[]
10687,1068700,Overwriting Game,0,[]
10688,1068800,Magical Switches,0,[]
10689,1068900,Hamza,6,"['data structures', 'set / map by hashing', 'set / map by trees']"
10690,1069000,Compo,0,[]
10691,1069100,Fegla,0,[]
10692,1069200,Hamzawy,0,[]
10693,1069300,Abdelrahman,3,"['arithmetic', 'implementation', 'mathematics']"
10694,1069400,Fouad,0,[]
10695,1069500,Dalia,3,"['implementation', 'mathematics']"
10696,1069600,Prof. Ossama,7,"['arbitrary precision / big integers', 'mathematics']"
10697,1069700,Nicole,0,[]
10698,1069800,Ahmed Aly,3,"['arithmetic', 'implementation', 'mathematics']"
10699,1069900,오늘 날짜,1,['implementation']
10700,1070000,Arctic Polar Explorer,18,['sorting']
10701,1070100,PAPRIKA,5,"['implementation', 'simulation']"
10702,1070200,NIKO,10,"['ad-hoc', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
10703,1070300,유성,9,['implementation']
10704,1070400,KRATKI,15,"['ad-hoc', 'constructive', 'mathematics']"
10705,1070500,NEO,19,"['data structures', 'stack']"
10706,1070600,WTF,0,[]
10707,1070700,수도요금,3,"['arithmetic', 'mathematics']"
10708,1070800,크리스마스 파티,4,['implementation']
10709,1070900,기상캐스터,6,"['implementation', 'simulation']"
10710,1071000,실크로드,11,['dynamic programming']
10711,1071100,모래성,14,"['breadth-first search', 'graph theory', 'graph traversal']"
10712,1071200,財宝,17,"['data structures', 'deque', 'meet in the middle', 'sorting', 'two-pointer']"
10713,1071300,기차 여행,11,['prefix sum']
10714,1071400,케이크 자르기 2,14,['dynamic programming']
10715,1071500,JOI 공원,15,"[""dijkstra's"", 'graph theory', 'greedy']"
10716,1071600,코딩 대회,23,"['binary search', 'dynamic programming', 'dynamic programming on trees', 'parametric search', 'tree']"
10717,1071700,성벽,21,"['data structures', 'segment tree']"
10718,1071800,We love kriii,1,['implementation']
10719,1071900,Baekjoon Database Management System,12,['dynamic programming']
10720,1072000,Revenge of the ants 1,21,"['mathematics', 'prefix sum']"
10721,1072100,Revenge of the ants 2,23,"['knuth–morris–pratt', 'mathematics', 'string']"
10722,1072200,Binary Mobile Tree,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
10723,1072300,판게아 1,13,"['graph theory', 'minimum spanning tree']"
10724,1072400,판게아 2,26,"['divide and conquer', 'graph theory', 'link/cut tree', 'minimum spanning tree', 'tree']"
10725,1072500,빛의 왕과 거울의 미로 1,13,"['bruteforcing', 'implementation']"
10726,1072600,빛의 왕과 거울의 미로 2,25,"['dynamic programming', 'dynamic programming using connection profile']"
10727,1072700,룩과 구슬,25,"['circulation', 'maximum flow', 'minimum cost maximum flow']"
10728,1072800,XOR삼형제 1,10,"['ad-hoc', 'bitmask', 'bruteforcing', 'constructive']"
10729,1072900,업적의 노예 1,17,"['combinatorics', 'dynamic programming', 'mathematics', 'number theory', 'sliding window']"
10730,1073000,업적의 노예 2,21,"['exponentiation by squaring', 'kitamasa', 'mathematics']"
10731,1073100,업적의 노예 3,14,"['combinatorics', 'dynamic programming', 'mathematics']"
10732,1073200,소방차게임,0,[]
10733,1073300,\(I\)교신자 1,9,"['bruteforcing', 'data structures', 'stack']"
10734,1073400,\(I\)교신자 2,25,"['combinatorics', 'dynamic programming', 'mathematics']"
10735,1073500,\(I\)교신자 3,26,"['combinatorics', 'dynamic programming', 'mathematics']"
10736,1073600,XOR삼형제 2,15,"['ad-hoc', 'constructive']"
10737,1073700,It has the same Suffix Array,20,"['string', 'suffix array and lcp array']"
10738,1073800,TETA,6,['implementation']
10739,1073900,KRIZA,10,[]
10740,1074000,ACM,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
10741,1074100,JANJE,19,[]
10742,1074200,PROSJEK,16,"['binary search', 'parametric search', 'prefix sum']"
10743,1074300,POLICE,0,[]
10744,1074400,Cow Hopscotch,22,"['data structures', 'dynamic programming', 'segment tree']"
10745,1074500,Censoring,22,"['aho-corasick', 'data structures', 'dynamic programming', 'stack', 'string', 'tree', 'trie']"
10746,1074600,Fencing the Herd,23,"['binary search', 'convex hull', 'geometry', 'square root decomposition']"
10747,1074700,Censoring,18,"['knuth–morris–pratt', 'string']"
10748,1074800,Cow Hopscotch,10,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
10749,1074900,Superbull,14,"['graph theory', 'minimum spanning tree']"
10750,1075000,Censoring,11,"['data structures', 'stack', 'string']"
10751,1075100,COW,8,"['combinatorics', 'mathematics', 'prefix sum']"
10752,1075200,Cow Hopscotch,9,"['bruteforcing', 'dynamic programming']"
10753,1075300,ČVENK,22,"['greedy', 'tree']"
10754,1075400,KOVANICE,15,[]
10755,1075500,컴퓨터실,23,[]
10756,1075600,편식,22,"['binary search', 'convex hull', 'geometry', 'parametric search', 'two-pointer']"
10757,1075700,큰 수 A+B,1,"['implementation', 'arbitrary precision / big integers', 'arithmetic', 'mathematics']"
10759,1075900,팰린드롬 경로 3,18,['dynamic programming']
10760,1076000,Trapped in the Haybales,20,"['data structures', 'sweeping', 'set / map by trees']"
10761,1076100,Bessie Goes Moo,12,"['bruteforcing', 'mathematics']"
10762,1076200,Trapped in the Haybales,16,['two-pointer']
10763,1076300,Bessie's Birthday Buffet,15,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
10764,1076400,Moocryption,6,['bruteforcing']
10765,1076500,Bessie Gets Even,7,"['combinatorics', 'mathematics']"
10766,1076600,Trapped in the Haybales,8,"['bruteforcing', 'implementation', 'simulation', 'two-pointer']"
10767,1076700,Palindromic Paths,12,"['backtracking', 'bruteforcing', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'meet in the middle', 'string']"
10768,1076800,특별한 날,2,['implementation']
10769,1076900,행복한지 슬픈지,5,"['parsing', 'string']"
10770,1077000,Rövarspråket,6,"['implementation', 'string']"
10771,1077100,Wait Time,8,"['data structures', 'implementation', 'simulation', 'set / map by trees']"
10772,1077200,π-day,11,['dynamic programming']
10773,1077300,제로,7,"['data structures', 'implementation', 'stack']"
10774,1077400,저지,7,"['greedy', 'implementation']"
10775,1077500,공항,14,"['data structures', 'disjoint set', 'greedy']"
10776,1077600,제국,15,"[""dijkstra's"", 'graph theory']"
10777,1077700,허니버터칩,18,['dynamic programming']
10778,1077800,Bowling,0,[]
10779,1077900,Editor,22,[]
10780,1078000,Network,19,[]
10781,1078100,File Paths,0,[]
10782,1078200,Hacker,19,"['data structures', 'deque', 'greedy', 'prefix sum', 'segment tree']"
10783,1078300,Tug of War,0,[]
10784,1078400,Amalgamated Artichokes,5,[]
10785,1078500,Asteroids,25,"['convex hull', 'geometry', 'line segment intersection check', 'point in convex polygon check', 'ternary search']"
10786,1078600,Catering,19,"['maximum flow', 'minimum cost maximum flow']"
10787,1078700,Cutting Cheese,17,"['binary search', 'calculus', 'geometry', 'geometry; 3d', 'mathematics']"
10788,1078800,Evolution in Parallel,23,"['dynamic programming', 'greedy', 'string']"
10789,1078900,가상 키보드 입력,18,"['breadth-first search', 'graph theory', 'graph traversal']"
10790,1079000,달리기,26,['mathematics']
10791,1079100,Qanat,22,['mathematics']
10792,1079200,Ship Traffic,16,"['mathematics', 'sorting']"
10793,1079300,Tile Cutting,21,"['data structures', 'fast fourier transform', 'mathematics', 'segment tree']"
10794,1079400,Tours,26,"['depth-first search', 'graph theory', 'graph traversal', 'randomization']"
10795,1079500,Window,0,[]
10796,1079600,Window Manager,23,['implementation']
10797,1079700,10부제,2,['implementation']
10798,1079800,세로읽기,5,"['implementation', 'string']"
10799,1079900,쇠막대기,9,"['data structures', 'stack']"
10800,1080000,컬러볼,13,"['implementation', 'prefix sum', 'sorting']"
10801,1080100,카드게임,4,['implementation']
10802,1080200,369 게임,20,"['dynamic programming', 'mathematics']"
10803,1080300,정사각형 만들기,18,"['dynamic programming', 'greedy']"
10804,1080400,카드 역배치,4,"['implementation', 'simulation']"
10805,1080500,L 모양의 종이 자르기,17,['dynamic programming']
10806,1080600,공중도시,22,"['articulation points and bridges', 'biconnected component', 'graph theory', 'tree']"
10807,1080700,개수 세기,1,['implementation']
10808,1080800,알파벳 개수,2,"['implementation', 'string']"
10809,1080900,알파벳 찾기,1,"['implementation', 'string']"
10810,1081000,공 넣기,4,"['implementation', 'simulation']"
10811,1081100,바구니 뒤집기,4,"['implementation', 'simulation']"
10812,1081200,바구니 순서 바꾸기,4,"['implementation', 'simulation']"
10813,1081300,공 바꾸기,4,"['implementation', 'simulation']"
10814,1081400,나이순 정렬,6,['sorting']
10815,1081500,숫자 카드,6,"['binary search', 'data structures', 'sorting']"
10816,1081600,숫자 카드 2,7,"['binary search', 'data structures', 'set / map by hashing', 'sorting']"
10817,1081700,세 수,3,"['implementation', 'sorting']"
10818,1081800,"최소, 최대",3,"['implementation', 'mathematics']"
10819,1081900,차이를 최대로,9,"['backtracking', 'bruteforcing']"
10820,1082000,문자열 분석,4,"['implementation', 'string']"
10821,1082100,정수의 개수,4,"['parsing', 'string']"
10822,1082200,더하기,4,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
10823,1082300,더하기 2,5,"['arithmetic', 'mathematics', 'parsing', 'string']"
10824,1082400,네 수,3,"['arithmetic', 'implementation', 'mathematics', 'string']"
10825,1082500,국영수,7,['sorting']
10826,1082600,피보나치 수 4,6,"['arbitrary precision / big integers', 'dynamic programming']"
10827,1082700,a^b,11,"['arbitrary precision / big integers', 'implementation']"
10828,1082800,스택,7,"['data structures', 'stack']"
10829,1082900,이진수 변환,4,['implementation']
10830,1083000,행렬 제곱,12,"['divide and conquer', 'exponentiation by squaring', 'linear algebra', 'mathematics']"
10831,1083100,오늘은 코딩하고 싶은 날,0,[]
10833,1083300,사과,3,"['arithmetic', 'mathematics']"
10834,1083400,벨트,4,"['arithmetic', 'implementation', 'mathematics']"
10835,1083500,카드게임,11,['dynamic programming']
10836,1083600,여왕벌,12,"['implementation', 'simulation']"
10837,1083700,동전 게임,8,"['ad-hoc', 'mathematics']"
10838,1083800,트리,15,"['lowest common ancestor', 'tree']"
10839,1083900,미술관,19,"['convex hull', 'geometry']"
10840,1084000,구간 성분,15,['hashing']
10841,1084100,매트,23,"['dynamic programming', 'sweeping']"
10842,1084200,여왕벌,26,"['divide and conquer', 'implementation']"
10843,1084300,가위 바위 보,0,[]
10844,1084400,쉬운 계단 수,10,['dynamic programming']
10845,1084500,큐,7,"['data structures', 'queue']"
10846,1084600,발리의 조각상,20,['dynamic programming']
10847,1084700,자카르타의 마천루,22,"[""dijkstra's"", 'graph theory']"
10848,1084800,팔렘방의 다리,23,"['data structures', 'greedy', 'priority queue', 'sorting']"
10849,1084900,A Journey to Greece,18,"['bitmask', ""dijkstra's"", 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'travelling salesman problem']"
10850,1085000,Bounty Hunter II,18,['bipartite matching']
10851,1085100,Cake,13,"['arbitrary precision / big integers', 'geometry', 'mathematics', 'parametric search', 'area of a polygon']"
10852,1085200,Carpets,14,['backtracking']
10853,1085300,Change of Scenery,15,"[""dijkstra's"", 'graph theory']"
10854,1085400,Divisions,21,"['mathematics', 'miller–rabin', 'number theory', 'pollard rho', 'primality test']"
10855,1085500,Extreme Sort,4,['implementation']
10856,1085600,Legacy Code,10,"['graph theory', 'graph traversal']"
10857,1085700,Milling machines,8,['implementation']
10858,1085800,Souvenirs,13,"['dynamic programming', 'knapsack']"
10859,1085900,뒤집어진 소수,9,"['implementation', 'mathematics', 'number theory', 'primality test']"
10860,1086000,Ruka,23,"['data structures', 'segment tree']"
10861,1086100,Žarulje,23,"['combinatorics', 'mathematics']"
10862,1086200,DOSTAVA,25,"['data structures', 'segment tree']"
10863,1086300,NAFTA,21,"['breadth-first search', 'depth-first search', 'divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'graph theory', 'graph traversal', 'prefix sum']"
10864,1086400,친구,4,['implementation']
10865,1086500,친구 친구,3,['implementation']
10866,1086600,덱,7,"['data structures', 'deque']"
10867,1086700,중복 빼고 정렬하기,6,['sorting']
10868,1086800,최솟값,15,"['segment tree', 'sparse table', 'data structures']"
10869,1086900,사칙연산,1,"['implementation', 'arithmetic', 'mathematics']"
10870,1087000,피보나치 수 5,4,"['implementation', 'mathematics']"
10871,1087100,X보다 작은 수,1,['implementation']
10872,1087200,팩토리얼,1,"['implementation', 'mathematics', 'combinatorics']"
10873,1087300,Interactive Interception,21,"['binary search', 'heuristics']"
10874,1087400,이교수님의 시험,4,['implementation']
10875,1087500,뱀,16,"['implementation', 'simulation']"
10876,1087600,사전 조사,0,[]
10877,1087700,Bulb,18,"['ad-hoc', 'graph theory', 'implementation']"
10878,1087800,How many binary sequences?,15,"['backtracking', 'bitmask', 'bruteforcing', 'recursion']"
10879,1087900,Speak your mind!,12,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
10880,1088000,내가 어디를 거쳐갔더라?,22,"['articulation points and bridges', 'biconnected component', 'graph theory']"
10881,1088100,프로도의 선물 포장,12,"['bruteforcing', 'implementation']"
10882,1088200,International meeting,7,"['arithmetic', 'implementation', 'mathematics']"
10883,1088300,분할,18,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'implementation', 'set / map by trees']"
10884,1088400,The festival must go on,19,"['binary search', 'dynamic programming', 'dynamic programming on trees', 'greedy', 'tree']"
10885,1088500,수열의 장인,15,"['greedy', 'mathematics']"
10886,1088600,0 = not cute / 1 = cute,3,"['arithmetic', 'implementation', 'mathematics']"
10887,1088700,일도양단!,13,[]
10888,1088800,두 섬간의 이동,14,"['data structures', 'disjoint set', 'mathematics']"
10889,1088900,Ancient symbol,0,[]
10890,1089000,Block stacker,22,"['dynamic programming', 'knapsack']"
10891,1089100,Cactus? Not cactus?,18,"['articulation points and bridges', 'biconnected component', 'cactus', 'graph theory']"
10892,1089200,Divide into triangle,7,"['constructive', 'geometry', 'greedy']"
10893,1089300,Evaluation,22,[]
10894,1089400,Following Flow,18,"['dynamic programming', 'gaussian elimination', 'graph theory', 'linear algebra', 'mathematics']"
10895,1089500,Great Pow!,8,"['mathematics', 'number theory']"
10896,1089600,Hexagon travel,19,"['combinatorics', 'dynamic programming', 'mathematics', 'prefix sum']"
10897,1089700,Inherited disease,7,[]
10898,1089800,Jogging,19,['geometry']
10899,1089900,King of penalty,9,['greedy']
10900,1090000,Lonely mdic,25,"['calculus', 'boolean operations on geometric objects', 'geometry', ""green's theorem"", 'mathematics', 'sorting']"
10901,1090100,Make superpalindrome!,17,"['case work', 'divide and conquer', 'string']"
10902,1090200,Penalty calculation,3,"['arithmetic', 'implementation', 'mathematics']"
10903,1090300,Wall construction,16,"['convex hull', 'geometry']"
10905,1090500,Actual visible points,19,[]
10906,1090600,N-orthotope,10,[]
10907,1090700,On grid,18,[]
10908,1090800,Phibonacci,22,"['exponentiation by squaring', 'mathematics', 'number theory']"
10909,1090900,Quaternion inverse,19,"['exponentiation by squaring', 'mathematics', 'modular multiplicative inverse', 'number theory']"
10910,1091000,Random signals,26,['geometry']
10911,1091100,Solve another chuck,22,"['ad-hoc', 'constructive']"
10912,1091200,The last wizard,26,"['combinatorics', 'linearity of expectation', 'mathematics', 'probability theory']"
10913,1091300,Uniting,15,[]
10914,1091400,"Veni, vidi, vici",6,"['implementation', 'string']"
10915,1091500,Wiring,12,"['mathematics', 'number theory']"
10916,1091600,Xtreme gcd sum,22,"['mathematics', 'number theory']"
10917,1091700,Your life,10,"['breadth-first search', 'graph theory', 'graph traversal']"
10918,1091800,Zu,0,[]
10919,1091900,선물상자,18,"['dynamic programming', 'greedy']"
10920,1092000,Scales,21,"['backtracking', 'precomputation']"
10921,1092100,팀들,24,"['binary search', 'data structures', 'greedy', 'merge sort tree', 'persistent segment tree', 'segment tree', 'sorting', 'stack']"
10922,1092200,말,20,"['data structures', 'segment tree', 'set / map by trees']"
10923,1092300,정렬하기,16,"['ad-hoc', 'constructive', 'permutation cycle decomposition']"
10924,1092400,정렬하기 2,21,"['parametric search', 'permutation cycle decomposition']"
10925,1092500,Towns,26,"['ad-hoc', 'graph theory', 'boyer–moore majority vote', 'tree']"
10926,1092600,??!,1,['implementation']
10927,1092700,MD5,0,"['string', 'implementation']"
10928,1092800,SHA-1,0,"['string', 'implementation']"
10929,1092900,SHA-224,0,"['string', 'implementation']"
10930,1093000,SHA-256,0,"['string', 'implementation']"
10931,1093100,SHA-384,0,"['string', 'implementation']"
10932,1093200,SHA-512,0,"['string', 'implementation']"
10933,1093300,RIPEMD-160,0,"['string', 'implementation']"
10934,1093400,SHA,0,"['string', 'implementation']"
10935,1093500,BASE64 인코딩,0,"['string', 'implementation']"
10936,1093600,BASE64 디코딩,0,"['string', 'implementation']"
10937,1093700,두부 모판 자르기,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
10938,1093800,BASE32 인코딩,0,"['string', 'implementation']"
10939,1093900,BASE32 디코딩,0,"['string', 'implementation']"
10940,1094000,BASE16 인코딩,0,"['string', 'implementation']"
10941,1094100,BASE16 디코딩,0,"['string', 'implementation']"
10942,1094200,팰린드롬?,12,['dynamic programming']
10943,1094300,랜덤 게임~,0,[]
10944,1094400,랜덤 게임~~,0,[]
10945,1094500,랜덤 게임~~~,0,[]
10946,1094600,랜덤 게임~~~~,0,[]
10947,1094700,로또,0,[]
10948,1094800,Daily 로또,0,[]
10949,1094900,숫자 야구 5,0,[]
10950,1095000,A+B - 3,1,"['implementation', 'arithmetic', 'mathematics']"
10951,1095100,A+B - 4,1,"['implementation', 'arithmetic', 'mathematics']"
10952,1095200,A+B - 5,1,"['implementation', 'arithmetic', 'mathematics']"
10953,1095300,A+B - 6,3,"['arithmetic', 'mathematics', 'parsing', 'string']"
10954,1095400,테트리스 2,19,"['case work', 'dynamic programming']"
10955,1095500,Potemkin cycle,23,"['현 그래프', 'graph theory']"
10956,1095600,Calvinball championship,15,[]
10957,1095700,Pipes,21,"['articulation points and bridges', 'data structures', 'disjoint set', 'graph theory']"
10958,1095800,Ice Hockey World Championship,15,"['binary search', 'meet in the middle']"
10959,1095900,Nuclearia,22,"['case work', 'dynamic programming', 'implementation']"
10960,1096000,"Calvinball championship, again 1",6,"['bruteforcing', 'constructive', 'graph theory', 'precomputation']"
10961,1096100,School canteen,18,"['exponentiation by squaring', 'linear algebra', 'mathematics']"
10962,1096200,"Calvinball championship, again 2",10,"['backtracking', 'bruteforcing', 'constructive', 'graph theory', 'precomputation']"
10963,1096300,"Calvinball championship, again 3",11,"['backtracking', 'graph theory']"
10964,1096400,"Calvinball championship, again 4",12,"['backtracking', 'graph theory', 'graph traversal']"
10965,1096500,"Calvinball championship, again 5",12,"['ad-hoc', 'backtracking', 'constructive', 'graph theory']"
10966,1096600,"Calvinball championship, again 6",0,[]
10967,1096700,"Calvinball championship, again 7",0,[]
10968,1096800,"Calvinball championship, again 8",0,[]
10969,1096900,"Calvinball championship, again 9",0,[]
10970,1097000,"Calvinball championship, again 10",12,"['backtracking', 'breadth-first search', 'bipartite graph', 'depth-first search', 'graph theory', 'graph traversal']"
10971,1097100,외판원 순회 2,9,"['backtracking', 'bruteforcing', 'travelling salesman problem']"
10972,1097200,다음 순열,8,"['combinatorics', 'mathematics']"
10973,1097300,이전 순열,8,"['combinatorics', 'implementation', 'mathematics']"
10974,1097400,모든 순열,8,"['backtracking', 'bruteforcing']"
10975,1097500,데크 소트 2,11,"['greedy', 'sorting']"
10976,1097600,피난,17,['maximum flow']
10977,1097700,음식 조합 세기,16,[]
10978,1097800,기숙사 재배정,14,"['combinatorics', 'dynamic programming', 'mathematics']"
10979,1097900,가넷이나 버는게 낫지 않아요?,17,"['data structures', ""dijkstra's"", 'graph theory', 'priority queue']"
10980,1098000,SIMPLE ARITHMETICS,10,[]
10981,1098100,HEADING TO WORLD FINALS,7,['sorting']
10982,1098200,행운쿠키 제작소,16,"['dynamic programming', 'knapsack']"
10983,1098300,히기카드,18,[]
10984,1098400,내 학점을 구해줘,3,"['arithmetic', 'implementation', 'mathematics']"
10985,1098500,사냥꾼,13,"['geometry', 'mathematics']"
10986,1098600,나머지 합,13,"['mathematics', 'prefix sum']"
10987,1098700,모음의 개수,3,"['implementation', 'string']"
10988,1098800,팰린드롬인지 확인하기,4,"['implementation', 'string']"
10989,1098900,수 정렬하기 3,5,['sorting']
10990,1099000,별 찍기 - 15,3,['implementation']
10991,1099100,별 찍기 - 16,3,['implementation']
10992,1099200,별 찍기 - 17,3,['implementation']
10993,1099300,별 찍기 - 18,12,"['implementation', 'recursion']"
10994,1099400,별 찍기 - 19,7,"['implementation', 'recursion']"
10995,1099500,별 찍기 - 20,3,['implementation']
10996,1099600,별 찍기 - 21,4,['implementation']
10997,1099700,별 찍기 - 22,9,"['implementation', 'recursion']"
10998,1099800,A×B,1,"['implementation', 'arithmetic', 'mathematics']"
10999,1099900,구간 합 구하기 2,17,"['segment tree', 'segment tree with lazy propagation', 'data structures']"
11000,1100000,강의실 배정,11,"['data structures', 'greedy', 'priority queue', 'sorting']"
11001,1100100,김치,20,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming']"
11002,1100200,까마귀,27,['geometry']
11003,1100300,최솟값 찾기,15,"['data structures', 'deque', 'priority queue']"
11004,1100400,K번째 수,6,['sorting']
11005,1100500,진법 변환 2,5,"['implementation', 'mathematics']"
11006,1100600,남욱이의 닭장,3,"['arithmetic', 'mathematics']"
11007,1100700,Inverse Move-to-Front Transform,4,"['implementation', 'string']"
11008,1100800,복붙의 달인,6,"['implementation', 'string']"
11009,1100900,Drinks,8,"['mathematics', 'probability theory']"
11010,1101000,Explosive Materials,14,"['bipartite graph', 'dynamic programming', 'graph theory', 'graph traversal', 'knapsack']"
11011,1101100,Forged Answers,16,"['bruteforcing', 'greedy']"
11012,1101200,Egg,19,"['data structures', 'offline queries', 'persistent segment tree', 'segment tree', 'sweeping']"
11013,1101300,The Missing Permutation,0,[]
11014,1101400,컨닝 2,19,['bipartite matching']
11015,1101500,Spring 2005: Arriving at USC,6,"['implementation', 'string']"
11016,1101600,Fall 2005: Summer on the Beach,18,"['calculus', 'geometry', 'geometry; 3d', 'mathematics']"
11017,1101700,Spring 2006: Midterm Elections,10,"['case work', 'greedy']"
11018,1101800,Fall 2006: 100 Years of Engineering,4,['physics']
11019,1101900,Spring 2007: Final Exams,12,"['dynamic programming', 'knapsack']"
11020,1102000,Fall 2007: The Programming Contest Programming Contest,12,"['bruteforcing', 'geometry']"
11021,1102100,A+B - 7,1,"['implementation', 'arithmetic', 'mathematics']"
11022,1102200,A+B - 8,1,"['implementation', 'arithmetic', 'mathematics']"
11023,1102300,더하기 3,3,"['arithmetic', 'implementation', 'mathematics']"
11024,1102400,더하기 4,3,"['arithmetic', 'mathematics']"
11025,1102500,요세푸스 문제 3,16,"['dynamic programming', 'mathematics']"
11026,1102600,BIẾN ĐỔI CẶP SỐ,15,"['euclidean algorithm', 'mathematics', 'number theory']"
11027,1102700,교환,0,[]
11028,1102800,UỐN VUÔNG,18,"['mathematics', 'number theory']"
11029,1102900,ĐỘI MŨ,6,[]
11030,1103000,SUPER HATS,19,"['euler totient function', 'exponentiation by squaring', 'mathematics', 'number theory']"
11031,1103100,GIẢI THƯỞNG,11,"['arbitrary precision / big integers', 'dynamic programming']"
11032,1103200,ĐƯỜNG RỒNG,0,[]
11033,1103300,TÁO CHUỐI,0,[]
11034,1103400,캥거루 세마리2,3,"['greedy', 'mathematics']"
11035,1103500,SÀNG,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
11036,1103600,ĐẾM,0,[]
11037,1103700,중복 없는 수,12,"['backtracking', 'binary search', 'bruteforcing', 'sorting']"
11038,1103800,Entrance Examination,5,"['implementation', 'sorting']"
11039,1103900,Short Phrase,7,['implementation']
11040,1104000,ICPC Calculator,14,"['data structures', 'implementation', 'recursion', 'stack']"
11041,1104100,500-yen Saving,18,['dynamic programming']
11042,1104200,Deadlock Detection,0,[]
11043,1104300,Bridge Construction Planning,0,[]
11044,1104400,Complex Paper Folding,0,[]
11045,1104500,Development of Small Flying Robots,0,[]
11046,1104600,팰린드롬??,16,"[""manacher's"", 'string']"
11047,1104700,동전 0,7,['greedy']
11048,1104800,이동하기,9,['dynamic programming']
11049,1104900,행렬 곱셈 순서,13,['dynamic programming']
11050,1105000,이항 계수 1,5,"['combinatorics', 'implementation', 'mathematics']"
11051,1105100,이항 계수 2,8,"['combinatorics', 'dynamic programming', 'mathematics']"
11052,1105200,카드 구매하기,10,['dynamic programming']
11053,1105300,가장 긴 증가하는 부분 수열,9,['dynamic programming']
11054,1105400,가장 긴 바이토닉 부분 수열,12,['dynamic programming']
11055,1105500,가장 큰 증가 부분 수열,9,['dynamic programming']
11056,1105600,두 부분 문자열,12,['dynamic programming']
11057,1105700,오르막 수,10,['dynamic programming']
11058,1105800,크리보드,11,['dynamic programming']
11059,1105900,크리 문자열,5,"['bruteforcing', 'prefix sum']"
11060,1106000,점프 점프,9,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
11061,1106100,Awkward Group,19,"['data structures', 'disjoint set']"
11062,1106200,카드 게임,13,"['dynamic programming', 'game theory']"
11063,1106300,Consecutive Ordering,17,[]
11064,1106400,Diameter,23,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'parametric search', 'tree']"
11065,1106500,Grid Aliens,21,"['maximum flow', 'max-flow min-cut theorem']"
11066,1106600,파일 합치기,13,['dynamic programming']
11067,1106700,모노톤길,11,"['implementation', 'sorting']"
11068,1106800,회문인 수,6,"['bruteforcing', 'mathematics']"
11069,1106900,Particle,20,"['chinese remainder theorem', 'extended euclidean algorithm', 'mathematics', 'number theory']"
11070,1107000,피타고라스 기댓값,5,"['implementation', 'mathematics']"
11071,1107100,Shelob’s Lair,25,"['duality', 'geometry', 'graph theory', 'graph traversal', 'line segment intersection check']"
11072,1107200,Football,0,[]
11073,1107300,Folding Code,0,[]
11074,1107400,Painting Floors,0,[]
11075,1107500,Who Do You Think You Are?,24,"['implementation', 'tree']"
11076,1107600,Talking Money,13,"['case work', 'implementation', 'string']"
11077,1107700,Selling Numbers,0,[]
11078,1107800,Banking,4,['implementation']
11079,1107900,Diana and the Golden Apples,0,[]
11080,1108000,Almost an Anagram,7,"['case work', 'string']"
11081,1108100,Rings of Saturn,0,[]
11082,1108200,소수를 분수로,10,"['implementation', 'mathematics', 'parsing', 'string']"
11083,1108300,Resistance Is (Not) Futile!,0,[]
11084,1108400,나이트의 염탐,14,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
11085,1108500,군사 이동,13,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
11086,1108600,All about that base,7,['implementation']
11087,1108700,Bobby’s Bet,9,"['dynamic programming', 'mathematics', 'probability theory']"
11088,1108800,Cantina of Babel,14,"['graph theory', 'graph traversal']"
11089,1108900,Circuit Counting,13,"['dynamic programming', 'knapsack']"
11090,1109000,Cutting Brownies,19,['greedy']
11091,1109100,알파벳 전부 쓰기,4,"['implementation', 'string']"
11092,1109200,Safe Passage,16,"['bitmask', ""dijkstra's"", 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', 'greedy']"
11093,1109300,Secret Message,5,"['implementation', 'string']"
11094,1109400,꿍 가라사대,4,"['implementation', 'string']"
11095,1109500,Torn To Pieces,9,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing']"
11096,1109600,UnDetected,18,"['data structures', 'disjoint set', 'geometry']"
11097,1109700,도시 계획,18,"['floyd–warshall', 'graph theory', 'strongly connected component']"
11098,1109800,첼시를 도와줘!,4,"['implementation', 'string']"
11099,1109900,Virus,0,[]
11100,1110000,Frogger,15,[]
11101,1110100,꿍의 여친 만들기,8,"['data structures', 'set / map by hashing', 'parsing', 'string']"
11102,1110200,Party,18,['maximum flow']
11103,1110300,Save the computer!,0,[]
11104,1110400,Fridge of Your Dreams,4,"['implementation', 'mathematics']"
11105,1110500,Scorched Earth,0,[]
11106,1110600,Free Willy,0,[]
11107,1110700,Vampire,9,"['dynamic programming', 'mathematics', 'probability theory']"
11108,1110800,TV 전쟁,13,"['dynamic programming', 'greedy', 'sorting']"
11109,1110900,괴짜 교수,3,"['arithmetic', 'mathematics']"
11110,1111000,Tree of Pain,0,[]
11111,1111100,두부장수 장홍준 2,19,"['maximum flow', 'minimum cost maximum flow']"
11112,1111200,Eight puzzle,15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
11113,1111300,The Traveling Orienteerer,4,"['geometry', 'implementation', 'mathematics', 'pythagoras theorem']"
11114,1111400,Paper,0,[]
11115,1111500,The Still Embarrassed Cryptographer,11,"['mathematics', 'number theory', 'string']"
11116,1111600,교통량,6,['bruteforcing']
11117,1111700,Letter Cookies,4,"['implementation', 'string']"
11118,1111800,Bicycle puzzle,15,"['combinatorics', 'dynamic programming', 'mathematics']"
11119,1111900,Geometry Darts,12,['geometry']
11120,1112000,Box Betting,13,"['binary search', 'mathematics', 'probability theory']"
11121,1112100,Communication Channels,2,"['implementation', 'string']"
11122,1112200,Train Tickets,21,"['maximum flow', 'minimum cost maximum flow']"
11123,1112300,양 한마리... 양 두마리...,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
11124,1112400,Rubiks Cube,0,[]
11125,1112500,Marble Madness,7,['mathematics']
11126,1112600,Robberies,0,[]
11127,1112700,Robotic Encryption,0,[]
11128,1112800,Guarding the Border,0,[]
11129,1112900,Beehive Epidemic,0,[]
11130,1113000,Mobile Gaming,0,[]
11131,1113100,Balancing Weights,3,"['arithmetic', 'implementation', 'mathematics']"
11132,1113200,Ambulance Antics,0,[]
11133,1113300,Nurikabe,11,[]
11134,1113400,쿠키애호가,3,"['arithmetic', 'mathematics']"
11135,1113500,Typing monkey,15,"['implementation', 'string']"
11136,1113600,The Diligent Cryptographer,0,[]
11137,1113700,Combat Odds,10,"['dynamic programming', 'mathematics']"
11138,1113800,Soundex,0,[]
11139,1113900,Sheep Frenzy,0,[]
11140,1114000,LOL,8,"['case work', 'implementation', 'string']"
11141,1114100,Treasure Hunt,0,[]
11142,1114200,Cross Country Race,7,['mathematics']
11143,1114300,Beads,15,"['data structures', 'segment tree']"
11144,1114400,Sleeping at Work,12,['dynamic programming']
11145,1114500,Is it a Number?,4,"['arbitrary precision / big integers', 'parsing', 'string']"
11146,1114600,Proud Penguin,0,[]
11147,1114700,Travelling Tom,12,"['floyd–warshall', 'graph theory']"
11148,1114800,Boss Rush,20,['bipartite matching']
11149,1114900,Decode the Message,5,"['implementation', 'string']"
11150,1115000,Troublesome Tools,0,[]
11151,1115100,Civilization,8,"['bitmask', 'bruteforcing']"
11152,1115200,Inverse Divisor Sums,14,"['backtracking', 'mathematics', 'number theory', 'sorting']"
11153,1115300,Longest Common Path,16,"[""dijkstra's"", 'graph theory']"
11154,1115400,Birthday Party,8,"['combinatorics', 'graph theory', 'mathematics', 'probability theory']"
11155,1115500,Holey Road,0,[]
11156,1115600,Candy Store,0,[]
11157,1115700,Rotating Penguin Maze,0,[]
11158,1115800,Angry Grammar Nazi,4,['string']
11159,1115900,Neurotic Network,11,"['dynamic programming', 'dynamic programming on trees', 'tree']"
11160,1116000,Special Services,0,[]
11161,1116100,Negative People in Da House,3,"['arithmetic', 'implementation', 'mathematics']"
11162,1116200,Ruben Spawns,0,[]
11163,1116300,Kings on a Chessboard,21,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
11164,1116400,Traveling Cellsperson,5,[]
11165,1116500,Dimensions,0,[]
11166,1116600,Space Travel,0,[]
11167,1116700,C.S.I.: P15,0,[]
11168,1116800,Abandon Ship,9,"['data structures', 'set / map by hashing', 'implementation', 'simulation']"
11169,1116900,Battle Sheep,0,[]
11170,1117000,0의 개수,5,"['bruteforcing', 'implementation', 'mathematics']"
11171,1117100,Dad’s Card Trick,14,['ad-hoc']
11172,1117200,Election,6,"['bruteforcing', 'implementation']"
11173,1117300,Fired,0,[]
11174,1117400,GG NO RE OMG CHEATZ,0,[]
11175,1117500,Herding Sheep,0,[]
11176,1117600,In the Shower,3,['implementation']
11177,1117700,Join My Team,26,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'stable marriage problem']"
11178,1117800,Krusty’s Burger,0,[]
11179,1117900,2진수 뒤집기,4,"['implementation', 'mathematics', 'string']"
11180,1118000,Paintball,17,['bipartite matching']
11181,1118100,Base-2 Palindromes,11,"['combinatorics', 'mathematics', 'precomputation']"
11182,1118200,Kindergarten Excursion,10,['sweeping']
11183,1118300,Coast Length,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
11184,1118400,Icons in the Toolbar,8,[]
11185,1118500,Getting Rid of Coins,11,['greedy']
11186,1118600,Spam Filter,0,[]
11187,1118700,Birds on a Wire,7,"['case work', 'greedy', 'mathematics', 'sorting']"
11188,1118800,Lifting Walls,9,"['bruteforcing', 'geometry']"
11189,1118900,Toilet Seat,5,['implementation']
11190,1119000,Pub-lic Good,10,"['breadth-first search', 'graph theory', 'graph traversal']"
11191,1119100,Xor Maximization,18,"['gaussian elimination', 'linear algebra', 'mathematics']"
11192,1119200,Restaurant Orders,14,['dynamic programming']
11193,1119300,Three Digits,11,['mathematics']
11194,1119400,Car Game,11,['string']
11195,1119500,Peragrams,4,"['ad-hoc', 'string']"
11196,1119600,Vacuum Tubes,11,[]
11197,1119700,Chicken Joggers,14,[]
11198,1119800,Hogwarts,0,[]
11199,1119900,Bank Queue,12,"['data structures', 'greedy', 'priority queue']"
11200,1120000,Forest Highway,0,[]
11201,1120100,FreeCell,0,[]
11202,1120200,Flag Quiz,8,['string']
11203,1120300,Numbers On a Tree,6,"['mathematics', 'tree']"
11204,1120400,Absurdistan Roads II,0,[]
11205,1120500,Cow Crane,10,['ad-hoc']
11206,1120600,Tomosynthesis,0,[]
11207,1120700,Pizza Problems,0,[]
11208,1120800,Falling Mugs,0,[]
11209,1120900,Intercept,0,[]
11210,1121000,Radar,0,[]
11211,1121100,Count von Walken’s Fence,11,['mathematics']
11212,1121200,Proteins,0,[]
11213,1121300,Black Friday,3,['implementation']
11214,1121400,Absurdistan Roads III,13,"['data structures', 'graph theory', 'topological sorting', 'set / map by trees']"
11215,1121500,Xortris,0,[]
11216,1121600,Shibuya Crossing,18,"['dynamic programming', 'graph theory', 'topological sorting']"
11217,1121700,Spock,21,"['bruteforcing', 'greedy']"
11218,1121800,A1 Paper,9,"['ad-hoc', 'geometry', 'mathematics']"
11219,1121900,Odd Binomial Coefficients,18,"['combinatorics', 'divide and conquer', 'mathematics']"
11220,1122000,The Addition Game,0,[]
11221,1122100,Area of Effect,0,[]
11222,1122200,Canyon Mapping,0,[]
11223,1122300,Magic Checkerboard,18,[]
11224,1122400,Extensive Or,0,[]
11225,1122500,Primal Partitions,0,[]
11226,1122600,Sand Art,0,[]
11227,1122700,String Stretching,0,[]
11228,1122800,Vending Machine,0,[]
11229,1122900,Rainbow Zamboni,0,[]
11230,1123000,Zig Zag Nametag,0,[]
11231,1123100,Word Ladder,0,[]
11232,1123200,Shuffles,11,['mathematics']
11233,1123300,Stained Carpet,0,[]
11234,1123400,Marble Madness,0,[]
11235,1123500,Polling,6,"['data structures', 'set / map by hashing', 'sorting', 'string', 'set / map by trees']"
11236,1123600,Carrot,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
11237,1123700,Exam,0,[]
11238,1123800,Fibo,15,"['exponentiation by squaring', 'mathematics']"
11239,1123900,FindWords,18,"['data structures', 'hashing', 'string', 'tree', 'trie']"
11240,1124000,Flower,14,"['data structures', 'disjoint set', 'greedy']"
11241,1124100,Hive,0,[]
11242,1124200,Lineage,0,[]
11243,1124300,OPS,10,[]
11244,1124400,Pink,12,"['data structures', 'set / map by hashing', 'string']"
11245,1124500,Song,13,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
11246,1124600,VeryEasy,0,[]
11247,1124700,Atomic Computer,0,[]
11248,1124800,Bond Tour,0,[]
11249,1124900,Chasing,0,[]
11250,1125000,Design A Tree,0,[]
11251,1125100,Romance of The Three Kingdom,0,[]
11252,1125200,Finding something,0,[]
11253,1125300,Goods Market,0,[]
11254,1125400,Hydraulic Arm,7,"['data structures', 'stack']"
11255,1125500,ITAI Virus,8,"['graph theory', 'implementation']"
11256,1125600,사탕,6,"['greedy', 'sorting']"
11257,1125700,IT Passport Examination,2,"['arithmetic', 'implementation', 'mathematics']"
11258,1125800,Thai Lottery Checking,3,"['arithmetic', 'implementation', 'mathematics', 'string']"
11259,1125900,Travel of alphabets,9,"['breadth-first search', 'bruteforcing', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'sorting']"
11260,1126000,Cell Counting,6,['implementation']
11261,1126100,Hunger Games,11,"['dynamic programming', 'knapsack']"
11262,1126200,Minions’ Master,3,"['arbitrary precision / big integers', 'arithmetic', 'implementation', 'mathematics']"
11263,1126300,PIN Code Possibilities,8,['bruteforcing']
11264,1126400,Logical Functions: AND-OR,4,"['implementation', 'simulation']"
11265,1126500,끝나지 않는 파티,11,"['floyd–warshall', 'graph theory']"
11266,1126600,단절점,17,"['articulation points and bridges', 'graph theory']"
11267,1126700,Adjoin the Networks,14,[]
11268,1126800,Bell Ringing,18,[]
11269,1126900,Cryptographer’s Conundrum,4,"['implementation', 'string']"
11270,1127000,Disastrous Downtime,7,[]
11271,1127100,Entertainment Box,10,"['data structures', 'greedy', 'set / map by trees']"
11272,1127200,Floppy Music,0,[]
11273,1127300,Goblin Garden Guards,15,['data structures']
11274,1127400,Hero Power,0,[]
11275,1127500,iCar,0,[]
11276,1127600,Just a Quiz,0,[]
11277,1127700,2-SAT - 1,10,"['backtracking', 'bruteforcing']"
11278,1127800,2-SAT - 2,10,['bruteforcing']
11279,1127900,최대 힙,9,"['data structures', 'priority queue']"
11280,1128000,2-SAT - 3,17,"['2-sat', 'graph theory', 'strongly connected component']"
11281,1128100,2-SAT - 4,18,"['2-sat', 'graph theory', 'strongly connected component']"
11282,1128200,한글,2,['implementation']
11283,1128300,한글 2,2,"['implementation', 'parsing', 'string', 'utf-8 inputs']"
11284,1128400,초성 중성 종성,4,"['parsing', 'string', 'utf-8 inputs']"
11285,1128500,초성 중성 종성 2,5,[]
11286,1128600,절댓값 힙,10,"['data structures', 'priority queue']"
11287,1128700,Margaret’s Minute Minute Manipulation,5,"['arithmetic', 'implementation', 'mathematics']"
11288,1128800,Ethel’s Encryption,5,"['implementation', 'mathematics', 'string']"
11289,1128900,Boolean Postfix,7,[]
11290,1129000,Wonowon,5,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
11291,1129100,Alicia’s Afternoon Amble,15,[]
11292,1129200,키 큰 사람,6,"['implementation', 'sorting']"
11293,1129300,Password,5,"['implementation', 'string']"
11294,1129400,Numbers,5,[]
11295,1129500,Exercising,3,"['arithmetic', 'implementation', 'mathematics']"
11296,1129600,가격,4,"['arithmetic', 'implementation', 'mathematics']"
11297,1129700,Cypher,4,"['implementation', 'simulation', 'string']"
11298,1129800,Graphs,6,['implementation']
11299,1129900,Contest,9,['sorting']
11300,1130000,Black Jack,0,[]
11301,1130100,Markleft,0,[]
11302,1130200,Koch,0,[]
11303,1130300,Frogs With Styles,0,[]
11304,1130400,SV Filters,0,[]
11305,1130500,Depacting,0,[]
11306,1130600,Mobile,0,[]
11307,1130700,String Game,15,"['game theory', 'string']"
11308,1130800,One-Way Roads,18,"['articulation points and bridges', 'graph theory']"
11309,1130900,파워!!달걀,16,['dynamic programming']
11310,1131000,Landlocked,12,"['0-1 bfs', 'breadth-first search', 'depth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
11311,1131100,Jug Hard,12,"['euclidean algorithm', 'extended euclidean algorithm', 'mathematics', 'number theory']"
11312,1131200,삼각 무늬 - 2,3,"['arithmetic', 'mathematics']"
11313,1131300,Best Buddies,9,"['data structures', 'set / map by hashing', 'sorting', 'set / map by trees']"
11314,1131400,Do Not Hex My Numbers!,0,[]
11315,1131500,Serves Me Right,0,[]
11316,1131600,Train of Threes,0,[]
11317,1131700,Roots! Really?,6,['mathematics']
11318,1131800,Dyeing Dice,0,[]
11319,1131900,Count Me In,4,"['implementation', 'string']"
11320,1132000,삼각 무늬 - 1,3,"['arithmetic', 'mathematics']"
11321,1132100,Addition Affliction,5,"['bruteforcing', 'implementation', 'parsing', 'string']"
11322,1132200,Numbers are Easy,6,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal']"
11323,1132300,Solitaire,4,['implementation']
11324,1132400,Drawing,12,"['eulerian path / circuit', 'graph theory', 'graph traversal']"
11325,1132500,Batman Begins,0,[]
11326,1132600,Coverity Crossword,0,[]
11327,1132700,Polynomial Boundaries,5,"['implementation', 'mathematics']"
11328,1132800,Strfry,4,"['implementation', 'string']"
11329,1132900,Horn-Blowing,0,[]
11330,1133000,Implication,0,[]
11331,1133100,Bitcoin Profits,10,"['data structures', 'sorting', 'stack']"
11332,1133200,시간초과,8,"['case work', 'implementation']"
11333,1133300,4×n 타일링,14,['dynamic programming']
11334,1133400,Coin Turning Game,13,[]
11335,1133500,Solitaire,0,[]
11336,1133600,Matrix,0,[]
11337,1133700,Largest inscribed rectangle,5,"['geometry', 'mathematics']"
11338,1133800,XOR Sum,12,"['data structures', 'priority queue']"
11339,1133900,There is no place like 127.0.0.1,11,"['binary search', 'string']"
11340,1134000,Making the Grade?,4,"['bruteforcing', 'mathematics']"
11341,1134100,Eakspay igpay atinlay?,9,[]
11342,1134200,Frame by Frame,9,['implementation']
11343,1134300,Crushing Confections,5,['implementation']
11344,1134400,Waiting for Change,7,"['data structures', 'implementation', 'queue', 'simulation']"
11345,1134500,Cornell Party,7,"['data structures', 'set / map by hashing']"
11346,1134600,Cornell Party - Retry,6,"['data structures', 'set / map by hashing', 'sorting', 'string']"
11365,1136500,!밀비 급일,2,"['implementation', 'string']"
11366,1136600,"Tons of Orcs, no Fibbin’",8,"['exponentiation by squaring', 'implementation', 'mathematics']"
11367,1136700,Report Card Time,3,"['implementation', 'string']"
11368,1136800,A Serious Reading Problem,3,"['arithmetic', 'combinatorics', 'mathematics']"
11369,1136900,Safe Zone,0,[]
11370,1137000,Spawn of Ungoliant,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
11371,1137100,The Big Eye in the Sky,6,"['geometry', 'mathematics']"
11372,1137200,Gimli’s Gullet,0,[]
11373,1137300,Tools of the Trade,18,"['maximum flow', 'minimum cost maximum flow']"
11374,1137400,The Magic Word,0,[]
11375,1137500,열혈강호,17,['bipartite matching']
11376,1137600,열혈강호 2,17,['bipartite matching']
11377,1137700,열혈강호 3,18,"['bipartite matching', 'maximum flow']"
11378,1137800,열혈강호 4,18,"['bipartite matching', 'maximum flow']"
11379,1137900,Avoider,19,"['dynamic programming', 'precomputation']"
11380,1138000,Hole in the Wall,0,[]
11381,1138100,Sequences,0,[]
11382,1138200,꼬마 정민,1,"['implementation', 'arithmetic', 'mathematics']"
11383,1138300,뚊,5,"['implementation', 'string']"
11384,1138400,빨간 직사각형,22,[]
11385,1138500,씽크스몰,22,"['chinese remainder theorem', 'fast fourier transform', 'mathematics', 'number theory']"
11386,1138600,괄호 문자열,0,[]
11387,1138700,님 무기가 좀 나쁘시네여,8,"['implementation', 'mathematics']"
11388,1138800,달리는 게임,17,"['convex hull trick', 'dynamic programming', 'greedy', 'mathematics']"
11389,1138900,로봇 심판의 님 게임,0,[]
11390,1139000,맛있는 과자,14,"['combinatorics', 'dynamic programming', 'geometry', 'mathematics']"
11391,1139100,분배,13,[]
11392,1139200,색종이,29,"['calculus', 'case work', 'geometry', 'implementation', 'mathematics']"
11393,1139300,접미사 배열의 개수,0,[]
11394,1139400,최적의 능력 구성,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
11395,1139500,쿼터너리 컴퓨터,24,"['case work', 'mathematics']"
11396,1139600,통로 위의 개미,0,[]
11397,1139700,피보나미얼,23,"['mathematics', 'number theory']"
11398,1139800,흑백 이미지 찾기,25,"['fast fourier transform', 'hashing', 'mathematics']"
11399,1139900,ATM,7,"['greedy', 'sorting']"
11400,1140000,단절선,17,"['articulation points and bridges', 'depth-first search', 'graph theory', 'graph traversal']"
11401,1140100,이항 계수 3,15,"['combinatorics', 'exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'modular multiplicative inverse', 'number theory']"
11402,1140200,이항 계수 4,16,"['combinatorics', 'dynamic programming', 'lucas theorem', 'mathematics', 'number theory']"
11403,1140300,경로 찾기,10,"['floyd–warshall', 'graph theory', 'graph traversal']"
11404,1140400,플로이드,12,"['floyd–warshall', 'graph theory']"
11405,1140500,책 구매하기,18,"['maximum flow', 'minimum cost maximum flow']"
11406,1140600,책 구매하기 2,17,"['bipartite matching', 'maximum flow']"
11407,1140700,책 구매하기 3,18,"['maximum flow', 'minimum cost maximum flow']"
11408,1140800,열혈강호 5,18,"['maximum flow', 'minimum cost maximum flow']"
11409,1140900,열혈강호 6,18,"['maximum flow', 'minimum cost maximum flow']"
11410,1141000,칙칙폭폭,21,"['maximum flow', 'minimum cost maximum flow']"
11411,1141100,Equivalence,0,[]
11412,1141200,Tree of Almost Clean Money,0,[]
11413,1141300,Primes,0,[]
11414,1141400,LCM,15,"['euclidean algorithm', 'mathematics', 'number theory']"
11415,1141500,Taxies,0,[]
11416,1141600,Irrational Roots,8,['mathematics']
11417,1141700,Race,0,[]
11418,1141800,Railway Tickets,0,[]
11419,1141900,Olympic Parade,7,"['bitmask', 'sweeping']"
11420,1142000,Word by mouth,0,[]
11421,1142100,Dr Who’s Banquet,0,[]
11422,1142200,Bitris,17,"['data structures', 'mathematics', 'segment tree']"
11423,1142300,Primes,9,"['binary search', 'mathematics', 'number theory', 'prefix sum', 'primality test', 'sieve of eratosthenes']"
11424,1142400,Longest Prefix Match,0,[]
11425,1142500,Stripe,0,[]
11426,1142600,Maximal Number of Divisors,0,[]
11427,1142700,Miraculous Drug,0,[]
11428,1142800,Softville,0,[]
11429,1142900,Tree,0,[]
11430,1143000,VAN DINSKY,0,[]
11431,1143100,"Mr. Gorbachev, Tear Down This Wall!",4,['implementation']
11432,1143200,Candy Bombers,17,['bipartite matching']
11433,1143300,Currency Conversion,0,[]
11434,1143400,Ampelmännchen,3,"['arithmetic', 'greedy', 'mathematics']"
11435,1143500,Population Migration,0,[]
11436,1143600,Television Reception,0,[]
11437,1143700,LCA,13,"['lowest common ancestor', 'tree']"
11438,1143800,LCA 2,16,"['data structures', 'lowest common ancestor', 'sparse table', 'tree']"
11439,1143900,이항 계수 5,17,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
11440,1144000,피보나치 수의 제곱의 합,16,"['exponentiation by squaring', 'mathematics']"
11441,1144100,합 구하기,8,['prefix sum']
11442,1144200,홀수번째 피보나치 수의 합,14,"['exponentiation by squaring', 'mathematics']"
11443,1144300,짝수번째 피보나치 수의 합,14,"['exponentiation by squaring', 'mathematics']"
11444,1144400,피보나치 수 6,14,"['exponentiation by squaring', 'mathematics']"
11445,1144500,Cheating Knight,13,[]
11446,1144600,Chess Tournament,17,['knapsack']
11447,1144700,Colby’s Costly Collectibles,14,"['geometry', 'implementation', 'area of a polygon', 'simulation']"
11448,1144800,Ga,8,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
11449,1144900,Icelandic Motorclubs,13,['two-pointer']
11450,1145000,Manhattan Power Failure,0,[]
11451,1145100,팩맨,13,"['breadth-first search', 'graph theory', 'graph traversal']"
11452,1145200,Risk,19,"['dynamic programming', 'mathematics', 'probability theory']"
11453,1145300,Rummikub,5,['implementation']
11454,1145400,Song Titles,0,[]
11455,1145500,Tanks,0,[]
11456,1145600,Chasing the Cheetahs,0,[]
11457,1145700,Falcon Dive,0,[]
11458,1145800,The Fox and the Owl,0,[]
11459,1145900,Feeding the Herrings,20,['dynamic programming']
11460,1146000,Jumping Yoshi,0,[]
11461,1146100,Lunch Menu,0,[]
11462,1146200,The Owl and the Fox,6,"['binary search', 'bruteforcing', 'precomputation']"
11463,1146300,Plankton Food,0,[]
11464,1146400,Hacking the Screen,0,[]
11465,1146500,Visitors’ Train,0,[]
11466,1146600,Alex Origami Squares,3,"['case work', 'geometry', 'implementation', 'mathematics']"
11467,1146700,Black and White,13,['constructive']
11468,1146800,Concatenation,15,"['ad-hoc', 'implementation', 'string']"
11469,1146900,Distribution in Metagonia,17,"['ad-hoc', 'constructive', 'mathematics', 'number theory']"
11470,1147000,Easy Arithmetic,8,['greedy']
11471,1147100,Fygon,0,[]
11472,1147200,Graph,20,"['data structures', 'graph theory', 'greedy', 'priority queue', 'topological sorting']"
11473,1147300,Hash Code Hacker,13,['constructive']
11474,1147400,Insider’s Information,23,"['ad-hoc', 'graph theory', 'randomization', 'topological sorting']"
11475,1147500,Journey to the “The World’s Start”,19,"['binary search', 'data structures', 'dynamic programming', 'segment tree', 'set / map by trees']"
11476,1147600,Kingdom Trip,26,"['dynamic programming', 'geometry']"
11477,1147700,Lucky Chances,6,"['bruteforcing', 'implementation']"
11478,1147800,서로 다른 부분 문자열의 개수,8,"['data structures', 'set / map by hashing', 'string', 'set / map by trees']"
11479,1147900,서로 다른 부분 문자열의 개수 2,19,"['string', 'suffix array and lcp array']"
11480,1148000,Aqueduct Construction,0,[]
11481,1148100,Mountain Biking,11,"['calculus', 'mathematics', 'physics']"
11482,1148200,Conversation Log,10,"['data structures', 'set / map by hashing', 'implementation', 'sorting']"
11483,1148300,Slant Drilling,0,[]
11484,1148400,Rainfall,0,[]
11485,1148500,Physiognomy,0,[]
11486,1148600,Drink Responsibly,0,[]
11487,1148700,Sunlight,0,[]
11488,1148800,Nimionese,9,"['implementation', 'parsing', 'simulation', 'string']"
11489,1148900,Jelly Raid,0,[]
11490,1149000,Call a Cab,0,[]
11491,1149100,Telescope,0,[]
11492,1149200,Milestone Counter,0,[]
11493,1149300,동전 교환,20,"['maximum flow', 'minimum cost maximum flow']"
11494,1149400,Equilibrium State,0,[]
11495,1149500,격자 0 만들기,19,['maximum flow']
11496,1149600,Kernel,0,[]
11497,1149700,통나무 건너뛰기,10,"['greedy', 'sorting']"
11498,1149800,홀수 싸이클,20,"['breadth-first search', 'bipartite graph', 'constructive', 'depth-first search', 'graph theory', 'graph traversal', 'strongly connected component']"
11499,1149900,Path,19,"['convex hull', 'data structures', 'geometry', 'stack']"
11500,1150000,Polynomial,17,"['dynamic programming', 'mathematics', 'number theory']"
11501,1150100,주식,9,['greedy']
11502,1150200,세 개의 소수 문제,7,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
11503,1150300,Tree Edit,21,"['dynamic programming', 'dynamic programming on trees', 'tree']"
11504,1150400,돌려 돌려 돌림판!,5,"['bruteforcing', 'implementation', 'simulation']"
11505,1150500,구간 곱 구하기,15,"['segment tree', 'data structures']"
11506,1150600,占쏙옙,0,[]
11507,1150700,카드셋트,7,"['data structures', 'set / map by hashing', 'parsing', 'string']"
11508,1150800,2+1 세일,7,"['greedy', 'sorting']"
11509,1150900,풍선 맞추기,11,['greedy']
11510,1151000,TOPOVI,19,"['data structures', 'set / map by hashing', 'implementation']"
11511,1151100,RELATIVNOST,21,"['data structures', 'segment tree']"
11512,1151200,UZASTOPNI,21,"['bitmask', 'dynamic programming', 'dynamic programming on trees', 'tree']"
11513,1151300,Kinfolk,16,"['case work', 'implementation', 'lowest common ancestor', 'tree']"
11514,1151400,Refract Facts,11,"['binary search', 'mathematics', 'physics']"
11515,1151500,Poker,17,['implementation']
11516,1151600,Interpreter,21,"['implementation', 'parsing', 'string']"
11517,1151700,Positive Con Sequences,4,"['bruteforcing', 'case work', 'mathematics']"
11518,1151800,Morse,5,"['data structures', 'set / map by hashing', 'implementation', 'string']"
11519,1151900,Hounded by Indecision,0,[]
11520,1152000,And Then There Was 5,3,['implementation']
11521,1152100,Boggle,14,"['backtracking', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'string']"
11522,1152200,Sum Kind of Problem,3,"['arithmetic', 'implementation', 'mathematics']"
11523,1152300,Running Steps,12,"['combinatorics', 'mathematics']"
11524,1152400,Immortal Porpoises,14,"['exponentiation by squaring', 'mathematics']"
11525,1152500,Farey Sequence Length,15,"['euler totient function', 'mathematics', 'number theory', 'prefix sum']"
11526,1152600,A Rational Sequence,11,['mathematics']
11527,1152700,Robots,0,[]
11528,1152800,Compositions,11,"['dynamic programming', 'knapsack']"
11529,1152900,Brocard Point of a Triangle,19,"['binary search', 'geometry']"
11530,1153000,RATS,11,"['arbitrary precision / big integers', 'implementation', 'mathematics', 'simulation']"
11531,1153100,ACM 대회 채점,4,['implementation']
11532,1153200,The Agglomerator,0,[]
11533,1153300,Dance Recital,11,"['backtracking', 'recursion']"
11534,1153400,Hidden Password,6,"['data structures', 'implementation', 'simulation', 'stack', 'string']"
11535,1153500,Kitchen Measurements,16,"['breadth-first search', 'data structures', ""dijkstra's"", 'graph theory', 'graph traversal', 'set / map by hashing', 'set / map by trees']"
11536,1153600,줄 세우기,6,"['implementation', 'sorting', 'string']"
11537,1153700,Mosaic,0,[]
11538,1153800,Pyro Tubes,6,"['bitmask', 'bruteforcing', 'data structures', 'set / map by hashing', 'set / map by trees']"
11539,1153900,Word Clouds Revisited,0,[]
11540,1154000,Competition,8,['value / coordinate compression']
11541,1154100,At most twice,15,"['greedy', 'string']"
11542,1154200,Blood groups,21,"['maximum flow', 'minimum cost maximum flow']"
11543,1154300,Cake cut,18,['geometry']
11544,1154400,D as in Daedalus,4,[]
11545,1154500,Exposing corruption,0,[]
11546,1154600,Fence the vegetables fail,18,"['data structures', 'geometry', 'segment tree', 'sweeping']"
11547,1154700,Galactic taxes,18,[]
11548,1154800,Height map,12,[]
11549,1154900,Identifying tea,2,['implementation']
11550,1155000,Just a bit sorted,0,[]
11551,1155100,Keep it energized,18,[]
11552,1155200,Pyramid Base 2,22,"['data structures', 'segment tree with lazy propagation', 'parametric search', 'segment tree', 'sweeping']"
11553,1155300,Pyramid Base 3,26,"['data structures', 'segment tree', 'two-pointer']"
11554,1155400,Ultimate TTT,0,[]
11555,1155500,CLARKSON,21,"['data structures', 'dynamic programming', 'parametric search', 'segment tree', 'string', 'suffix array and lcp array']"
11556,1155600,RADIO,0,[]
11557,1155700,Yangjojang of The Year,4,"['implementation', 'sorting']"
11558,1155800,The Game of Death,7,"['graph theory', 'graph traversal', 'implementation', 'simulation']"
11559,1155900,Puyo Puyo,12,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
11560,1156000,다항식 게임,12,['dynamic programming']
11561,1156100,징검다리,8,"['binary search', 'mathematics']"
11562,1156200,백양로 브레이크,13,"['floyd–warshall', 'graph theory']"
11563,1156300,연돌이와 고잠녀,16,"['bruteforcing', 'geometry']"
11564,1156400,점프왕 최준민,6,"['case work', 'mathematics', 'number theory']"
11565,1156500,바이너리 게임,13,['ad-hoc']
11566,1156600,킥,7,['bruteforcing']
11567,1156700,선진이의 겨울 왕국,14,"['breadth-first search', 'graph theory', 'graph traversal']"
11568,1156800,민균이의 계략,9,"['dynamic programming', 'longest increasing sequence in o(n log n)']"
11569,1156900,신호등,16,"[""dijkstra's"", 'graph theory']"
11570,1157000,환상의 듀엣,16,['dynamic programming']
11571,1157100,분수를 소수로,11,"['implementation', 'mathematics']"
11572,1157200,확률 실험,16,"['geometry', 'two-pointer']"
11573,1157300,몬스터,14,"['combinatorics', 'dynamic programming', 'mathematics']"
11574,1157400,CYK의 너무너무 재밌는 그래프 만들기 놀이,15,"['combinatorics', 'dynamic programming', 'mathematics']"
11575,1157500,Affine Cipher,4,['string']
11576,1157600,Base Conversion,6,"['implementation', 'mathematics', 'number theory']"
11577,1157700,Condition of deep sleep,13,"['data structures', 'greedy', 'queue']"
11578,1157800,팀원 모집,11,"['bitmask', 'bruteforcing']"
11579,1157900,초차원전쟁 이나,9,"['arithmetic', 'linear algebra', 'mathematics']"
11580,1158000,Footprint,5,"['implementation', 'simulation']"
11581,1158100,구호물자,10,"['depth-first search', 'floyd–warshall', 'graph theory', 'graph traversal']"
11582,1158200,치킨 TOP N,7,"['divide and conquer', 'sorting']"
11583,1158300,인경호의 징검다리,13,"['dynamic programming', 'greedy']"
11584,1158400,저 집합은 해로운 집합이다,14,"['mathematics', 'recursion']"
11585,1158500,속타는 저녁 메뉴,16,"['knuth–morris–pratt', 'string']"
11586,1158600,지영 공주님의 마법 거울,3,"['string', 'implementation']"
11587,1158700,MARKO,4,[]
11588,1158800,GEPPETTO,10,"['bit set', 'bruteforcing']"
11589,1158900,ARTUR,16,"['geometry', 'graph theory', 'topological sorting']"
11590,1159000,SAVEZ,18,"['data structures', 'hashing', 'tree', 'trie']"
11591,1159100,VUDU,18,"['data structures', 'divide and conquer', 'prefix sum', 'segment tree']"
11592,1159200,DRŽAVA,24,"['binary search', 'data structures', 'disjoint set', 'dynamic programming', 'geometry', 'graph theory', 'minimum spanning tree', 'voronoi diagram']"
11593,1159300,Airports,19,"['bipartite matching', 'floyd–warshall', 'graph theory']"
11594,1159400,Butterfly Effect,0,[]
11595,1159500,Classy,0,[]
11596,1159600,Triangle,4,"['geometry', 'pythagoras theorem']"
11597,1159700,Excellence,6,"['greedy', 'sorting']"
11598,1159800,Falling Blocks,23,"['case work', 'depth-first search', 'graph theory', 'graph traversal']"
11599,1159900,Racing Gems,17,"['binary search', 'geometry', 'longest increasing sequence in o(n log n)']"
11600,1160000,Hilbert Sort,14,"['divide and conquer', 'implementation']"
11601,1160100,Coverage,0,[]
11602,1160200,Olympics,20,[]
11603,1160300,Checkers,16,"['eulerian path / circuit', 'graph theory']"
11604,1160400,Millionaire,0,[]
11605,1160500,Magic Trick,4,['bruteforcing']
11606,1160600,Egg Drop,4,[]
11607,1160700,Grid,11,"['breadth-first search', 'graph theory', 'graph traversal']"
11608,1160800,Complexity,4,"['bruteforcing', 'implementation', 'sorting', 'string']"
11609,1160900,Class Time,6,"['sorting', 'string']"
11610,1161000,Surf,12,"['binary search', 'dynamic programming']"
11611,1161100,Blur,10,['implementation']
11612,1161200,Gears,12,"['breadth-first search', 'graph theory', 'graph traversal', 'mathematics']"
11613,1161300,ASCII Addition,11,"['implementation', 'string']"
11614,1161400,Book Borders,16,"['binary search', 'prefix sum']"
11615,1161500,Cow Confinement,28,"['data structures', 'geometry', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
11616,1161600,Digit Division,13,"['combinatorics', 'mathematics', 'number theory']"
11617,1161700,Export Estimate,20,"['data structures', 'disjoint set', 'graph theory', 'offline queries']"
11618,1161800,Frightful Formula,21,"['combinatorics', 'fast fourier transform', 'mathematics']"
11619,1161900,Greenhouse Growth,24,"['data structures', 'disjoint set', 'implementation', 'simulation', 'set / map by trees']"
11620,1162000,Hovering Hornet,17,"['case work', 'convex hull', 'geometry', 'geometry; 3d', 'implementation', 'mathematics', 'area of a polygon']"
11621,1162100,Ice Igloos,18,"['geometry', 'mathematics']"
11622,1162200,Juice Junctions,22,"['biconnected component', 'data structures', 'disjoint set', 'maximum flow', 'graph theory', 'max-flow min-cut theorem', 'tree']"
11623,1162300,Kernel Knights,16,"['graph theory', 'topological sorting']"
11624,1162400,Looping Labyrinth,26,"['breadth-first search', 'depth-first search', 'geometry', 'graph theory', 'graph traversal', 'linear algebra', 'mathematics', 'number theory']"
11625,1162500,Freight Train,16,[]
11626,1162600,Physical Music,15,"['data structures', 'segment tree']"
11627,1162700,Godzilla,0,[]
11628,1162800,Hotels,0,[]
11629,1162900,The King’s Walk,18,[]
11630,1163000,Map Colouring,0,[]
11631,1163100,Mario,21,[]
11632,1163200,Museum,0,[]
11633,1163300,Six Degrees,12,[]
11634,1163400,Tour de France,0,[]
11635,1163500,Wipe Your Whiteboards,17,"['extended euclidean algorithm', 'mathematics', 'number theory']"
11636,1163600,Stand on Zanzibar,4,"['implementation', 'mathematics']"
11637,1163700,인기 투표,6,['implementation']
11638,1163800,Flipping Cards,14,"['breadth-first search', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
11639,1163900,Amazing Race,0,[]
11640,1164000,Scaling Recipes,4,"['arithmetic', 'implementation', 'mathematics']"
11641,1164100,Space Junk,13,"['geometry', 'geometry; 3d', 'implementation', 'mathematics', 'ternary search']"
11642,1164200,Rubik’s Revenge in ... 2D!? 3D?,0,[]
11643,1164300,The Magical 3,11,['bruteforcing']
11644,1164400,Matrix Keypad,10,['ad-hoc']
11645,1164500,"I’ve Been Everywhere, Man",6,"['data structures', 'set / map by hashing', 'string']"
11646,1164600,Bundles of Joy,14,[]
11647,1164700,Checkers,18,[]
11648,1164800,지속,3,"['arithmetic', 'implementation', 'mathematics']"
11649,1164900,Xedni Drawkcab,6,['sorting']
11650,1165000,좌표 정렬하기,6,['sorting']
11651,1165100,좌표 정렬하기 2,6,['sorting']
11652,1165200,카드,7,"['data structures', 'set / map by hashing', 'sorting']"
11653,1165300,소인수분해,5,"['mathematics', 'number theory', 'primality test']"
11654,1165400,아스키 코드,1,['implementation']
11655,1165500,ROT13,5,"['implementation', 'string']"
11656,1165600,접미사 배열,7,"['sorting', 'string']"
11657,1165700,타임머신,12,"['bellman–ford', 'graph theory']"
11658,1165800,구간 합 구하기 3,16,"['data structures', 'multidimensional segment tree', 'prefix sum', 'segment tree']"
11659,1165900,구간 합 구하기 4,8,['prefix sum']
11660,1166000,구간 합 구하기 5,10,"['dynamic programming', 'prefix sum']"
11661,1166100,해의 개수,20,"['extended euclidean algorithm', 'mathematics', 'number theory']"
11662,1166200,민호와 강호,12,"['geometry', 'ternary search']"
11663,1166300,선분 위의 점,8,"['binary search', 'sorting']"
11664,1166400,선분과 점,11,"['geometry', 'geometry; 3d', 'mathematics', 'ternary search']"
11665,1166500,직육면체 교집합,5,"['geometry', 'geometry; 3d']"
11666,1166600,워크스테이션 배정,13,"['data structures', 'greedy', 'priority queue', 'sorting']"
11667,1166700,생산성 향상,23,"['dynamic programming', 'sorting']"
11668,1166800,파이프 청소,17,"['geometry', 'graph theory', 'graph traversal', 'line segment intersection check']"
11669,1166900,Debugging,18,['dynamic programming']
11670,1167000,초등 수학,17,['bipartite matching']
11671,1167100,Flight Plan Evaluation,23,[]
11672,1167200,Guessing Camels,20,"['data structures', 'segment tree']"
11673,1167300,Hole in One,19,"['bruteforcing', 'implementation', 'physics', 'simulation']"
11674,1167400,Identifying Map Tiles,7,"['implementation', 'mathematics']"
11675,1167500,Jumbled Communication,6,"['bitmask', 'bruteforcing', 'implementation']"
11676,1167600,Kitchen Combinatorics,14,"['bruteforcing', 'combinatorics', 'mathematics']"
11677,1167700,Promotions,18,"['graph theory', 'graph traversal', 'topological sorting']"
11678,1167800,Black Vienna,19,"['2-sat', 'graph theory', 'strongly connected component']"
11679,1167900,Canvas Painting,12,['greedy']
11680,1168000,Dice Cup,4,"['implementation', 'mathematics']"
11681,1168100,Wooden Signs,21,['dynamic programming']
11682,1168200,Landscaping,20,"['maximum flow', 'max-flow min-cut theorem']"
11683,1168300,Game of Cards,18,"['game theory', 'sprague–grundy theorem']"
11684,1168400,Sheldon Numbers,9,[]
11685,1168500,Text Processor,0,[]
11686,1168600,Saint John Festival,19,"['binary search', 'convex hull', 'geometry', 'point in convex polygon check']"
11687,1168700,팩토리얼 0의 개수,10,"['binary search', 'mathematics', 'number theory']"
11688,1168800,최소공배수 찾기,12,"['euclidean algorithm', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
11689,1168900,"GCD(n, k) = 1",15,"['euler totient function', 'mathematics', 'number theory']"
11690,1169000,"LCM(1, 2, ..., n)",13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
11691,1169100,"LCM(i, j)",21,"['mathematics', 'möbius inversion', 'number theory']"
11692,1169200,시그마 함수,13,"['mathematics', 'number theory']"
11693,1169300,n^m의 약수의 합,14,"['exponentiation by squaring', 'mathematics', 'modular multiplicative inverse', 'number theory']"
11694,1169400,님 게임,19,"['game theory', 'sprague–grundy theorem']"
11695,1169500,표 게임,17,"['game theory', 'sprague–grundy theorem']"
11696,1169600,Asynchronous Exceptions,0,[]
11697,1169700,AYBABTU,0,[]
11698,1169800,Billiards Sorting,0,[]
11699,1169900,Digit,0,[]
11700,1170000,Dungeon Creation,0,[]
11701,1170100,Longest Lane,22,"['case work', 'geometry', 'sorting']"
11702,1170200,PLAY in BASIC,0,[]
11703,1170300,Skyland,0,[]
11704,1170400,Three-way Branch,0,[]
11705,1170500,Tree Allocation,0,[]
11706,1170600,Balanced Paths,22,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'tree']"
11707,1170700,Card Game Strategy,0,[]
11708,1170800,Casino,25,[]
11709,1170900,Content Delivery,0,[]
11710,1171000,Cost Performance Flow,22,"['maximum flow', 'mathematics', 'minimum cost maximum flow']"
11711,1171100,ICPC Teams,20,"['combinatorics', 'value / coordinate compression', 'exponentiation by squaring', 'graph theory', 'graph traversal', 'inclusion and exclusion', 'mathematics', 'modular multiplicative inverse', 'number theory']"
11712,1171200,JAG-channel II,0,[]
11713,1171300,Kimagure Cleaner,0,[]
11714,1171400,Midpoint,26,"['fast fourier transform', 'geometry', 'implementation', 'mathematics']"
11715,1171500,New Game AI,28,"['ad-hoc', 'data structures', 'graph theory', 'graph traversal', 'implementation', 'segment tree']"
11716,1171600,Runner and Sniper,0,[]
11717,1171700,Wall Making Game,19,"['dynamic programming', 'game theory', 'sprague–grundy theorem']"
11718,1171800,그대로 출력하기,1,"['implementation', 'string']"
11719,1171900,그대로 출력하기 2,3,"['implementation', 'string']"
11720,1172000,숫자의 합,2,"['implementation', 'mathematics', 'string']"
11721,1172100,열 개씩 끊어 출력하기,3,"['string', 'implementation']"
11722,1172200,가장 긴 감소하는 부분 수열,9,['dynamic programming']
11723,1172300,집합,6,"['bitmask', 'implementation']"
11724,1172400,연결 요소의 개수,9,"['graph theory', 'graph traversal', 'breadth-first search', 'depth-first search']"
11725,1172500,트리의 부모 찾기,9,"['graph theory', 'graph traversal', 'tree', 'breadth-first search', 'depth-first search']"
11726,1172600,2×n 타일링,8,['dynamic programming']
11727,1172700,2×n 타일링 2,8,['dynamic programming']
11728,1172800,배열 합치기,6,"['sorting', 'two-pointer']"
11729,1172900,하노이 탑 이동 순서,10,['recursion']
11730,1173000,Watering - 6,9,"['case work', 'precomputation']"
11731,1173100,Watering - 7,10,[]
11732,1173200,Watering - 8,9,"['case work', 'precomputation']"
11733,1173300,Watering - 9,17,"['ad-hoc', 'implementation']"
11734,1173400,Watering - 10,8,"['ad-hoc', 'constructive', 'precomputation']"
11735,1173500,정산소,12,['mathematics']
11736,1173600,Binary vs Decimal,23,"['arbitrary precision / big integers', 'mathematics', 'number theory']"
11737,1173700,Cactus Jubilee,22,"['articulation points and bridges', 'cactus', 'graph theory']"
11738,1173800,Distance on Triangulation,25,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'graph theory', 'offline queries', 'tree']"
11739,1173900,Easy Problemset,6,"['implementation', 'simulation']"
11740,1174000,Froggy Ford,16,"[""dijkstra's"", 'geometry', 'graph theory']"
11741,1174100,Generators,15,"['mathematics', 'number theory']"
11742,1174200,Hypercube,24,"['geometry', 'geometry; hyperdimensional', 'implementation']"
11743,1174300,Iceberg Orders,25,"['ad-hoc', 'implementation']"
11744,1174400,Jump,18,['randomization']
11745,1174500,King’s Inspection,21,"['backtracking', 'bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
11746,1174600,Landscape Improved,18,"['binary search', 'two-pointer']"
11747,1174700,수열,8,"['bruteforcing', 'implementation']"
11748,1174800,Squeeze the Cylinders,12,"['geometry', 'implementation']"
11749,1174900,형제 게임,17,"['game theory', 'graph theory']"
11750,1175000,Wall Clocks,19,"['greedy', 'implementation', 'sweeping']"
11751,1175100,Bringing Order to Disorder,19,"['backtracking', 'combinatorics', 'dynamic programming', 'mathematics', 'recursion', 'sorting']"
11752,1175200,Deadlock Detection,17,['binary search']
11753,1175300,알파카 문장,19,"['dynamic programming', 'string']"
11754,1175400,Rotating Cutter Bits,24,[]
11755,1175500,Routing a Marathon Race,23,"['backtracking', 'graph theory', 'graph traversal']"
11756,1175600,Post Office Investigation,23,"['dominator tree', 'tree']"
11757,1175700,Min-Max Distance Game,26,"['binary search', 'game theory', 'graph theory']"
11758,1175800,CCW,11,['geometry']
11759,1175900,Bottled-Up Feelings,3,"['arithmetic', 'bruteforcing', 'mathematics']"
11760,1176000,Mastering Mastermind,4,['string']
11761,1176100,Shuffling Along,10,"['implementation', 'simulation']"
11762,1176200,A Towering Problem,0,[]
11763,1176300,Being Solarly Systematic,0,[]
11764,1176400,Delete This!,17,['bruteforcing']
11765,1176500,KenKen You Do It?,0,[]
11766,1176600,Rings,13,"['dynamic programming', 'graph theory', 'graph traversal']"
11767,1176700,Squawk Virus,15,"['exponentiation by squaring', 'mathematics']"
11768,1176800,Transportation Delegation,20,['maximum flow']
11769,1176900,Tray Bien,13,['dynamic programming']
11770,1177000,Trick Shot,0,[]
11771,1177100,What’s on the Grille?,5,"['implementation', 'string']"
11772,1177200,POT,3,"['arithmetic', 'implementation', 'mathematics']"
11773,1177300,ESEJ,6,"['ad-hoc', 'constructive', 'randomization', 'string']"
11774,1177400,MOLEKULE,12,[]
11775,1177500,SLON,15,[]
11776,1177600,NEKAMELEONI,23,"['data structures', 'segment tree']"
11777,1177700,남욱이의 썩은 계란판,20,"['maximum flow', 'minimum cost maximum flow']"
11778,1177800,피보나치 수와 최대공약수,15,"['exponentiation by squaring', 'mathematics', 'number theory']"
11779,1177900,최소비용 구하기 2,13,"[""dijkstra's"", 'graph theory']"
11780,1178000,플로이드 2,14,"['floyd–warshall', 'graph theory']"
11781,1178100,퇴근 시간,15,"[""dijkstra's"", 'graph theory']"
11782,1178200,TILING,0,[]
11783,1178300,HAPPINESS,22,[]
11784,1178400,Hex Code,5,"['implementation', 'string']"
11785,1178500,Programming Contest Strategy,7,"['greedy', 'sorting']"
11786,1178600,Terrorists,21,[]
11787,1178700,Aquarium,13,[]
11788,1178800,Queue of Soldiers,0,[]
11789,1178900,Jumping Joey,0,[]
11790,1179000,Primorial vs LCM,19,"['binary search', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes', 'sorting']"
11791,1179100,Automatic Scholarship Calculation,13,"['implementation', 'prefix sum']"
11792,1179200,Tom and Jerry,14,"['calculus', 'mathematics']"
11793,1179300,Sunlight on a Tree,27,"['binary search', 'convex hull', 'data structures', 'geometry', 'heavy-light decomposition', 'implementation', 'segment tree', 'tree']"
11794,1179400,New Angry Bird Weapon,0,[]
11795,1179500,Donation Packaging,3,"['implementation', 'simulation']"
11796,1179600,수행평가 1,14,"['binary search', 'data structures', 'hashing', 'set / map by trees']"
11797,1179700,수행평가 2,20,"['data structures', 'dynamic programming', 'priority queue']"
11798,1179800,Stop Making Sense,21,"['convex hull', 'geometry', 'area of a polygon', 'two-pointer']"
11799,1179900,Game of Peace,14,[]
11800,1180000,Tawla,4,['implementation']
11801,1180100,Feast Coins,14,"['data structures', 'dynamic programming', 'knapsack', 'priority queue']"
11802,1180200,Wedding Selfie,0,[]
11803,1180300,Connect the Cells,0,[]
11804,1180400,Bike Sharing,0,[]
11805,1180500,Special Christmas Tree,10,[]
11806,1180600,Messed up Pictures,0,[]
11807,1180700,Equivalent Passwords,9,"['implementation', 'string']"
11808,1180800,마리오와 사악한 키노피오,22,"['dynamic programming', 'dynamic programming on trees', 'tree']"
11809,1180900,YODA,5,"['implementation', 'mathematics']"
11810,1181000,HAN,8,['implementation']
11811,1181100,데스스타,8,"['bitmask', 'mathematics']"
11812,1181200,K진 트리,13,"['lowest common ancestor', 'mathematics', 'tree']"
11813,1181300,GALAKSIJA,20,"['data structures', 'disjoint set', 'set / map by hashing', 'offline queries', 'smaller to larger technique', 'tree', 'set / map by trees']"
11814,1181400,ENDOR,20,"['ad-hoc', 'dynamic programming']"
11815,1181500,짝수? 홀수?,7,"['mathematics', 'number theory']"
11816,1181600,"8진수, 10진수, 16진수",4,"['arithmetic', 'implementation', 'mathematics', 'parsing', 'string']"
11817,1181700,Robots and Oil Transportation System,17,[]
11818,1181800,Symmetry,0,[]
11819,1181900,The Shortest does not Mean the Simplest,10,"['arbitrary precision / big integers', 'divide and conquer', 'exponentiation by squaring', 'mathematics']"
11820,1182000,Watermelons of the Field of Wonder of the Fool's Land,0,[]
11821,1182100,Martian King,0,[]
11822,1182200,Document,5,"['greedy', 'implementation', 'simulation']"
11823,1182300,Frodo and the Monster,16,"['implementation', 'mathematics']"
11824,1182400,Cache,0,[]
11825,1182500,T9,0,[]
11826,1182600,Black-and-white Square,8,['implementation']
11827,1182700,King’s Walk,0,[]
11828,1182800,High Jump,0,[]
11829,1182900,Fans,0,[]
11830,1183000,Star triangles,10,"['value / coordinate compression', 'data structures', 'set / map by hashing', 'mathematics']"
11831,1183100,Hyper-minimum,0,[]
11832,1183200,Energetic turtle,0,[]
11833,1183300,돌 무게 재기,0,[]
11834,1183400,홀짝,13,"['arbitrary precision / big integers', 'binary search', 'implementation', 'mathematics']"
11835,1183500,Skyline,15,"['dynamic programming', 'greedy']"
11836,1183600,Collider,0,[]
11837,1183700,K-th path,0,[]
11838,1183800,New Year Train,0,[]
11839,1183900,Beautiful row,0,[]
11840,1184000,XOR,19,"['data structures', 'tree', 'trie']"
11841,1184100,Biochips,20,"['dynamic programming', 'dynamic programming on trees', 'tree']"
11842,1184200,Ants,18,"['ad-hoc', 'mathematics']"
11843,1184300,Monkey and Apple-trees,20,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
11844,1184400,Mountain Trek Route,0,[]
11845,1184500,Substrings,20,"['eulerian path / circuit', 'graph theory', 'hashing', 'rabin–karp', 'string']"
11846,1184600,Experiments with Gorlum,0,[]
11847,1184700,Riddick's Cube,0,[]
11848,1184800,Schools,20,"['data structures', 'greedy', 'priority queue']"
11849,1184900,Special graph,0,[]
11850,1185000,Crazy old lady,0,[]
11851,1185100,Luxury burrow,19,"['binary search', 'data structures', 'disjoint set', 'stack']"
11852,1185200,Round words,26,"['bit set', 'dynamic programming', 'string']"
11853,1185300,Trading,0,[]
11854,1185400,Divide and conquer,18,"['data structures', 'segment tree']"
11855,1185500,Bank,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
11856,1185600,Shymbulak,22,['graph theory']
11857,1185700,UFO,0,[]
11858,1185800,K blocks,21,"['data structures', 'dynamic programming', 'stack']"
11859,1185900,Marriage questions,0,[]
11860,1186000,Squares,0,[]
11861,1186100,Maximal Area,16,"['data structures', 'divide and conquer', 'segment tree', 'stack']"
11862,1186200,Table,13,['dynamic programming']
11863,1186300,Roads,0,[]
11864,1186400,Game,0,[]
11865,1186500,Rain Again,0,[]
11866,1186600,요세푸스 문제 0,6,"['data structures', 'implementation', 'queue']"
11867,1186700,박스 나누기 게임,9,"['dynamic programming', 'game theory', 'mathematics']"
11868,1186800,님 게임 2,17,"['game theory', 'sprague–grundy theorem']"
11869,1186900,님블,17,"['game theory', 'sprague–grundy theorem']"
11871,1187100,님 게임 홀짝,17,"['game theory', 'sprague–grundy theorem']"
11872,1187200,님 게임 나누기,18,"['game theory', 'sprague–grundy theorem']"
11873,1187300,최대 직사각형,18,"['data structures', 'stack']"
11874,1187400,ZAMKA,3,"['bruteforcing', 'mathematics']"
11875,1187500,MULTIGRAM,8,"['bruteforcing', 'string']"
11876,1187600,PERICA,13,"['combinatorics', 'mathematics', 'sorting']"
11877,1187700,홍수,13,"['constructive', 'greedy', 'mathematics']"
11878,1187800,OOP,23,"['data structures', 'euler tour technique', 'set / map by hashing', 'offline queries', 'string', 'tree', 'trie']"
11879,1187900,PODNIZOVI,26,[]
11880,1188000,개미,4,"['geometry', 'geometry; 3d', 'pythagoras theorem']"
11881,1188100,지우개,12,"['mathematics', 'prefix sum']"
11882,1188200,괄호 채우기,20,"['data structures', 'greedy', 'priority queue']"
11883,1188300,생일수 I,13,"['dynamic programming', 'greedy']"
11884,1188400,생일수 II,21,"['dynamic programming', 'mathematics']"
11895,1189500,속이기,8,['mathematics']
11896,1189600,다각형,5,"['geometry', 'mathematics']"
11897,1189700,간선 파괴,20,"['data structures', 'disjoint set', 'graph theory']"
11899,1189900,괄호 끼워넣기,8,"['data structures', 'stack', 'string']"
11900,1190000,차이 그래프,15,"[""dijkstra's"", 'graph theory']"
11903,1190300,팰린드롬 세기,24,[]
11904,1190400,쌍둥이 독수리,16,"['ad-hoc', 'mathematics']"
11905,1190500,없는 등수 찾기,22,"['dynamic programming', 'prefix sum']"
11906,1190600,돌 옮기기,17,"['implementation', 'knuth–morris–pratt', 'string']"
11907,1190700,오두막집,22,"['binary search', '센트로이드', 'centroid decomposition', 'divide and conquer', 'parametric search', 'tree']"
11908,1190800,카드,3,['implementation']
11909,1190900,배열 탈출,11,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
11910,1191000,경비원,21,[]
11912,1191200,격자 보존하기,14,"['combinatorics', 'greedy', 'mathematics', 'sorting']"
11913,1191300,Min-cost GCD,19,[]
11914,1191400,배낭 문제 준비하기,0,[]
11915,1191500,전선 연결하기,22,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'segment tree']"
11916,1191600,볼질,7,"['implementation', 'simulation']"
11917,1191700,이상한 수열,14,"['data structures', 'mathematics', 'set / map by trees']"
11918,1191800,정전,12,"['greedy', 'sorting', 'sweeping']"
11920,1192000,버블 정렬,18,"['data structures', 'priority queue']"
11921,1192100,0.1,0,"['implementation', 'arithmetic', 'mathematics']"
11922,1192200,BELA,4,['implementation']
11923,1192300,PUTOVANJE,5,"['bruteforcing', 'implementation']"
11924,1192400,PIANINO,14,"['ad-hoc', 'data structures', 'set / map by trees']"
11925,1192500,PAROVI,0,[]
11926,1192600,KRUMPIRKO,0,[]
11927,1192700,SAN,0,[]
11928,1192800,공기놀이,17,"['combinatorics', 'mathematics']"
11929,1192900,발렌타인 데이,0,[]
11930,1193000,Smallest Enclosing Sphere,21,"['geometry', 'geometry; 3d', 'heuristics', 'minimum enclosing circle']"
11931,1193100,수 정렬하기 4,6,['sorting']
11932,1193200,트리와 K번째 수,21,"['data structures', 'lowest common ancestor', 'persistent segment tree', 'segment tree', 'tree']"
11933,1193300,공장들,22,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'tree']"
11934,1193400,Fortune Telling 2,22,"['value / coordinate compression', 'data structures', 'merge sort tree', 'segment tree', 'sorting']"
11935,1193500,Space Pirate,30,[]
11936,1193600,이주 계획 세우기 1,16,['heuristics']
11937,1193700,이주 계획 세우기 2,19,['heuristics']
11938,1193800,이주 계획 세우기 3,20,[]
11939,1193900,이주 계획 세우기 4,20,[]
11940,1194000,이주 계획 세우기 5,20,[]
11941,1194100,핀볼,22,"['value / coordinate compression', 'data structures', 'dynamic programming', 'segment tree']"
11942,1194200,고려대는 사랑입니다,1,['implementation']
11943,1194300,파일 옮기기,2,"['implementation', 'mathematics']"
11944,1194400,NN,4,"['implementation', 'string']"
11945,1194500,뜨거운 붕어빵,2,"['implementation', 'string']"
11946,1194600,ACM-ICPC,7,"['implementation', 'sorting']"
11947,1194700,이런 반전이,7,['mathematics']
11948,1194800,과목선택,2,"['arithmetic', 'implementation', 'mathematics']"
11949,1194900,번호표 교환,4,"['implementation', 'simulation']"
11950,1195000,2016 IOI,8,"['bruteforcing', 'implementation']"
11951,1195100,JOI国のお散歩事情 (Walking in JOI Kingdom),15,"['dynamic programming', 'sorting']"
11952,1195200,좀비,14,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
11953,1195300,쇼핑,21,"['case work', 'dynamic programming']"
11954,1195400,NIZOVI,11,"['implementation', 'string']"
11955,1195500,PROZOR,8,"['bruteforcing', 'implementation']"
11956,1195600,OZLJEDA,15,['prefix sum']
11957,1195700,OTPOR,13,"['data structures', 'stack']"
11958,1195800,행복한 수,20,"['binary search', 'mathematics', 'number theory']"
11959,1195900,PROKLETNIK,23,"['value / coordinate compression', 'data structures', 'segment tree with lazy propagation', 'offline queries', 'segment tree']"
11960,1196000,Max Flow,19,"['dynamic programming', 'dynamic programming on trees', 'lowest common ancestor', 'prefix sum', 'tree']"
11961,1196100,High Card Low Card (Platinum),21,"['data structures', 'greedy', 'segment tree']"
11962,1196200,Counting Haybales,17,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
11963,1196300,High Card Low Card (Gold),12,"['greedy', 'sorting']"
11964,1196400,Fruit Feast,11,"['breadth-first search', 'graph theory', 'graph traversal']"
11965,1196500,Bessie's Dream,13,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
11966,1196600,2의 제곱인가?,3,['mathematics']
11967,1196700,불켜기,14,"['breadth-first search', 'graph theory', 'graph traversal']"
11968,1196800,High Card Wins,10,['greedy']
11969,1196900,Breed Counting,8,['prefix sum']
11970,1197000,Fence Painting,3,"['implementation', 'mathematics']"
11971,1197100,속도 위반,6,['implementation']
11972,1197200,Contaminated Milk,6,"['bruteforcing', 'implementation']"
11973,1197300,Angry Cows (Silver),10,['binary search']
11974,1197400,Subsequences Summing to Sevens,11,"['mathematics', 'prefix sum']"
11975,1197500,Build Gates,13,"['depth-first search', 'euler characteristic (χ=v-e+f)', 'geometry', 'graph theory', 'graph traversal']"
11976,1197600,Promotion Counting,6,"['arithmetic', 'mathematics']"
11977,1197700,Angry Cows (Bronze),9,"['binary search', 'bruteforcing', 'implementation', 'sorting']"
11978,1197800,Mowing the Field (Bronze),8,"['implementation', 'simulation']"
11979,1197900,Fort Moo,14,['prefix sum']
11980,1198000,Mowing the Field (Platinum),0,[]
11981,1198100,Lights Out (Platinum),0,[]
11982,1198200,Angry Cows (Gold),19,"['binary search', 'dynamic programming']"
11983,1198300,Radio Contact,15,['dynamic programming']
11984,1198400,Lights Out (Gold),15,"['dynamic programming', 'implementation', 'simulation']"
11985,1198500,오렌지 출하,11,['dynamic programming']
11986,1198600,スタンプラリー ２ (Collecting Stamps 2),14,"['dynamic programming', 'prefix sum']"
11987,1198700,鉄道運賃 (Train Fare),19,"['breadth-first search', 'graph theory', 'graph traversal']"
11988,1198800,縄張り (Territory),23,"['data structures', 'set / map by hashing', 'priority queue', 'sweeping']"
11989,1198900,단층,22,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
11990,1199000,Load Balancing (Platinum),20,"['binary search', 'data structures', 'segment tree', 'sweeping']"
11991,1199100,Fenced In (Platinum),19,"['graph theory', 'greedy', 'minimum spanning tree']"
11992,1199200,Circular Barn (Platinum),21,"['convex hull trick', 'divide and conquer', 'divide and conquer optimization', 'dynamic programming']"
11993,1199300,Circular Barn (Gold),17,['greedy']
11994,1199400,Circular Barn Revisited,16,['dynamic programming']
11995,1199500,Fenced In (Gold),14,"['graph theory', 'minimum spanning tree']"
11996,1199600,Circular Barn (Silver),12,['bruteforcing']
11997,1199700,Load Balancing (Silver),12,"['bruteforcing', 'value / coordinate compression', 'prefix sum']"
11998,1199800,Milk Pails (Silver),12,"['breadth-first search', 'graph theory', 'graph traversal']"
11999,1199900,Milk Pails (Bronze),6,"['bruteforcing', 'mathematics']"
12000,1200000,Circular Barn (Bronze),7,['bruteforcing']
12001,1200100,Load Balancing (Bronze),6,['bruteforcing']
12002,1200200,Field Reduction (Silver),13,"['backtracking', 'bruteforcing']"
12003,1200300,Diamond Collector (Silver),15,"['binary search', 'prefix sum']"
12004,1200400,Closing the Farm (Silver),12,"['data structures', 'disjoint set', 'graph theory', 'graph traversal']"
12005,1200500,Diamond Collector (Bronze),6,"['bruteforcing', 'sorting']"
12006,1200600,Bull in a China Shop (Bronze),12,"['bruteforcing', 'implementation']"
12007,1200700,Field Reduction (Bronze),10,"['bruteforcing', 'geometry', 'mathematics', 'sorting']"
12008,1200800,262144,19,"['data structures', 'dynamic programming', 'sparse table']"
12009,1200900,중국 잡동사니 가게의 소 장식품 (Platinum),24,"['binary search', 'data structures', 'hashing', 'set / map by hashing', 'implementation', 'prefix sum', 'set / map by trees']"
12010,1201000,Landscaping,25,"['data structures', 'dynamic programming', 'priority queue', 'slope trick']"
12011,1201100,Splitting the Field,15,"['geometry', 'prefix sum', 'sweeping']"
12012,1201200,Closing the Farm (Gold),16,"['data structures', 'disjoint set', 'offline queries']"
12013,1201300,248 게임,15,['dynamic programming']
12014,1201400,주식,14,"['binary search', 'longest increasing sequence in o(n log n)']"
12015,1201500,가장 긴 증가하는 부분 수열 2,14,"['binary search', 'longest increasing sequence in o(n log n)']"
12016,1201600,라운드 로빈 스케줄러,18,"['data structures', 'offline queries', 'segment tree', 'sorting']"
12017,1201700,CIRCUS,24,"['data structures', ""dijkstra's"", 'graph theory', 'priority queue']"
12018,1201800,Yonsei TOTO,8,"['greedy', 'sorting']"
12019,1201900,동아리방 청소!,15,['dynamic programming']
12020,1202000,LU 분해,16,"['linear algebra', 'mathematics']"
12021,1202100,보물 찾기,9,['mathematics']
12022,1202200,짝,20,"['graph theory', 'stable marriage problem']"
12023,1202300,연세대학교 포인트 게임,22,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'dynamic programming', 'lowest common ancestor', 'tree']"
12024,1202400,사각형 찾기,14,"['combinatorics', 'graph theory', 'mathematics']"
12025,1202500,장난꾸러기 영훈,11,"['bitmask', 'mathematics']"
12026,1202600,BOJ 거리,10,['dynamic programming']
12033,1203300,김인천씨의 식료품가게 (Small),6,"['backtracking', 'bruteforcing', 'implementation']"
12034,1203400,김인천씨의 식료품가게 (Large),6,"['greedy', 'implementation']"
12035,1203500,Dance Around The Clock (Small),6,[]
12036,1203600,Dance Around The Clock (Large),9,[]
12037,1203700,Polynesiaglot (Small1),6,"['bruteforcing', 'dynamic programming', 'mathematics']"
12038,1203800,Polynesiaglot (Small2),8,"['combinatorics', 'dynamic programming', 'mathematics']"
12039,1203900,Polynesiaglot (Large),10,['dynamic programming']
12040,1204000,Password Security (Small1),7,['randomization']
12041,1204100,Password Security (Small2),15,[]
12042,1204200,Lazy Spelling Bee (Small),7,"['combinatorics', 'implementation', 'mathematics', 'string']"
12043,1204300,Lazy Spelling Bee (Large),7,"['combinatorics', 'mathematics', 'string']"
12044,1204400,Robot Rock Band (Small),4,['bruteforcing']
12045,1204500,Robot Rock Band (Large),13,"['data structures', 'set / map by hashing', 'meet in the middle', 'set / map by trees']"
12046,1204600,Not So Random (Small),8,"['bruteforcing', 'mathematics']"
12047,1204700,Not So Random (Large),12,"['dynamic programming', 'mathematics', 'probability theory']"
12048,1204800,Sums of Sums (Small),0,[]
12049,1204900,Sums of Sums (Large),18,[]
12050,1205000,Dynamic Grid (Small),9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
12051,1205100,Dynamic Grid (Large),9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
12052,1205200,gBalloon (Small),0,[]
12053,1205300,gBalloon (Large),0,[]
12054,1205400,IP Address Summarization (Small),8,"['data structures', 'tree', 'trie']"
12055,1205500,IP Address Summarization (Large),13,"['data structures', 'implementation', 'tree', 'trie']"
12056,1205600,Virtual Rabbit (Small),0,[]
12057,1205700,Virtual Rabbit (Large),0,[]
12058,1205800,gRanks (Small),9,"['implementation', 'sorting']"
12059,1205900,gRanks (Large),9,"['implementation', 'sorting']"
12060,1206000,gFiles (Small),6,"['bruteforcing', 'mathematics']"
12061,1206100,gFiles (Large),11,"['binary search', 'case work', 'mathematics', 'parametric search']"
12062,1206200,gGames (Small),0,[]
12063,1206300,gGames (Large),0,[]
12064,1206400,gMatrix (Small),0,[]
12065,1206500,gMatrix (Large),0,[]
12066,1206600,Travel (Small),13,"[""dijkstra's"", 'graph theory']"
12067,1206700,Travel (Large),15,"[""dijkstra's"", 'graph theory', 'offline queries']"
12068,1206800,gWheels (Small),8,"['bruteforcing', 'mathematics', 'number theory']"
12069,1206900,gWheels (Large),0,[]
12070,1207000,gNumbers (Small),13,"['dynamic programming', 'game theory', 'mathematics', 'number theory', 'primality test']"
12071,1207100,gNumbers (Large),17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'game theory', 'mathematics', 'number theory', 'primality test']"
12072,1207200,Albocede DNA (Small),0,[]
12073,1207300,Albocede DNA (Large),0,[]
12074,1207400,Googol String (Small),4,[]
12075,1207500,Googol String (Large),11,"['ad-hoc', 'constructive', 'mathematics', 'recursion']"
12076,1207600,gCube (Small),8,[]
12077,1207700,gCube (Large),9,['mathematics']
12078,1207800,gCampus (Small),0,[]
12079,1207900,gCampus (Large),0,[]
12080,1208000,gSnake (Small),0,[]
12081,1208100,gSnake (Large),0,[]
12082,1208200,Bad Horse (Small1),12,"['breadth-first search', 'bipartite graph', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'string']"
12083,1208300,Bad Horse (Small2),12,"['breadth-first search', 'bipartite graph', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing', 'string']"
12084,1208400,Captain Hammer (Small),7,"['binary search', 'mathematics', 'physics']"
12085,1208500,Moist (Small1),5,['sorting']
12086,1208600,Moist (Small2),5,"['implementation', 'sorting', 'string']"
12087,1208700,첫 제출,0,[]
12088,1208800,마지막 제출,0,[]
12089,1208900,중간 제출,0,[]
12090,1209000,초성 변환,4,"['implementation', 'string']"
12091,1209100,이브이 진화 시키기,0,[]
12092,1209200,포켓몬 GO 진화,0,[]
12093,1209300,최댓값은 곧 페널티 감소,0,[]
12094,1209400,2048 (Hard),17,"['backtracking', 'bruteforcing', 'implementation', 'simulation']"
12095,1209500,가장 오래 걸리는 스도쿠,12,"['ad-hoc', 'constructive', 'precomputation']"
12096,1209600,,0,[]
12097,1209700,1과 2,0,[]
12098,1209800,눈치 게임,0,[]
12099,1209900,점심메뉴,12,"['binary search', 'sorting']"
12100,1210000,2048 (Easy),14,"['backtracking', 'bruteforcing', 'implementation', 'simulation']"
12101,1210100,"1, 2, 3 더하기 2",10,"['backtracking', 'bruteforcing']"
12102,1210200,종이 접기 2,14,['bruteforcing']
12103,1210300,짝합 수열,14,"['dynamic programming', 'prefix sum']"
12104,1210400,순환 순열,16,"['knuth–morris–pratt', 'string']"
12105,1210500,123456789 찾기,14,"['dynamic programming', 'string']"
12106,1210600,부분 문자열의 개수,19,"['dynamic programming', 'knuth–morris–pratt', 'string']"
12107,1210700,약수 지우기 게임 1,13,"['ad-hoc', 'game theory', 'mathematics']"
12108,1210800,약수 지우기 게임 2,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'game theory', 'sprague–grundy theorem']"
12109,1210900,Hindeks,6,"['implementation', 'sorting']"
12110,1211000,Telefoni,7,['greedy']
12111,1211100,Turnir,12,"['ad-hoc', 'mathematics', 'sorting']"
12112,1211200,Savrsen,11,"['mathematics', 'number theory']"
12113,1211300,Sirni,0,[]
12114,1211400,Gauss,0,[]
12115,1211500,Baza,5,"['bruteforcing', 'implementation']"
12116,1211600,Uzastopni,12,[]
12117,1211700,Costly Binary Search (Small),17,[]
12118,1211800,Costly Binary Search (Large),21,['dynamic programming']
12119,1211900,Campinatorics (Small),14,[]
12120,1212000,Campinatorics (Large),19,"['combinatorics', 'mathematics']"
12121,1212100,Pretty Good Proportion (Small),8,['bruteforcing']
12122,1212200,Pretty Good Proportion (Large),20,"['prefix sum', 'sorting']"
12123,1212300,Taking Over The World (Small),14,"[""dijkstra's"", 'graph theory', 'implementation']"
12124,1212400,Taking Over The World (Large),24,"['maximum flow', 'max-flow min-cut theorem']"
12125,1212500,Merlin QA (Small),14,"['ad-hoc', 'greedy']"
12126,1212600,Merlin QA (Large),25,"['ad-hoc', 'greedy']"
12127,1212700,Crane Truck (Small),0,[]
12128,1212800,Crane Truck (Large),0,[]
12129,1212900,Fairland (Small),0,[]
12130,1213000,Fairland (Large),0,[]
12131,1213100,Smoothing Window (Small),0,[]
12132,1213200,Smoothing Window (Large),0,[]
12133,1213300,Runaway Quail (Small),0,[]
12134,1213400,Runaway Quail (Large),0,[]
12135,1213500,Log Set (Small),0,[]
12136,1213600,Log Set (Large),0,[]
12137,1213700,River Flow (Small),0,[]
12138,1213800,River Flow (Large),0,[]
12139,1213900,Pegman (Small),8,"['implementation', 'simulation']"
12140,1214000,Pegman (Large),9,[]
12141,1214100,Kiddie Pool (Small),0,[]
12142,1214200,Kiddie Pool (Large),0,[]
12143,1214300,영어와 프랑스어 (Small),11,[]
12144,1214400,영어와 프랑스어 (Large),21,"['data structures', 'maximum flow', 'set / map by hashing', 'max-flow min-cut theorem', 'parsing', 'string']"
12145,1214500,Drum Decorator (Small),0,[]
12146,1214600,Drum Decorator (Large),21,"[""burnside's lemma"", 'case work', 'combinatorics', 'dynamic programming', 'mathematics']"
12147,1214700,Brattleship (Small),8,[]
12148,1214800,Brattleship (Large),9,"['game theory', 'mathematics']"
12149,1214900,Typewriter Monkey (Small),10,['bruteforcing']
12150,1215000,Typewriter Monkey (Large),15,"['combinatorics', 'linearity of expectation', 'mathematics', 'probability theory']"
12151,1215100,"Less Money, More Problems (Small)",10,[]
12152,1215200,"Less Money, More Problems (Large)",12,[]
12153,1215300,Counter Culture (Small),10,"['breadth-first search', 'graph theory', 'graph traversal']"
12154,1215400,Counter Culture (Large),14,[]
12155,1215500,Noisy Neighbors (Small),6,"['bruteforcing', 'implementation']"
12156,1215600,Noisy Neighbors (Large),14,"['case work', 'mathematics']"
12157,1215700,Hiking Deer (Small1),14,['ad-hoc']
12158,1215800,Hiking Deer (Small2),15,[]
12159,1215900,Hiking Deer (Large),18,[]
12160,1216000,Mushroom Monster (Small),9,[]
12161,1216100,Mushroom Monster (Large),10,['greedy']
12162,1216200,Haircut (Small),11,[]
12163,1216300,Haircut (Large),13,['parametric search']
12164,1216400,Logging (Small),17,"['geometry', 'two-pointer']"
12165,1216500,Logging (Large),19,"['geometry', 'two-pointer']"
12166,1216600,Standing Ovation (Small),4,[]
12167,1216700,Standing Ovation (Large),4,[]
12168,1216800,Infinite House of Pancakes (Small),8,[]
12169,1216900,Infinite House of Pancakes (Large),11,[]
12170,1217000,Dijkstra (Small),13,['mathematics']
12171,1217100,Dijkstra (Large),16,['mathematics']
12172,1217200,N-오미노 판 채우기 (Small),10,[]
12173,1217300,N-오미노 판 채우기 (Large),16,[]
12174,1217400,#include <Google I/O.h>,5,"['implementation', 'string']"
12175,1217500,Dreary Design (Small),7,"['bruteforcing', 'combinatorics', 'mathematics']"
12176,1217600,Dreary Design (Large1),9,"['combinatorics', 'mathematics']"
12177,1217700,Dreary Design (Large2),10,"['combinatorics', 'inclusion and exclusion', 'mathematics']"
12178,1217800,Power Levels (Small),5,"['bruteforcing', 'mathematics', 'precomputation']"
12179,1217900,Power Levels (Large),9,"['arbitrary precision / big integers', 'implementation', 'mathematics', 'simulation']"
12180,1218000,Googlander (Small),8,['dynamic programming']
12181,1218100,Googlander (Large),10,['dynamic programming']
12182,1218200,Cube IV (Small),11,['dynamic programming']
12183,1218300,Cube IV (Large),12,['dynamic programming']
12184,1218400,GBus count (Small),4,['implementation']
12185,1218500,GBus count (Large),4,['implementation']
12186,1218600,Sort a scrambled itinerary (Small),8,"['bruteforcing', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'string']"
12187,1218700,Sort a scrambled itinerary (Large),9,"['data structures', 'graph theory', 'graph traversal', 'set / map by hashing', 'string', 'set / map by trees']"
12188,1218800,Itz Chess (Small),9,"['bruteforcing', 'implementation', 'string']"
12189,1218900,Itz Chess (Large),9,"['bruteforcing', 'implementation', 'string']"
12190,1219000,Minesweeper (Small),11,"['graph theory', 'graph traversal']"
12191,1219100,Minesweeper (Large),11,"['graph theory', 'graph traversal']"
12192,1219200,Taking Metro (Small),15,"[""dijkstra's"", 'graph theory']"
12193,1219300,Taking Metro (Large),16,"[""dijkstra's"", 'graph theory']"
12194,1219400,Broken Calculator (Small),7,[]
12195,1219500,Broken Calculator (Large),12,['dynamic programming']
12196,1219600,Tetris (Small),0,[]
12197,1219700,Tetris (Large),14,"['implementation', 'simulation']"
12198,1219800,Password Attacker (Small),5,"['bruteforcing', 'combinatorics', 'mathematics']"
12199,1219900,Password Attacker (Large),12,"['combinatorics', 'dynamic programming', 'mathematics']"
12200,1220000,New Years Eve (Small),9,[]
12201,1220100,New Years Eve (Large),10,[]
12202,1220200,Card Game (Small),8,"['data structures', 'stack']"
12203,1220300,Card Game (Large),16,"['divide and conquer', 'dynamic programming']"
12204,1220400,Parentheses Order (Small),7,[]
12205,1220500,Parentheses Order (Large),15,['dynamic programming']
12206,1220600,Seven-segment Display (Small),11,[]
12207,1220700,Seven-segment Display (Large),12,"['bitmask', 'bruteforcing']"
12208,1220800,Super 2048 (Small),9,"['implementation', 'simulation']"
12209,1220900,Super 2048 (Large),9,"['implementation', 'simulation']"
12210,1221000,Addition (Small),0,[]
12211,1221100,Addition (Large),0,[]
12212,1221200,Cut Tiles (Small),12,[]
12213,1221300,Cut Tiles (Large),12,[]
12214,1221400,Checkerboard Matrix (Small),13,"['ad-hoc', 'mathematics']"
12215,1221500,Checkerboard Matrix (Large),0,[]
12216,1221600,Power Swapper (Small),0,[]
12217,1221700,Power Swapper (Large),0,[]
12218,1221800,Symmetric Trees (Small),21,"['hashing', 'tree', 'tree isomorphism']"
12219,1221900,Symmetric Trees (Large),21,"['hashing', 'tree', 'tree isomorphism']"
12220,1222000,Paradox Sort (Small),9,['bruteforcing']
12221,1222100,Paradox Sort (Large),22,"['depth-first search', 'graph theory', 'graph traversal', 'greedy', 'mathematics']"
12222,1222200,Allergy Testing (Small),21,['dynamic programming']
12223,1222300,Allergy Testing (Large),25,"['arbitrary precision / big integers', 'binary search', 'mathematics']"
12224,1222400,ARAM (Small),0,[]
12225,1222500,ARAM (Large),0,[]
12226,1222600,"Magical, Marvelous Tour (Small)",0,[]
12227,1222700,"Magical, Marvelous Tour (Large)",0,[]
12228,1222800,Last Hit (Small),17,['dynamic programming']
12229,1222900,Last Hit (Large),17,['dynamic programming']
12230,1223000,Crime House (Small),0,[]
12231,1223100,Crime House (Large),25,"['binary search', 'greedy']"
12232,1223200,Willow (Small),0,[]
12233,1223300,Willow (Large),0,[]
12234,1223400,Data Packing (Small),6,"['data structures', 'deque', 'greedy', 'implementation', 'sorting']"
12235,1223500,Data Packing (Large),7,"['greedy', 'implementation', 'sorting']"
12236,1223600,Up and Down (Small),8,"['bruteforcing', 'graph theory', 'graph traversal', 'greedy']"
12237,1223700,Up and Down (Large),11,"['dynamic programming', 'greedy', 'sorting']"
12238,1223800,Don't Break The Nile (Small),0,[]
12239,1223900,Don't Break The Nile (Large),0,[]
12240,1224000,Trie Sharding (Small),12,"['bruteforcing', 'data structures', 'set / map by hashing', 'sorting', 'string']"
12241,1224100,Trie Sharding (Large),23,"['combinatorics', 'data structures', 'mathematics', 'tree', 'trie']"
12242,1224200,Part Elf (Small),9,['mathematics']
12243,1224300,Part Elf (Large),9,['mathematics']
12244,1224400,Reordering Train Cars (Small),17,"['ad-hoc', 'combinatorics', 'implementation', 'mathematics']"
12245,1224500,Reordering Train Cars (Large),0,[]
12246,1224600,Enclosure (Small),0,[]
12247,1224700,Enclosure (Large),0,[]
12248,1224800,The Repeater (Small),0,[]
12249,1224900,The Repeater (Large),0,[]
12250,1225000,New Lottery Game (Small),3,"['bruteforcing', 'mathematics']"
12251,1225100,New Lottery Game (Large),16,"['bitmask', 'dynamic programming']"
12252,1225200,The Bored Traveling Salesman (Small),0,[]
12253,1225300,The Bored Traveling Salesman (Large),0,[]
12254,1225400,Charging Chaos (Small),9,"['bitmask', 'bruteforcing']"
12255,1225500,Charging Chaos (Large),12,"['backtracking', 'bitmask', 'bruteforcing', 'sorting']"
12256,1225600,Full Binary Tree (Small),14,"['dynamic programming', 'dynamic programming on trees', 'tree']"
12257,1225700,Full Binary Tree (Large),14,"['dynamic programming', 'dynamic programming on trees', 'tree']"
12259,1225900,Magic Trick (Small),6,['implementation']
12260,1226000,Cookie Clicker Alpha (Small),7,[]
12261,1226100,Cookie Clicker Alpha (Large),7,[]
12262,1226200,Minesweeper Master (Small),12,[]
12263,1226300,Minesweeper Master (Large),17,"['ad-hoc', 'case work', 'constructive']"
12264,1226400,Deceitful War (Small),14,['greedy']
12265,1226500,Deceitful War (Large),15,"['combinatorics', 'data structures', 'deque', 'game theory', 'greedy', 'mathematics', 'sorting']"
12266,1226600,Sudoku Checker (Small),7,['implementation']
12267,1226700,Sudoku Checker (Large),7,['implementation']
12268,1226800,Meet and party (Small),6,"['bruteforcing', 'geometry']"
12269,1226900,Meet and party (Large),15,"['binary search', 'geometry', 'prefix sum', 'sorting']"
12270,1227000,Hex (Small),13,[]
12271,1227100,Hex (Large),16,"['depth-first search', 'maximum flow', 'graph theory', 'graph traversal', 'implementation']"
12272,1227200,Dragon Maze (Small),13,"['breadth-first search', ""dijkstra's"", 'dynamic programming', 'graph theory', 'graph traversal']"
12273,1227300,Dragon Maze (Large),13,"['breadth-first search', ""dijkstra's"", 'dynamic programming', 'graph theory', 'graph traversal']"
12274,1227400,Ignore all my comments (Small),8,[]
12275,1227500,Ignore all my comments (Large),9,[]
12276,1227600,Read Phone Number (Small),8,"['implementation', 'parsing', 'string']"
12277,1227700,Read Phone Number (Large),8,"['implementation', 'parsing', 'string']"
12278,1227800,Rational Number Tree (Small),9,[]
12279,1227900,Rational Number Tree (Large),13,"['mathematics', 'tree']"
12280,1228000,Sorting (Small),6,"['implementation', 'sorting']"
12281,1228100,Sorting (Large),6,"['implementation', 'sorting']"
12282,1228200,Cross the maze (Small),12,[]
12283,1228300,Cross the maze (Large),12,[]
12284,1228400,Spaceship Defence (Small),13,[]
12285,1228500,Spaceship Defence (Large),14,"['data structures', ""dijkstra's"", 'graph theory', 'hashing', 'set / map by hashing']"
12286,1228600,해밀턴 회로,22,"['ad-hoc', 'constructive', 'graph theory', 'strongly connected component']"
12287,1228700,해밀턴 경로,16,"['constructive', 'graph theory']"
12288,1228800,Captain Hammer (Small),0,[]
12291,1229100,Graduation Requirements (Small),0,[]
12292,1229200,Graduation Requirements (Large),0,[]
12293,1229300,Drummer (Small),0,[]
12294,1229400,Drummer (Large),0,[]
12295,1229500,X Marks the Spot (Small),0,[]
12296,1229600,X Marks the Spot (Large),0,[]
12297,1229700,Can't Stop (Small),0,[]
12298,1229800,Can't Stop (Large),0,[]
12299,1229900,Let Me Tell You a Story (Small),0,[]
12300,1230000,Let Me Tell You a Story (Large),0,[]
12301,1230100,Cheaters (Small),0,[]
12302,1230200,Cheaters (Large),0,[]
12303,1230300,Rural Planning (Small),0,[]
12304,1230400,Rural Planning (Large),0,[]
12305,1230500,Are We Lost Yet? (Small),0,[]
12306,1230600,Are We Lost Yet? (Large),0,[]
12307,1230700,Observation Wheel (Small),0,[]
12308,1230800,Observation Wheel (Large),0,[]
12309,1230900,Ticket Swapping (Small),0,[]
12310,1231000,Ticket Swapping (Large),0,[]
12311,1231100,Many Prizes (Small),0,[]
12312,1231200,Many Prizes (Large),0,[]
12313,1231300,Erdős–Szekeres (Small),0,[]
12314,1231400,Erdős–Szekeres (Large),0,[]
12315,1231500,Multiplayer Pong (Small),24,"['arbitrary precision / big integers', 'case work', 'mathematics', 'number theory']"
12316,1231600,Multiplayer Pong (Large),24,"['arbitrary precision / big integers', 'case work', 'mathematics', 'number theory']"
12317,1231700,Consonants (Small),0,[]
12318,1231800,Consonants (Large),0,[]
12319,1231900,Pogo (Small),10,"['breadth-first search', 'constructive', 'graph theory', 'graph traversal', 'greedy']"
12320,1232000,Pogo (Large),12,"['constructive', 'geometry', 'greedy', 'mathematics']"
12321,1232100,The Great Wall (Small),0,[]
12322,1232200,The Great Wall (Large),0,[]
12323,1232300,Osmos (Small),0,[]
12324,1232400,Osmos (Large),0,[]
12325,1232500,Falling Diamonds (Small),0,[]
12326,1232600,Falling Diamonds (Large),0,[]
12327,1232700,Garbled Email (Small),0,[]
12328,1232800,Garbled Email (Large),0,[]
12329,1232900,Bullseye (Small),8,"['geometry', 'mathematics']"
12330,1233000,Bullseye (Large),11,"['arbitrary precision / big integers', 'binary search', 'geometry', 'mathematics', 'parametric search']"
12331,1233100,Manage your Energy (Small),6,['bruteforcing']
12332,1233200,Manage your Energy (Large),0,[]
12333,1233300,Good Luck (Small1),0,[]
12334,1233400,Good Luck (Small2),0,[]
12335,1233500,Tic-Tac-Toe-Tomek (Small),6,['implementation']
12336,1233600,Tic-Tac-Toe-Tomek (Large),7,['implementation']
12337,1233700,Lawnmower (Small),11,"['bitmask', 'bruteforcing', 'implementation']"
12338,1233800,Lawnmower (Large),11,"['ad-hoc', 'bruteforcing']"
12339,1233900,Fair and Square (Small),6,"['bruteforcing', 'mathematics', 'precomputation', 'string']"
12340,1234000,Fair and Square (Large1),11,['mathematics']
12341,1234100,Fair and Square (Large2),18,"['arbitrary precision / big integers', 'mathematics', 'precomputation']"
12342,1234200,Treasure (Small),0,[]
12343,1234300,Treasure (Large),22,"['depth-first search', 'graph theory', 'graph traversal', 'greedy', 'mathematics']"
12346,1234600,Captain Hammer (Small),0,[]
12349,1234900,Professor Normal (Small1),9,"['implementation', 'simulation']"
12350,1235000,Professor Normal (Small2),14,"['implementation', 'simulation']"
12351,1235100,Hedgemony (Small),3,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
12352,1235200,Hedgemony (Large),3,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
12353,1235300,Dr. Spaceman의 특별한 알고리즘,4,"['arithmetic', 'implementation', 'mathematics']"
12354,1235400,Ocean View (Small),6,"['bruteforcing', 'dynamic programming']"
12355,1235500,Ocean View (Large),9,"['dynamic programming', 'longest increasing sequence in o(n log n)']"
12356,1235600,Zombie Smash (Small),10,[]
12357,1235700,Zombie Smash (Large),17,[]
12358,1235800,Upstairs/Downstairs (Small),0,[]
12359,1235900,Upstairs/Downstairs (Large),0,[]
12360,1236000,Xeno-archaeology (Small),0,[]
12361,1236100,Xeno-archaeology (Large),0,[]
12362,1236200,Twirling Towards Freedom (Small),0,[]
12363,1236300,Twirling Towards Freedom (Large),0,[]
12364,1236400,Shifting Paths (Small),0,[]
12365,1236500,Shifting Paths (Large),0,[]
12366,1236600,Perfect Game (Small),5,"['implementation', 'sorting']"
12367,1236700,Perfect Game (Large),11,"['greedy', 'implementation', 'mathematics', 'probability theory', 'sorting']"
12368,1236800,Havannah (Small),0,[]
12369,1236900,Havannah (Large),0,[]
12370,1237000,Quality Food (Small),0,[]
12371,1237100,Quality Food (Large),0,[]
12372,1237200,Lost Password (Small),20,"['euler tour technique', 'greedy', 'tree']"
12373,1237300,Lost Password (Large),25,"['euler tour technique', 'graph theory', 'greedy', 'tree']"
12374,1237400,Swinging Wild (Small),0,[]
12375,1237500,Swinging Wild (Large),0,[]
12376,1237600,Aerobics (Small),16,"['randomization', 'sorting']"
12377,1237700,Aerobics (Large),19,"['geometry', 'randomization', 'sorting']"
12378,1237800,Mountain View (Small),0,[]
12379,1237900,Mountain View (Large),0,[]
12380,1238000,Descending in the Dark (Small),0,[]
12381,1238100,Descending in the Dark (Large),0,[]
12382,1238200,Diamond Inheritance (Small),8,['bruteforcing']
12383,1238300,Diamond Inheritance (Large),12,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
12384,1238400,Out of Gas (Small),0,[]
12385,1238500,Out of Gas (Large),0,[]
12386,1238600,Box Factory (Small),0,[]
12387,1238700,Box Factory (Large),0,[]
12388,1238800,Safety in Numbers (Small),9,"['binary search', 'bruteforcing', 'parametric search']"
12389,1238900,Safety in Numbers (Large),10,"['binary search', 'parametric search']"
12390,1239000,"Tide Goes In, Tide Goes Out (Small)",0,[]
12391,1239100,"Tide Goes In, Tide Goes Out (Large)",0,[]
12392,1239200,Equal Sums (Small),11,['backtracking']
12393,1239300,Equal Sums (Large),19,"['data structures', 'set / map by hashing', 'mathematics', 'probability theory', 'randomization']"
12394,1239400,Password Problem (Small),5,"['bruteforcing', 'mathematics', 'probability theory']"
12395,1239500,Password Problem (Large),8,"['bruteforcing', 'mathematics', 'probability theory']"
12396,1239600,Kingdom Rush (Small),9,[]
12397,1239700,Kingdom Rush (Large),13,"['data structures', 'greedy', 'priority queue']"
12398,1239800,Cruise Control (Small),0,[]
12399,1239900,Cruise Control (Large),0,[]
12400,1240000,Speaking in Tongues (Small),5,"['ad-hoc', 'implementation', 'string']"
12401,1240100,Dancing With the Googlers (Small),10,[]
12402,1240200,Dancing With the Googlers (Large),10,"['greedy', 'mathematics', 'sorting']"
12403,1240300,Recycled Numbers (Small),9,[]
12404,1240400,Recycled Numbers (Large),9,[]
12405,1240500,Hall of Mirrors (Small),13,[]
12406,1240600,Hall of Mirrors (Large),18,[]
12407,1240700,Quake Live (Small1),7,[]
12408,1240800,Quake Live (Small2),7,[]
12409,1240900,Shoot the Target (Small1),7,"['bruteforcing', 'geometry', 'mathematics']"
12410,1241000,Shoot the Target (Small2),0,[]
12411,1241100,Bejeweled Befuddlement (Small1),0,[]
12412,1241200,Bejeweled Befuddlement (Small2),0,[]
12413,1241300,Technology Planning (Small1),0,[]
12414,1241400,Technology Planning (Small2),12,"['graph theory', 'topological sorting']"
12415,1241500,가로수 (Small),13,['greedy']
12416,1241600,가로수 (Large),16,"['binary search', 'greedy']"
12417,1241700,일조량 (Small),0,[]
12418,1241800,일조량 (Large),17,"['geometry', 'mathematics']"
12419,1241900,출근 전쟁 (Small),0,[]
12420,1242000,출근 전쟁 (Large),0,[]
12421,1242100,창문 깨기 (Small),0,[]
12422,1242200,창문 깨기 (Large),0,[]
12423,1242300,전장 (Small),18,"['maximum flow', 'minimum cost maximum flow']"
12424,1242400,전장 (Large),18,"['maximum flow', 'minimum cost maximum flow']"
12425,1242500,윷놀이 (Small),15,['implementation']
12426,1242600,윷놀이 (Large),21,"['dynamic programming', 'implementation']"
12427,1242700,박테리아 (Small),19,"['breadth-first search', 'bipartite matching', 'depth-first search', 'graph theory', 'graph traversal']"
12428,1242800,박테리아 (Large),19,"['breadth-first search', 'bipartite matching', 'depth-first search', 'maximum flow', 'graph theory', 'graph traversal']"
12429,1242900,생존자 (Small),11,"['bruteforcing', 'greedy', 'sorting']"
12430,1243000,생존자 (Large),16,"['dynamic programming', 'greedy', 'knapsack', 'sorting']"
12431,1243100,장터판 (Small),0,[]
12432,1243200,장터판 (Large),0,[]
12433,1243300,모자 쓴 아이들 (Small),16,"['combinatorics', 'dynamic programming', 'implementation', 'mathematics']"
12434,1243400,모자 쓴 아이들 (Large),0,[]
12435,1243500,한강 (Small),10,[]
12436,1243600,한강 (Large),0,[]
12437,1243700,새로운 달력 (Small),6,"['mathematics', 'number theory']"
12438,1243800,새로운 달력 (Large),11,"['constructive', 'mathematics', 'number theory']"
12439,1243900,계산식 복원 (Small),0,[]
12440,1244000,계산식 복원 (Large),0,[]
12441,1244100,약속장소 정하기 (Small),12,"[""dijkstra's"", 'floyd–warshall', 'graph theory']"
12442,1244200,약속장소 정하기 (Large),12,"[""dijkstra's"", 'graph theory']"
12443,1244300,アンテナ修復 (Small),0,[]
12444,1244400,アンテナ修復 (Large),0,[]
12445,1244500,バクテリアの増殖 (Small),13,"['arbitrary precision / big integers', 'exponentiation by squaring', 'mathematics']"
12446,1244600,バクテリアの増殖 (Large),21,"['dynamic programming', 'euler totient function', 'exponentiation by squaring', 'mathematics', 'number theory']"
12447,1244700,ワイルドカード (Small),14,"['bruteforcing', 'combinatorics', 'mathematics', 'regular expression', 'string']"
12448,1244800,ワイルドカード (Large),22,[]
12449,1244900,クローゼットルーム (Small),0,[]
12450,1245000,クローゼットルーム (Large),0,[]
12451,1245100,無限庭園 (Small),13,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation']"
12452,1245200,無限庭園 (Large),0,[]
12453,1245300,カードシャッフル (Small),9,"['implementation', 'simulation']"
12454,1245400,カードシャッフル (Large),13,['mathematics']
12455,1245500,最高のコーヒー (Small),15,['greedy']
12456,1245600,모닝커피 (Large),16,"['data structures', 'greedy', 'priority queue']"
12457,1245700,ビット数 (Small),10,"['bitmask', 'bruteforcing', 'mathematics']"
12458,1245800,ビット数 (Large),14,"['dynamic programming', 'mathematics']"
12459,1245900,数珠繋ぎ (Small),0,[]
12460,1246000,数珠繋ぎ (Large),0,[]
12461,1246100,数の集合 (Small),0,[]
12462,1246200,数の集合 (Large),0,[]
12463,1246300,遊園地 (Small),0,[]
12464,1246400,遊園地 (Large),0,[]
12465,1246500,Runs (Small),21,[]
12466,1246600,Runs (Large),22,[]
12467,1246700,Rains Over Atlantis (Small),15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
12468,1246800,Rains Over Atlantis (Large),0,[]
12469,1246900,Program within a Program (Small),0,[]
12470,1247000,Program within a Program (Large),0,[]
12471,1247100,Ace in the Hole (Small),0,[]
12472,1247200,Ace in the Hole (Large),0,[]
12473,1247300,Google Royale (Small),0,[]
12474,1247400,Google Royale (Large),0,[]
12475,1247500,Irregular Cakes (Small),0,[]
12476,1247600,Irregular Cakes (Large),0,[]
12477,1247700,Dire Straights (Small),6,['bruteforcing']
12478,1247800,Dire Straights (Large),16,[]
12479,1247900,Perpetual Motion (Small),0,[]
12480,1248000,Perpetual Motion (Large),0,[]
12481,1248100,Mystery Square (Small),11,"['bitmask', 'bruteforcing', 'mathematics']"
12482,1248200,Mystery Square (Large),22,"['case work', 'mathematics', 'number theory']"
12483,1248300,Airport Walkways (Small),8,[]
12484,1248400,Airport Walkways (Large),11,[]
12485,1248500,Spinning Blade (Small),0,[]
12486,1248600,Spinning Blade (Large),0,[]
12487,1248700,Expensive Dinner (Small),9,[]
12488,1248800,Expensive Dinner (Large),16,[]
12489,1248900,A.I. War (Small),14,[]
12490,1249000,A.I. War (Large),18,[]
12491,1249100,Square Tiles (Small),7,"['bruteforcing', 'greedy']"
12492,1249200,Square Tiles (Large),8,['greedy']
12493,1249300,Space Emergency (Small),7,[]
12494,1249400,Space Emergency (Large),11,[]
12495,1249500,Perfect Harmony (Small),4,"['arithmetic', 'bruteforcing', 'mathematics', 'number theory']"
12496,1249600,Perfect Harmony (Large),19,"['euclidean algorithm', 'mathematics', 'number theory', 'pollard rho', 'primality test', 'sieve of eratosthenes']"
12497,1249700,RPI (Small),0,[]
12498,1249800,RPI (Large),0,[]
12499,1249900,Revenge of the Hot Dogs (Small),10,[]
12500,1250000,Revenge of the Hot Dogs (Large),12,"['binary search', 'greedy', 'mathematics', 'parametric search', 'sorting']"
12501,1250100,House of Kittens (Small),0,[]
12502,1250200,House of Kittens (Large),0,[]
12503,1250300,FreeCell Statistics (Small),6,"['case work', 'mathematics', 'number theory']"
12504,1250400,FreeCell Statistics (Large),8,"['case work', 'mathematics', 'number theory']"
12505,1250500,The Killer Word (Small),8,"['implementation', 'string']"
12506,1250600,The Killer Word (Large),16,[]
12507,1250700,Pseudominion (Small),0,[]
12508,1250800,Pseudominion (Large),0,[]
12509,1250900,Bot Trust (Small),5,['implementation']
12510,1251000,Bot Trust (Large),5,['implementation']
12511,1251100,Magicka (Small),6,"['data structures', 'implementation', 'simulation', 'stack', 'string']"
12512,1251200,Magicka (Large),7,"['bruteforcing', 'data structures', 'implementation', 'simulation', 'stack', 'string']"
12513,1251300,Candy Splitting (Small),6,"['bitmask', 'bruteforcing', 'mathematics']"
12514,1251400,Candy Splitting (Large),9,[]
12515,1251500,챔피언소트 (Small),17,"['combinatorics', 'mathematics']"
12516,1251600,챔피언소트 (Large),17,"['combinatorics', 'mathematics']"
12517,1251700,Centauri Prime (Small1),4,"['implementation', 'string']"
12518,1251800,Centauri Prime (Small2),4,"['implementation', 'parsing', 'string']"
12519,1251900,Music Collection (Small1),9,[]
12520,1252000,Music Collection (Small2),9,[]
12521,1252100,Irregular Expressions (Small),8,"['bruteforcing', 'string']"
12522,1252200,Irregular Expressions (Large),8,"['bruteforcing', 'string']"
12523,1252300,Twibet (Small),9,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal']"
12524,1252400,Twibet (Large),9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
12525,1252500,Grid Escape,0,[]
12526,1252600,Parcel Posts,0,[]
12527,1252700,Sheepwalking,0,[]
12528,1252800,Music Collection (Small2),0,[]
12529,1252900,Extreme Escalator Pogo (Small),11,[]
12530,1253000,Extreme Escalator Pogo (Large),15,[]
12531,1253100,Vanishing Numbers (Small),7,"['arbitrary precision / big integers', 'implementation']"
12532,1253200,Vanishing Numbers (Large),8,"['arbitrary precision / big integers', 'implementation']"
12533,1253300,Battlefield (Small),11,"['eulerian path / circuit', 'graph theory', 'graph traversal']"
12534,1253400,Battlefield (Large),16,"['eulerian path / circuit', 'graph theory']"
12535,1253500,Radio Receiver (Small),8,[]
12536,1253600,Radio Receiver (Large),15,['parametric search']
12537,1253700,Closing the Loop (Small),6,"['greedy', 'sorting']"
12538,1253800,Closing the Loop (Large),9,[]
12539,1253900,Investing at the Market (Small),5,['bruteforcing']
12540,1254000,Investing at the Market (Large),5,['bruteforcing']
12541,1254100,Building a House (Small),6,[]
12542,1254200,Building a House (Large),8,['bruteforcing']
12543,1254300,Letter Stamper (Small),20,['dynamic programming']
12544,1254400,Letter Stamper (Large),22,['dynamic programming']
12545,1254500,City Tour (Small),0,[]
12546,1254600,City Tour (Large),0,[]
12547,1254700,Candy Store (Small),18,"['arithmetic', 'dynamic programming', 'greedy', 'mathematics']"
12548,1254800,Candy Store (Large),22,['greedy']
12549,1254900,Travel Plan (Small),0,[]
12550,1255000,Travel Plan (Large),0,[]
12551,1255100,Ninjutsu (Small),0,[]
12552,1255200,Ninjutsu (Large),0,[]
12553,1255300,The Paths of Yin Yang (Small),0,[]
12554,1255400,The Paths of Yin Yang (Large),0,[]
12555,1255500,De-RNG-ed (Small),0,[]
12556,1255600,De-RNG-ed (Large),0,[]
12557,1255700,Fence (Small),15,"['dynamic programming', 'greedy', 'mathematics', 'number theory']"
12558,1255800,Fence (Large),19,"[""dijkstra's"", 'graph theory', 'mathematics', 'number theory']"
12559,1255900,Hot Dog Proliferation (Small),0,[]
12560,1256000,Hot Dog Proliferation (Large),0,[]
12561,1256100,Different Sum (Small),16,"['backtracking', 'implementation']"
12562,1256200,Different Sum (Large),21,['dynamic programming']
12563,1256300,Elegant Diamond (Small),0,[]
12564,1256400,Elegant Diamond (Large),0,[]
12565,1256500,World Cup 2010 (Small),0,[]
12566,1256600,World Cup 2010 (Large),0,[]
12567,1256700,Bacteria (Small),9,[]
12568,1256800,Bacteria (Large),16,"['data structures', 'disjoint set', 'mathematics']"
12569,1256900,Grazing Google Goats (Small),0,[]
12570,1257000,Grazing Google Goats (Large),0,[]
12571,1257100,Rope Intranet (Small),3,"['bruteforcing', 'implementation']"
12572,1257200,Rope Intranet (Large),4,"['bruteforcing', 'implementation']"
12573,1257300,Load Testing (Small),10,[]
12574,1257400,Load Testing (Large),13,[]
12575,1257500,Making Chess Boards (Small),0,[]
12576,1257600,Making Chess Boards (Large),0,[]
12577,1257700,File Fix-it (Small),0,[]
12578,1257800,File Fix-it (Large),0,[]
12579,1257900,Picking Up Chicks (Small),9,[]
12580,1258000,Picking Up Chicks (Large),12,['greedy']
12581,1258100,Your Rank is Pure (Small),10,['dynamic programming']
12582,1258200,Your Rank is Pure (Large),18,"['combinatorics', 'dynamic programming', 'mathematics']"
12583,1258300,Rotate (Small),11,"['bruteforcing', 'implementation', 'simulation']"
12584,1258400,Rotate (Large),11,"['bruteforcing', 'implementation', 'simulation']"
12585,1258500,Make it Smooth (Small),0,[]
12586,1258600,Make it Smooth (Large),0,[]
12587,1258700,Number Game (Small),16,[]
12588,1258800,Number Game (Large),20,"['game theory', 'mathematics', 'number theory']"
12589,1258900,Snapper Chain (Small),6,"['bitmask', 'implementation', 'mathematics', 'simulation']"
12590,1259000,Snapper Chain (Large),7,"['bitmask', 'mathematics']"
12591,1259100,Fair Warning (Small),6,['mathematics']
12592,1259200,Fair Warning (Large),9,"['arbitrary precision / big integers', 'euclidean algorithm', 'mathematics', 'number theory']"
12593,1259300,Theme Park (Small),11,"['implementation', 'simulation']"
12594,1259400,Theme Park (Large),14,"['implementation', 'mathematics', 'simulation']"
12595,1259500,Odd Man Out (Small),5,[]
12596,1259600,Odd Man Out (Large),5,[]
12597,1259700,Get to Work (Small),7,"['greedy', 'implementation', 'sorting']"
12598,1259800,Get to Work (Large),7,"['greedy', 'implementation', 'sorting']"
12599,1259900,Qualification Round (Small),8,"['implementation', 'mathematics']"
12600,1260000,Qualification Round (Large),0,[]
12601,1260100,Polygraph (Small),11,['bruteforcing']
12602,1260200,Polygraph (Large),0,[]
12603,1260300,Store Credit (Small),4,['bruteforcing']
12604,1260400,Store Credit (Large),4,['bruteforcing']
12605,1260500,단어순서 뒤집기,5,"['data structures', 'parsing', 'stack', 'string']"
12606,1260600,Reverse Words (Large),4,"['implementation', 'parsing', 'string']"
12607,1260700,T9 Spelling (Small),5,"['implementation', 'string']"
12608,1260800,T9 Spelling (Large),5,"['implementation', 'string']"
12609,1260900,Year of More Code Jam (Small),17,"['bruteforcing', 'linearity of expectation', 'mathematics', 'probability theory']"
12610,1261000,Year of More Code Jam (Large),21,"['combinatorics', 'linearity of expectation', 'mathematics', 'probability theory']"
12611,1261100,Min Perimeter (Small),0,[]
12612,1261200,Min Perimeter (Large),0,[]
12613,1261300,Doubly-sorted Grid (Small),0,[]
12614,1261400,Doubly-sorted Grid (Large),0,[]
12615,1261500,Wi-fi Towers (Small),11,['bruteforcing']
12616,1261600,Wi-fi Towers (Large),20,['maximum flow']
12617,1261700,Marbles (Small),0,[]
12618,1261800,Marbles (Large),0,[]
12619,1261900,Lights (Small),0,[]
12620,1262000,Lights (Large),0,[]
12621,1262100,EZ-Sokoban (Small),13,"['breadth-first search', 'graph theory', 'graph traversal']"
12622,1262200,EZ-Sokoban (Large),15,"['breadth-first search', 'graph theory', 'graph traversal']"
12623,1262300,Alphabetomials (Small),0,[]
12624,1262400,Alphabetomials (Large),0,[]
12625,1262500,Football Team (Small),0,[]
12626,1262600,Football Team (Large),24,"['depth-first search', 'graph theory', 'graph traversal']"
12627,1262700,Interesting Ranges (Small),0,[]
12628,1262800,Interesting Ranges (Large),0,[]
12629,1262900,Crazy Rows (Small),7,[]
12630,1263000,Crazy Rows (Large),15,"['data structures', 'greedy', 'linked list']"
12631,1263100,A Digging Problem (Small),0,[]
12632,1263200,A Digging Problem (Large),0,[]
12633,1263300,Stock Charts (Small),13,[]
12634,1263400,Stock Charts (Large),19,['bipartite matching']
12635,1263500,Watering Plants (Small),0,[]
12636,1263600,Watering Plants (Large),0,[]
12637,1263700,All Your Base (Small),8,"['greedy', 'mathematics', 'number theory']"
12638,1263800,All Your Base (Large),8,"['greedy', 'mathematics', 'number theory', 'string']"
12639,1263900,Center of Mass (Small),9,"['geometry', 'linear algebra', 'mathematics', 'physics']"
12640,1264000,Center of Mass (Large),9,"['geometry', 'mathematics', 'physics', 'ternary search']"
12641,1264100,Bribe the Prisoners (Small),7,"['backtracking', 'bruteforcing']"
12642,1264200,Bribe the Prisoners (Large),15,"['dynamic programming', 'sorting']"
12643,1264300,Decision Tree (Small),13,"['parsing', 'string', 'tree']"
12644,1264400,Decision Tree (Large),13,"['parsing', 'string', 'tree']"
12645,1264500,The Next Number (Small),5,"['bruteforcing', 'greedy']"
12646,1264600,The Next Number (Large),11,"['greedy', 'implementation', 'string']"
12647,1264700,Square Math (Small),19,[]
12648,1264800,Square Math (Large),18,"['breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal', 'implementation']"
12649,1264900,Multi-base happiness (Small),6,"['bruteforcing', 'implementation']"
12650,1265000,Multi-base happiness (Large),14,"['dynamic programming', 'precomputation']"
12651,1265100,Crossing the Road (Small),0,[]
12652,1265200,Crossing the Road (Large),0,[]
12653,1265300,Collecting Cards (Small),9,[]
12654,1265400,Collecting Cards (Large),15,"['combinatorics', 'dynamic programming', 'gaussian elimination', 'linear algebra', 'mathematics', 'probability theory']"
12655,1265500,Alien Language (Small),7,"['bruteforcing', 'parsing', 'string']"
12656,1265600,Alien Language (Large),10,"['bruteforcing', 'parsing', 'string']"
12657,1265700,Watersheds (Small),9,"['backtracking', 'breadth-first search', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
12658,1265800,Watersheds (Large),9,"['breadth-first search', 'data structures', 'depth-first search', 'disjoint set', 'graph theory', 'graph traversal']"
12659,1265900,Welcome to Code Jam (Small),8,"['backtracking', 'bruteforcing', 'dynamic programming']"
12660,1266000,Welcome to Code Jam (Large),10,"['dynamic programming', 'string']"
12661,1266100,Juice (Small),11,[]
12662,1266200,Juice (Large),19,"['sliding window', 'ternary search']"
12663,1266300,Ping Pong Balls (Small),13,"['graph theory', 'graph traversal']"
12664,1266400,Ping Pong Balls (Large),22,"['linear algebra', 'mathematics']"
12665,1266500,Mine Layer (Small),17,['bruteforcing']
12666,1266600,Mine Layer (Large),23,[]
12667,1266700,Bridge Builders (Small),18,"['graph theory', 'minimum spanning tree']"
12668,1266800,Bridge Builders (Large),23,"['breadth-first search', 'graph theory', 'graph traversal', 'minimum spanning tree']"
12669,1266900,The Year of Code Jam (Small),21,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
12670,1267000,The Year of Code Jam (Large),25,"['maximum flow', 'max-flow min-cut theorem']"
12671,1267100,Scaled Triangle (Small),0,[]
12672,1267200,삼각형 변환 (Large),0,[]
12673,1267300,Painting a Fence (Small),0,[]
12674,1267400,Painting a Fence (Large),0,[]
12675,1267500,Rainbow Trees (Small),0,[]
12676,1267600,Rainbow Trees (Large),0,[]
12677,1267700,Bus Stops (Small),0,[]
12678,1267800,Bus Stops (Large),0,[]
12679,1267900,Mixing Bowls (Small),10,[]
12680,1268000,Mixing Bowls (Large),15,[]
12681,1268100,Code Sequence (Small),9,[]
12682,1268200,Code Sequence (Large),0,[]
12683,1268300,Test Passing Probability (Small),7,[]
12684,1268400,Test Passing Probability (Large),13,"['dynamic programming', 'greedy']"
12685,1268500,King (Small),19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'game theory', 'sprague–grundy theorem']"
12686,1268600,King (Large),0,[]
12687,1268700,What are Birds? (Small),13,[]
12688,1268800,What are Birds? (Large),14,"['ad-hoc', 'geometry']"
12689,1268900,Apocalypse Soon (Small),0,[]
12690,1269000,Apocalypse Soon (Large),0,[]
12691,1269100,Millionaire (Small),8,[]
12692,1269200,Millionaire (Large),18,"['dynamic programming', 'mathematics', 'probability theory']"
12693,1269300,Modern Art Plagiarism (Small),16,"['bruteforcing', 'graph theory', 'graph traversal', 'tree']"
12694,1269400,Modern Art Plagiarism (Large),23,[]
12695,1269500,How Big Are the Pockets? (Small),0,[]
12696,1269600,How Big Are the Pockets? (Large),0,[]
12697,1269700,Portal (Small),13,"['0-1 bfs', ""dijkstra's"", 'graph theory']"
12698,1269800,Portal (Large),17,"['0-1 bfs', 'breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
12699,1269900,Igra,12,[]
12700,1270000,Poklon,18,"['ad-hoc', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'tree']"
12701,1270100,Endless Knight (Small),12,['dynamic programming']
12702,1270200,Endless Knight (Large),21,"['combinatorics', 'inclusion and exclusion', 'lucas theorem', 'mathematics', 'number theory']"
12703,1270300,Cheating a Boolean Tree (Small),10,[]
12704,1270400,Cheating a Boolean Tree (Large),14,[]
12705,1270500,Triangle Areas (Small),8,"['bruteforcing', 'constructive', 'geometry']"
12706,1270600,Triangle Areas (Large),12,"['constructive', 'geometry', 'mathematics', 'number theory']"
12707,1270700,Star Wars (Small),16,"['geometry', 'geometry; 3d', 'mathematics', 'ternary search']"
12708,1270800,Star Wars (Large),16,"['geometry', 'geometry; 3d', 'mathematics', 'ternary search']"
12709,1270900,PermRLE (Small),7,"['bruteforcing', 'string']"
12710,1271000,PermRLE (Large),17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
12711,1271100,Text Messaging Outrage (Small),6,"['bruteforcing', 'greedy']"
12712,1271200,Text Messaging Outrage (Large),7,"['greedy', 'sorting']"
12713,1271300,Ugly Numbers (Small),8,"['backtracking', 'bruteforcing', 'dynamic programming', 'mathematics']"
12714,1271400,Ugly Numbers (Large),15,"['dynamic programming', 'mathematics', 'number theory']"
12715,1271500,Increasing Speed Limits (Small),8,['dynamic programming']
12716,1271600,Increasing Speed Limits (Large),16,"['value / coordinate compression', 'data structures', 'dynamic programming', 'segment tree']"
12717,1271700,Crop Triangles (Small),6,['bruteforcing']
12718,1271800,Crop Triangles (Large),10,"['combinatorics', 'mathematics', 'number theory']"
12719,1271900,Number Sets (Small),10,"['implementation', 'mathematics', 'number theory', 'primality test']"
12720,1272000,Number Sets (Large),16,"['data structures', 'disjoint set', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
12721,1272100,Mousetrap (Small),8,[]
12722,1272200,Mousetrap (Large),17,"['data structures', 'dynamic programming', 'implementation', 'segment tree']"
12723,1272300,Minimum Scalar Product (Small),6,"['bruteforcing', 'greedy', 'mathematics', 'sorting']"
12724,1272400,Minimum Scalar Product (Large),7,"['greedy', 'sorting']"
12725,1272500,Milkshakes (Small),7,"['bitmask', 'bruteforcing']"
12726,1272600,Milkshakes (Large),10,[]
12727,1272700,Numbers (Small),12,"['arbitrary precision / big integers', 'mathematics', 'precomputation']"
12728,1272800,n제곱 계산,20,"['exponentiation by squaring', 'mathematics']"
12729,1272900,Saving the Universe (Small),8,"['bitmask', 'data structures', 'dynamic programming', 'greedy', 'set / map by hashing', 'string']"
12730,1273000,Saving the Universe (Large),9,"['bit set', 'data structures', 'dynamic programming', 'greedy', 'set / map by hashing', 'string']"
12731,1273100,열차 시간표(Small),11,"['data structures', 'greedy', 'implementation', 'priority queue', 'simulation', 'sorting']"
12732,1273200,열차 시간표(Large),11,"['data structures', 'greedy', 'implementation', 'priority queue', 'simulation', 'sorting']"
12733,1273300,Fly Swatter (Small),20,"['calculus', 'geometry', 'mathematics', 'probability theory']"
12734,1273400,Fly Swatter (Large),20,"['calculus', 'geometry', 'mathematics', 'probability theory']"
12735,1273500,Boat,23,"['combinatorics', 'dynamic programming', 'mathematics']"
12736,1273600,Fireworks,25,"['data structures', 'dynamic programming', 'dynamic programming on trees', 'priority queue', 'slope trick', 'smaller to larger technique', 'tree']"
12738,1273800,가장 긴 증가하는 부분 수열 3,14,"['binary search', 'longest increasing sequence in o(n log n)']"
12739,1273900,돌림판 (Small),8,"['implementation', 'simulation']"
12740,1274000,돌림판 (Large),20,[]
12741,1274100,쓰담쓰담,16,"['data structures', 'segment tree']"
12742,1274200,혼합물 (Small),16,"['mathematics', 'ternary search']"
12743,1274300,혼합물 (Large),17,['ternary search']
12744,1274400,팬케이크 쌓기,13,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing']"
12745,1274500,Traffic (Small),17,"['lowest common ancestor', 'prefix sum', 'tree']"
12746,1274600,Traffic (Large),19,"['lowest common ancestor', 'prefix sum', 'tree']"
12747,1274700,색칠 공부 (Small),15,"['backtracking', 'bruteforcing', 'data structures', 'set / map by trees']"
12748,1274800,색칠 공부 (Large),25,"[""burnside's lemma"", 'combinatorics', 'mathematics']"
12749,1274900,Bosses,16,"['breadth-first search', 'bruteforcing', 'graph theory', 'graph traversal', 'tree']"
12750,1275000,Park,22,"['data structures', 'disjoint set', 'geometry', 'graph theory', 'offline queries']"
12751,1275100,Spiral,22,[]
12752,1275200,도시들,22,"['bitmask', ""dijkstra's"", 'graph theory']"
12753,1275300,Maze,0,[]
12754,1275400,스왑,24,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'greedy', 'tree']"
12755,1275500,수면 장애,6,"['bruteforcing', 'implementation', 'mathematics']"
12756,1275600,고급 여관,3,"['arithmetic', 'implementation', 'mathematics', 'simulation']"
12757,1275700,전설의 JBNU,13,"['binary search', 'data structures', 'set / map by hashing']"
12758,1275800,천상용섬,15,"['dynamic programming', 'mathematics', 'number theory']"
12759,1275900,틱! 택! 토!,5,"['case work', 'implementation', 'simulation']"
12760,1276000,최후의 승자는 누구?,6,"['implementation', 'simulation', 'sorting']"
12761,1276100,돌다리,10,"['breadth-first search', 'graph theory', 'graph traversal']"
12762,1276200,롤러코스터,12,['dynamic programming']
12763,1276300,지각하면 안 돼,14,"['depth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
12764,1276400,싸지방에 간 준하,13,"['data structures', 'implementation', 'priority queue', 'simulation']"
12765,1276500,Balanced Diet,22,"['data structures', 'greedy', 'mathematics', 'priority queue']"
12766,1276600,지사 배정,21,"['graph theory', ""dijkstra's"", 'divide and conquer', 'dynamic programming', 'divide and conquer optimization', 'prefix sum']"
12767,1276700,Ceiling Function,15,"['data structures', 'set / map by hashing', 'tree']"
12768,1276800,Clock Breaking,20,[]
12769,1276900,영원한 젊음,19,[]
12770,1277000,Longest Rivers,25,"['data structures', 'depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'greedy', 'priority queue', 'sweeping', 'tree']"
12771,1277100,Oil,21,"['geometry', 'sorting', 'sweeping']"
12772,1277200,Polygonal Puzzle,30,"['geometry', 'implementation']"
12773,1277300,Road Times,25,['linear programming']
12774,1277400,Spin Doctor,25,"['binary search', 'geometry']"
12775,1277500,String Theory,19,"['ad-hoc', 'dynamic programming', 'greedy']"
12776,1277600,Swap Space,17,['greedy']
12777,1277700,What Really Happened on Mars?,23,[]
12778,1277800,CTP공국으로 이민 가자,4,['implementation']
12779,1277900,상품 is 뭔들,8,"['euclidean algorithm', 'mathematics', 'number theory']"
12780,1278000,원피스,4,"['implementation', 'string']"
12781,1278100,PIZZA ALVOLOC,13,"['geometry', 'line segment intersection check']"
12782,1278200,비트 우정지수,7,"['greedy', 'mathematics']"
12783,1278300,곱셈 게임,14,"['dynamic programming', 'mathematics']"
12784,1278400,인하니카 공화국,13,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
12785,1278500,토쟁이의 등굣길,10,"['combinatorics', 'dynamic programming', 'mathematics']"
12786,1278600,INHA SUIT,12,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
12787,1278700,지금 밥이 문제냐,6,"['implementation', 'parsing', 'string']"
12788,1278800,제 2회 IUPC는 잘 개최될 수 있을까?,7,"['greedy', 'sorting']"
12789,1278900,도키도키 간식드리미,7,"['data structures', 'stack']"
12790,1279000,Mini Fantasy War,3,"['arithmetic', 'implementation', 'mathematics']"
12791,1279100,Starman,5,"['implementation', 'precomputation']"
12792,1279200,주작 주 주작,10,"['mathematics', 'number theory']"
12793,1279300,블록 게임,15,"['graph theory', 'graph traversal', 'implementation']"
12794,1279400,위대한 믹싱 가요제,22,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'implementation', 'string', 'suffix array and lcp array']"
12795,1279500,반평면 땅따먹기,21,"['convex hull trick', 'dynamic programming']"
12796,1279600,나의 행렬곱셈 답사기,10,"['ad-hoc', 'constructive', 'mathematics']"
12797,1279700,연금술,21,"['berlekamp–massey', 'dynamic programming', 'exponentiation by squaring', 'mathematics']"
12798,1279800,게나디는 머리가 좋습니다,21,"['data structures', 'multidimensional segment tree', 'prefix sum', 'segment tree']"
12799,1279900,Dijamant,22,[]
12800,1280000,Palinilap,22,[]
12801,1280100,중계 신호,24,"['binary search', 'convex hull', 'geometry']"
12802,1280200,Torrent,21,"['binary search', 'dynamic programming', 'dynamic programming on trees', 'tree']"
12803,1280300,Peter and the Textbook,9,"['binary search', 'bruteforcing', 'data structures', 'implementation', 'segment tree', 'simulation']"
12804,1280400,Gregory and Bank,11,['sorting']
12805,1280500,Name Generator,11,[]
12806,1280600,T-shirts,20,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'greedy']"
12807,1280700,Bridge testing,0,[]
12808,1280800,Binary String,0,[]
12809,1280900,Train in a Tunnel,8,['greedy']
12810,1281000,Beautiful Partition,0,[]
12811,1281100,Problem Preparation,0,[]
12812,1281200,Similar Subways,23,[]
12813,1281300,이진수 연산,4,['string']
12814,1281400,Hyperways,0,[]
12815,1281500,Dynamic memory allocation,21,[]
12816,1281600,Shades of the town,21,"['aho-corasick', 'data structures', 'tree', 'trie']"
12817,1281700,버스 노선,16,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
12818,1281800,Investigation,26,[]
12819,1281900,New Tree,0,[]
12820,1282000,Cubic Art,20,"['ad-hoc', 'data structures', 'implementation', 'segment tree']"
12821,1282100,Universities,0,[]
12822,1282200,Wall,19,['dynamic programming']
12823,1282300,Critical Projects,22,"['graph theory', 'topological sorting']"
12824,1282400,Connect Highways,0,[]
12825,1282500,Next Permutation,15,['ad-hoc']
12826,1282600,Game,0,[]
12827,1282700,Posters,26,"['data structures', 'segment tree with lazy propagation', 'segment tree', 'sweeping']"
12828,1282800,Sorting,16,"['data structures', 'dynamic programming', 'segment tree', 'sorting']"
12829,1282900,Mission,19,[]
12830,1283000,Newspapers,21,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'parametric search', 'tree']"
12831,1283100,An inexperienced slalomer,0,[]
12832,1283200,Tickets,0,[]
12833,1283300,XORXORXOR,5,"['bitmask', 'mathematics']"
12834,1283400,주간 미팅,12,"[""dijkstra's"", 'graph theory']"
12835,1283500,삼거리,14,['ad-hoc']
12836,1283600,가계부 (Easy),4,['implementation']
12837,1283700,가계부 (Hard),15,"['segment tree', 'data structures']"
12838,1283800,London Underground,0,[]
12839,1283900,카드 정리 2,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
12840,1284000,창용이의 시계,3,"['arithmetic', 'implementation', 'mathematics']"
12841,1284100,정보대 등산,8,[]
12842,1284200,튀김 소보루,9,"['bruteforcing', 'implementation']"
12843,1284300,복수전공,18,['bipartite matching']
12844,1284400,XOR,18,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
12845,1284500,모두의 마블,8,['greedy']
12846,1284600,무서운 아르바이트,16,"['data structures', 'divide and conquer', 'segment tree', 'stack']"
12847,1284700,꿀 아르바이트,7,"['prefix sum', 'sliding window']"
12848,1284800,막대기 게임,17,['game theory']
12849,1284900,본대 산책,10,"['dynamic programming', 'graph theory']"
12850,1285000,본대 산책2,15,"['exponentiation by squaring', 'graph theory', 'mathematics']"
12851,1285100,숨바꼭질 2,12,"['breadth-first search', 'graph theory', 'graph traversal']"
12852,1285200,1로 만들기 2,10,"['dynamic programming', 'graph theory', 'graph traversal']"
12853,1285300,Aurora Borealis,16,"['binary search', 'greedy', 'parametric search']"
12854,1285400,홍준이는 물리를 좋아해,13,['greedy']
12855,1285500,홍준이는 FFT를 좋아해,19,"['randomization', 'square root decomposition']"
12856,1285600,홍준이는 색칠을 좋아해,21,['square root decomposition']
12857,1285700,홍준이는 문자열을 좋아해,19,"['data structures', 'hashing', 'set / map by hashing', 'square root decomposition', 'string', 'two-pointer']"
12858,1285800,Range GCD,20,"['data structures', 'euclidean algorithm', 'segment tree with lazy propagation', 'mathematics', 'number theory', 'segment tree']"
12859,1285900,점프하는 민호,15,"['data structures', 'dynamic programming', 'set / map by hashing', 'mathematics', 'number theory']"
12860,1286000,나머지 게임,0,[]
12861,1286100,죄수에게 주는 뇌물,15,['dynamic programming']
12862,1286200,Love Triangles,19,"['combinatorics', 'graph theory', 'graph traversal', 'mathematics']"
12863,1286300,Clash of Snakes,12,"['case work', 'combinatorics', 'mathematics']"
12864,1286400,사서왕 준서,14,['dynamic programming']
12865,1286500,평범한 배낭,11,"['dynamic programming', 'knapsack']"
12866,1286600,피노키오,5,"['arithmetic', 'combinatorics', 'mathematics']"
12867,1286700,N차원 여행,9,"['value / coordinate compression', 'sorting']"
12868,1286800,문자열 찾기,0,[]
12869,1286900,뮤탈리스크,12,"['breadth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
12870,1287000,뮤탈리스크 2,21,"['bit set', 'dynamic programming', 'mathematics', 'parametric search']"
12871,1287100,무한 문자열,6,"['implementation', 'mathematics', 'string']"
12872,1287200,플레이리스트,15,['dynamic programming']
12873,1287300,기념품,7,"['data structures', 'implementation', 'queue', 'simulation']"
12874,1287400,괄호 문자열 만들기,17,['dynamic programming']
12875,1287500,칙령,12,"['floyd–warshall', 'graph theory']"
12876,1287600,반평면 땅따먹기 2,23,"['convex hull trick', 'data structures', 'disjoint set', 'divide and conquer', 'dynamic programming', 'graph theory', 'offline dynamic connectivity', 'offline queries', 'segment tree']"
12877,1287700,먹이 사슬,17,"['data structures', 'disjoint set']"
12878,1287800,Blocks,13,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
12879,1287900,카드 세트,0,[]
12880,1288000,그래프 차이 최소,17,"['binary search', 'graph theory', 'strongly connected component', 'two-pointer']"
12881,1288100,Distance,0,[]
12882,1288200,Archaeological Research,0,[]
12883,1288300,Journey,0,[]
12884,1288400,A Lot of Games,17,"['case work', 'game theory']"
12885,1288500,Fox and Card Game,17,"['ad-hoc', 'game theory', 'greedy']"
12886,1288600,돌 그룹,12,"['breadth-first search', 'graph theory', 'graph traversal']"
12887,1288700,경로 게임,11,"['breadth-first search', 'game theory', 'graph theory', 'graph traversal']"
12888,1288800,완전 이진 트리 도로 네트워크,12,"['dynamic programming', 'graph theory', 'mathematics']"
12889,1288900,특별한 문자열,14,"['backtracking', 'string']"
12890,1289000,정수 찾기,19,"['backtracking', 'dynamic programming', 'greedy']"
12891,1289100,DNA 비밀번호,8,"['sliding window', 'string']"
12892,1289200,생일 선물,12,"['sorting', 'two-pointer']"
12893,1289300,적의 적,12,"['bipartite graph', 'data structures', 'disjoint set', 'graph theory', 'graph traversal']"
12894,1289400,Equivalent Strings,18,['divide and conquer']
12895,1289500,화려한 마을,18,"['bitmask', 'data structures', 'segment tree with lazy propagation', 'segment tree']"
12896,1289600,스크루지 민호,14,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
12897,1289700,Candy,9,['mathematics']
12898,1289800,Selling RNA Strands,23,"['data structures', 'offline queries', 'segment tree', 'string', 'tree', 'trie']"
12899,1289900,데이터 구조,17,"['data structures', 'segment tree']"
12900,1290000,Cheating a Boolean Tree,15,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
12901,1290100,Number Sets,14,[]
12902,1290200,Alice and Bob,13,"['euclidean algorithm', 'mathematics', 'number theory']"
12903,1290300,공 색칠하기,13,"['combinatorics', 'mathematics']"
12904,1290400,A와 B,11,"['greedy', 'implementation', 'string']"
12905,1290500,거짓말쟁이,0,[]
12906,1290600,새로운 하노이 탑,13,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'set / map by hashing']"
12907,1290700,동물원,11,"['combinatorics', 'mathematics']"
12908,1290800,텔레포트 3,11,"['backtracking', 'bruteforcing', 'graph theory']"
12909,1290900,그래프 만들기,15,['dynamic programming']
12910,1291000,사탕 나눠주기,8,"['combinatorics', 'mathematics']"
12911,1291100,좋아하는 배열,14,"['dynamic programming', 'mathematics', 'number theory', 'prefix sum']"
12912,1291200,트리 수정,15,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
12913,1291300,매직 포션,14,"[""dijkstra's"", 'graph theory']"
12914,1291400,곰을 위한 레스토랑,13,"['data structures', 'set / map by trees']"
12915,1291500,대회 개최,9,"['binary search', 'greedy']"
12916,1291600,K-Path,15,"['exponentiation by squaring', 'graph theory', 'mathematics']"
12917,1291700,문자열 함수 계산,20,"['data structures', 'string', 'suffix array and lcp array']"
12918,1291800,정리정돈,21,"['maximum flow', 'geometry', 'minimum cost maximum flow']"
12919,1291900,A와 B 2,11,"['bruteforcing', 'implementation', 'recursion', 'string']"
12920,1292000,평범한 배낭 2,17,"['dynamic programming', 'knapsack', 'mathematics']"
12921,1292100,제한된 메모리,20,"['binary search', 'parallel binary search']"
12922,1292200,블록 퍼즐,18,"['maximum flow', 'max-flow min-cut theorem']"
12923,1292300,별 모으기,0,[]
12924,1292400,멋진 쌍,11,"['bruteforcing', 'mathematics']"
12925,1292500,Numbers,20,"['exponentiation by squaring', 'mathematics']"
12926,1292600,쉽게 제한된 메모리,19,"['binary search', 'parallel binary search']"
12927,1292700,배수 스위치,7,['greedy']
12928,1292800,트리와 경로의 길이,17,"['dynamic programming', 'tree']"
12929,1292900,빌딩 높이,13,"['binary search', 'greedy']"
12930,1293000,두 가중치,16,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
12931,1293100,두 배 더하기,11,['greedy']
12932,1293200,노래방,16,['dynamic programming']
12933,1293300,오리,8,"['greedy', 'implementation', 'string']"
12934,1293400,턴 게임,11,"['greedy', 'mathematics']"
12935,1293500,트리와 경로의 길이 2,17,['constructive']
12936,1293600,영웅은 죽지 않아요,22,"['maximum flow', 'max-flow min-cut theorem']"
12937,1293700,좋아하는 배열 2,23,"['berlekamp–massey', 'dynamic programming', 'mathematics']"
12938,1293800,곱으로 분해하기,14,"['combinatorics', 'mathematics', 'number theory', 'primality test']"
12939,1293900,부분 문자열,20,"['aho-corasick', 'bitmask', 'data structures', 'dynamic programming', 'dynamic programming using bitfield', 'knuth–morris–pratt', 'string', 'tree', 'trie']"
12940,1294000,에너지 관리,0,[]
12941,1294100,동전 게임,19,"['game theory', 'sprague–grundy theorem']"
12942,1294200,원 위의 춤,17,"['data structures', 'offline queries', 'stack']"
12943,1294300,노래방 2,0,[]
12944,1294400,재미있는 숫자 놀이,15,"['bitmask', 'euclidean algorithm', 'inclusion and exclusion', 'mathematics', 'number theory']"
12945,1294500,재미있는 박스 정리,13,['greedy']
12946,1294600,육각 보드,13,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics']"
12947,1294700,트리 만들기,11,"['ad-hoc', 'tree']"
12948,1294800,문자열의 개수,0,[]
12949,1294900,로봇의 이동,0,[]
12950,1295000,팰린드롬 보행,16,"['dynamic programming', 'graph theory', 'graph traversal']"
12951,1295100,경기 결과,17,[]
12952,1295200,숫자 자물쇠,0,[]
12953,1295300,숫자 자물쇠 2,0,[]
12954,1295400,비트 문자열 뒤집기,0,[]
12955,1295500,팰린드롬 부분 문자열,17,"['bruteforcing', 'combinatorics', 'graph theory', 'graph traversal', 'inclusion and exclusion', 'mathematics', 'recursion']"
12956,1295600,퍼레이드,13,"['floyd–warshall', 'graph theory']"
12957,1295700,보행의 개수,0,[]
12958,1295800,단순 사이클의 개수,0,[]
12959,1295900,방향판,20,"['maximum flow', 'hungarian', 'minimum cost maximum flow']"
12960,1296000,체스판,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
12961,1296100,체스판 2,21,['maximum flow']
12962,1296200,나무 자르기,0,[]
12963,1296300,달리기,18,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'greedy']"
12964,1296400,점수의 합,0,[]
12965,1296500,빨간 선분 파란 선분,21,"['maximum flow', 'geometry', 'max-flow min-cut theorem']"
12966,1296600,턴 게임 2,13,['greedy']
12967,1296700,pqr,15,"['mathematics', 'prefix sum']"
12968,1296800,방문,9,"['ad-hoc', 'mathematics']"
12969,1296900,ABC,15,['dynamic programming']
12970,1297000,AB,12,"['constructive', 'greedy', 'implementation', 'mathematics']"
12971,1297100,숫자 놀이,7,"['bruteforcing', 'chinese remainder theorem', 'mathematics', 'number theory']"
12972,1297200,GCD 테이블,15,"['ad-hoc', 'mathematics', 'number theory']"
12973,1297300,Array GCD,17,"['dynamic programming', 'mathematics', 'number theory', 'primality test', 'two-pointer']"
12974,1297400,시간 여행과 Multiset,19,"['value / coordinate compression', 'data structures', 'offline queries', 'segment tree']"
12975,1297500,트라이슬,15,"['dynamic programming', 'knapsack']"
12976,1297600,돌 옮기기,0,[]
12977,1297700,원 위의 점,15,"['calculus', 'mathematics', 'probability theory']"
12978,1297800,스크루지 민호 2,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
12979,1297900,종이 접기,12,[]
12980,1298000,좋아하는 수열,12,['bruteforcing']
12981,1298100,공 포장하기,7,"['case work', 'greedy', 'mathematics']"
12982,1298200,공 포장하기 2,14,"['bruteforcing', 'greedy', 'prefix sum', 'sorting']"
12983,1298300,Set Definition,14,"['data structures', 'dynamic programming', 'graph theory', 'graph traversal', 'priority queue', 'two-pointer']"
12984,1298400,문자열의 분할,0,[]
12985,1298500,비밀 회선,0,[]
12986,1298600,화려한 마을2,19,"['data structures', ""mo's"", 'offline queries', 'segment tree']"
12987,1298700,Matrix Again,14,"['exponentiation by squaring', 'mathematics']"
12988,1298800,주식 차트,19,['bipartite matching']
12989,1298900,LCS Again,23,[]
12990,1299000,A Heap of Heaps,20,"['data structures', 'merge sort tree', 'segment tree', 'sorting']"
12991,1299100,홍준이의 행렬,13,['binary search']
12992,1299200,홍준이의 교집합,0,[]
12993,1299300,이동3,9,"['mathematics', 'number theory']"
12994,1299400,이동3-2,11,"['mathematics', 'number theory']"
12995,1299500,트리나라,19,"['dynamic programming', 'dynamic programming on trees', 'tree']"
12996,1299600,Acka,12,['dynamic programming']
12997,1299700,철인 2종 경기,0,[]
12998,1299800,꽃 장식하기,0,[]
12999,1299900,화려한 마을3,20,"[""mo's"", 'offline queries']"
13000,1300000,홍준이와 가능한 집합,0,[]
13001,1300100,홍준이와 직사각형,0,[]
13002,1300200,Happy Cow,13,['dynamic programming']
13003,1300300,배수열,14,"['dynamic programming', 'mathematics', 'number theory']"
13004,1300400,비밀 임무,0,[]
13005,1300500,행복한 나무,17,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
13006,1300600,키위쥬스,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
13007,1300700,ntopia,16,"['combinatorics', ""fermat's little theorem"", 'mathematics', 'number theory']"
13008,1300800,특수 능력,15,"[""dijkstra's"", 'graph theory']"
13009,1300900,특수 능력 2,21,[]
13010,1301000,h(n),15,"['binary search', 'mathematics', 'number theory']"
13011,1301100,사탕의 밀도,10,"['mathematics', 'ternary search']"
13012,1301200,접미사 배열 1,17,"['string', 'suffix array and lcp array']"
13013,1301300,접미사 배열 2,15,"['string', 'suffix array and lcp array']"
13014,1301400,동혁이의 이동,0,[]
13015,1301500,별 찍기 - 23,6,['implementation']
13016,1301600,내 왼손에는 흑염룡이 잠들어 있다,16,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
13017,1301700,특이한 수,0,[]
13018,1301800,특이한 수열,12,"['ad-hoc', 'constructive', 'mathematics']"
13019,1301900,A를 B로,11,['greedy']
13020,1302000,좋은 집합,0,[]
13021,1302100,공 색칠하기,11,"['combinatorics', 'mathematics']"
13022,1302200,늑대와 올바른 단어,9,"['implementation', 'string']"
13023,1302300,ABCDE,11,"['depth-first search', 'graph theory', 'graph traversal']"
13024,1302400,서브 트리의 크기,17,"['dynamic programming', 'dynamic programming on trees', 'tree']"
13025,1302500,숫자 골라내기,17,"['ad-hoc', 'case work', 'constructive', 'mathematics']"
13026,1302600,저녁 식사,0,[]
13027,1302700,Clique Problem,14,"['dynamic programming', 'greedy', 'sorting', 'sweeping']"
13028,1302800,민호의 소원,0,[]
13029,1302900,홍준이와 반물질,16,['dynamic programming']
13030,1303000,홍준이와 트리,18,"['data structures', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
13031,1303100,쉽게 행복한 나무,17,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
13032,1303200,PS 테러리스트,0,[]
13033,1303300,홍준이와 트리2,0,[]
13034,1303400,다각형 게임,18,"['game theory', 'sprague–grundy theorem']"
13035,1303500,Rectangle and Squares,5,"['arithmetic', 'mathematics']"
13036,1303600,Zeroes and Ones,9,['greedy']
13037,1303700,New Track,0,[]
13038,1303800,Tree,20,"['data structures', 'lowest common ancestor', 'segment tree', 'tree']"
13039,1303900,Barbarians,0,[]
13040,1304000,Important Test,5,[]
13041,1304100,Centipede,0,[]
13042,1304200,Binary Tree,0,[]
13043,1304300,Containers and Reagents,0,[]
13044,1304400,Money Exchange,0,[]
13045,1304500,"Elimination Round, Problem F",0,[]
13046,1304600,Secret Code,8,[]
13047,1304700,Chaos,6,['greedy']
13048,1304800,New Adventure of Marty and Doc,0,[]
13049,1304900,Teams Creation,0,[]
13050,1305000,Maximal Sum,0,[]
13051,1305100,Fancy Antiques,23,['bruteforcing']
13052,1305200,Alternative Bracket Notation,20,['dynamic programming']
13053,1305300,Greetings!,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
13054,1305400,Programming Team,22,"['binary search', 'dynamic programming', 'dynamic programming on trees', 'tree']"
13055,1305500,K-Inversions,21,"['fast fourier transform', 'mathematics']"
13056,1305600,Mountain Scenes,13,['dynamic programming']
13057,1305700,Symmetry,0,[]
13058,1305800,Jewel Thief,23,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'monotone queue optimization']"
13059,1305900,Tourists,16,"['lowest common ancestor', 'tree']"
13060,1306000,Whiteboard,0,[]
13061,1306100,YATP,0,[]
13062,1306200,2016 KBO 한국시리즈 우승팀,0,[]
13063,1306300,Lobby,3,"['implementation', 'mathematics']"
13064,1306400,Cameras,4,"['implementation', 'string']"
13065,1306500,Robot,16,"['breadth-first search', 'graph theory', 'graph traversal']"
13066,1306600,Laser Game,0,[]
13067,1306700,Billboard,0,[]
13068,1306800,Funfair,19,"['dynamic programming', 'greedy', 'mathematics', 'sorting']"
13069,1306900,Beehive,0,[]
13070,1307000,DNA Sequencing,0,[]
13071,1307100,Cafebazaar,20,"['circulation', 'maximum flow', 'minimum cost maximum flow']"
13072,1307200,Fence,0,[]
13073,1307300,Sums,3,"['arithmetic', 'mathematics']"
13074,1307400,Musican Notes,11,"['combinatorics', 'dynamic programming', 'mathematics']"
13075,1307500,Fibonacci Sequence,14,"['exponentiation by squaring', 'mathematics']"
13076,1307600,Distinct rational numbers,14,"['euler totient function', 'mathematics', 'number theory', 'prefix sum']"
13077,1307700,Sequence,10,"['mathematics', 'tree']"
13078,1307800,History-Cleanable DFA,0,[]
13079,1307900,Partitioning a Queue,11,"['dynamic programming', 'knapsack']"
13080,1308000,Brocard Point,19,"['binary search', 'geometry']"
13081,1308100,RATS,11,"['arbitrary precision / big integers', 'implementation', 'mathematics', 'simulation']"
13082,1308200,M and A,9,"['string', 'two-pointer']"
13083,1308300,Change a Password,11,"['backtracking', 'bruteforcing']"
13084,1308400,Delete Files,15,"['ad-hoc', 'greedy']"
13085,1308500,Line Gimmick,12,['ad-hoc']
13086,1308600,Shifting a Matrix,15,['implementation']
13087,1308700,Modern Announce Network,17,[]
13088,1308800,Cube Dividing,21,"['ad-hoc', 'graph theory', 'graph traversal', 'implementation']"
13089,1308900,Donut Decoration,17,"['data structures', 'hashing', 'segment tree with lazy propagation', 'segment tree']"
13090,1309000,Shortest Bridge,28,[]
13091,1309100,Longest Shortest Path,25,"['maximum flow', 'linear programming', 'minimum cost maximum flow']"
13092,1309200,Optimal Tournament,21,"['dynamic programming', 'knuth optimization']"
13093,1309300,North North West,8,"['implementation', 'mathematics']"
13094,1309400,Unknown Switches,9,"['implementation', 'simulation']"
13095,1309500,Speedrun,0,[]
13096,1309600,Flowers,22,"['duality', 'greedy', 'knapsack', 'linear programming', 'mathematics']"
13097,1309700,Square in Circles,0,[]
13098,1309800,Reverse a Road II,18,"['maximum flow', 'graph theory']"
13099,1309900,Cookie Counter,17,"['combinatorics', 'dynamic programming', 'inclusion and exclusion', 'mathematics']"
13100,1310000,Points and Lines,15,"['data structures', 'set / map by hashing', 'implementation', 'parsing', 'stack', 'string']"
13101,1310100,Color the Map Extreme,0,[]
13102,1310200,Website Tour,0,[]
13103,1310300,Idempotent Filter,13,"['bitmask', 'bruteforcing']"
13116,1311600,30번,7,"['lowest common ancestor', 'mathematics', 'tree']"
13117,1311700,가위바위보,19,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics', 'probability theory']"
13118,1311800,뉴턴과 사과,2,['implementation']
13119,1311900,Mountains Beyond Mountains,6,['implementation']
13120,1312000,트리의 변화,21,"['dynamic programming', 'dynamic programming on trees', 'tree']"
13121,1312100,이진 탐색,22,"['greedy', 'mathematics']"
13122,1312200,별빛이 내린다,25,[]
13123,1312300,계산 실수,22,"['data structures', 'segment tree']"
13124,1312400,순열 그래프의 전갈성 판별,17,"['case work', 'graph theory']"
13125,1312500,Checkpoint,21,[]
13126,1312600,The Show Must Go On,21,"['data structures', 'segment tree', 'sweeping']"
13127,1312700,도박과 사각형,21,"['combinatorics', 'linearity of expectation', 'mathematics', 'prefix sum', 'probability theory']"
13128,1312800,특수부대 CH,0,[]
13129,1312900,Disposable Cup,3,"['arithmetic', 'implementation', 'mathematics']"
13130,1313000,FunctionCup,20,"['bitmask', 'combinatorics', 'dynamic programming', 'dynamic programming using bitfield', 'mathematics']"
13131,1313100,HicCup,0,"['arithmetic', 'mathematics', 'implementation']"
13132,1313200,World Cup,12,"['bruteforcing', 'mathematics', 'probability theory']"
13133,1313300,Aurora Princess,6,['implementation']
13134,1313400,Baseball Watching,18,['bruteforcing']
13135,1313500,Corrupt Election,16,"['value / coordinate compression', 'mathematics']"
13136,1313600,Do Not Touch Anything,2,"['arithmetic', 'mathematics']"
13137,1313700,Exchange Problem,18,"['dynamic programming', 'greedy']"
13138,1313800,Fairies' Sorcery,22,"['data structures', 'hashing', 'set / map by hashing', 'linked list', 'mathematics', 'segment tree']"
13139,1313900,Grid Forest,19,"['ad-hoc', 'breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory', 'primality test']"
13140,1314000,Hello World!,11,"['bruteforcing', 'mathematics']"
13141,1314100,Ignition,16,"['bruteforcing', 'floyd–warshall', 'graph theory']"
13142,1314200,Jolly Jelly Jiffy,23,"['combinatorics', 'dynamic programming', 'graph theory', 'mathematics']"
13143,1314300,King of Chairs,16,"['combinatorics', 'graph theory', 'greedy', 'mathematics']"
13144,1314400,List of Unique Numbers,12,['two-pointer']
13145,1314500,Masonry Bridge,23,"[""dijkstra's"", 'dual graph', 'geometry', 'graph theory', 'planar graph']"
13146,1314600,같은 수로 만들기 2,16,"['data structures', 'greedy', 'stack']"
13147,1314700,Dwarves,14,"['graph theory', 'graph traversal', 'topological sorting']"
13148,1314800,Correcting Cheeseburgers,22,"['breadth-first search', 'bidirectional search', 'graph theory', 'graph traversal']"
13149,1314900,Knapsack in a Globalized World,18,"[""dijkstra's"", 'graph theory', 'knapsack']"
13150,1315000,Matrix Cypher,10,"['arbitrary precision / big integers', 'mathematics']"
13151,1315100,Model Railroad,13,"['graph theory', 'minimum spanning tree']"
13152,1315200,One-Way Roads,20,"['binary search', 'maximum flow']"
13153,1315300,Formula,4,"['arithmetic', 'geometry', 'mathematics']"
13154,1315400,Celestial Map,13,"['geometry', 'geometry; 3d']"
13155,1315500,Common Knowledge,4,"['combinatorics', 'mathematics']"
13156,1315600,Selling CPUs,11,"['dynamic programming', 'knapsack']"
13157,1315700,Routing,14,"[""dijkstra's"", 'graph theory']"
13158,1315800,Maze,15,['dynamic programming']
13159,1315900,배열,24,"['splay tree', 'tree']"
13160,1316000,최대 클리크 구하기,14,"['value / coordinate compression', 'data structures', 'priority queue', 'sorting']"
13161,1316100,분단의 슬픔,20,"['maximum flow', 'max-flow min-cut theorem']"
13162,1316200,Flowey's Love,22,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'geometry']"
13163,1316300,닉네임에 갓 붙이기,4,"['implementation', 'string']"
13164,1316400,행복 유치원,11,"['greedy', 'sorting']"
13165,1316500,이것도 해결해 보시지,21,"['greedy', 'linear algebra', 'mathematics', 'randomization']"
13166,1316600,범죄 파티,19,"['2-sat', 'binary search', 'bipartite matching', 'graph theory', 'strongly connected component']"
13167,1316700,포스터,20,"['value / coordinate compression', 'data structures', 'disjoint set', 'sweeping']"
13168,1316800,내일로 여행,13,"['data structures', 'floyd–warshall', 'graph theory', 'set / map by hashing', 'implementation']"
13169,1316900,Xor of Sums,21,"['binary search', 'bitmask', 'meet in the middle', 'sorting']"
13170,1317000,떨어진 수정,7,"['arithmetic', 'greedy', 'mathematics']"
13171,1317100,A,7,"['exponentiation by squaring', 'mathematics']"
13172,1317200,Σ,12,"['exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'modular multiplicative inverse', 'number theory']"
13173,1317300,Ω,15,"['dynamic programming', 'exponentiation by squaring', 'mathematics', 'modular multiplicative inverse', 'number theory']"
13174,1317400,괄호,22,"['combinatorics', 'exponentiation by squaring', 'mathematics']"
13175,1317500,능력,22,"['combinatorics', 'linearity of expectation', 'mathematics', 'probability theory']"
13176,1317600,동전,19,"['dynamic programming', 'game theory', 'sprague–grundy theorem']"
13177,1317700,로봇,25,"['linearity of expectation', 'mathematics', 'probability theory']"
13178,1317800,목공,24,"['fast fourier transform', 'kitamasa', 'mathematics']"
13179,1317900,비트,22,"['combinatorics', 'dynamic programming', 'exponentiation by squaring', 'gaussian elimination', 'linear algebra', 'mathematics']"
13180,1318000,순열,20,"['combinatorics', 'extended euclidean algorithm', 'mathematics', 'modular multiplicative inverse', 'number theory']"
13181,1318100,악수,23,"['dynamic programming', 'mathematics', 'precomputation']"
13182,1318200,제비,24,"['exponentiation by squaring', 'mathematics']"
13183,1318300,창문,9,"['combinatorics', 'mathematics', 'probability theory']"
13184,1318400,카드,23,"['combinatorics', 'dynamic programming', 'fast fourier transform', 'mathematics']"
13185,1318500,트리,21,"['combinatorics', 'mathematics']"
13186,1318600,팔찌,21,"[""burnside's lemma"", 'combinatorics', 'euler totient function', 'exponentiation by squaring', 'mathematics', 'modular multiplicative inverse', 'number theory']"
13187,1318700,흑백,23,"['combinatorics', 'linearity of expectation', 'mathematics', 'probability theory']"
13188,1318800,Kangaroo,23,['dynamic programming']
13189,1318900,Trick,27,"['ad-hoc', 'bruteforcing', 'constructive', 'mathematics']"
13190,1319000,Match,22,[]
13191,1319100,Popeala,20,[]
13192,1319200,Router 1,4,"['ad-hoc', 'constructive', 'implementation', 'simulation']"
13193,1319300,Router 2,4,"['ad-hoc', 'constructive', 'implementation', 'simulation']"
13194,1319400,Router 3,13,"['constructive', 'graph theory', 'implementation', 'mathematics', 'simulation']"
13195,1319500,Router 4,15,"['constructive', 'graph theory']"
13196,1319600,Router 5,17,['constructive']
13197,1319700,Router 6,18,['constructive']
13198,1319800,Router 7,20,['constructive']
13199,1319900,치킨 먹고 싶다,13,['mathematics']
13200,1320000,Light Up,18,"['backtracking', 'bruteforcing', 'implementation', 'simulation']"
13201,1320100,즉흥 여행,17,"['dynamic programming', 'mathematics', 'probability theory']"
13202,1320200,피자 배치,14,"['geometry', 'mathematics']"
13203,1320300,읽어내기,20,"['data structures', 'divide and conquer', 'segment tree']"
13204,1320400,표본의 수 구하기,11,"['bruteforcing', 'mathematics']"
13205,1320500,비밀번호,21,[]
13206,1320600,Professor KCM,13,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
13207,1320700,Torres del Paine,21,['geometry']
13208,1320800,승현이와 승현이,22,"['binary search', 'data structures', 'disjoint set', 'graph theory', 'lowest common ancestor', 'minimum spanning tree', 'parallel binary search', 'tree']"
13209,1320900,검역소,18,"['binary search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'greedy', 'parametric search', 'tree']"
13210,1321000,직사각형의 개수,23,[]
13211,1321100,Passport Checking,6,"['data structures', 'set / map by hashing', 'string']"
13212,1321200,Random,8,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
13213,1321300,Binary Roads,11,"['breadth-first search', 'graph theory', 'graph traversal']"
13214,1321400,Swaps,12,[]
13215,1321500,Fish,17,[]
13216,1321600,Badminton,5,"['implementation', 'simulation', 'string']"
13217,1321700,Honey,7,"['greedy', 'sorting']"
13218,1321800,Bitcoin,14,"['value / coordinate compression', 'dynamic programming', 'mathematics']"
13219,1321900,Trains,10,"['breadth-first search', 'graph theory', 'graph traversal']"
13220,1322000,Secret,10,"['knuth–morris–pratt', 'string']"
13221,1322100,Manhattan,3,"['arithmetic', 'geometry', 'implementation', 'mathematics']"
13222,1322200,Matches,3,"['geometry', 'mathematics', 'pythagoras theorem']"
13223,1322300,소금 폭탄,3,"['arithmetic', 'implementation', 'mathematics']"
13224,1322400,Chop Cup,4,"['implementation', 'simulation', 'string']"
13225,1322500,Divisors,3,"['arithmetic', 'bruteforcing', 'implementation', 'mathematics']"
13226,1322600,Divisors Again,7,"['mathematics', 'number theory']"
13227,1322700,TicTacToe,5,"['implementation', 'string']"
13228,1322800,The REAL Manhattan distance,3,"['arithmetic', 'mathematics']"
13229,1322900,Selection Sum,7,['prefix sum']
13230,1323000,Bits equalizer,12,"['greedy', 'implementation']"
13231,1323100,Lucky Tickets,12,['dynamic programming']
13232,1323200,Domain clusters,15,"['graph theory', 'strongly connected component']"
13233,1323300,Celtic Symmetry,0,[]
13234,1323400,George Boole,4,"['implementation', 'string']"
13235,1323500,팰린드롬,4,"['implementation', 'string']"
13236,1323600,Collatz Conjecture,3,"['arithmetic', 'implementation', 'mathematics']"
13237,1323700,Binary tree,8,"['depth-first search', 'graph theory', 'graph traversal', 'tree']"
13238,1323800,Bitcoin investment,6,['greedy']
13239,1323900,Combinations,10,"['combinatorics', 'dynamic programming', 'mathematics']"
13240,1324000,Chessboard,3,['implementation']
13241,1324100,최소공배수,6,"['euclidean algorithm', 'mathematics', 'number theory']"
13242,1324200,Harps and Tails,8,"['data structures', 'greedy', 'set / map by hashing', 'set / map by trees']"
13243,1324300,Non-decreasing subsegment,7,['implementation']
13244,1324400,Tree,12,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'tree']"
13245,1324500,Sum of digits,14,"['combinatorics', 'mathematics']"
13246,1324600,행렬 제곱의 합,14,"['exponentiation by squaring', 'mathematics']"
13247,1324700,토끼의 이동,14,"['bitmask', 'combinatorics', 'mathematics']"
13248,1324800,수업 거절,14,[]
13249,1324900,공의 충돌,11,"['ad-hoc', 'bruteforcing', 'mathematics', 'probability theory']"
13250,1325000,주사위 게임,12,"['dynamic programming', 'mathematics', 'probability theory']"
13251,1325100,조약돌 꺼내기,8,"['combinatorics', 'mathematics', 'probability theory']"
13252,1325200,카지노,12,"['dynamic programming', 'greedy']"
13253,1325300,토러스,13,['mathematics']
13254,1325400,연휴,16,"['depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'probability theory', 'tree']"
13255,1325500,동전 뒤집기,13,"['dynamic programming', 'linearity of expectation', 'mathematics', 'probability theory']"
13256,1325600,수열의 아름다움,16,"['ad-hoc', 'linearity of expectation', 'mathematics', 'probability theory']"
13257,1325700,생태학,13,"['combinatorics', 'dynamic programming', 'mathematics', 'probability theory']"
13258,1325800,복권 + 은행,12,"['dynamic programming', 'mathematics']"
13259,1325900,강호의 초대,0,[]
13260,1326000,문자열 자르기,15,"['dynamic programming', 'knuth optimization']"
13261,1326100,탈옥,20,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming']"
13262,1326200,수열의 OR 점수,20,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming']"
13263,1326300,나무 자르기,19,"['convex hull trick', 'dynamic programming']"
13264,1326400,접미사 배열 2,18,"['string', 'suffix array and lcp array']"
13265,1326500,색칠하기,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
13266,1326600,생일 케이크,21,[]
13267,1326700,쿠키 배열,21,"['bitmask', 'data structures', 'divide and conquer', 'dynamic programming', 'dynamic programming using bitfield', 'exponentiation by squaring', 'implementation', 'mathematics', 'sparse table']"
13268,1326800,셔틀런,7,"['case work', 'implementation', 'simulation']"
13269,1326900,쌓기나무,12,"['constructive', 'greedy', 'implementation']"
13270,1327000,피보나치 치킨,9,"['dynamic programming', 'mathematics']"
13271,1327100,스파이,20,"['bellman–ford', 'graph theory', 'mathematics']"
13272,1327200,비밀번호,20,"['string', 'suffix array and lcp array', 'two-pointer']"
13273,1327300,로마숫자,10,"['implementation', 'mathematics', 'string']"
13274,1327400,수열,11,"['implementation', 'sorting']"
13275,1327500,가장 긴 팰린드롬 부분 문자열,16,"[""manacher's"", 'string']"
13276,1327600,Prefix와 Suffix,17,"['hashing', 'string', 'suffix array and lcp array']"
13277,1327700,큰 수 곱셈,1,"['arbitrary precision / big integers', 'arithmetic', 'mathematics']"
13278,1327800,피보나치 합의 개수,21,"['fast fourier transform', 'mathematics', 'number theory']"
13279,1327900,곱의 합 쿼리,17,"['dynamic programming', 'fast fourier transform', 'mathematics']"
13280,1328000,Selection of Participants of an Experiment,5,"['bruteforcing', 'sorting']"
13281,1328100,Look for the Winner!,8,"['implementation', 'simulation', 'sorting']"
13282,1328200,Bamboo Blossoms,14,"['bit set', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
13283,1328300,Daruma Otoshi,15,['dynamic programming']
13284,1328400,3D Printing,0,[]
13285,1328500,Deciphering Characters,23,"['tree', 'tree isomorphism']"
13286,1328600,Warp Drive,0,[]
13287,1328700,Gift Exchange Party,23,"['circulation', 'maximum flow', 'two-pointer']"
13288,1328800,A New Alphabet,4,"['implementation', 'string']"
13289,1328900,Arcade!,19,"['dynamic programming', 'gaussian elimination', 'graph theory', 'linear algebra', 'mathematics']"
13290,1329000,Big Truck,13,"[""dijkstra's"", 'graph theory']"
13291,1329100,Brackets,17,"['dynamic programming', 'mathematics']"
13292,1329200,Dots and Boxes,20,"['bipartite matching', 'maximum flow', 'implementation']"
13293,1329300,Free Desserts,21,['dynamic programming']
13294,1329400,역팩토리얼,13,"['mathematics', 'number theory']"
13295,1329500,Nine Packs,12,"['dynamic programming', 'knapsack']"
13296,1329600,Primonimo,20,"['gaussian elimination', 'linear algebra', 'mathematics', 'number theory']"
13297,1329700,Quick Estimates,3,['string']
13298,1329800,Robotopia,5,"['bruteforcing', 'mathematics']"
13299,1329900,Unusual Darts,18,"['bruteforcing', 'geometry']"
13300,1330000,방 배정,4,"['implementation', 'mathematics']"
13301,1330100,타일 장식물,6,"['dynamic programming', 'mathematics']"
13302,1330200,리조트,12,['dynamic programming']
13303,1330300,장애물 경기,18,"['data structures', 'set / map by trees']"
13304,1330400,방 배정,4,"['implementation', 'mathematics']"
13305,1330500,주유소,8,['greedy']
13306,1330600,트리,17,"['data structures', 'disjoint set', 'offline queries']"
13307,1330700,레이저 센서,23,"['constructive', 'convex hull', 'divide and conquer', 'geometry']"
13308,1330800,주유소,16,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
13309,1330900,트리,20,"['data structures', 'euler tour technique', 'heavy-light decomposition', 'segment tree', 'tree']"
13310,1331000,먼 별,21,"['convex hull', 'geometry', 'rotating calipers', 'ternary search']"
13311,1331100,행운의 편지,3,"['mathematics', 'number theory']"
13312,1331200,아크코사인은 믿음입니다,12,['constructive']
13313,1331300,손은 컴퓨터보다 빠르다,15,"['constructive', 'graph theory', 'randomization']"
13314,1331400,플로이드에 오타가?,13,"['constructive', 'floyd–warshall', 'graph theory']"
13315,1331500,실수 써도 풀려요?,15,"['constructive', 'mathematics']"
13316,1331600,std::정렬부터 시작하는 디버깅 생활,14,"['constructive', 'sorting']"
13317,1331700,한 번 남았다,13,"['bellman–ford', 'constructive', 'graph theory']"
13318,1331800,위험한 해싱,24,"['constructive', 'hashing', 'mathematics', 'number theory']"
13319,1331900,가짜 소수,15,"['constructive', ""fermat's little theorem"", 'mathematics', 'number theory', 'precomputation', 'primality test']"
13320,1332000,잘못 구현한 디닉,15,"['constructive', 'maximum flow', 'graph theory', 'randomization']"
13321,1332100,디닉은 네제곱입니까?,0,[]
13322,1332200,접두사 배열,4,"['ad-hoc', 'implementation', 'string']"
13323,1332300,BOJ 수열 1,23,"['data structures', 'dynamic programming', 'priority queue', 'slope trick']"
13324,1332400,BOJ 수열 2,24,"['data structures', 'dynamic programming', 'priority queue', 'slope trick']"
13325,1332500,이진 트리,13,"['dynamic programming', 'dynamic programming on trees', 'tree']"
13326,1332600,Diameter,22,"['geometry', 'greedy']"
13327,1332700,개구리,18,"[""dijkstra's"", 'geometry', 'graph theory', 'implementation']"
13328,1332800,Message Passing,16,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
13329,1332900,Meteor Shower,22,"['convex hull', 'data structures', 'geometry', 'sweeping']"
13330,1333000,유사 팰린드롬,17,['dynamic programming']
13331,1333100,Planar Drawing,22,"['data structures', 'disjoint set', 'dual graph', 'graph theory', 'planar graph']"
13332,1333200,Project Team,21,"['circulation', 'maximum flow']"
13333,1333300,Q-인덱스,6,"['bruteforcing', 'sorting']"
13334,1333400,철로,14,"['data structures', 'priority queue', 'sorting', 'sweeping']"
13335,1333500,트럭,10,"['data structures', 'implementation', 'queue', 'simulation']"
13336,1333600,카르테시안 트리,20,['dynamic programming']
13337,1333700,거의 오일러 그래프,20,"['combinatorics', 'graph theory', 'mathematics']"
13338,1333800,수도 선정,0,[]
13339,1333900,XOR 수열,18,['greedy']
13340,1334000,마법의 탑과 순간 이동,17,[]
13341,1334100,두 트리,0,[]
13342,1334200,건물주,21,"['maximum flow', 'floyd–warshall', 'graph theory', 'minimum cost maximum flow']"
13343,1334300,Block Game,14,"['euclidean algorithm', 'game theory', 'mathematics', 'number theory']"
13344,1334400,Chess Tournament,15,"['data structures', 'disjoint set', 'graph theory', 'topological sorting']"
13345,1334500,Completing the Square,8,"['geometry', 'mathematics']"
13346,1334600,Hamming Ellipses,11,['dynamic programming']
13347,1334700,Lost In The Woods,15,"['dynamic programming', 'mathematics', 'probability theory']"
13348,1334800,Memory Match,9,['implementation']
13349,1334900,Millionaire Madness,12,"['binary search', ""dijkstra's"", 'graph theory', 'graph traversal']"
13350,1335000,Presidential Elections,12,"['dynamic programming', 'knapsack']"
13351,1335100,Rock Band,12,[]
13352,1335200,석양이 진다...,17,"['geometry', 'implementation', 'randomization']"
13353,1335300,Translators’ Dinner,19,"['constructive', 'depth-first search', 'graph theory', 'graph traversal', 'tree']"
13354,1335400,Artwork,17,"['data structures', 'disjoint set', 'offline queries']"
13355,1335500,Bless You Autocorrect!,19,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'tree', 'trie']"
13356,1335600,Card Hand Sorting,14,"['bruteforcing', 'dynamic programming', 'implementation', 'longest increasing sequence in o(n log n)']"
13357,1335700,Daydreaming Stockbroker,8,['greedy']
13358,1335800,Exponial,20,"['euler totient function', 'exponentiation by squaring', 'mathematics', 'number theory']"
13359,1335900,Fleecing the Raffle,16,"['combinatorics', 'mathematics']"
13360,1336000,Game Rank,8,"['implementation', 'simulation']"
13361,1336100,최고인 대장장이 토르비욘,21,"['data structures', 'disjoint set', 'graph theory']"
13362,1336200,Interception,27,[]
13363,1336300,Jumbled Compass,3,"['arithmetic', 'case work', 'implementation', 'mathematics']"
13364,1336400,Keeping the Dogs Apart,18,"['binary search', 'geometry', 'two-pointer']"
13365,1336500,Jumping Worm,0,[]
13366,1336600,Math Contest,5,"['mathematics', 'number theory']"
13367,1336700,Weeping Fig,21,"['graph theory', 'stoer–wagner']"
13368,1336800,Cocktail Shaker Sort,0,[]
13369,1336900,The Escape,0,[]
13370,1337000,Carrot Farm,0,[]
13371,1337100,Dolphin,6,"['binary search', 'implementation', 'mathematics']"
13372,1337200,Glass Bridge,16,"['data structures', 'segment tree']"
13373,1337300,Rearrange,0,[]
13374,1337400,Cyclic Triangle,5,"['implementation', 'mathematics']"
13375,1337500,Organization,0,[]
13376,1337600,Rune,10,"['sorting', 'string']"
13377,1337700,Dictionary,11,"['data structures', 'set / map by hashing', 'precomputation']"
13378,1337800,Dungeon,0,[]
13379,1337900,Far Far Away,10,"['breadth-first search', 'graph theory', 'graph traversal', 'tree']"
13380,1338000,Found,15,"['exponentiation by squaring', 'graph theory', 'mathematics']"
13381,1338100,Jump,0,[]
13382,1338200,Lab,8,['dynamic programming']
13383,1338300,Oil,0,[]
13384,1338400,Pry Sequence Transformation,0,[]
13385,1338500,Square,8,"['arbitrary precision / big integers', 'dynamic programming', 'mathematics']"
13386,1338600,Tree Count,14,"['tree', 'tree isomorphism']"
13387,1338700,Water Pump,0,[]
13388,1338800,Who Feels Lucky,0,[]
13389,1338900,RMQ,0,[]
13390,1339000,그래프 클릭,0,[]
13391,1339100,특별한 표,22,"['combinatorics', 'inclusion and exclusion', 'mathematics']"
13392,1339200,방법을 출력하지 않는 숫자 맞추기,15,['dynamic programming']
13393,1339300,스타트링크 알고리즘 멤버십,22,"['dynamic programming', 'maximum flow', 'hungarian', 'minimum cost maximum flow']"
13394,1339400,여행,0,[]
13395,1339500,팰린드롬 행렬,0,[]
13396,1339600,카르테시안 트리 2,19,['dynamic programming']
13397,1339700,구간 나누기 2,12,"['binary search', 'parametric search']"
13398,1339800,연속합 2,11,['dynamic programming']
13399,1339900,Rearranging a Sequence,7,"['implementation', 'sorting']"
13400,1340000,Quality of Check Digits,9,"['bruteforcing', 'implementation']"
13401,1340100,Distribution Center,14,['sorting']
13402,1340200,Hidden Anagrams,14,"['data structures', 'hashing', 'string', 'set / map by trees']"
13403,1340300,Infallibly Crack Perplexing Cryptarithm,20,[]
13404,1340400,Three Kingdoms of Bourdelot,21,[]
13405,1340500,Placing Medals on a Binary Tree,19,"['mathematics', 'number theory']"
13406,1340600,Animal Companion in Maze,21,[]
13407,1340700,Skinny Polygon,22,"['constructive', 'extended euclidean algorithm', 'mathematics', 'number theory']"
13408,1340800,Cover the Polygon with Your Disk,23,[]
13409,1340900,Black and White Boxes,27,"['game theory', 'hackenbush', 'meet in the middle']"
13410,1341000,거꾸로 구구단,4,"['bruteforcing', 'mathematics']"
13411,1341100,하늘에서 정의가 빗발친다!,7,"['geometry', 'pythagoras theorem', 'sorting']"
13412,1341200,서로소 쌍,9,"['euclidean algorithm', 'mathematics', 'number theory']"
13413,1341300,오셀로 재배치,7,"['greedy', 'string']"
13414,1341400,수강신청,8,"['data structures', 'set / map by hashing', 'implementation']"
13415,1341500,정렬 게임,15,"['ad-hoc', 'data structures', 'deque', 'stack']"
13416,1341600,주식 투자,3,"['arithmetic', 'implementation', 'mathematics']"
13417,1341700,카드 문자열,7,"['data structures', 'greedy', 'string']"
13418,1341800,학교 탐방하기,13,"['graph theory', 'minimum spanning tree']"
13419,1341900,탕수육,4,"['implementation', 'simulation', 'string']"
13420,1342000,사칙연산,4,"['arithmetic', 'implementation', 'mathematics', 'string']"
13421,1342100,국민 랜드,14,['ternary search']
13422,1342200,도둑,11,"['sliding window', 'two-pointer']"
13423,1342300,Three Dots,9,"['binary search', 'bruteforcing', 'data structures']"
13424,1342400,비밀 모임,12,"[""dijkstra's"", 'floyd–warshall', 'graph theory']"
13425,1342500,최대 이분 매칭,0,[]
13426,1342600,단순 경로의 수열의 도치,20,[]
13427,1342700,레이저 타워,21,"['maximum flow', 'max-flow min-cut theorem']"
13428,1342800,배열의 합,22,"['fast fourier transform', 'mathematics', 'square root decomposition']"
13429,1342900,동전 교환,0,[]
13430,1343000,합 구하기,16,"['combinatorics', 'exponentiation by squaring', 'mathematics', 'modular multiplicative inverse', 'number theory']"
13431,1343100,트리 문제,22,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'tree']"
13432,1343200,좋은 부분 문자열,22,"['binary search', 'data structures', 'segment tree', 'string', 'suffix array and lcp array']"
13433,1343300,기하 문제,15,"['bruteforcing', 'dynamic programming', 'geometry']"
13434,1343400,영역의 개수,0,[]
13435,1343500,피라미드 수열,18,"['mathematics', 'number theory']"
13436,1343600,정다각형 선분,0,[]
13437,1343700,슈퍼 나이트,0,[]
13438,1343800,계단 오르기 운동,19,"['dynamic programming', 'knuth–morris–pratt', 'string']"
13439,1343900,팩토리얼과 점화식,17,"['mathematics', 'number theory']"
13440,1344000,귀,0,[]
13441,1344100,마법의 나무,20,"['bipartite matching', 'graph theory']"
13442,1344200,메탈은 인생,23,[]
13443,1344300,바둑,0,[]
13444,1344400,보드 색칠하기,23,"['bipartite matching', 'maximum flow']"
13445,1344500,부분 수열 XOR,18,"['data structures', 'tree', 'trie']"
13446,1344600,새로운 가게 이름,0,[]
13447,1344700,그래프 최대 매칭,24,['general matching']
13448,1344800,SW 역량 테스트,18,"['dynamic programming', 'greedy', 'knapsack', 'sorting']"
13449,1344900,Alan Turing,0,[]
13450,1345000,László Babai,5,"['ad-hoc', 'bruteforcing', 'implementation']"
13451,1345100,Stephen Cook,0,[]
13452,1345200,Edsger Dijkstra,0,[]
13453,1345300,Jack Edmonds,22,"['data structures', 'graph theory', 'minimum spanning tree', 'segment tree', 'sweeping']"
13454,1345400,Robert Floyd,0,[]
13455,1345500,Kurt Gödel,0,[]
13456,1345600,Richard Hamming,4,['implementation']
13457,1345700,Oracle,0,[]
13458,1345800,시험 감독,4,"['arithmetic', 'mathematics']"
13459,1345900,구슬 탈출,14,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
13460,1346000,구슬 탈출 2,15,"['breadth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
13461,1346100,Airport Logistics,24,"['calculus', ""dijkstra's"", 'geometry', 'graph theory', 'mathematics']"
13462,1346200,Battle Simulation,4,"['implementation', 'string']"
13463,1346300,Brexit,11,"['breadth-first search', 'graph theory', 'graph traversal']"
13464,1346400,Bridge Automation,14,['dynamic programming']
13465,1346500,Charles in Charge,15,"['binary search', ""dijkstra's"", 'graph theory']"
13466,1346600,Endless Turning,22,"['geometry', 'implementation']"
13467,1346700,Manhattan Positioning System,18,"['geometry', 'line segment intersection check']"
13468,1346800,Multiplying Digits,20,"['dynamic programming', 'mathematics', 'number theory']"
13469,1346900,Older Brother,8,"['mathematics', 'number theory', 'primality test']"
13470,1347000,Programming Tutors,18,"['binary search', 'bipartite matching', 'parametric search']"
13471,1347100,Safe Racing,18,"['combinatorics', 'dynamic programming', 'mathematics']"
13472,1347200,Sticky Situation,7,"['bruteforcing', 'geometry', 'greedy', 'mathematics', 'sorting']"
13473,1347300,Anniversary Cake,7,"['constructive', 'geometry', 'mathematics']"
13474,1347400,Boys and Girls,21,"['case work', 'constructive']"
13475,1347500,CodeCoder vs TopForces,16,"['depth-first search', 'graph theory', 'graph traversal', 'sorting']"
13476,1347600,Digital Addition,18,"['backtracking', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'implementation']"
13477,1347700,Easy Reading,21,[]
13478,1347800,Folding,6,['mathematics']
13479,1347900,Gangsters in Central City,18,[]
13480,1348000,Hard Cuts,28,"['dynamic programming', 'mathematics', 'precomputation']"
13481,1348100,Integral Polygons,17,"['geometry', 'prefix sum']"
13482,1348200,Java2016,19,"['constructive', 'mathematics', 'probability theory']"
13483,1348300,King’s Heir,5,['implementation']
13484,1348400,Tarifa,3,"['arithmetic', 'implementation', 'mathematics']"
13485,1348500,Jetpack,14,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'simulation']"
13486,1348600,Cezar,16,"['graph theory', 'topological sorting']"
13487,1348700,Mag,20,"['dynamic programming', 'dynamic programming on trees', 'greedy', 'mathematics', 'tree']"
13488,1348800,Kralj,19,"['data structures', 'greedy', 'set / map by trees']"
13489,1348900,Vještica,18,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
13490,1349000,Cleaning Stations,5,"['arithmetic', 'mathematics']"
13491,1349100,Sand Tiger Shark,11,"['depth-first search', 'graph theory', 'graph traversal']"
13492,1349200,Octopus,0,[]
13493,1349300,Sea Dragons,0,[]
13494,1349400,Manta Ray,0,[]
13495,1349500,Dolphins,0,[]
13496,1349600,The Merchant of Venice,2,"['arithmetic', 'implementation', 'mathematics']"
13497,1349700,Sonnets,6,"['implementation', 'parsing', 'string']"
13498,1349800,Romeo & Juliet,12,"['floyd–warshall', 'graph theory']"
13499,1349900,Hamlet,11,"['dynamic programming', 'mathematics', 'probability theory']"
13500,1350000,A Midsummer Night’s Dream,9,"['implementation', 'simulation']"
13501,1350100,Macbeth,12,['greedy']
13502,1350200,단어퍼즐 2,14,"['breadth-first search', 'bitmask', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'implementation', 'precomputation', 'string', 'tree', 'trie']"
13503,1350300,최소 체인 커버,19,"['bipartite matching', 'graph theory']"
13504,1350400,XOR 합,18,"['data structures', 'tree', 'trie']"
13505,1350500,두 수 XOR,18,"['data structures', 'tree', 'trie']"
13506,1350600,카멜레온 부분 문자열,17,"['knuth–morris–pratt', 'string']"
13507,1350700,좋은 부분 문자열의 개수,13,"['hashing', 'string']"
13509,1350900,가장 가까운 두 점 2,20,"['value / coordinate compression', 'data structures', 'geometry', 'segment tree']"
13510,1351000,트리와 쿼리 1,20,"['data structures', 'heavy-light decomposition', 'segment tree', 'tree']"
13511,1351100,트리와 쿼리 2,18,"['data structures', 'lowest common ancestor', 'sparse table', 'tree']"
13512,1351200,트리와 쿼리 3,20,"['data structures', 'heavy-light decomposition', 'segment tree', 'tree']"
13513,1351300,트리와 쿼리 4,23,"['센트로이드', 'centroid decomposition', 'divide and conquer', 'tree']"
13514,1351400,트리와 쿼리 5,22,"['센트로이드', 'centroid decomposition', 'data structures', 'divide and conquer', 'priority queue', 'tree']"
13515,1351500,트리와 쿼리 6,25,"['data structures', 'heavy-light decomposition', 'segment tree', 'tree']"
13516,1351600,트리와 쿼리 7,26,"['data structures', 'depth-first search', 'graph theory', 'graph traversal', 'heavy-light decomposition', 'segment tree', 'square root decomposition', 'tree']"
13517,1351700,트리와 쿼리 8,21,"['data structures', 'lowest common ancestor', 'persistent segment tree', 'segment tree', 'tree']"
13518,1351800,트리와 쿼리 9,22,"['euler tour technique', 'lowest common ancestor', ""mo's"", 'offline queries', 'tree']"
13519,1351900,트리와 쿼리 10,23,"['data structures', 'heavy-light decomposition', 'segment tree with lazy propagation', 'segment tree', 'tree']"
13520,1352000,Taxing Problem,0,[]
13521,1352100,Build a Boat,0,[]
13522,1352200,Compiler,6,['bruteforcing']
13523,1352300,The Darkness,0,[]
13524,1352400,Elegant Showroom,12,"[""dijkstra's"", 'graph theory']"
13525,1352500,Fridge,5,[]
13526,1352600,Gondolas,0,[]
13527,1352700,Rhyming Slang,0,[]
13528,1352800,Grass Seed Inc.,3,"['arithmetic', 'mathematics']"
13529,1352900,Jack and the Beanbag,0,[]
13530,1353000,Compensation,0,[]
13531,1353100,Secret Santa,12,"['ad-hoc', 'combinatorics', 'mathematics', 'precomputation', 'probability theory']"
13532,1353200,악마의 수열,15,['mathematics']
13533,1353300,꽃 구매하기,18,"['combinatorics', 'inclusion and exclusion', 'mathematics']"
13534,1353400,생일 파티,0,[]
13535,1353500,괄호 부분 문자열,0,[]
13536,1353600,괄호 부분 문자열 쿼리,19,"['data structures', 'segment tree']"
13537,1353700,수열과 쿼리 1,18,"['data structures', 'merge sort tree', 'segment tree', 'sorting']"
13538,1353800,XOR 쿼리,22,"['data structures', 'persistent segment tree', 'segment tree']"
13539,1353900,트리와 쿼리 11,25,"['link/cut tree', 'tree']"
13540,1354000,팰린드롬과 쿼리,24,[]
13541,1354100,K번째 부분 문자열,18,"['breadth-first search', 'data structures', 'graph theory', 'graph traversal', 'hashing', 'priority queue', 'string']"
13542,1354200,우표 구매하기,20,"['combinatorics', 'generating function', 'lucas theorem', 'mathematics', 'number theory']"
13543,1354300,수열과 쿼리 2,24,"['splay tree', 'tree']"
13544,1354400,수열과 쿼리 3,18,"['data structures', 'merge sort tree', 'segment tree', 'sorting']"
13545,1354500,수열과 쿼리 0,22,"[""mo's"", 'offline queries', 'prefix sum', 'square root decomposition']"
13546,1354600,수열과 쿼리 4,21,"[""mo's"", 'offline queries', 'square root decomposition']"
13547,1354700,수열과 쿼리 5,19,"[""mo's"", 'offline queries']"
13548,1354800,수열과 쿼리 6,20,"[""mo's"", 'offline queries']"
13549,1354900,숨바꼭질 3,11,"['0-1 bfs', 'breadth-first search', ""dijkstra's"", 'graph theory', 'graph traversal']"
13550,1355000,수열과 쿼리 7,22,"[""mo's"", 'offline queries', 'prefix sum', 'square root decomposition']"
13551,1355100,원과 쿼리,22,"['data structures', 'geometry', 'segment tree', 'square root decomposition']"
13552,1355200,구와 쿼리,5,"['geometry', 'geometry; 3d', 'pythagoras theorem']"
13553,1355300,수열과 쿼리 8,20,"['data structures', ""mo's"", 'offline queries', 'segment tree']"
13554,1355400,수열과 쿼리 9,22,"['data structures', ""mo's"", 'offline queries', 'segment tree', 'square root decomposition']"
13555,1355500,증가하는 부분 수열,17,"['data structures', 'dynamic programming', 'segment tree']"
13556,1355600,증가하는 부분 수열 2,20,"['data structures', 'dynamic programming', 'longest increasing sequence in o(n log n)', 'segment tree']"
13557,1355700,수열과 쿼리 10,20,"['data structures', 'segment tree']"
13558,1355800,등차수열의 개수,13,"['combinatorics', 'mathematics', 'prefix sum']"
13559,1355900,Bridge Park,24,[]
13560,1356000,축구 게임,16,"['greedy', 'mathematics']"
13561,1356100,House Rental,16,"['binary search', 'parametric search', 'sweeping', 'two-pointer']"
13562,1356200,Independent Edges,0,[]
13563,1356300,Memory Cell,0,[]
13564,1356400,Meteorites,0,[]
13565,1356500,침투,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
13566,1356600,Power Supply,0,[]
13567,1356700,로봇,7,"['implementation', 'simulation']"
13568,1356800,Room,0,[]
13569,1356900,Rounding,22,"['circulation', 'maximum flow']"
13570,1357000,Virus,0,[]
13571,1357100,나이트의 이동,22,"['berlekamp–massey', 'chinese remainder theorem', 'mathematics', 'number theory', 'precomputation']"
13572,1357200,나이트의 이동 2,23,"['berlekamp–massey', 'chinese remainder theorem', 'exponentiation by squaring', 'linear algebra', 'mathematics', 'number theory', 'precomputation']"
13573,1357300,동전 뒤집기 3,22,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'fast fourier transform', 'mathematics']"
13574,1357400,수열 변환,25,"['fast fourier transform', 'mathematics']"
13575,1357500,보석 가게,20,"['exponentiation by squaring', 'fast fourier transform', 'mathematics']"
13576,1357600,Prefix와 Suffix,19,"['string', 'suffix array and lcp array', 'z']"
13577,1357700,Vôlei Marciano,0,[]
13578,1357800,Rouba-Monte,12,['implementation']
13579,1357900,Série de Tubos,0,[]
13580,1358000,Andando no tempo,2,"['implementation', 'mathematics']"
13581,1358100,Batata quente,0,[]
13582,1358200,Containers,0,[]
13583,1358300,Divisores,9,"['mathematics', 'number theory', 'sorting']"
13584,1358400,Estatística hexa,0,[]
13585,1358500,Fundindo árvores,0,[]
13586,1358600,Go--,11,"['bruteforcing', 'prefix sum']"
13587,1358700,huaauhahhuahau,4,['string']
13588,1358800,Isósceles,9,['implementation']
13589,1358900,Jogos olímpicos,0,[]
13590,1359000,Kit de encolhimento de polígonos,0,[]
13591,1359100,Ladrilhos,0,[]
13592,1359200,Mário,0,[]
13593,1359300,Histórico de Comandos,6,"['dynamic programming', 'implementation']"
13594,1359400,Desempilhando Caixas,7,"['ad-hoc', 'implementation']"
13595,1359500,Mania de Par,14,"[""dijkstra's"", 'graph theory']"
13596,1359600,Bolsa de Valores,11,['dynamic programming']
13597,1359700,Tri-du,2,['implementation']
13598,1359800,Quebra-cabeça,0,[]
13599,1359900,Espiral,0,[]
13600,1360000,Fatorial,9,"['dynamic programming', 'greedy', 'mathematics']"
13601,1360100,Guardiões Curiosos,0,[]
13602,1360200,Praça do Retângulo,0,[]
13603,1360300,Ominobox,0,[]
13604,1360400,Jogo de Estratégia,4,['implementation']
13605,1360500,Palíndromo,0,[]
13606,1360600,Loteria,0,[]
13607,1360700,Onde Estão as Bolhas?,0,[]
13608,1360800,Jogo de Varetas,5,"['greedy', 'implementation']"
13609,1360900,Zak Galou,0,[]
13610,1361000,Volta,3,"['arithmetic', 'bruteforcing', 'mathematics']"
13611,1361100,Baralho Embaralhado,11,"['mathematics', 'permutation cycle decomposition']"
13612,1361200,Confederaćão,0,[]
13613,1361300,Dona Minhoca,0,[]
13614,1361400,Ecologia,16,['dynamic programming']
13615,1361500,Teletransporte,0,[]
13616,1361600,Letras,0,[]
13617,1361700,Handebol,3,['implementation']
13618,1361800,RSA,16,"['euler totient function', 'exponentiation by squaring', 'extended euclidean algorithm', 'mathematics', 'modular multiplicative inverse', 'number theory']"
13619,1361900,Corte,0,[]
13620,1362000,Pizza do Vô Pepe,0,[]
13621,1362100,Olimpíadas,0,[]
13622,1362200,Circuito Bioquímico Digital,5,['implementation']
13623,1362300,Zero or One,2,['implementation']
13624,1362400,Balloon,0,[]
13625,1362500,Boss,13,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
13626,1362600,Folding Machine,0,[]
13627,1362700,Dangerous Dive,4,['implementation']
13628,1362800,Triangles,8,[]
13629,1362900,Lines of Containers,16,"['mathematics', 'permutation cycle decomposition']"
13630,1363000,Buses,10,['dynamic programming']
13631,1363100,Patches,0,[]
13632,1363200,Trucks,0,[]
13633,1363300,O Problema da Parada,0,[]
13634,1363400,Países em Guerra,0,[]
13635,1363500,Concurso de Contos,7,['string']
13636,1363600,Tobogan de bolinhas,0,[]
13637,1363700,Cartões,0,[]
13638,1363800,Coral Perfeito,5,"['greedy', 'implementation', 'mathematics']"
13639,1363900,Elevador Espacial,0,[]
13640,1364000,Perdido na Noite,0,[]
13641,1364100,Grid de Largada,5,"['implementation', 'sorting']"
13642,1364200,Combate ao câncer,0,[]
13643,1364300,Integral,0,[]
13644,1364400,Palavras,0,[]
13645,1364500,Ciclo de Rubik,16,['implementation']
13646,1364600,Estrela,16,"['euler totient function', 'mathematics', 'number theory']"
13647,1364700,Energia × Tempo,0,[]
13648,1364800,MegaDamas,0,[]
13649,1364900,Ácido Ribonucléico Alienígena,0,[]
13650,1365000,Botas perdidas,6,"['data structures', 'implementation', 'stack']"
13651,1365100,Campeonato de SMS,0,[]
13652,1365200,Desvio de rua,0,[]
13653,1365300,Estacionamento,8,"['implementation', 'simulation']"
13654,1365400,Foco,13,"['data structures', 'greedy', 'priority queue']"
13655,1365500,Guarda Costeira,4,"['geometry', 'mathematics', 'pythagoras theorem']"
13656,1365600,"Homem, Elefante e Rato",18,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
13657,1365700,Incidente em Atlântida,0,[]
13658,1365800,Revisão de Contrato,4,['implementation']
13659,1365900,Robô Colecionador,0,[]
13660,1366000,Livro-caixa,0,[]
13661,1366100,Desvio de Rota,0,[]
13662,1366200,Elevador,7,['geometry']
13663,1366300,Fórmula 1,0,[]
13664,1366400,Guerra nas estrelas,0,[]
13665,1366500,Plágio Musical,0,[]
13666,1366600,Ir e Vir,17,"['graph theory', 'strongly connected component']"
13667,1366700,Leitura Ótica,3,['implementation']
13668,1366800,Jogo da Velha,18,"['game theory', 'sprague–grundy theorem']"
13669,1366900,Ataque Fulminante,0,[]
13670,1367000,Alarme Despertador,4,"['arithmetic', 'implementation', 'mathematics']"
13671,1367100,Troca de Cartas,8,['greedy']
13672,1367200,Sub-prime,5,['implementation']
13673,1367300,Dragster,0,[]
13674,1367400,Torres de Telefonia Celular,0,[]
13675,1367500,Registrador de Deslocamento,0,[]
13676,1367600,Escultura a Laser,7,"['data structures', 'stack']"
13677,1367700,Apagando e Ganhando,11,"['data structures', 'greedy', 'stack']"
13678,1367800,Babel,0,[]
13679,1367900,O Salão do Clube,12,"['sorting', 'two-pointer']"
13680,1368000,Dama,5,"['ad-hoc', 'implementation']"
13681,1368100,Bolhas e Baldes,16,"['data structures', 'divide and conquer', 'game theory', 'segment tree', 'sorting']"
13682,1368200,Loop Musical,4,"['bruteforcing', 'implementation']"
13683,1368300,Set,20,[]
13684,1368400,Divisão da Nlogõnia,3,"['case work', 'implementation']"
13685,1368500,Maior Subseqüência Crescente,0,[]
13686,1368600,Vampiros,17,"['data structures', 'dynamic programming', 'mathematics', 'probability theory', 'sparse table']"
13687,1368700,Copa do Mundo,5,"['ad-hoc', 'arithmetic', 'mathematics']"
13688,1368800,Rota Crítica,0,[]
13689,1368900,Amigos ou Inimigos?,0,[]
13690,1369000,Jogo do Bicho,4,"['arithmetic', 'implementation', 'mathematics']"
13691,1369100,Curso Universitário,0,[]
13692,1369200,Redução de Pena,0,[]
13693,1369300,Cubos Coloridos,7,"['implementation', 'sorting']"
13694,1369400,Gerente de Espaço,0,[]
13695,1369500,Tecle & Some,0,[]
13696,1369600,Regata de Cientistas,0,[]
13697,1369700,Piscina,0,[]
13698,1369800,Hawk eyes,3,"['implementation', 'simulation']"
13699,1369900,점화식,7,['dynamic programming']
13700,1370000,완전 범죄,10,"['breadth-first search', 'graph theory', 'graph traversal']"
13701,1370100,중복 제거,12,"['bitmask', 'bit set']"
13702,1370200,이상한 술집,8,['binary search']
13703,1370300,물벼룩의 생존확률,11,['dynamic programming']
13704,1370400,수열과 쿼리 11,20,"[""mo's"", 'offline queries']"
13705,1370500,Ax+Bsin(x)=C,21,"['arbitrary precision / big integers', 'binary search', 'mathematics', 'numerical analysis']"
13706,1370600,제곱근,6,"['arbitrary precision / big integers', 'binary search', 'mathematics']"
13707,1370700,합분해 2,12,"['combinatorics', 'dynamic programming', 'mathematics']"
13708,1370800,모든 점을 포함하는 원,20,"['geometry', 'heuristics', 'minimum enclosing circle']"
13709,1370900,XOR 합 2,18,"['gaussian elimination', 'linear algebra', 'mathematics']"
13710,1371000,XOR 합 3,15,"['bitmask', 'prefix sum']"
13711,1371100,LCS 4,15,['longest increasing sequence in o(n log n)']
13712,1371200,키르히호프의 법칙,17,"['gaussian elimination', 'graph theory', 'linear algebra', 'mathematics', 'physics']"
13713,1371300,문자열과 쿼리,16,"['string', 'z']"
13714,1371400,약수의 개수,24,"['mathematics', 'möbius inversion', 'number theory']"
13715,1371500,순열의 좋은 위치,21,"['dynamic programming', 'graph theory', 'mathematics']"
13716,1371600,피보나치 수열처럼 보이지만...,21,"['berlekamp–massey', 'dynamic programming', 'exponentiation by squaring', 'mathematics']"
13717,1371700,포켓몬 GO,6,['implementation']
13718,1371800,Tavan,7,"['mathematics', 'sorting', 'string']"
13719,1371900,Nizin,13,"['ad-hoc', 'two-pointer']"
13720,1372000,Prosječni,16,"['ad-hoc', 'constructive', 'mathematics']"
13721,1372100,Zamjene,0,[]
13722,1372200,Burza,25,[]
13723,1372300,팩토리얼 분수 방정식,14,"['arbitrary precision / big integers', 'mathematics', 'number theory', 'primality test']"
13724,1372400,3D 쿼리,22,"['fast fourier transform', 'mathematics']"
13725,1372500,RNG,24,"['dynamic programming', 'fast fourier transform', 'kitamasa', 'mathematics']"
13726,1372600,랜덤 소트 2,0,[]
13727,1372700,5차원 구사과 초콜릿,25,"['berlekamp–massey', 'bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'exponentiation by squaring', 'mathematics', 'precomputation']"
13728,1372800,행렬식과 GCD,17,"['linear algebra', 'mathematics']"
13729,1372900,1013 피보나치,22,"['exponentiation by squaring', 'mathematics', 'number theory']"
13730,1373000,좋은 트리의 개수,0,[]
13731,1373100,As Easy as CAB,14,"['graph theory', 'topological sorting']"
13732,1373200,Falling Apples,7,"['implementation', 'two-pointer']"
13733,1373300,Square Deal,9,"['bitmask', 'bruteforcing', 'case work', 'geometry']"
13734,1373400,Buggy Robot,17,"['0-1 bfs', ""dijkstra's"", 'dynamic programming', 'graph theory']"
13735,1373500,Construction Toy,21,"['bruteforcing', 'geometry']"
13736,1373600,Around and Around We Go,0,[]
13737,1373700,The Calculus of Ada,10,['mathematics']
13738,1373800,Ghostbusters 2,19,"['2-sat', 'binary search', 'graph theory', 'strongly connected component']"
13739,1373900,Postal Delivery,14,"['greedy', 'sorting']"
13740,1374000,Windy Path,20,"['ad-hoc', 'constructive', 'geometry', 'greedy']"
13741,1374100,Alphabet,10,"['dynamic programming', 'string']"
13742,1374200,Base Sums,24,['mathematics']
13743,1374300,Enclosure,24,[]
13744,1374400,Illumination,17,"['2-sat', 'graph theory', 'strongly connected component']"
13745,1374500,InTents,0,[]
13746,1374600,Islands,9,"['graph theory', 'graph traversal']"
13747,1374700,Paint,13,"['binary search', 'data structures', 'dynamic programming', 'set / map by trees']"
13748,1374800,Periodic Strings,6,"['bruteforcing', 'string']"
13749,1374900,Water,18,['maximum flow']
13750,1375000,Zigzag,9,[]
13751,1375100,Barbells,12,"['backtracking', 'bitmask', 'bruteforcing', 'data structures', 'set / map by hashing']"
13752,1375200,히스토그램,3,['implementation']
13753,1375300,Project Panoptes,0,[]
13754,1375400,Mismatched Socks,13,['greedy']
13755,1375500,It Takes Three,8,['bruteforcing']
13756,1375600,완벽한 구사과의 집합,24,"['dynamic programming', 'linear algebra', 'mathematics']"
13757,1375700,빼빼로 데이,0,[]
13758,1375800,RNG 2,22,"['divide and conquer', 'exponentiation by squaring', 'fast fourier transform', 'mathematics']"
13759,1375900,&,0,[]
13760,1376000,Appropriate Coordinate Map,0,[]
13761,1376100,Banking II,0,[]
13762,1376200,Calculating Taxes,0,[]
13763,1376300,Dropped Water Bottle,0,[]
13764,1376400,Earl’s Extremely Efficient Encryption,7,['sorting']
13765,1376500,Flipping Switches,0,[]
13766,1376600,Game Moves,11,['mathematics']
13767,1376700,Hiking,0,[]
13768,1376800,Individually Customised Pop-up Cards,0,[]
13769,1376900,Jumping Impala,0,[]
13770,1377000,Krypton Stadiums,0,[]
13771,1377100,Presents,4,"['implementation', 'sorting']"
13772,1377200,Holes,4,"['implementation', 'string']"
13773,1377300,Olympic Games,3,['implementation']
13774,1377400,Palindromes,4,"['bruteforcing', 'implementation', 'string']"
13775,1377500,Virus,4,['string']
13776,1377600,Alpha Puzzle,5,"['implementation', 'string']"
13777,1377700,Hunt The Rabbit,5,"['binary search', 'implementation']"
13778,1377800,Parliamentary Rankings,8,['implementation']
13779,1377900,Obfustication,0,[]
13780,1378000,Rasterization,10,"['geometry', 'mathematics']"
13781,1378100,IK Robot,0,[]
13782,1378200,Pokemon,0,[]
13783,1378300,Hashing,0,[]
13784,1378400,What Next,0,[]
13785,1378500,The Resistance,0,[]
13786,1378600,Rtetris,0,[]
13787,1378700,Infinity Maze,14,"['graph theory', 'graph traversal', 'implementation', 'pigeonhole principle', 'simulation']"
13788,1378800,Butterfly,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
13789,1378900,Chinese Classics,0,[]
13790,1379000,Revenge of Champernowne Constant,0,[]
13791,1379100,Full Text Search,0,[]
13792,1379200,Mysterious Maze,0,[]
13793,1379300,Number Sorting,18,[]
13794,1379400,Sky Jump,0,[]
13795,1379500,Mobile Network,0,[]
13796,1379600,Blue Forest,0,[]
13797,1379700,Era Name,6,"['implementation', 'sorting']"
13798,1379800,Step Step Evolution,9,"['implementation', 'simulation']"
13799,1379900,Dungeon Quest II,0,[]
13800,1380000,Dice Room,0,[]
13801,1380100,Alice and Bomb,0,[]
13802,1380200,Two-Wheel Buggy,0,[]
13803,1380300,Camera Control,0,[]
13804,1380400,Road Construction,15,"[""dijkstra's"", 'graph theory', 'greedy']"
13805,1380500,Operator,0,[]
13806,1380600,Merry Christmas,18,"['bipartite matching', 'maximum flow', 'floyd–warshall', 'graph theory']"
13807,1380700,Whist,10,"['implementation', 'simulation']"
13808,1380800,For the Peace,11,"['data structures', 'greedy', 'implementation', 'simulation', 'stack']"
13809,1380900,Champernowne Constant,12,"['ad-hoc', 'dynamic programming', 'implementation', 'mathematics', 'parametric search']"
13810,1381000,Futon,14,"['breadth-first search', 'data structures', 'depth-first search', 'graph theory', 'graph traversal', 'set / map by hashing']"
13811,1381100,Safe Area,0,[]
13812,1381200,Water Tank,16,['binary search']
13813,1381300,Neko’s Treasure,0,[]
13814,1381400,Eleven Lover,13,"['dynamic programming', 'mathematics', 'number theory']"
13815,1381500,Crystal Jails,0,[]
13816,1381600,Cave Explorer,0,[]
13817,1381700,Everlasting...?,9,"['mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
13818,1381800,Headstrong Student,10,"['implementation', 'mathematics']"
13819,1381900,Dig or Climb,0,[]
13820,1382000,Rotation Estimation,0,[]
13821,1382100,Optimal Rest,0,[]
13822,1382200,Controlled Tournament,0,[]
13823,1382300,Entangled Tree,0,[]
13824,1382400,Ramen Shop,0,[]
13825,1382500,Cousin’s Aunt,0,[]
13826,1382600,Colony Maintenance,0,[]
13827,1382700,Space Coconut Crab II,8,"['bruteforcing', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
13828,1382800,Sort the Panels,0,[]
13829,1382900,Disarmament of the Units,0,[]
13830,1383000,So Sleepy,0,[]
13831,1383100,Alice in Foxland,0,[]
13832,1383200,Lying about Your Age,0,[]
13833,1383300,Turn Polygons,0,[]
13834,1383400,Robots’ Crash,0,[]
13835,1383500,Linear Ether Geometry,0,[]
13836,1383600,Ruins,0,[]
13837,1383700,Hyper Rock-Scissors-Paper,0,[]
13838,1383800,Online Quiz System,0,[]
13839,1383900,Rock Man,0,[]
13840,1384000,Autocorrelation Function,19,"['calculus', 'mathematics', 'sweeping']"
13841,1384100,It Prefokery Pio,15,['dynamic programming']
13842,1384200,Traffic,0,[]
13843,1384300,Restriction Enzyme,0,[]
13844,1384400,The Extreme Slalom,0,[]
13845,1384500,Blackjack,0,[]
13846,1384600,Eight Princes,0,[]
13847,1384700,Geometry?! Why Not??,12,"['geometry', 'mathematics']"
13848,1384800,나누는 자가 지배한다,14,['backtracking']
13849,1384900,Reading a Chord,0,[]
13850,1385000,University Rankings,15,"['dynamic programming', 'graph theory', 'topological sorting']"
13851,1385100,Gather on the Clock,0,[]
13852,1385200,Tiling Polygons,0,[]
13853,1385300,Light The Room,0,[]
13854,1385400,트리와 소수,23,"['센트로이드', 'centroid decomposition', 'combinatorics', 'divide and conquer', 'fast fourier transform', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes', 'tree']"
13855,1385500,Three Squares,19,"['backtracking', 'binary search', 'parametric search']"
13856,1385600,Favorite music,22,[]
13857,1385700,Castle,18,"['knuth–morris–pratt', 'string']"
13858,1385800,Reading Digits,5,"['implementation', 'string']"
13859,1385900,Exam,0,[]
13860,1386000,Letters,11,[]
13861,1386100,Pokemons,0,[]
13862,1386200,Pub crawl,0,[]
13863,1386300,Cubes,18,[]
13864,1386400,Marathon,0,[]
13865,1386500,Cutting,0,[]
13866,1386600,팀 나누기,2,"['arithmetic', 'implementation', 'mathematics']"
13867,1386700,Back to the Future,19,['graph theory']
13868,1386800,Counting Self-Rotating Subsets,17,"['combinatorics', 'data structures', 'geometry', 'set / map by hashing', 'mathematics', 'set / map by trees']"
13869,1386900,Dating On-Line,10,"['geometry', 'greedy', 'area of a polygon']"
13870,1387000,Emission Spectrum,21,"['data structures', 'persistent segment tree', 'segment tree']"
13871,1387100,Farm robot,3,"['implementation', 'simulation']"
13872,1387200,Game of Matchings,19,"['hashing', 'knuth–morris–pratt', 'string']"
13873,1387300,Hotel Rewards,16,"['data structures', 'greedy', 'priority queue']"
13874,1387400,Internet Trouble,0,[]
13875,1387500,Just in Time,14,"['mathematics', 'number theory', 'primality test']"
13876,1387600,Kill the Werewolf,18,['maximum flow']
13877,1387700,이건 무슨 진법이지?,4,['mathematics']
13878,1387800,FBI Universal Control Numbers,6,['string']
13879,1387900,m-ary Partitions,11,['dynamic programming']
13880,1388000,A Rational Sequence (Take 3),9,"['data structures', 'stack']"
13881,1388100,Permutation Descent Counts,13,"['combinatorics', 'dynamic programming', 'mathematics']"
13882,1388200,Tight-Fit Sudoku,0,[]
13883,1388300,Magical Mystery Knight’s Tour,0,[]
13884,1388400,삭삽 정렬,10,"['greedy', 'sorting']"
13886,1388600,Smoothed Gardens,0,[]
13887,1388700,수열과 쿼리 12,27,"['data structures', 'multidimensional segment tree', 'offline queries', 'segment tree', 'splay tree', 'tree']"
13888,1388800,WSI Extreme,0,[]
13889,1388900,Average,18,"['combinatorics', 'dynamic programming', ""fermat's little theorem"", 'inclusion and exclusion', 'mathematics', 'number theory']"
13890,1389000,Big Bang,19,"['mathematics', 'möbius inversion', 'number theory']"
13891,1389100,Find C,18,"['extended euclidean algorithm', 'mathematics', 'number theory']"
13892,1389200,ACM Tax,21,"['data structures', 'lowest common ancestor', ""mo's"", 'offline queries', 'persistent segment tree', 'segment tree', 'tree']"
13893,1389300,Dictionary Game,21,"['data structures', 'game theory', 'sprague–grundy theorem', 'string', 'tree', 'trie']"
13894,1389400,Binary Strings,18,[]
13895,1389500,Witcher Potion,15,[]
13896,1389600,Sky Tax,18,"['lowest common ancestor', 'tree']"
13897,1389700,Printing Press,25,"['maximum flow', 'linear programming', 'minimum cost maximum flow']"
13898,1389800,Expected Number of Connected Components,0,[]
13899,1389900,Coordinates,11,"['graph theory', 'graph traversal']"
13900,1390000,순서쌍의 곱의 합,7,"['mathematics', 'prefix sum']"
13901,1390100,로봇,8,"['implementation', 'simulation']"
13902,1390200,개업 2,12,['dynamic programming']
13903,1390300,출근,10,"['breadth-first search', 'graph theory', 'graph traversal']"
13904,1390400,과제,13,"['data structures', 'greedy', 'priority queue', 'sorting']"
13905,1390500,세부,12,"['data structures', 'disjoint set', 'graph theory', 'graph traversal', 'minimum spanning tree']"
13906,1390600,대문자,18,['dynamic programming']
13907,1390700,세금,17,"[""dijkstra's"", 'dynamic programming', 'graph theory']"
13908,1390800,비밀번호,9,['bruteforcing']
13909,1390900,창문 닫기,6,"['mathematics', 'number theory']"
13910,1391000,개업,11,['dynamic programming']
13911,1391100,집 구하기,14,"[""dijkstra's"", 'graph theory']"
13912,1391200,외계 생물,15,"['combinatorics', 'dynamic programming', 'mathematics']"
13913,1391300,숨바꼭질 4,12,"['breadth-first search', 'graph theory', 'graph traversal']"
13914,1391400,Aerial Archeology,0,[]
13915,1391500,현수의 열기구 교실,8,"['bitmask', 'data structures', 'set / map by hashing', 'sorting', 'set / map by trees']"
13916,1391600,Cable Connection,0,[]
13917,1391700,Rotating Display,0,[]
13918,1391800,Fence,0,[]
13919,1391900,Tree Stands,0,[]
13920,1392000,Orchard Division,0,[]
13921,1392100,"It’s Raining, Man",0,[]
13922,1392200,Suspicious Samples,0,[]
13923,1392300,오버워치 월드컵,7,[]
13924,1392400,접미사 배열 3,0,[]
13925,1392500,수열과 쿼리 13,20,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
13926,1392600,"gcd(n, k) = 1",21,"['euler totient function', 'mathematics', 'miller–rabin', 'number theory', 'pollard rho', 'primality test']"
13927,1392700,수열과 쿼리 14,24,"['binary search', 'data structures', 'multidimensional segment tree', 'persistent segment tree', 'segment tree']"
13928,1392800,Arranging Hat,20,['dynamic programming']
13929,1392900,British Menu,20,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal', 'strongly connected component']"
13930,1393000,Careful Ascent,6,"['implementation', 'mathematics']"
13931,1393100,Driving in Optimistan,0,[]
13932,1393200,Exam Redistribution,8,"['greedy', 'sorting']"
13933,1393300,Free Weights,10,['binary search']
13934,1393400,Gotta Nudge ’Em All,0,[]
13935,1393500,Hamiltonian Hypercube,9,"['bitmask', 'mathematics']"
13936,1393600,Iron and Coal,14,"['breadth-first search', 'graph theory', 'graph traversal']"
13937,1393700,Jupiter Orbiter,20,"['maximum flow', 'greedy']"
13938,1393800,Kiwi Trees,21,['geometry']
13939,1393900,Imena,4,"['parsing', 'string']"
13940,1394000,Pohlepko,14,"['breadth-first search', 'graph theory', 'graph traversal']"
13941,1394100,Kronican,16,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
13942,1394200,Kvalitetni,0,[]
13943,1394300,Zoltan,21,[]
13944,1394400,Meksikanac,25,"['fast fourier transform', 'geometry', 'mathematics']"
13945,1394500,Appearance Analysis,9,"['bruteforcing', 'implementation', 'string']"
13946,1394600,Bipartite Blanket,22,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield', 'graph theory', ""hall's theorem""]"
13947,1394700,Convex Contour,17,"['case work', 'geometry']"
13948,1394800,Dancing Disks,25,['dynamic programming']
13949,1394900,쉬운 문제,23,"['arbitrary precision / big integers', 'breadth-first search', 'graph theory', 'graph traversal', 'mathematics', 'number theory']"
13950,1395000,Free Figurines,13,"['ad-hoc', 'graph theory', 'tree']"
13951,1395100,Geohash Grid,0,[]
13952,1395200,Hangar Hurdles,21,"['binary search', 'data structures', 'disjoint set', 'parallel binary search', 'prefix sum']"
13953,1395300,Invisible Integers,27,"['bitmask', 'dynamic programming']"
13954,1395400,Jazz Journey,21,['greedy']
13955,1395500,Key Knocking,14,"['case work', 'constructive', 'mathematics']"
13956,1395600,Lost Logic,23,"['2-sat', 'ad-hoc', 'constructive', 'graph theory', 'strongly connected component']"
13957,1395700,Within Arm's Reach,20,"['constructive', 'geometry']"
13958,1395800,Bribing Eve,19,"['ad-hoc', 'geometry', 'mathematics', 'sweeping']"
13959,1395900,Candle Box,6,"['bruteforcing', 'implementation', 'simulation']"
13960,1396000,Dinner Bet,18,"['dynamic programming', 'mathematics', 'probability theory']"
13961,1396100,Passwords,22,"['aho-corasick', 'data structures', 'string', 'tree', 'trie']"
13962,1396200,Performance Review,18,"['data structures', 'euler tour technique', 'segment tree', 'tree']"
13963,1396300,Cairo Corridor,22,"['graph theory', 'graph traversal', 'implementation']"
13964,1396400,Pascal's Hyper-Pyramids,14,"['backtracking', 'combinatorics', 'dynamic programming', 'mathematics']"
13965,1396500,The White Rabbit Pocket Watch,19,"['gaussian elimination', 'linear algebra', 'mathematics']"
13966,1396600,Risky Lottery,0,[]
13967,1396700,Balls and Needles,11,"['data structures', 'depth-first search', 'geometry', 'graph theory', 'graph traversal']"
13968,1396800,Conference,0,[]
13969,1396900,Hacker,0,[]
13970,1397000,Power towers,21,"['euler totient function', 'exponentiation by squaring', 'mathematics', 'number theory']"
13971,1397100,LEFKARITIKA,0,[]
13972,1397200,Cruise,0,[]
13973,1397300,Acrobat,0,[]
13974,1397400,파일 합치기 2,19,"['dynamic programming', 'knuth optimization']"
13975,1397500,파일 합치기 3,12,"['data structures', 'greedy', 'priority queue']"
13976,1397600,타일 채우기 2,16,"['dynamic programming', 'exponentiation by squaring', 'mathematics']"
13977,1397700,이항 계수와 쿼리,15,"['combinatorics', 'exponentiation by squaring', ""fermat's little theorem"", 'mathematics', 'modular multiplicative inverse', 'number theory']"
13978,1397800,Cameras,9,"['data structures', 'greedy', 'sliding window', 'set / map by trees']"
13979,1397900,Contest Strategy,0,[]
13980,1398000,Maximum Islands,19,['bipartite matching']
13981,1398100,Postman,15,['greedy']
13982,1398200,Shopping,18,"['data structures', 'mathematics', 'offline queries', 'sparse table']"
13983,1398300,Tournament Wins,17,"['bayes theorem', 'mathematics', 'probability theory']"
13984,1398400,Contest Score,9,"['data structures', 'implementation', 'priority queue', 'simulation']"
13985,1398500,Equality,2,"['arithmetic', 'mathematics', 'string']"
13986,1398600,Gravity,7,['implementation']
13987,1398700,Six Sides,4,"['arithmetic', 'bruteforcing', 'combinatorics', 'mathematics']"
13988,1398800,비무장 지대,24,"['data structures', 'dynamic programming', 'graph theory', 'strongly connected component', 'segment tree']"
13989,1398900,Abbreviation,14,"['parsing', 'string']"
13990,1399000,Binary Code,24,"['2-sat', 'data structures', 'graph theory', 'strongly connected component', 'string', 'tree', 'trie']"
13991,1399100,Cactus Construction,21,"['cactus', 'constructive', 'data structures', 'depth-first search', 'graph theory', 'graph traversal']"
13992,1399200,Delight for a Cat,25,"['maximum flow', 'minimum cost maximum flow']"
13993,1399300,Expect to Wait,19,"['offline queries', 'sweeping']"
13994,1399400,Foreign Postcards,14,"['dynamic programming', 'mathematics', 'prefix sum', 'probability theory']"
13995,1399500,Game on Graph,25,"['breadth-first search', 'depth-first search', 'game theory', 'graph theory', 'graph traversal']"
13996,1399600,Hard Refactoring,8,[]
13998,1399800,Jenga Boom,19,['prefix sum']
13999,1399900,Kids Designing Kids,23,[]
14000,1400000,List of Primes,21,"['dynamic programming', 'recursion']"
14001,1400100,Mole Tunnels,23,"['maximum flow', 'minimum cost maximum flow', 'tree']"
14002,1400200,가장 긴 증가하는 부분 수열 4,12,['dynamic programming']
14003,1400300,가장 긴 증가하는 부분 수열 5,16,"['binary search', 'longest increasing sequence in o(n log n)']"
14004,1400400,ICPC,4,"['arithmetic', 'mathematics']"
14005,1400500,Small Ping Pong Tournament,6,"['ad-hoc', 'bruteforcing']"
14006,1400600,Large Ping Pong Tournament,7,"['ad-hoc', 'sorting']"
14007,1400700,Small Weird Measurements,5,[]
14008,1400800,Medium Weird Measurements,7,[]
14009,1400900,Large Weird Measurements,11,"['dynamic programming', 'two-pointer']"
14010,1401000,Where To Go?,7,[]
14011,1401100,Small PhD Restaurant,8,"['greedy', 'sorting']"
14012,1401200,Large PhD Restaurant,9,"['greedy', 'sorting']"
14013,1401300,Unit Conversion,3,"['arithmetic', 'implementation', 'mathematics']"
14014,1401400,Dudu of English,11,"['implementation', 'parsing', 'regular expression', 'string']"
14032,1403200,Hungry Fox,15,"['ad-hoc', 'sorting']"
14033,1403300,Artskjid,0,[]
14034,1403400,Solar Flight,0,[]
14035,1403500,Cars on Ice,14,"['data structures', 'deque', 'depth-first search', 'graph theory', 'graph traversal', 'stack']"
14036,1403600,Timpanist,0,[]
14037,1403700,Eggscavation,18,"['data structures', 'disjoint set', 'inclusion and exclusion', 'prefix sum', 'segment tree', 'sparse table']"
14038,1403800,Tournament Selection,2,['implementation']
14039,1403900,Magic Squares,5,['implementation']
14040,1404000,Hidden Palindrome,5,"['bruteforcing', 'string']"
14041,1404100,Arrival Time,4,"['implementation', 'mathematics', 'simulation']"
14042,1404200,Tandem Bicycle,7,"['greedy', 'sorting']"
14043,1404300,Ragaman,4,"['ad-hoc', 'implementation', 'string']"
14044,1404400,Phonomenal Reviews,16,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
14045,1404500,Combining Riceballs,0,[]
14046,1404600,Circle of Life,17,"['bitmask', 'mathematics']"
14047,1404700,Stupendous Bowties,0,[]
14048,1404800,Through A Maze Darkly,0,[]
14049,1404900,Data Structure,16,"['implementation', 'mathematics', 'sorting']"
14050,1405000,Field Trip,0,[]
14051,1405100,Splitting Hares,0,[]
14052,1405200,Legends,0,[]
14053,1405300,O Canada,0,[]
14054,1405400,Zombie Apocalypse,0,[]
14055,1405500,Pirates,25,"['ad-hoc', 'data structures', 'game theory', 'splay tree', 'tree']"
14056,1405600,K번째 좋은 문자열,16,['bruteforcing']
14057,1405700,Towers,18,"['binary search', 'data structures', 'dynamic programming', 'segment tree', 'stack']"
14058,1405800,The Game “Divisibility”,21,"['ad-hoc', 'bruteforcing', 'game theory', 'mathematics', 'two-pointer']"
14059,1405900,Biathlon,0,[]
14060,1406000,Paths in Multigraph,22,"['graph theory', 'stoer–wagner']"
14061,1406100,Tower,14,"['data structures', 'stack']"
14062,1406200,Cheap Traveling,0,[]
14063,1406300,Blokada,21,"['binary search', 'maximum flow', 'parametric search']"
14064,1406400,Caki,9,"['implementation', 'simulation']"
14065,1406500,Gorivo,2,"['arithmetic', 'mathematics']"
14066,1406600,Kocka,11,['implementation']
14067,1406700,Marica,16,['dynamic programming']
14068,1406800,Ograda,0,[]
14069,1406900,Pčele,18,"['exponentiation by squaring', 'mathematics']"
14070,1407000,Roj,0,[]
14071,1407100,Rudar,0,[]
14072,1407200,Vjerojatnost,0,[]
14073,1407300,Bitovni,15,"['bitmask', 'dynamic programming', 'implementation']"
14074,1407400,Kratki,15,[]
14075,1407500,Luhn,3,"['arithmetic', 'implementation', 'mathematics']"
14076,1407600,선인장 선물,24,[]
14077,1407700,Parada,18,[]
14078,1407800,Piramida,0,[]
14079,1407900,R9K,0,[]
14080,1408000,Sjeckanje,0,[]
14081,1408100,Slika,0,[]
14082,1408200,Tablica,0,[]
14083,1408300,Bitstock,0,[]
14084,1408400,Četverokut,0,[]
14085,1408500,Dvaput,0,[]
14086,1408600,Hyperloop,0,[]
14087,1408700,Lijepi Putevi,0,[]
14088,1408800,Parket,0,[]
14089,1408900,Prosjek,0,[]
14090,1409000,RAM,0,[]
14091,1409100,Šetnja,0,[]
14092,1409200,Jabuka,0,[]
14093,1409300,Lektire,0,[]
14094,1409400,Magija,17,['dynamic programming']
14095,1409500,Novčicći,0,[]
14096,1409600,Pečat,0,[]
14097,1409700,Sort,0,[]
14098,1409800,Tunel,0,[]
14099,1409900,Velika Tablica,0,[]
14100,1410000,XOR,0,[]
14101,1410100,Arhimed,0,[]
14102,1410200,Formula,0,[]
14103,1410300,Haker,0,[]
14104,1410400,HNL,0,[]
14105,1410500,Ivo,0,[]
14106,1410600,Mnogokut,0,[]
14107,1410700,Sort,0,[]
14108,1410800,Umnozak,0,[]
14109,1410900,Zvonimir,0,[]
14110,1411000,Agresor,0,[]
14111,1411100,Kreditna,0,[]
14112,1411200,Kvadrati,0,[]
14113,1411300,Lubenice,7,"['greedy', 'mathematics']"
14114,1411400,Matematika,13,['mathematics']
14115,1411500,Permutacije,0,[]
14116,1411600,Restorani,0,[]
14117,1411700,Tartufi,0,[]
14118,1411800,Virus,0,[]
14119,1411900,Anadrom,0,[]
14120,1412000,Banane,0,[]
14121,1412100,Haker,11,"['constructive', 'greedy', 'parsing', 'string']"
14122,1412200,Izlet,0,[]
14123,1412300,Struja,0,[]
14124,1412400,Telefon,5,"['implementation', 'mathematics']"
14125,1412500,삼트리스,0,[]
14126,1412600,Vanzemaljci,0,[]
14127,1412700,Zone,0,[]
14128,1412800,Duzžine,0,[]
14129,1412900,Kugle,0,[]
14130,1413000,Mravi,0,[]
14131,1413100,Okret,22,"['splay tree', 'tree']"
14132,1413200,Šibice,0,[]
14133,1413300,Sličice,0,[]
14134,1413400,Sretan,0,[]
14135,1413500,Trokut,12,['mathematics']
14136,1413600,Višekratnici,15,[]
14137,1413700,Ćevapi,0,[]
14138,1413800,Filtar,0,[]
14139,1413900,Izviðači,0,[]
14140,1414000,Lunapark,6,"['implementation', 'simulation']"
14141,1414100,Majstor,0,[]
14142,1414200,Maxplus,0,[]
14143,1414300,Škola,20,"['data structures', 'persistent segment tree', 'segment tree']"
14144,1414400,Žabe,17,"['inclusion and exclusion', 'mathematics', 'number theory', 'parametric search']"
14145,1414500,Žetva,10,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
14146,1414600,Bomboni,9,"['mathematics', 'number theory']"
14147,1414700,Ceste,0,[]
14148,1414800,Čestice,18,"['combinatorics', 'dynamic programming', 'mathematics', 'number theory']"
14149,1414900,Igra,0,[]
14150,1415000,Prekidač,0,[]
14151,1415100,Riva,0,[]
14152,1415200,RSA,0,[]
14153,1415300,Trokut,12,"['implementation', 'recursion']"
14154,1415400,Zmija,13,"['data structures', 'deque', 'implementation', 'simulation']"
14155,1415500,Arhitekt,0,[]
14156,1415600,Binarni,9,"['bitmask', 'constructive']"
14157,1415700,Čuvar,6,"['bruteforcing', 'geometry', 'implementation']"
14158,1415800,Kalendar,11,"['bruteforcing', 'implementation']"
14159,1415900,Kemija,0,[]
14160,1416000,Pekar,0,[]
14161,1416100,Spoj,17,"['combinatorics', 'exponentiation by squaring', 'inclusion and exclusion', 'mathematics']"
14162,1416200,Suma,7,"['mathematics', 'number theory']"
14163,1416300,Torta,0,[]
14164,1416400,삼각형 영역,20,['geometry']
14165,1416500,Team Building,17,"['dynamic programming', 'prefix sum']"
14166,1416600,Robotic Cow Herd,24,"['data structures', 'graph theory', 'greedy', 'priority queue']"
14167,1416700,Moocast,13,"['graph theory', 'minimum spanning tree']"
14168,1416800,Cow Checklist,15,['dynamic programming']
14169,1416900,Lasers and Mirrors,15,"['breadth-first search', 'value / coordinate compression', ""dijkstra's"", 'graph theory', 'graph traversal']"
14170,1417000,Counting Haybales,8,['binary search']
14171,1417100,Cities and States,10,"['data structures', 'hashing', 'set / map by hashing']"
14172,1417200,Moocast,11,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
14173,1417300,Square Pasture,2,"['arithmetic', 'mathematics']"
14174,1417400,Block Game,5,['string']
14175,1417500,The Cow-Signal,4,"['implementation', 'string']"
14176,1417600,트리와 소수,23,"['센트로이드', 'centroid decomposition', 'combinatorics', 'divide and conquer', 'fast fourier transform', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes', 'tree']"
14177,1417700,티떱랜드,20,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'prefix sum']"
14178,1417800,Arranging Heaps,0,[]
14179,1417900,크리스마스 이브,21,"['divide and conquer', 'divide and conquer optimization', 'dynamic programming', 'prefix sum']"
14180,1418000,배열의 특징,21,"['convex hull trick', 'dynamic programming']"
14181,1418100,함수와 쿼리,23,['convex hull trick']
14182,1418200,Tax,3,"['arithmetic', 'mathematics']"
14183,1418300,Key Maker,4,['implementation']
14184,1418400,IOI 2017 Logo,5,"['implementation', 'sorting']"
14185,1418500,MicroRNA Ranking,11,"['data structures', 'priority queue']"
14186,1418600,Möbius Strip,0,[]
14187,1418700,Expression,19,[]
14188,1418800,Elections,13,"['combinatorics', 'dynamic programming', 'mathematics']"
14189,1418900,Explosion at Cafebazaar,20,"['graph theory', 'strongly connected component', 'topological sorting']"
14190,1419000,Linear Galaxy,14,[]
14191,1419100,Rahyab,0,[]
14192,1419200,Base Stations,20,[]
14193,1419300,Skeletons,21,"['depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'strongly connected component']"
14194,1419400,Grades,5,['mathematics']
14195,1419500,DotB,8,"['implementation', 'mathematics', 'simulation']"
14196,1419600,Sticks and Carrots(Chomagh va Havij),0,[]
14197,1419700,Son of Durin,0,[]
14198,1419800,Halting Machine,0,[]
14199,1419900,“Oland must not fall”,0,[]
14200,1420000,Circular Board Game,0,[]
14201,1420100,Blocks&Balls,0,[]
14202,1420200,Minions and the rooms,23,"['combinatorics', 'data structures', 'fast fourier transform', 'segment tree with lazy propagation', 'mathematics', 'segment tree']"
14203,1420300,Unlucky 89,0,[]
14204,1420400,표 정렬,12,['ad-hoc']
14205,1420500,함수,19,"['combinatorics', 'dynamic programming', 'mathematics', 'modular multiplicative inverse', 'number theory']"
14206,1420600,선데이 코딩,0,[]
14207,1420700,약수 도로,19,[]
14208,1420800,수열 찾기,0,[]
14209,1420900,Bridž,4,['string']
14210,1421000,Kartomat,6,[]
14211,1421100,Kas,17,"['dynamic programming', 'knapsack']"
14212,1421200,Rekonstruiraj,0,[]
14213,1421300,Rima,0,[]
14214,1421400,Osmosmjerka,0,[]
14215,1421500,세 막대,3,"['geometry', 'implementation', 'mathematics']"
14216,1421600,할 일 정하기 2,22,['hungarian']
14217,1421700,그래프 탐색,11,"['breadth-first search', 'graph theory', 'graph traversal']"
14218,1421800,그래프 탐색 2,10,"['breadth-first search', 'depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
14219,1421900,막대과자 포장,3,"['arithmetic', 'mathematics']"
14220,1422000,양아치 집배원,13,"['depth-first search', 'dynamic programming', 'graph theory', 'graph traversal']"
14221,1422100,편의점,12,"[""dijkstra's"", 'graph theory']"
14222,1422200,배열과 연산,11,['greedy']
14223,1422300,작은 정사각형 1,8,"['arithmetic', 'bruteforcing', 'mathematics']"
14224,1422400,작은 정사각형 2,15,"['bruteforcing', 'parametric search']"
14225,1422500,부분수열의 합,10,['bruteforcing']
14226,1422600,이모티콘,12,"['breadth-first search', 'graph theory', 'graph traversal']"
14227,1422700,빨간 버튼 파란 버튼,16,"['ad-hoc', 'mathematics']"
14228,1422800,물탱크,0,[]
14229,1422900,DNA 문자열,0,[]
14230,1423000,평면 게임,0,[]
14231,1423100,박스 포장,9,['dynamic programming']
14232,1423200,보석 도둑,11,"['mathematics', 'number theory', 'primality test']"
14233,1423300,악덕 사장,10,"['binary search', 'greedy', 'parametric search', 'sorting']"
14234,1423400,업무 처리,0,[]
14235,1423500,크리스마스 선물,8,"['data structures', 'priority queue']"
14236,1423600,명제 증명,0,[]
14237,1423700,숙련도,0,[]
14238,1423800,출근 기록,13,['dynamic programming']
14239,1423900,게임,0,[]
14240,1424000,부분 수열의 점수,21,"['convex hull trick', 'prefix sum']"
14241,1424100,슬라임 합치기,8,['mathematics']
14242,1424200,아름다운 그래프,0,[]
14243,1424300,출근 기록 2,15,"['case work', 'constructive']"
14244,1424400,트리 만들기,7,"['constructive', 'tree']"
14245,1424500,XOR,17,"['data structures', 'segment tree with lazy propagation', 'segment tree']"
14246,1424600,K보다 큰 구간,7,['two-pointer']
14247,1424700,나무 자르기,9,"['greedy', 'sorting']"
14248,1424800,점프 점프,9,"['breadth-first search', 'depth-first search', 'graph theory', 'graph traversal']"
14249,1424900,점프 점프 2,19,"['graph theory', 'strongly connected component', 'topological sorting']"
14250,1425000,늑대,15,['dynamic programming']
14251,1425100,늑대 2,17,['dynamic programming']
14252,1425200,공약수열,16,"['euclidean algorithm', 'mathematics', 'number theory', 'sorting']"
14253,1425300,문자열 배열,0,[]
14254,1425400,비밀번호 변경,11,['string']
14255,1425500,멋진 배열,0,[]
14256,1425600,SSR,13,"['arithmetic', 'mathematics', 'number theory', 'primality test', 'sieve of eratosthenes']"
14257,1425700,XOR 방정식,14,"['combinatorics', 'mathematics']"
14258,1425800,XOR 그룹,15,"['data structures', 'disjoint set', 'offline queries']"
14259,1425900,거짓말쟁이 효빈이,0,[]
14260,1426000,열쇠 재배치 2,0,[]
14261,1426100,적군을 막아라,17,[]
14262,1426200,그림 그리기,13,['implementation']
14263,1426300,카드 놓기,17,"['data structures', 'graph theory', 'priority queue', 'topological sorting']"
14264,1426400,정육각형과 삼각형,3,"['geometry', 'mathematics']"
14265,1426500,영선 수열,12,['mathematics']
14266,1426600,나는 가르친다 스위핑을,15,"['sorting', 'sweeping']"
14267,1426700,회사 문화 1,12,"['depth-first search', 'dynamic programming', 'dynamic programming on trees', 'graph theory', 'graph traversal', 'tree']"
14268,1426800,회사 문화 2,18,"['data structures', 'depth-first search', 'euler tour technique', 'graph theory', 'graph traversal', 'segment tree with lazy propagation', 'segment tree', 'tree']"
14269,1426900,전설의 쌍검 용사,14,"['greedy', 'sorting']"
14270,1427000,종전 협상,0,[]
14271,1427100,그리드 게임,10,"['breadth-first search', 'graph theory', 'graph traversal']"
14272,1427200,f(X) = A + X + B + X + C,22,"['knuth–morris–pratt', 'string']"
14273,1427300,영선이의 생일,0,[]
14274,1427400,세 점,17,"['value / coordinate compression', 'data structures', 'segment tree']"
14275,1427500,직사각형 색칠,20,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
14276,1427600,도로 건설,17,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
14277,1427700,등차 수열과 등비 수열,11,['mathematics']
14278,1427800,블록 쌓기,15,"['bitmask', 'dynamic programming', 'dynamic programming using bitfield']"
14279,1427900,두 수의 곱,12,"['bruteforcing', 'mathematics']"
14280,1428000,두 수의 곱 2,16,['mathematics']
14281,1428100,볼록 수열,9,"['implementation', 'simulation']"
14282,1428200,학년 통폐합,18,"['bipartite matching', 'graph theory', 'mathematics']"
14283,1428300,간선 이어가기,19,"['maximum flow', 'graph theory', 'max-flow min-cut theorem']"
14284,1428400,간선 이어가기 2,11,"[""dijkstra's"", 'graph theory']"
14285,1428500,간선 끊어가기,17,"[""dijkstra's"", 'graph theory']"
14286,1428600,간선 끊어가기 2,18,"['maximum flow', 'max-flow min-cut theorem']"
14287,1428700,회사 문화 3,18,"['data structures', 'euler tour technique', 'segment tree', 'tree']"
14288,1428800,회사 문화 4,18,"['data structures', 'euler tour technique', 'segment tree with lazy propagation', 'segment tree', 'tree']"
14289,1428900,본대 산책 3,15,"['exponentiation by squaring', 'graph theory', 'mathematics']"
14290,1429000,Diwali lightings (Small),4,"['bruteforcing', 'implementation', 'string']"
14291,1429100,Diwali lightings (Large),7,"['mathematics', 'number theory', 'prefix sum']"
14292,1429200,Beautiful Numbers (Small),8,"['bruteforcing', 'mathematics']"
14293,1429300,Beautiful Numbers (Large),11,"['binary search', 'mathematics']"
14294,1429400,Partioning Number (Small),12,['dynamic programming']
14295,1429500,Partioning Number (Large),13,"['bruteforcing', 'mathematics']"
14296,1429600,Sorting Array (Small),0,[]
14297,1429700,Sorting Array (Large),0,[]
14298,1429800,Vote (Small),8,"['bruteforcing', 'mathematics', 'probability theory']"
14299,1429900,Vote (Large),12,"['combinatorics', 'dynamic programming', 'mathematics', 'probability theory']"
14300,1430000,Sitting (Small),9,"['bitmask', 'bruteforcing', 'precomputation']"
14301,1430100,Sitting (Large),12,"['ad-hoc', 'case work']"
14302,1430200,Codejamon Cipher (Small),11,"['bruteforcing', 'dynamic programming', 'string']"
14303,1430300,Codejamon Cipher (Large),12,"['dynamic programming', 'prefix sum', 'string']"
14304,1430400,Stretch Rope (Small),8,[]
14305,1430500,Stretch Rope (Large),19,"['data structures', 'deque', 'dynamic programming', 'dynamic programming using a deque', 'priority queue', 'segment tree']"
14306,1430600,Monster Path (Small),12,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'probability theory']"
14307,1430700,Monster Path (Large),12,"['bruteforcing', 'depth-first search', 'graph theory', 'graph traversal', 'mathematics', 'probability theory']"
14308,1430800,Safe Squares (Small),6,['implementation']
14309,1430900,Safe Squares (Large),11,"['binary search', 'parametric search', 'prefix sum']"
14310,1431000,Evaluation (Small),6,"['parsing', 'string']"
14311,1431100,Evaluation (Large),6,"['parsing', 'string']"
14312,1431200,Soldiers (Small),0,[]
14313,1431300,Soldiers (Large),0,[]
14314,1431400,Sherlock and Parentheses (Small),6,"['bruteforcing', 'combinatorics', 'mathematics']"
14315,1431500,Sherlock and Parentheses (Large),7,"['combinatorics', 'greedy', 'mathematics']"
14316,1431600,Sherlock and Watson Gym Secrets (Small),11,"['exponentiation by squaring', 'mathematics']"
